<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="multi__index_8hpp" kind="file" language="C++">
    <compoundname>multi_index.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">tuple</includes>
    <includes local="no">boost/hana.hpp</includes>
    <includes local="no">functional</includes>
    <includes local="no">utility</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">iterator</includes>
    <includes local="no">limits</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">memory</includes>
    <includes local="no">eosiolib/action.h</includes>
    <includes refid="name_8hpp" local="no">eosiolib/name.hpp</includes>
    <includes local="no">eosiolib/serialize.hpp</includes>
    <includes refid="datastream_8hpp" local="no">eosiolib/datastream.hpp</includes>
    <includes refid="db_8h" local="no">eosiolib/db.h</includes>
    <includes refid="fixed__key_8hpp" local="no">eosiolib/fixed_key.hpp</includes>
    <includedby refid="eosio_8hpp" local="no">libraries/eosiolib/eosio.hpp</includedby>
    <includedby refid="singleton_8hpp" local="no">libraries/eosiolib/singleton.hpp</includedby>
    <incdepgraph>
      <node id="335">
        <label>functional</label>
      </node>
      <node id="339">
        <label>limits</label>
      </node>
      <node id="338">
        <label>iterator</label>
      </node>
      <node id="343">
        <label>eosiolib/name.hpp</label>
        <link refid="name_8hpp"/>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
      </node>
      <node id="366">
        <label>stdint.h</label>
      </node>
      <node id="354">
        <label>eosiolib/ignore.hpp</label>
        <link refid="ignore_8hpp"/>
      </node>
      <node id="365">
        <label>eosiolib/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="366" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
      </node>
      <node id="346">
        <label>string</label>
      </node>
      <node id="359">
        <label>map</label>
      </node>
      <node id="334">
        <label>boost/hana.hpp</label>
      </node>
      <node id="349">
        <label>eosiolib/memory.h</label>
      </node>
      <node id="362">
        <label>boost/fusion/include/for_each.hpp</label>
      </node>
      <node id="350">
        <label>eosiolib/symbol.hpp</label>
        <link refid="symbol_8hpp"/>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
      </node>
      <node id="345">
        <label>eosiolib/serialize.hpp</label>
      </node>
      <node id="347">
        <label>string_view</label>
      </node>
      <node id="367">
        <label>wchar.h</label>
      </node>
      <node id="331">
        <label>libraries/eosiolib/multi_index.hpp</label>
        <link refid="multi__index_8hpp"/>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="352" relation="include">
        </childnode>
      </node>
      <node id="355">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="351">
        <label>eosiolib/print.h</label>
      </node>
      <node id="333">
        <label>tuple</label>
      </node>
      <node id="360">
        <label>optional</label>
      </node>
      <node id="332">
        <label>vector</label>
      </node>
      <node id="336">
        <label>utility</label>
      </node>
      <node id="353">
        <label>array</label>
      </node>
      <node id="364">
        <label>eosiolib/db.h</label>
        <link refid="db_8h"/>
        <childnode refid="365" relation="include">
        </childnode>
      </node>
      <node id="348">
        <label>eosiolib/datastream.hpp</label>
        <link refid="datastream_8hpp"/>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="357" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="353" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
      </node>
      <node id="357">
        <label>eosiolib/varint.hpp</label>
        <link refid="varint_8hpp"/>
      </node>
      <node id="363">
        <label>boost/pfr.hpp</label>
      </node>
      <node id="356">
        <label>boost/container/flat_map.hpp</label>
      </node>
      <node id="344">
        <label>eosiolib/system.h</label>
      </node>
      <node id="342">
        <label>eosiolib/action.h</label>
      </node>
      <node id="337">
        <label>type_traits</label>
      </node>
      <node id="358">
        <label>set</label>
      </node>
      <node id="361">
        <label>boost/fusion/algorithm/iteration/for_each.hpp</label>
      </node>
      <node id="340">
        <label>algorithm</label>
      </node>
      <node id="352">
        <label>eosiolib/fixed_key.hpp</label>
        <link refid="fixed__key_8hpp"/>
        <childnode refid="353" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
      </node>
      <node id="341">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="372">
        <label>libraries/eosiolib/permission.hpp</label>
        <link refid="permission_8hpp"/>
      </node>
      <node id="368">
        <label>libraries/eosiolib/multi_index.hpp</label>
        <link refid="multi__index_8hpp"/>
        <childnode refid="369" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
      </node>
      <node id="371">
        <label>libraries/eosiolib/transaction.hpp</label>
        <link refid="transaction_8hpp"/>
        <childnode refid="372" relation="include">
        </childnode>
      </node>
      <node id="373">
        <label>libraries/eosiolib/singleton.hpp</label>
        <link refid="singleton_8hpp"/>
      </node>
      <node id="370">
        <label>libraries/eosiolib/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="371" relation="include">
        </childnode>
      </node>
      <node id="369">
        <label>libraries/eosiolib/eosio.hpp</label>
        <link refid="eosio_8hpp"/>
        <childnode refid="370" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structeosio_1_1const__mem__fun" prot="public">eosio::const_mem_fun</innerclass>
    <innerclass refid="structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions" prot="public">eosio::_multi_index_detail::secondary_index_db_functions</innerclass>
    <innerclass refid="structeosio_1_1__multi__index__detail_1_1secondary__key__traits" prot="public">eosio::_multi_index_detail::secondary_key_traits</innerclass>
    <innerclass refid="structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4" prot="public">eosio::_multi_index_detail::secondary_key_traits&lt; key256 &gt;</innerclass>
    <innerclass refid="structeosio_1_1indexed__by" prot="public">eosio::indexed_by</innerclass>
    <innerclass refid="classeosio_1_1multi__index" prot="public">eosio::multi_index</innerclass>
    <innerclass refid="structeosio_1_1multi__index_1_1item" prot="private">eosio::multi_index::item</innerclass>
    <innerclass refid="structeosio_1_1multi__index_1_1item__ptr" prot="private">eosio::multi_index::item_ptr</innerclass>
    <innerclass refid="structeosio_1_1multi__index_1_1index" prot="private">eosio::multi_index::index</innerclass>
    <innerclass refid="structeosio_1_1multi__index_1_1index_1_1const__iterator" prot="public">eosio::multi_index::index::const_iterator</innerclass>
    <innerclass refid="structeosio_1_1multi__index_1_1intc" prot="private">eosio::multi_index::intc</innerclass>
    <innerclass refid="structeosio_1_1multi__index_1_1const__iterator" prot="public">eosio::multi_index::const_iterator</innerclass>
    <innernamespace refid="namespaceeosio">eosio</innernamespace>
    <innernamespace refid="namespaceeosio_1_1__multi__index__detail">eosio::_multi_index_detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="multi__index_8hpp_a44e11d95000af02139eda2f0dd62f965_1a44e11d95000af02139eda2f0dd62f965" prot="public" static="no">
        <name>WRAP_SECONDARY_SIMPLE_TYPE</name>
        <param><defname>IDX</defname></param>
        <param><defname>TYPE</defname></param>
        <initializer>template&lt;&gt;\
struct secondary_index_db_functions&lt;TYPE&gt; {\
   static int32_t db_idx_next( int32_t iterator, uint64_t* primary )          { return db_##IDX##_next( iterator, primary ); }\
   static int32_t db_idx_previous( int32_t iterator, uint64_t* primary )      { return db_##IDX##_previous( iterator, primary ); }\
   static void    db_idx_remove( int32_t iterator  )                          { db_##IDX##_remove( iterator ); }\
   static int32_t db_idx_end( uint64_t code, uint64_t scope, uint64_t table ) { return db_##IDX##_end( code, scope, table ); }\
   static int32_t db_idx_store( uint64_t scope, uint64_t table, uint64_t payer, uint64_t id, const TYPE&amp; secondary ) {\
      return db_##IDX##_store( scope, table, payer, id, &amp;secondary );\
   }\
   static void    db_idx_update( int32_t iterator, uint64_t payer, const TYPE&amp; secondary ) {\
      db_##IDX##_update( iterator, payer, &amp;secondary );\
   }\
   static int32_t db_idx_find_primary( uint64_t code, uint64_t scope, uint64_t table, uint64_t primary, TYPE&amp; secondary ) {\
      return db_##IDX##_find_primary( code, scope, table, &amp;secondary, primary );\
   }\
   static int32_t db_idx_find_secondary( uint64_t code, uint64_t scope, uint64_t table, const TYPE&amp; secondary, uint64_t&amp; primary ) {\
      return db_##IDX##_find_secondary( code, scope, table, &amp;secondary, &amp;primary );\
   }\
   static int32_t db_idx_lowerbound( uint64_t code, uint64_t scope, uint64_t table, TYPE&amp; secondary, uint64_t&amp; primary ) {\
      return db_##IDX##_lowerbound( code, scope, table, &amp;secondary, &amp;primary );\
   }\
   static int32_t db_idx_upperbound( uint64_t code, uint64_t scope, uint64_t table, TYPE&amp; secondary, uint64_t&amp; primary ) {\
      return db_##IDX##_upperbound( code, scope, table, &amp;secondary, &amp;primary );\
   }\
};</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/multi_index.hpp" line="57" column="9" bodyfile="libraries/eosiolib/multi_index.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="multi__index_8hpp_a522b8927626c841da1e6cc3a292d5913_1a522b8927626c841da1e6cc3a292d5913" prot="public" static="no">
        <name>WRAP_SECONDARY_ARRAY_TYPE</name>
        <param><defname>IDX</defname></param>
        <param><defname>TYPE</defname></param>
        <initializer>template&lt;&gt;\
struct secondary_index_db_functions&lt;TYPE&gt; {\
   static int32_t db_idx_next( int32_t iterator, uint64_t* primary )          { return db_##IDX##_next( iterator, primary ); }\
   static int32_t db_idx_previous( int32_t iterator, uint64_t* primary )      { return db_##IDX##_previous( iterator, primary ); }\
   static void    db_idx_remove( int32_t iterator )                           { db_##IDX##_remove( iterator ); }\
   static int32_t db_idx_end( uint64_t code, uint64_t scope, uint64_t table ) { return db_##IDX##_end( code, scope, table ); }\
   static int32_t db_idx_store( uint64_t scope, uint64_t table, uint64_t payer, uint64_t id, const TYPE&amp; secondary ) {\
      return db_##IDX##_store( scope, table, payer, id, secondary.data(), TYPE::num_words() );\
   }\
   static void    db_idx_update( int32_t iterator, uint64_t payer, const TYPE&amp; secondary ) {\
      db_##IDX##_update( iterator, payer, secondary.data(), TYPE::num_words() );\
   }\
   static int32_t db_idx_find_primary( uint64_t code, uint64_t scope, uint64_t table, uint64_t primary, TYPE&amp; secondary ) {\
      return db_##IDX##_find_primary( code, scope, table, secondary.data(), TYPE::num_words(), primary );\
   }\
   static int32_t db_idx_find_secondary( uint64_t code, uint64_t scope, uint64_t table, const TYPE&amp; secondary, uint64_t&amp; primary ) {\
      return db_##IDX##_find_secondary( code, scope, table, secondary.data(), TYPE::num_words(), &amp;primary );\
   }\
   static int32_t db_idx_lowerbound( uint64_t code, uint64_t scope, uint64_t table, TYPE&amp; secondary, uint64_t&amp; primary ) {\
      return db_##IDX##_lowerbound( code, scope, table, secondary.data(), TYPE::num_words(), &amp;primary );\
   }\
   static int32_t db_idx_upperbound( uint64_t code, uint64_t scope, uint64_t table, TYPE&amp; secondary, uint64_t&amp; primary ) {\
      return db_##IDX##_upperbound( code, scope, table, secondary.data(), TYPE::num_words(), &amp;primary );\
   }\
};</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/multi_index.hpp" line="84" column="9" bodyfile="libraries/eosiolib/multi_index.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="multi__index_8hpp_aab2b11a88b267a1ad4009fed8dc5e778_1aab2b11a88b267a1ad4009fed8dc5e778" prot="public" static="no">
        <name>MAKE_TRAITS_FOR_ARITHMETIC_SECONDARY_KEY</name>
        <param><defname>TYPE</defname></param>
        <initializer>template&lt;&gt;\
struct secondary_key_traits&lt;TYPE&gt; {\
   static constexpr  TYPE lowest() { return std::numeric_limits&lt;TYPE&gt;::lowest(); }\
};</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/multi_index.hpp" line="111" column="9" bodyfile="libraries/eosiolib/multi_index.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>defined in eos/LICENSE.txt </para></simplesect>
</para>    </detaileddescription>
    <location file="libraries/eosiolib/multi_index.hpp"/>
  </compounddef>
</doxygen>
