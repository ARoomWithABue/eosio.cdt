<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="compiler__builtins_8h" kind="file" language="C++">
    <compoundname>compiler_builtins.h</compoundname>
    <includes local="no">eosiolib/system.h</includes>
    <incdepgraph>
      <node id="60">
        <label>libraries/eosiolib/compiler_builtins.h</label>
        <link refid="compiler__builtins_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>eosiolib/system.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__compiler__builtins_gaa03897335f1fcc54f469e17c32ae9920_1gaa03897335f1fcc54f469e17c32ae9920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __multi3</definition>
        <argsstring>(__int128 &amp;res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__multi3</name>
        <param>
          <type>__int128 &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Multiply two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers. </para>        </briefdescription>
        <detaileddescription>
<para>Multiply two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>res</computeroutput> is replaced with the result of multiplication Example: <programlisting><codeline><highlight class="normal">__int128<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">__int128<sp/>a<sp/>=<sp/>100;</highlight></codeline>
<codeline><highlight class="normal">__int128<sp/>b<sp/>=<sp/>100;</highlight></codeline>
<codeline><highlight class="normal">__multi3(res,<sp/>a,<sp/>(a<sp/>&gt;&gt;<sp/>64),<sp/>b,<sp/>(b<sp/>&gt;&gt;<sp/>64));</highlight></codeline>
<codeline><highlight class="normal">printi128(&amp;res);<sp/>//<sp/>Output:<sp/>10000</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_gadbd9c6953240b4ca52292ea687d64839_1gadbd9c6953240b4ca52292ea687d64839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __divti3</definition>
        <argsstring>(__int128 &amp;res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__divti3</name>
        <param>
          <type>__int128 &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Divide two 128 bit integers (which are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Divide two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>res</computeroutput> is replaced with the result of division Example: <programlisting><codeline><highlight class="normal">__int128<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">__int128<sp/>a<sp/>=<sp/>100;</highlight></codeline>
<codeline><highlight class="normal">__int128<sp/>b<sp/>=<sp/>100;</highlight></codeline>
<codeline><highlight class="normal">__divti3(res,<sp/>a,<sp/>(a<sp/>&gt;&gt;<sp/>64),<sp/>b,<sp/>(b<sp/>&gt;&gt;<sp/>64));</highlight></codeline>
<codeline><highlight class="normal">printi128(&amp;res);<sp/>//<sp/>Output:<sp/>1</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_gaed86fd6c88a54c19700f51a3f36890d3_1gaed86fd6c88a54c19700f51a3f36890d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __udivti3</definition>
        <argsstring>(unsigned __int128 &amp;res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__udivti3</name>
        <param>
          <type>unsigned __int128 &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Divide two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Divide two 128 bit unsigned integers split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. Example: <programlisting><codeline><highlight class="normal">unsigned<sp/>__int128<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">unsigned<sp/>__int128<sp/>a<sp/>=<sp/>100;</highlight></codeline>
<codeline><highlight class="normal">unsigned<sp/>__int128<sp/>b<sp/>=<sp/>100;</highlight></codeline>
<codeline><highlight class="normal">__udivti3(res,<sp/>a,<sp/>(a<sp/>&gt;&gt;<sp/>64),<sp/>b,<sp/>(b<sp/>&gt;&gt;<sp/>64));</highlight></codeline>
<codeline><highlight class="normal">printi128(&amp;res);<sp/>//<sp/>Output:<sp/>1</highlight></codeline>
</programlisting> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_gacf950a5162ebd45ceec1463d352a42dd_1gacf950a5162ebd45ceec1463d352a42dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __modti3</definition>
        <argsstring>(__int128 &amp;res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__modti3</name>
        <param>
          <type>__int128 &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Perform modular arithmetic on two 128 bit integers (which are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Perform modular arithmetic on two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>res</computeroutput> is replaced with the result of modulus Example: <programlisting><codeline><highlight class="normal">__int128<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">__int128<sp/>a<sp/>=<sp/>100;</highlight></codeline>
<codeline><highlight class="normal">__int128<sp/>b<sp/>=<sp/>3;</highlight></codeline>
<codeline><highlight class="normal">__modti3(res,<sp/>a,<sp/>(a<sp/>&gt;&gt;<sp/>64),<sp/>b,<sp/>(b<sp/>&gt;&gt;<sp/>64));</highlight></codeline>
<codeline><highlight class="normal">printi128(&amp;res);<sp/>//<sp/>Output:<sp/>1</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga25eb2263db624647faf0c395b32f2bdb_1ga25eb2263db624647faf0c395b32f2bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __umodti3</definition>
        <argsstring>(unsigned __int128 &amp;res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__umodti3</name>
        <param>
          <type>unsigned __int128 &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Perform modular arithmetic on two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Perform modular arithmetic on two 128 unsigned bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>res</computeroutput> is replaced with the result of modulus Example: <programlisting><codeline><highlight class="normal">unsigned<sp/>__int128<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">unsigned<sp/>__int128<sp/>a<sp/>=<sp/>100;</highlight></codeline>
<codeline><highlight class="normal">unsigned<sp/>__int128<sp/>b<sp/>=<sp/>3;</highlight></codeline>
<codeline><highlight class="normal">__umodti3(res,<sp/>a,<sp/>(a<sp/>&gt;&gt;<sp/>64),<sp/>b,<sp/>(b<sp/>&gt;&gt;<sp/>64));</highlight></codeline>
<codeline><highlight class="normal">printi128(&amp;res);<sp/>//<sp/>Output:<sp/>1</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga19640af2c08e820f5aa09069b1827c9b_1ga19640af2c08e820f5aa09069b1827c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __lshlti3</definition>
        <argsstring>(__int128 &amp;res, uint64_t lo, uint64_t hi, uint32_t shift)</argsstring>
        <name>__lshlti3</name>
        <param>
          <type>__int128 &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Perform logical shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Perform logical shift left on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lo</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hi</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shift</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to shift. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>res</computeroutput> is replaced with the result of the operation Example: <programlisting><codeline><highlight class="normal">__int128<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">__int128<sp/>a<sp/>=<sp/>8;</highlight></codeline>
<codeline><highlight class="normal">__lshlti3(res,<sp/>a,<sp/>(a<sp/>&gt;&gt;<sp/>64),<sp/>1);</highlight></codeline>
<codeline><highlight class="normal">printi128(&amp;res);<sp/>//<sp/>Output:<sp/>16</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga7785ea89d0105220b2e52ecf5f315caa_1ga7785ea89d0105220b2e52ecf5f315caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __lshrti3</definition>
        <argsstring>(__int128 &amp;res, uint64_t lo, uint64_t hi, uint32_t shift)</argsstring>
        <name>__lshrti3</name>
        <param>
          <type>__int128 &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Perform logical shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Perform logical shift right on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lo</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hi</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shift</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to shift. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>res</computeroutput> is replaced with the result of the operation Example: <programlisting><codeline><highlight class="normal">__int128<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">__int128<sp/>a<sp/>=<sp/>8;</highlight></codeline>
<codeline><highlight class="normal">__lshrti3(res,<sp/>a,<sp/>(a<sp/>&gt;&gt;<sp/>64),<sp/>1);</highlight></codeline>
<codeline><highlight class="normal">printi128(&amp;res);<sp/>//<sp/>Output:<sp/>4</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga2d057451f581f4d1cec929cf76f0d610_1ga2d057451f581f4d1cec929cf76f0d610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __ashlti3</definition>
        <argsstring>(__int128 &amp;res, uint64_t lo, uint64_t hi, uint32_t shift)</argsstring>
        <name>__ashlti3</name>
        <param>
          <type>__int128 &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Perform arithmetic shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Perform arithmetic shift left on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lo</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hi</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shift</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to shift. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>res</computeroutput> is replaced with the result of the operation Example: <programlisting><codeline><highlight class="normal">__int128<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">__int128<sp/>a<sp/>=<sp/>8;</highlight></codeline>
<codeline><highlight class="normal">__ashlti3(res,<sp/>a,<sp/>(a<sp/>&gt;&gt;<sp/>64),<sp/>1);</highlight></codeline>
<codeline><highlight class="normal">printi128(&amp;res);<sp/>//<sp/>Output:<sp/>16</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga54e1751b41448b01e519dfeb63733ab8_1ga54e1751b41448b01e519dfeb63733ab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __ashrti3</definition>
        <argsstring>(__int128 &amp;res, uint64_t lo, uint64_t hi, uint32_t shift)</argsstring>
        <name>__ashrti3</name>
        <param>
          <type>__int128 &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
<para>Perform arithmetic shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Perform arithmetic shift right on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lo</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hi</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shift</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to shift. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>res</computeroutput> is replaced with the result of the operation Example: <programlisting><codeline><highlight class="normal">__int128<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">__int128<sp/>a<sp/>=<sp/>-8;</highlight></codeline>
<codeline><highlight class="normal">__ashrti3(res,<sp/>a,<sp/>(a<sp/>&gt;&gt;<sp/>64),<sp/>1);</highlight></codeline>
<codeline><highlight class="normal">printi128(&amp;res);<sp/>//<sp/>Output:<sp/>-4</highlight></codeline>
</programlisting> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga873d982bbd7493a9975dd88e923d85ed_1ga873d982bbd7493a9975dd88e923d85ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __addtf3</definition>
        <argsstring>(long double &amp;ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__addtf3</name>
        <param>
          <type>long double &amp;</type>
          <declname>ret</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Add two long doubles (which are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Add two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>ret</computeroutput> is replaced with the result of the operation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga6f055bf1366a170f3f01b28cc0a723dc_1ga6f055bf1366a170f3f01b28cc0a723dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __subtf3</definition>
        <argsstring>(long double &amp;ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__subtf3</name>
        <param>
          <type>long double &amp;</type>
          <declname>ret</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Subtract two long doubles (which are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Subtract two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>ret</computeroutput> is replaced with the result of the operation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga74a992741c2e037447d9953bb5cce333_1ga74a992741c2e037447d9953bb5cce333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __multf3</definition>
        <argsstring>(long double &amp;ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__multf3</name>
        <param>
          <type>long double &amp;</type>
          <declname>ret</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Multiply two long doubles (which are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Multiply two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>ret</computeroutput> is replaced with the result of the operation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_gad8133b5d6604ce3bab0adf8e0d44bf5f_1gad8133b5d6604ce3bab0adf8e0d44bf5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __divtf3</definition>
        <argsstring>(long double &amp;ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__divtf3</name>
        <param>
          <type>long double &amp;</type>
          <declname>ret</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Divide two long doubles (which are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Divide two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>ret</computeroutput> is replaced with the result of the operation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga11b0c275233be847ecba192c3d4bd50f_1ga11b0c275233be847ecba192c3d4bd50f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __eqtf2</definition>
        <argsstring>(uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__eqtf2</name>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Check equality between two doubles (which are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Check equality between two doubles split as two 64 bit unsigned integers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if a greater than b </para></simplesect>
<simplesect kind="return"><para>0 if a equal to b </para></simplesect>
<simplesect kind="return"><para>-1 if a less than b </para></simplesect>
<simplesect kind="return"><para>1 if either a or b is NaN </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga01fedff23a9e5324dab56c77a4ce90fa_1ga01fedff23a9e5324dab56c77a4ce90fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __netf2</definition>
        <argsstring>(uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__netf2</name>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Check inequality between two doubles (which are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Check inequality between two doubles split as two 64 bit unsigned integers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if a greater than b </para></simplesect>
<simplesect kind="return"><para>0 if a equal to b </para></simplesect>
<simplesect kind="return"><para>-1 if a less than b  if either a or b is NaN </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_gaa4067976976ddf6189ff05068f071421_1gaa4067976976ddf6189ff05068f071421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __getf2</definition>
        <argsstring>(uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__getf2</name>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Check if the first double is greater or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Check if the first double is greater or equal to the second double, the doubles are split as two 64 bit unsigned integers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if a greater than b </para></simplesect>
<simplesect kind="return"><para>0 if a equal to b </para></simplesect>
<simplesect kind="return"><para>-1 if a less than b </para></simplesect>
<simplesect kind="return"><para>-1 if either a or b is NaN </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga22ea3ec1bb3c252037a6d1de080f59ec_1ga22ea3ec1bb3c252037a6d1de080f59ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __gttf2</definition>
        <argsstring>(uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__gttf2</name>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Check if the first double is greater than the second double, (the doubles are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Check if the first double is greater than the second double, the doubles are split as two 64 bit unsigned integers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if a greater than b </para></simplesect>
<simplesect kind="return"><para>0 if a equal to b </para></simplesect>
<simplesect kind="return"><para>-1 if a less than b </para></simplesect>
<simplesect kind="return"><para>0 if either a or b is NaN </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga1c52620ce5caeab3f24d20848de48020_1ga1c52620ce5caeab3f24d20848de48020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __letf2</definition>
        <argsstring>(uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__letf2</name>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Check if the first double is less or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Check if the first double is less or equal to the second double, the doubles are split as two 64 bit unsigned integers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if a greater than b </para></simplesect>
<simplesect kind="return"><para>0 if a equal to b </para></simplesect>
<simplesect kind="return"><para>-1 if a less than b </para></simplesect>
<simplesect kind="return"><para>1 if either a or b is NaN </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="309" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga31e5201b17ecf49bf0544d619b3a211e_1ga31e5201b17ecf49bf0544d619b3a211e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __lttf2</definition>
        <argsstring>(uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__lttf2</name>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Check if the first double is less than the second double, (the doubles are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Check if the first double is less than the second double, the doubles are split as two 64 bit unsigned integers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if a greater than b </para></simplesect>
<simplesect kind="return"><para>0 if a equal to b </para></simplesect>
<simplesect kind="return"><para>-1 if a less than b </para></simplesect>
<simplesect kind="return"><para>0 if either a or b is NaN </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga130b5f6598f3db086bc0767c6be028c0_1ga130b5f6598f3db086bc0767c6be028c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __cmptf2</definition>
        <argsstring>(uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__cmptf2</name>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Compare two doubles (the doubles are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Compare two doubles which are split as two 64 bit unsigned integers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if a greater than b </para></simplesect>
<simplesect kind="return"><para>0 if a equal to b </para></simplesect>
<simplesect kind="return"><para>-1 if a less than b </para></simplesect>
<simplesect kind="return"><para>1 if either a or b is NaN </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga26cb1a82545578282008ab4dc67cf262_1ga26cb1a82545578282008ab4dc67cf262" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __unordtf2</definition>
        <argsstring>(uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)</argsstring>
        <name>__unordtf2</name>
        <param>
          <type>uint64_t</type>
          <declname>la</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ha</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hb</declname>
        </param>
        <briefdescription>
<para>Check if either of the doubles is NaN, (the doubles are represented as two 64 bit unsigned integers) </para>        </briefdescription>
        <detaileddescription>
<para>Check if either of the doubles is NaN, the doubles are split as two 64 bit unsigned integers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>la</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ha</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hb</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the second 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if either a or b is NaN </para></simplesect>
<simplesect kind="return"><para>0 if either a or b is not NaN </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="352" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga3feafc107fc44ac8039a667ee49bcdbf_1ga3feafc107fc44ac8039a667ee49bcdbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __extendsftf2</definition>
        <argsstring>(long double &amp;ret, float f)</argsstring>
        <name>__extendsftf2</name>
        <param>
          <type>long double &amp;</type>
          <declname>ret</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Extend float to long double. </para>        </briefdescription>
        <detaileddescription>
<para>Extend float to long double <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ret</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Input float to be extended </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>ret</computeroutput> is replaced with the extended float </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_gae76415cbe79dbac141141a706158552c_1gae76415cbe79dbac141141a706158552c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __extenddftf2</definition>
        <argsstring>(long double &amp;ret, double f)</argsstring>
        <name>__extenddftf2</name>
        <param>
          <type>long double &amp;</type>
          <declname>ret</declname>
        </param>
        <param>
          <type>double</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Extend float to long double. </para>        </briefdescription>
        <detaileddescription>
<para>Extend double to long double <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ret</parametername>
</parameternamelist>
<parameterdescription>
<para>It will be replaced with the result product. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Input float to be extended </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para><computeroutput>ret</computeroutput> is replaced with the extended float </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="370" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_gafb30709e77efa4ef9eb3bf4d42004ecf_1gafb30709e77efa4ef9eb3bf4d42004ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t __fixtfdi</definition>
        <argsstring>(uint64_t l, uint64_t h)</argsstring>
        <name>__fixtfdi</name>
        <param>
          <type>uint64_t</type>
          <declname>l</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Convert long double (which are split as two 64 bit unsigned integers) into 64 bit integer. </para>        </briefdescription>
        <detaileddescription>
<para>Convert long double (which are split as two 64 bit unsigned integers) into 64 bit integer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the converted 64 bit integer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_gac2669376b81a47fc865f5ba54aea0720_1gac2669376b81a47fc865f5ba54aea0720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t __fixtfsi</definition>
        <argsstring>(uint64_t l, uint64_t h)</argsstring>
        <name>__fixtfsi</name>
        <param>
          <type>uint64_t</type>
          <declname>l</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Convert long double (which are split as two 64 bit unsigned integers) into 32 bit integer. </para>        </briefdescription>
        <detaileddescription>
<para>Convert long double (which are split as two 64 bit unsigned integers) into 32 bit integer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the converted 32 bit integer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga459b47b617b89052f544025349c165f8_1ga459b47b617b89052f544025349c165f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t __fixunstfdi</definition>
        <argsstring>(uint64_t l, uint64_t h)</argsstring>
        <name>__fixunstfdi</name>
        <param>
          <type>uint64_t</type>
          <declname>l</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Convert long double (which are split as two 64 bit unsigned integers) into 64 bit unsigned integer. </para>        </briefdescription>
        <detaileddescription>
<para>Convert long double (which are split as two 64 bit unsigned integers) into 64 bit unsigned integer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the converted 64 bit unsigned integer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga1c62ec774bd084b04118fdb2b019a5c3_1ga1c62ec774bd084b04118fdb2b019a5c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t __fixunstfsi</definition>
        <argsstring>(uint64_t l, uint64_t h)</argsstring>
        <name>__fixunstfsi</name>
        <param>
          <type>uint64_t</type>
          <declname>l</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Convert long double (which are split as two 64 bit unsigned integers) into 32 bit unsigned integer. </para>        </briefdescription>
        <detaileddescription>
<para>Convert long double (which are split as two 64 bit unsigned integers) into 32 bit unsigned integer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the converted 32 bit unsigned integer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="406" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga386f6c017043419d3d33f9e96cc4ae4c_1ga386f6c017043419d3d33f9e96cc4ae4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double __trunctfdf2</definition>
        <argsstring>(uint64_t l, uint64_t h)</argsstring>
        <name>__trunctfdf2</name>
        <param>
          <type>uint64_t</type>
          <declname>l</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Convert long double (which are split as two 64 bit unsigned integers) into double. </para>        </briefdescription>
        <detaileddescription>
<para>Truncate long double (which are split as two 64 bit unsigned integers) into double <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the converted double </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="415" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga0de0b2a5fe12abf258f7640987807a3a_1ga0de0b2a5fe12abf258f7640987807a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float __trunctfsf2</definition>
        <argsstring>(uint64_t l, uint64_t h)</argsstring>
        <name>__trunctfsf2</name>
        <param>
          <type>uint64_t</type>
          <declname>l</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Convert long double (which are split as two 64 bit unsigned integers) into float. </para>        </briefdescription>
        <detaileddescription>
<para>Truncate long double (which are split as two 64 bit unsigned integers) into float <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Low 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>High 64 bits of the first 128 bit factor. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the converted float </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compiler__builtins_ga612b3f8baa213fa0ce573eec10bbad78_1ga612b3f8baa213fa0ce573eec10bbad78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __break_point</definition>
        <argsstring>()</argsstring>
        <name>__break_point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/compiler_builtins.h" line="426" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>defined in eos/LICENSE.txt </para></simplesect>
</para>    </detaileddescription>
    <location file="libraries/eosiolib/compiler_builtins.h"/>
  </compounddef>
</doxygen>
