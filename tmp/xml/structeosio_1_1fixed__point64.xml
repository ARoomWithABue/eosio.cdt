<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structeosio_1_1fixed__point64" kind="struct" language="C++" prot="public">
    <compoundname>eosio::fixed_point64</compoundname>
    <includes refid="fixedpoint_8hpp" local="no">fixedpoint.hpp</includes>
    <templateparamlist>
      <param>
        <type>uint8_t</type>
        <declname>Q</declname>
        <defname>Q</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeosio_1_1fixed__point64_adf1b4e4d25279c532d9ac3ff56d9af21_1adf1b4e4d25279c532d9ac3ff56d9af21" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t eosio::fixed_point64&lt; Q &gt;::val</definition>
        <argsstring></argsstring>
        <name>val</name>
        <briefdescription>
<para>Value of the fixed point represented as int64_t. </para>        </briefdescription>
        <detaileddescription>
<para>Value of the fixed point represented as int64_t </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="290" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeosio_1_1fixed__point64_ab9f53ce12bd0a23708ec0b67ec7848cb_1ab9f53ce12bd0a23708ec0b67ec7848cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>eosio::fixed_point64&lt; Q &gt;::fixed_point64</definition>
        <argsstring>(int64_t v=0)</argsstring>
        <name>fixed_point64</name>
        <param>
          <type>int64_t</type>
          <declname>v</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Construct a new fixed point64 object. </para>        </briefdescription>
        <detaileddescription>
<para>Construct a new fixed point64 object from int64_t</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>- int64_t representation of the fixed point value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="298" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a0fcb07196ce3b1ee19897d2edd1f362b_1a0fcb07196ce3b1ee19897d2edd1f362b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>eosio::fixed_point64&lt; Q &gt;::fixed_point64</definition>
        <argsstring>(const fixed_point64&lt; QR &gt; &amp;r)</argsstring>
        <name>fixed_point64</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt; QR &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Construct a new fixed point64 object from another <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Construct a new fixed point64 object from another <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>- Another <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref> as source </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="306" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="700" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a02a221576feae394dc006a6f65ba66c2_1a02a221576feae394dc006a6f65ba66c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>eosio::fixed_point64&lt; Q &gt;::fixed_point64</definition>
        <argsstring>(const fixed_point32&lt; QR &gt; &amp;r)</argsstring>
        <name>fixed_point64</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point32" kindref="compound">fixed_point32</ref>&lt; QR &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Construct a new fixed point64 object from another <ref refid="structeosio_1_1fixed__point32" kindref="compound">fixed_point32</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Construct a new fixed point64 object from another <ref refid="structeosio_1_1fixed__point32" kindref="compound">fixed_point32</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>- <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref> as source </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="314" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="705" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a713dad1088c1c4a95ed446e055f0a523_1a713dad1088c1c4a95ed446e055f0a523" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t eosio::fixed_point64&lt; Q &gt;::int_part</definition>
        <argsstring>() const</argsstring>
        <name>int_part</name>
        <briefdescription>
<para>To get the integer part of the fixed number. </para>        </briefdescription>
        <detaileddescription>
<para>Get the integer part of the 64 bit fixed number <simplesect kind="return"><para>Returns integer part of the fixed number</para></simplesect>
Example: <programlisting><codeline><highlight class="normal">fixed_point64&lt;18&gt;<sp/>a(1234.455667)</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>a.int_part();<sp/>//<sp/>Output:<sp/>1234</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="327" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="327" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a616163b00e9c4ff8e237139bb96ad6b1_1a616163b00e9c4ff8e237139bb96ad6b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t eosio::fixed_point64&lt; Q &gt;::frac_part</definition>
        <argsstring>() const</argsstring>
        <name>frac_part</name>
        <briefdescription>
<para>To get the decimal part of the fixed number. </para>        </briefdescription>
        <detaileddescription>
<para>Get the decimal part of the 64 bit fixed number <simplesect kind="return"><para>Returns decimal part of the fixed number</para></simplesect>
Example: <programlisting><codeline><highlight class="normal">fixed64&lt;3&gt;<sp/>a(1234.455667)</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>a.decimal_part();<sp/>//<sp/>Output:<sp/>455</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="342" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="342" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a85bae51f6eb5071be1e0388e8f0c44af_1a85bae51f6eb5071be1e0388e8f0c44af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eosio::fixed_point64&lt; Q &gt;::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
<para>Prints the fixed point value. </para>        </briefdescription>
        <detaileddescription>
<para>Prints the fixed point value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="352" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="352" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a36ebd8f73c42839443039dbef6462ff4_1a36ebd8f73c42839443039dbef6462ff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref> &amp;</type>
        <definition>fixed_point64&amp; eosio::fixed_point64&lt; Q &gt;::operator=</definition>
        <argsstring>(const fixed_point32&lt; QR &gt; &amp;r)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point32" kindref="compound">fixed_point32</ref>&lt; QR &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para>Assignment operator. Assign <ref refid="structeosio_1_1fixed__point32" kindref="compound">fixed_point32</ref> to <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>qr</parametername>
</parameternamelist>
<parameterdescription>
<para>- Precision of the source </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>- Source </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&amp; - Reference to this object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a4f8cc600e51217711153481052e0002c_1a4f8cc600e51217711153481052e0002c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref> &amp;</type>
        <definition>fixed_point64&amp; eosio::fixed_point64&lt; Q &gt;::operator=</definition>
        <argsstring>(const fixed_point64&lt; QR &gt; &amp;r)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt; QR &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para>Assignment operator. Assign <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref> to <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>qr</parametername>
</parameternamelist>
<parameterdescription>
<para>- Precision of the source </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>- Source </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&amp; - Reference to this object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a91f5e8b0aad593b8f92d8ed9b8f287d0_1a91f5e8b0aad593b8f92d8ed9b8f287d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt;(Q &gt;QR)?Q:QR &gt;</type>
        <definition>fixed_point64&lt; (Q&gt;QR)?Q:QR &gt; eosio::fixed_point64&lt; Q &gt;::operator+</definition>
        <argsstring>(const fixed_point64&lt; QR &gt; &amp;r) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt; QR &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Addition operator. </para>        </briefdescription>
        <detaileddescription>
<para>Addition operator</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>QR</parametername>
</parameternamelist>
<parameterdescription>
<para>- Precision of the second addend </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>- Second addend </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- The result of addition </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a9b0a83b256f3a7c2dac7a2ba838d8397_1a9b0a83b256f3a7c2dac7a2ba838d8397" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt;(Q &gt;QR)?Q:QR &gt;</type>
        <definition>fixed_point64&lt; (Q&gt;QR)?Q:QR &gt; eosio::fixed_point64&lt; Q &gt;::operator-</definition>
        <argsstring>(const fixed_point64&lt; QR &gt; &amp;r) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt; QR &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Subtraction operator. </para>        </briefdescription>
        <detaileddescription>
<para>Subtraction operator</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>QR</parametername>
</parameternamelist>
<parameterdescription>
<para>- Precision of the minuend </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>- Minuend </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- The result of subtraction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_af88630db8a6e5f2f026abe4b6fc953dc_1af88630db8a6e5f2f026abe4b6fc953dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structeosio_1_1fixed__point128" kindref="compound">fixed_point128</ref>&lt; Q+QR &gt;</type>
        <definition>fixed_point128&lt; Q+QR &gt; eosio::fixed_point64&lt; Q &gt;::operator*</definition>
        <argsstring>(const fixed_point64&lt; QR &gt; &amp;r) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt; QR &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Multiplication operator. </para>        </briefdescription>
        <detaileddescription>
<para>Multiplication operator for <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>. The result goes to <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>.</para><para>Multiplication operator</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>QR</parametername>
</parameternamelist>
<parameterdescription>
<para>- Precision of the multiplier </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>- Multiplier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- The result of multiplication</para></simplesect>
Multiplication operator for <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>. The result goes to <ref refid="structeosio_1_1fixed__point128" kindref="compound">fixed_point128</ref> Number of decimal on result will be sum of number of decimals of lhs and rhs</para><para>Example: <programlisting><codeline><highlight class="normal">fixed_point128&lt;33&gt;<sp/>result<sp/>=<sp/>fixed_point64&lt;0&gt;(131313)<sp/>/<sp/>fixed_point64&lt;0&gt;(2323)</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="410" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="761" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a810e2397dd4645ec575430ffd54b5d3f_1a810e2397dd4645ec575430ffd54b5d3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structeosio_1_1fixed__point128" kindref="compound">fixed_point128</ref>&lt; Q+64-QR &gt;</type>
        <definition>fixed_point128&lt; Q+64-QR &gt; eosio::fixed_point64&lt; Q &gt;::operator/</definition>
        <argsstring>(const fixed_point64&lt; QR &gt; &amp;r) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt; QR &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Division operator. </para>        </briefdescription>
        <detaileddescription>
<para>Division of two <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref> result will be stored in <ref refid="structeosio_1_1fixed__point128" kindref="compound">fixed_point128</ref>.</para><para>Division operator</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>QR</parametername>
</parameternamelist>
<parameterdescription>
<para>- Precision of the divisor </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>- Divisor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- The result of division</para></simplesect>
Division operator for <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref></para><para>Example: <programlisting><codeline><highlight class="normal">fixed_point128&lt;33&gt;<sp/>result<sp/>=<sp/>fixed_point64&lt;0&gt;(131313)<sp/>/<sp/>fixed_point64&lt;0&gt;(2323)</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="420" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="776" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_ad2fb0230d48ccc90795e278e1ef12df6_1ad2fb0230d48ccc90795e278e1ef12df6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool eosio::fixed_point64&lt; Q &gt;::operator==</definition>
        <argsstring>(const fixed_point64&lt; QR &gt; &amp;r)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt; QR &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>        </briefdescription>
        <detaileddescription>
<para>Equality operator</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>qr</parametername>
</parameternamelist>
<parameterdescription>
<para>- Precision of the source </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>- Source </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true - if equal </para></simplesect>
<simplesect kind="return"><para>false - otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="432" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="432" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a63ee72acb0a3307d54283dba95dc623b_1a63ee72acb0a3307d54283dba95dc623b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool eosio::fixed_point64&lt; Q &gt;::operator&gt;</definition>
        <argsstring>(const fixed_point64&lt; QR &gt; &amp;r)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt; QR &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Greater than operator. </para>        </briefdescription>
        <detaileddescription>
<para>Greater than operator</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>qr</parametername>
</parameternamelist>
<parameterdescription>
<para>- Precision of the source </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>- Source </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true - if equal </para></simplesect>
<simplesect kind="return"><para>false - otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="443" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="443" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a2c28bc89073dfa8c6f81ee2594a3272c_1a2c28bc89073dfa8c6f81ee2594a3272c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool eosio::fixed_point64&lt; Q &gt;::operator&lt;</definition>
        <argsstring>(const fixed_point64&lt; QR &gt; &amp;r)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt; QR &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Less than operator. </para>        </briefdescription>
        <detaileddescription>
<para>Less than operator</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>qr</parametername>
</parameternamelist>
<parameterdescription>
<para>- Precision of the source </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>- Source </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true - if equal </para></simplesect>
<simplesect kind="return"><para>false - otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="454" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="454" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a949ad7f0149535736353c9283797468b_1a949ad7f0149535736353c9283797468b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt;(Q &gt;QR)?Q:QR &gt;</type>
        <definition>fixed_point64&lt; (Q&gt;QR)?Q:QR &gt; eosio::fixed_point64&lt; Q &gt;::operator+</definition>
        <argsstring>(const fixed_point64&lt; QR &gt; &amp;rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt; QR &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Addition between two <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref> variables and the result goes to <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Addition between two <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref> variables Number of decimal on result will be max of decimals of lhs and rhs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="716" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="716" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1fixed__point64_a49301a70e323c7b6fa7e8b4d4cd1cce2_1a49301a70e323c7b6fa7e8b4d4cd1cce2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>QR</declname>
            <defname>QR</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt;(Q &gt;QR)?Q:QR &gt;</type>
        <definition>fixed_point64&lt; (Q&gt;QR)?Q:QR &gt; eosio::fixed_point64&lt; Q &gt;::operator-</definition>
        <argsstring>(const fixed_point64&lt; QR &gt; &amp;rhs) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>&lt; QR &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Subtraction between two <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref> variables and the result goes to <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Subtraction between two <ref refid="structeosio_1_1fixed__point64" kindref="compound">fixed_point64</ref> variables Number of decimal on result will be max of decimals of lhs and rhs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/fixedpoint.hpp" line="736" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="736" bodyend="747"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>64 bits representation of Fixed Point class. </para>    </briefdescription>
    <detaileddescription>
<para>Example: <programlisting><codeline><highlight class="normal">fixed_point64&lt;6&gt;<sp/>a(123232.455667233)</highlight></codeline>
<codeline><highlight class="normal">fixed_point64&lt;0&gt;<sp/>a(123424)</highlight></codeline>
<codeline><highlight class="normal">fixed_point64&lt;18&gt;<sp/>c<sp/>=<sp/>a*b;</highlight></codeline>
<codeline><highlight class="normal">fixed_point64&lt;24&gt;<sp/>d<sp/>=<sp/>a+b+c;</highlight></codeline>
<codeline><highlight class="normal">fixed_point64&lt;24&gt;<sp/>e<sp/>=<sp/>b/a;</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="libraries/eosiolib/fixedpoint.hpp" line="21" column="1" bodyfile="libraries/eosiolib/fixedpoint.hpp" bodystart="21" bodyend="-1"/>
    <listofallmembers>
      <member refid="structeosio_1_1fixed__point64_ab9f53ce12bd0a23708ec0b67ec7848cb_1ab9f53ce12bd0a23708ec0b67ec7848cb" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>fixed_point64</name></member>
      <member refid="structeosio_1_1fixed__point64_a0fcb07196ce3b1ee19897d2edd1f362b_1a0fcb07196ce3b1ee19897d2edd1f362b" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>fixed_point64</name></member>
      <member refid="structeosio_1_1fixed__point64_a02a221576feae394dc006a6f65ba66c2_1a02a221576feae394dc006a6f65ba66c2" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>fixed_point64</name></member>
      <member refid="structeosio_1_1fixed__point64_a616163b00e9c4ff8e237139bb96ad6b1_1a616163b00e9c4ff8e237139bb96ad6b1" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>frac_part</name></member>
      <member refid="structeosio_1_1fixed__point64_a713dad1088c1c4a95ed446e055f0a523_1a713dad1088c1c4a95ed446e055f0a523" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>int_part</name></member>
      <member refid="structeosio_1_1fixed__point64_af88630db8a6e5f2f026abe4b6fc953dc_1af88630db8a6e5f2f026abe4b6fc953dc" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>operator*</name></member>
      <member refid="structeosio_1_1fixed__point64_a91f5e8b0aad593b8f92d8ed9b8f287d0_1a91f5e8b0aad593b8f92d8ed9b8f287d0" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>operator+</name></member>
      <member refid="structeosio_1_1fixed__point64_a949ad7f0149535736353c9283797468b_1a949ad7f0149535736353c9283797468b" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>operator+</name></member>
      <member refid="structeosio_1_1fixed__point64_a9b0a83b256f3a7c2dac7a2ba838d8397_1a9b0a83b256f3a7c2dac7a2ba838d8397" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>operator-</name></member>
      <member refid="structeosio_1_1fixed__point64_a49301a70e323c7b6fa7e8b4d4cd1cce2_1a49301a70e323c7b6fa7e8b4d4cd1cce2" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>operator-</name></member>
      <member refid="structeosio_1_1fixed__point64_a810e2397dd4645ec575430ffd54b5d3f_1a810e2397dd4645ec575430ffd54b5d3f" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>operator/</name></member>
      <member refid="structeosio_1_1fixed__point64_a2c28bc89073dfa8c6f81ee2594a3272c_1a2c28bc89073dfa8c6f81ee2594a3272c" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>operator&lt;</name></member>
      <member refid="structeosio_1_1fixed__point64_a36ebd8f73c42839443039dbef6462ff4_1a36ebd8f73c42839443039dbef6462ff4" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>operator=</name></member>
      <member refid="structeosio_1_1fixed__point64_a4f8cc600e51217711153481052e0002c_1a4f8cc600e51217711153481052e0002c" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>operator=</name></member>
      <member refid="structeosio_1_1fixed__point64_ad2fb0230d48ccc90795e278e1ef12df6_1ad2fb0230d48ccc90795e278e1ef12df6" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>operator==</name></member>
      <member refid="structeosio_1_1fixed__point64_a63ee72acb0a3307d54283dba95dc623b_1a63ee72acb0a3307d54283dba95dc623b" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>operator&gt;</name></member>
      <member refid="structeosio_1_1fixed__point64_a85bae51f6eb5071be1e0388e8f0c44af_1a85bae51f6eb5071be1e0388e8f0c44af" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>print</name></member>
      <member refid="structeosio_1_1fixed__point64_adf1b4e4d25279c532d9ac3ff56d9af21_1adf1b4e4d25279c532d9ac3ff56d9af21" prot="public" virt="non-virtual"><scope>eosio::fixed_point64</scope><name>val</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
