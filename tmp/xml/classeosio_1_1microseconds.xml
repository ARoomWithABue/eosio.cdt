<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classeosio_1_1microseconds" kind="class" language="C++" prot="public">
    <compoundname>eosio::microseconds</compoundname>
    <includes refid="time_8hpp" local="no">time.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classeosio_1_1microseconds_af2faf1e08a77aafe6485d0e62813354c_1af2faf1e08a77aafe6485d0e62813354c" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t eosio::microseconds::_count</definition>
        <argsstring></argsstring>
        <name>_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="30" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classeosio_1_1microseconds_aaba1d7b327cc33fcbaf19e870d0c1733_1aaba1d7b327cc33fcbaf19e870d0c1733" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class time_point</definition>
        <argsstring></argsstring>
        <name>time_point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="33" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classeosio_1_1microseconds_a4aefc6bb1acd38167eb501722616714d_1a4aefc6bb1acd38167eb501722616714d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref></type>
        <definition>microseconds operator+</definition>
        <argsstring>(const microseconds &amp;l, const microseconds &amp;r)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="15" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="friend" id="classeosio_1_1microseconds_ada590d04fee1d36be15cdda38b581531_1ada590d04fee1d36be15cdda38b581531" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref></type>
        <definition>microseconds operator-</definition>
        <argsstring>(const microseconds &amp;l, const microseconds &amp;r)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="16" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="friend" id="classeosio_1_1microseconds_afce366cbc2e650931e2d1eb856c1339e_1afce366cbc2e650931e2d1eb856c1339e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const microseconds &amp;a, const microseconds &amp;b)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="21" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="friend" id="classeosio_1_1microseconds_ad4531296ec947832cc4b3f5dfbc9fc0b_1ad4531296ec947832cc4b3f5dfbc9fc0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const microseconds &amp;a, const microseconds &amp;b)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="22" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="friend" id="classeosio_1_1microseconds_aa1877d2e6b18621502415bb755c51108_1aa1877d2e6b18621502415bb755c51108" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const microseconds &amp;a, const microseconds &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="23" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="friend" id="classeosio_1_1microseconds_a01d844cd1e5a8b2108b564ac3b1a8ed4_1a01d844cd1e5a8b2108b564ac3b1a8ed4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const microseconds &amp;a, const microseconds &amp;b)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="24" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="24" bodyend="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeosio_1_1microseconds_a59aa821c27e2073ede1ddf759e26317f_1a59aa821c27e2073ede1ddf759e26317f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>eosio::microseconds::microseconds</definition>
        <argsstring>(int64_t c=0)</argsstring>
        <name>microseconds</name>
        <param>
          <type>int64_t</type>
          <declname>c</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="13" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1microseconds_aecd2e119c3bd9254a29dd2667da37ff0_1aecd2e119c3bd9254a29dd2667da37ff0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool eosio::microseconds::operator==</definition>
        <argsstring>(const microseconds &amp;c) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="19" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1microseconds_a2c2cb714e79a3f4d984b068702496533_1a2c2cb714e79a3f4d984b068702496533" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool eosio::microseconds::operator!=</definition>
        <argsstring>(const microseconds &amp;c) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="20" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1microseconds_ae23f9854f69a44225d8f96092cdc032e_1ae23f9854f69a44225d8f96092cdc032e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
        <definition>microseconds&amp; eosio::microseconds::operator+=</definition>
        <argsstring>(const microseconds &amp;c)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="25" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1microseconds_a91086401e39a026d06ab5d2a41a27f22_1a91086401e39a026d06ab5d2a41a27f22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
        <definition>microseconds&amp; eosio::microseconds::operator-=</definition>
        <argsstring>(const microseconds &amp;c)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="26" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1microseconds_a0d847f20b3d17f6743e39773ea0431b2_1a0d847f20b3d17f6743e39773ea0431b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t eosio::microseconds::count</definition>
        <argsstring>() const</argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="27" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1microseconds_aa9396d5bd773c4169ff6aca7344988a6_1aa9396d5bd773c4169ff6aca7344988a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t eosio::microseconds::to_seconds</definition>
        <argsstring>() const</argsstring>
        <name>to_seconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="28" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classeosio_1_1microseconds_a9b6c52f413afce012f9bfebe66b4b6a1_1a9b6c52f413afce012f9bfebe66b4b6a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classeosio_1_1microseconds" kindref="compound">microseconds</ref></type>
        <definition>static microseconds eosio::microseconds::maximum</definition>
        <argsstring>()</argsstring>
        <name>maximum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/time.hpp" line="14" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="14" bodyend="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/eosiolib/time.hpp" line="11" column="1" bodyfile="libraries/eosiolib/time.hpp" bodystart="11" bodyend="34"/>
    <listofallmembers>
      <member refid="classeosio_1_1microseconds_af2faf1e08a77aafe6485d0e62813354c_1af2faf1e08a77aafe6485d0e62813354c" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>_count</name></member>
      <member refid="classeosio_1_1microseconds_a0d847f20b3d17f6743e39773ea0431b2_1a0d847f20b3d17f6743e39773ea0431b2" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>count</name></member>
      <member refid="classeosio_1_1microseconds_a9b6c52f413afce012f9bfebe66b4b6a1_1a9b6c52f413afce012f9bfebe66b4b6a1" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>maximum</name></member>
      <member refid="classeosio_1_1microseconds_a59aa821c27e2073ede1ddf759e26317f_1a59aa821c27e2073ede1ddf759e26317f" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>microseconds</name></member>
      <member refid="classeosio_1_1microseconds_a2c2cb714e79a3f4d984b068702496533_1a2c2cb714e79a3f4d984b068702496533" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>operator!=</name></member>
      <member refid="classeosio_1_1microseconds_a4aefc6bb1acd38167eb501722616714d_1a4aefc6bb1acd38167eb501722616714d" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>operator+</name></member>
      <member refid="classeosio_1_1microseconds_ae23f9854f69a44225d8f96092cdc032e_1ae23f9854f69a44225d8f96092cdc032e" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>operator+=</name></member>
      <member refid="classeosio_1_1microseconds_ada590d04fee1d36be15cdda38b581531_1ada590d04fee1d36be15cdda38b581531" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>operator-</name></member>
      <member refid="classeosio_1_1microseconds_a91086401e39a026d06ab5d2a41a27f22_1a91086401e39a026d06ab5d2a41a27f22" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>operator-=</name></member>
      <member refid="classeosio_1_1microseconds_aa1877d2e6b18621502415bb755c51108_1aa1877d2e6b18621502415bb755c51108" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>operator&lt;</name></member>
      <member refid="classeosio_1_1microseconds_a01d844cd1e5a8b2108b564ac3b1a8ed4_1a01d844cd1e5a8b2108b564ac3b1a8ed4" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>operator&lt;=</name></member>
      <member refid="classeosio_1_1microseconds_aecd2e119c3bd9254a29dd2667da37ff0_1aecd2e119c3bd9254a29dd2667da37ff0" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>operator==</name></member>
      <member refid="classeosio_1_1microseconds_afce366cbc2e650931e2d1eb856c1339e_1afce366cbc2e650931e2d1eb856c1339e" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>operator&gt;</name></member>
      <member refid="classeosio_1_1microseconds_ad4531296ec947832cc4b3f5dfbc9fc0b_1ad4531296ec947832cc4b3f5dfbc9fc0b" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>operator&gt;=</name></member>
      <member refid="classeosio_1_1microseconds_aaba1d7b327cc33fcbaf19e870d0c1733_1aaba1d7b327cc33fcbaf19e870d0c1733" prot="private" virt="non-virtual"><scope>eosio::microseconds</scope><name>time_point</name></member>
      <member refid="classeosio_1_1microseconds_aa9396d5bd773c4169ff6aca7344988a6_1aa9396d5bd773c4169ff6aca7344988a6" prot="public" virt="non-virtual"><scope>eosio::microseconds</scope><name>to_seconds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
