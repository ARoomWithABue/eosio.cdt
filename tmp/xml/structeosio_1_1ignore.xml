<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structeosio_1_1ignore" kind="struct" language="C++" prot="public">
    <compoundname>eosio::ignore</compoundname>
    <includes refid="ignore_8hpp" local="no">ignore.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <briefdescription>
<para>Tells the datastream to ignore this type, but allows the abi generator to add the correct type. Currently non-ignore types can not succeed an ignore type in a method definition, i.e. void foo(float, ignore&lt;int&gt;) is allowed and void foo(float, ignore&lt;int&gt;, int) is not allowed. This restriction will be relaxed in a later release. </para>    </briefdescription>
    <detaileddescription>
<para>Tells the datastream to ignore this type, but allows the abi generator to add the correct type. Currently non-ignore types can not succeed an ignore type in a method definition, i.e. void foo(float, ignore&lt;int&gt;) is allowed and void foo(float, ignore&lt;int&gt;, int) is not allowed. This restriction will be relaxed in a later release. </para>    </detaileddescription>
    <location file="libraries/eosiolib/ignore.hpp" line="13" column="1" bodyfile="libraries/eosiolib/ignore.hpp" bodystart="13" bodyend="13"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
