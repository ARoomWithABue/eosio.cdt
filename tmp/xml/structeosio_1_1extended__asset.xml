<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structeosio_1_1extended__asset" kind="struct" language="C++" prot="public">
    <compoundname>eosio::extended_asset</compoundname>
    <includes refid="asset_8hpp" local="no">asset.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeosio_1_1extended__asset_aacd83a028c55e22db2e8f14027827ad7_1aacd83a028c55e22db2e8f14027827ad7" prot="public" static="no" mutable="no">
        <type><ref refid="structeosio_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset eosio::extended_asset::quantity</definition>
        <argsstring></argsstring>
        <name>quantity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The asset </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="379" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeosio_1_1extended__asset_acac503620c8c59864b065360fb50868b_1acac503620c8c59864b065360fb50868b" prot="public" static="no" mutable="no">
        <type><ref refid="structeosio_1_1name" kindref="compound">name</ref></type>
        <definition>name eosio::extended_asset::contract</definition>
        <argsstring></argsstring>
        <name>contract</name>
        <briefdescription>
<para>The owner of the asset. </para>        </briefdescription>
        <detaileddescription>
<para>The owner of the asset </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="386" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="386" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeosio_1_1extended__asset_a7604109863c6d45bc54347c27bd632a4_1a7604109863c6d45bc54347c27bd632a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classeosio_1_1extended__symbol" kindref="compound">extended_symbol</ref></type>
        <definition>extended_symbol eosio::extended_asset::get_extended_symbol</definition>
        <argsstring>() const</argsstring>
        <name>get_extended_symbol</name>
        <briefdescription>
<para>Get the extended symbol of the asset. </para>        </briefdescription>
        <detaileddescription>
<para>Get the extended symbol of the asset</para><para><simplesect kind="return"><para><ref refid="classeosio_1_1extended__symbol" kindref="compound">extended_symbol</ref> - The extended symbol of the asset </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="394" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="394" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1extended__asset_a7747448ddea804e84fe72decd40ee3a2_1a7747448ddea804e84fe72decd40ee3a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eosio::extended_asset::extended_asset</definition>
        <argsstring>()=default</argsstring>
        <name>extended_asset</name>
        <briefdescription>
<para>Construct a new extended asset object. </para>        </briefdescription>
        <detaileddescription>
<para>Default constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1extended__asset_a831a169f25c972af14a01e0305ab8d74_1a831a169f25c972af14a01e0305ab8d74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>eosio::extended_asset::extended_asset</definition>
        <argsstring>(int64_t v, extended_symbol s)</argsstring>
        <name>extended_asset</name>
        <param>
          <type>int64_t</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classeosio_1_1extended__symbol" kindref="compound">extended_symbol</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Construct a new extended asset object. </para>        </briefdescription>
        <detaileddescription>
<para>Construct a new extended asset given the amount and extended symbol </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="408" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="408" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1extended__asset_a29f3c5f054f754ab4fac481cce633682_1a29f3c5f054f754ab4fac481cce633682" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>eosio::extended_asset::extended_asset</definition>
        <argsstring>(asset a, name c)</argsstring>
        <name>extended_asset</name>
        <param>
          <type><ref refid="structeosio_1_1asset" kindref="compound">asset</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structeosio_1_1name" kindref="compound">name</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Construct a new extended asset object. </para>        </briefdescription>
        <detaileddescription>
<para>Construct a new extended asset given the asset and owner name </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="414" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="414" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1extended__asset_af5993cb01622505de48870ba728cec3b_1af5993cb01622505de48870ba728cec3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eosio::extended_asset::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
<para>Print the extended asset </para>        </briefdescription>
        <detaileddescription>
<para>Print the extended asset </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="421" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="421" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="structeosio_1_1extended__asset_a6ed16665f2ef5843b3dea2e2429f7147_1a6ed16665f2ef5843b3dea2e2429f7147" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref></type>
        <definition>extended_asset eosio::extended_asset::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Unary minus operator. </para>        </briefdescription>
        <detaileddescription>
<para>Unary minus operator</para><para><simplesect kind="return"><para><ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> - New extended asset with its amount is the negative amount of this extended asset </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="433" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="433" bodyend="435"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structeosio_1_1extended__asset_ab4d2266e6f926377337a626e990a5e7c_1ab4d2266e6f926377337a626e990a5e7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref></type>
        <definition>extended_asset operator-</definition>
        <argsstring>(const extended_asset &amp;a, const extended_asset &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Subtraction operator. </para>        </briefdescription>
        <detaileddescription>
<para>Subtraction operator. This subtracts the amount of the extended asset.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>- The extended asset to be subtracted </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>- The extended asset used to subtract </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> - New extended asset as the result of subtraction </para></simplesect>
<simplesect kind="pre"><para>The owner of both extended asset need to be the same </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="446" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="446" bodyend="449"/>
      </memberdef>
      <memberdef kind="friend" id="structeosio_1_1extended__asset_a407c4e55064a39fa993303aa2d428244_1a407c4e55064a39fa993303aa2d428244" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref></type>
        <definition>extended_asset operator+</definition>
        <argsstring>(const extended_asset &amp;a, const extended_asset &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Addition operator. </para>        </briefdescription>
        <detaileddescription>
<para>Addition operator. This adds the amount of the extended asset.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>- The extended asset to be added </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>- The extended asset to be added </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> - New extended asset as the result of addition </para></simplesect>
<simplesect kind="pre"><para>The owner of both extended asset need to be the same </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="460" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="460" bodyend="463"/>
      </memberdef>
      <memberdef kind="friend" id="structeosio_1_1extended__asset_a905237f4cfc32d33e8c89223461fa466_1a905237f4cfc32d33e8c89223461fa466" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
        <definition>extended_asset&amp; operator+=</definition>
        <argsstring>(extended_asset &amp;a, const extended_asset &amp;b)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Addition operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="466" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="466" bodyend="470"/>
      </memberdef>
      <memberdef kind="friend" id="structeosio_1_1extended__asset_a93c002db9cb9b3137fba4dbe2ee3c87b_1a93c002db9cb9b3137fba4dbe2ee3c87b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
        <definition>extended_asset&amp; operator-=</definition>
        <argsstring>(extended_asset &amp;a, const extended_asset &amp;b)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Subtraction operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="473" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="473" bodyend="477"/>
      </memberdef>
      <memberdef kind="friend" id="structeosio_1_1extended__asset_a8a4fd918c008063c91c5dc1c47a7379b_1a8a4fd918c008063c91c5dc1c47a7379b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const extended_asset &amp;a, const extended_asset &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Less than operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="480" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="480" bodyend="483"/>
      </memberdef>
      <memberdef kind="friend" id="structeosio_1_1extended__asset_a3aa0a4107431f276a87ee9d375057f9c_1a3aa0a4107431f276a87ee9d375057f9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const extended_asset &amp;a, const extended_asset &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Comparison operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="487" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="487" bodyend="489"/>
      </memberdef>
      <memberdef kind="friend" id="structeosio_1_1extended__asset_a804dc3c59aaec0a3c6a4b8c516fda329_1a804dc3c59aaec0a3c6a4b8c516fda329" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const extended_asset &amp;a, const extended_asset &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Comparison operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="492" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="492" bodyend="494"/>
      </memberdef>
      <memberdef kind="friend" id="structeosio_1_1extended__asset_a76fd9f6a03d7be197796bdcf7875c399_1a76fd9f6a03d7be197796bdcf7875c399" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const extended_asset &amp;a, const extended_asset &amp;b)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Comparison operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="497" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="497" bodyend="500"/>
      </memberdef>
      <memberdef kind="friend" id="structeosio_1_1extended__asset_a4969e409e5f8d32e48b40ebc4ba4f6af_1a4969e409e5f8d32e48b40ebc4ba4f6af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const extended_asset &amp;a, const extended_asset &amp;b)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structeosio_1_1extended__asset" kindref="compound">extended_asset</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Comparison operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/asset.hpp" line="503" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="503" bodyend="506"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="43">
        <label>eosio::asset</label>
        <link refid="structeosio_1_1asset"/>
        <childnode refid="44" relation="usage">
          <edgelabel>symbol</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>eosio::extended_asset</label>
        <link refid="structeosio_1_1extended__asset"/>
        <childnode refid="42" relation="usage">
          <edgelabel>contract</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>quantity</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>eosio::symbol</label>
        <link refid="classeosio_1_1symbol"/>
      </node>
      <node id="42">
        <label>eosio::name</label>
        <link refid="structeosio_1_1name"/>
      </node>
    </collaborationgraph>
    <location file="libraries/eosiolib/asset.hpp" line="375" column="1" bodyfile="libraries/eosiolib/asset.hpp" bodystart="375" bodyend="509"/>
    <listofallmembers>
      <member refid="structeosio_1_1extended__asset_acac503620c8c59864b065360fb50868b_1acac503620c8c59864b065360fb50868b" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>contract</name></member>
      <member refid="structeosio_1_1extended__asset_a7747448ddea804e84fe72decd40ee3a2_1a7747448ddea804e84fe72decd40ee3a2" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>extended_asset</name></member>
      <member refid="structeosio_1_1extended__asset_a831a169f25c972af14a01e0305ab8d74_1a831a169f25c972af14a01e0305ab8d74" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>extended_asset</name></member>
      <member refid="structeosio_1_1extended__asset_a29f3c5f054f754ab4fac481cce633682_1a29f3c5f054f754ab4fac481cce633682" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>extended_asset</name></member>
      <member refid="structeosio_1_1extended__asset_a7604109863c6d45bc54347c27bd632a4_1a7604109863c6d45bc54347c27bd632a4" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>get_extended_symbol</name></member>
      <member refid="structeosio_1_1extended__asset_a804dc3c59aaec0a3c6a4b8c516fda329_1a804dc3c59aaec0a3c6a4b8c516fda329" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>operator!=</name></member>
      <member refid="structeosio_1_1extended__asset_a407c4e55064a39fa993303aa2d428244_1a407c4e55064a39fa993303aa2d428244" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>operator+</name></member>
      <member refid="structeosio_1_1extended__asset_a905237f4cfc32d33e8c89223461fa466_1a905237f4cfc32d33e8c89223461fa466" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>operator+=</name></member>
      <member refid="structeosio_1_1extended__asset_a6ed16665f2ef5843b3dea2e2429f7147_1a6ed16665f2ef5843b3dea2e2429f7147" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>operator-</name></member>
      <member refid="structeosio_1_1extended__asset_ab4d2266e6f926377337a626e990a5e7c_1ab4d2266e6f926377337a626e990a5e7c" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>operator-</name></member>
      <member refid="structeosio_1_1extended__asset_a93c002db9cb9b3137fba4dbe2ee3c87b_1a93c002db9cb9b3137fba4dbe2ee3c87b" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>operator-=</name></member>
      <member refid="structeosio_1_1extended__asset_a8a4fd918c008063c91c5dc1c47a7379b_1a8a4fd918c008063c91c5dc1c47a7379b" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>operator&lt;</name></member>
      <member refid="structeosio_1_1extended__asset_a76fd9f6a03d7be197796bdcf7875c399_1a76fd9f6a03d7be197796bdcf7875c399" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>operator&lt;=</name></member>
      <member refid="structeosio_1_1extended__asset_a3aa0a4107431f276a87ee9d375057f9c_1a3aa0a4107431f276a87ee9d375057f9c" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>operator==</name></member>
      <member refid="structeosio_1_1extended__asset_a4969e409e5f8d32e48b40ebc4ba4f6af_1a4969e409e5f8d32e48b40ebc4ba4f6af" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>operator&gt;=</name></member>
      <member refid="structeosio_1_1extended__asset_af5993cb01622505de48870ba728cec3b_1af5993cb01622505de48870ba728cec3b" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>print</name></member>
      <member refid="structeosio_1_1extended__asset_aacd83a028c55e22db2e8f14027827ad7_1aacd83a028c55e22db2e8f14027827ad7" prot="public" virt="non-virtual"><scope>eosio::extended_asset</scope><name>quantity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
