<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="group__dispatcher" kind="group">
    <compoundname>dispatcher</compoundname>
    <title>Dispatcher C++ API</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__dispatcher_1ga8c4928c29096799ef6ddabf148dc9cf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool eosio::execute_action</definition>
        <argsstring>(name self, name code, void(T::*func)(Args...))</argsstring>
        <name>execute_action</name>
        <param>
          <type>name</type>
          <declname>self</declname>
        </param>
        <param>
          <type>name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>void(T::*)(Args...)</type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Unpack the received action and execute the correponding action handler. </para>        </briefdescription>
        <detaileddescription>
<para>Unpack the received action and execute the correponding action handler</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>- The contract class that has the correponding action handler, this contract should be derived from <ref refid="classeosio_1_1contract" kindref="compound">eosio::contract</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>- The namespace of the action handler function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>- The arguments that the action handler accepts, i.e. members of the action </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>- The contract object that has the correponding action handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>- The action handler </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/eosiolib/dispatcher.hpp" line="59" column="1" bodyfile="libraries/eosiolib/dispatcher.hpp" bodystart="59" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines C++ functions to dispatch action to proper action handler inside a contract. </para>    </briefdescription>
    <detaileddescription>
<para>Convenient macro to create contract apply handler.</para><para>Convenient macro to create contract apply handler To be able to use this macro, the contract needs to be derived from <ref refid="classeosio_1_1contract" kindref="compound">eosio::contract</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>TYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>- The class name of the contract </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MEMBERS</parametername>
</parameternamelist>
<parameterdescription>
<para>- The sequence of available actions supported by this contract</para></parameterdescription>
</parameteritem>
</parameterlist>
Example: <programlisting><codeline><highlight class="normal">EOSIO_DISPATCH(<sp/>eosio::bios,<sp/>(setpriv)(setalimits)(setglimits)(setprods)(reqauth)<sp/>)</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
