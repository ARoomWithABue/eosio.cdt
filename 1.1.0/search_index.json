{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["\"\"","#includ","$","${cmake_install_prefix})","${wasm_root}/lib/cmake)","(","(come","(compiler,","(eosio","(explicitli","(o0","(or","(post","(test_action))","(usual","(wasm).","(webassembl",")","*build.sh","*thi",",","...","./build.sh","./install.sh","/)","/usr/local/bin","/usr/local/eosio.wasmsdk","0","1","1.0.0)","1.1.0","3","3.5)","7,",":",">","[options]","__base_file__","__file__","```","aa","abi","account_nam","add","add_executable(","add_executable/","add_librari","addit","against","alia","align","alloc","allow","alway","analys","analysi","appli","ar","around","assembl","ast","automat","avail","bake","base","be","befor","binari","blockchain","build","build.sh","built","c","c)","c++","c++17","cc","cc,","cd","cfl","clang","class","clone","cmake","cmake_minimum_required(vers","cmake_module_path","cmakelists.txt","code:","command","comment","compil","compile,","compiler)","compiler,","consid","constant","constructor","contract","contract,","contract::contract;","contracts.","control","copi","core","coroutin","cpp","cpp,","cpp/eosio","cross","current","d=","dd","decid","default","defin","definit","depend","deploy","destructor","determin","di","direct","directori","disabl","display","dm","don't","e","elf","elid","elimin","elis","emit","enabl","end","endif()","enum","enum'","eosio","eosio.ld","eosio.wasmsdk","eosio::contract","eosio;","eosio_abi(","eosiowasmtoolchain","etc.)","exampl","example:","experimental,","falign","fall","fcoroutin","featur","file","finally,","finlin","first","flag","flow","fmerg","fno","folder.","forc","fstack","fstrict","fullpath.","function","gener","git","give","global","guid","help","heurist","hidden","hint","https://github.com/eosio/eosio.wasmsdk","i=","if(wasm_root","implicitly)","in.","includ","include(eosiowasmtoolchain)","include=","incomplete.","inlin","input","instal","instead","intend","interact","interfac","introduct","isysroot=","l=","languag","ld","ld)","ld,","level","librari","licens","link","linker","linker)","list","list(append","lld","llvm","llvm,","locat","location.","lto","macro","manual","mark","mean","memori","merg","method","mit","mode","more)","name","namespac","need","needed.","new","non","normal","note,","now","o3)","o=","objdump","object","omitted)","opt=","optim","option","options:","outpu","output","overview:","overwrit","pars","pass","path","perfer","pointer","polymorph","post","postpass","potenti","pp","preprocess","preprocess,","preprocessor","print","process","program","project(test_exampl","protector","public","public:","purpos","rang","ranlib","readelf","recurs","represent","return","root","rule","run","s","s,","sdk","search","set","set(wasm_root","show","simpl","since,","smart","smash","soon)","sourc","specif","specifi","stack","standard","static","std=","step","still","strequal","strict","strong","sudo","suitabl","support","suppress","symbol","symlink","system","target","templat","test","test,","test.cpp","test_action(","to.","todo","tool","toolchain","toolchain,","tools.","top","treat","ts","u=","undefin","unreach","us","usag","usage:","used.","v","valu","variable,","verbos","version","void","vtabl","vulner","w","w=","warn","wasm","wasm,","wasm_root","wasm_root)","wasmsdk","webassembl","with.","within","write","{","}","};"],"modules.html":["32,64,128,256","access","accounts.","action","action.","actionapi","actioncapi","actioncppapi","actions.","aliases.","api","api.","assetapi","assetcppapi","assets.","base","bit","blockchain.","boost::optional.","builtin","bytes.","c","c++","calcul","chain","chainapi","chaincapi","check","class","common","compilerbuiltinsapi","configur","consoleapi","consolecapi","consolecppapi","contract","contract.","contractdev","contracttyp","cpp","cryptoapi","cryptocapi","data","databas","database.","databasec","databasecpp","datastream","declar","defin","defn","describ","deseri","dispatch","dispatchercpp","done","effici","eos.io.","eosd","eosio","eosiorpc","fix","fixed_key","fixedpoint","form","function","functions.","gener","handler","hash.","helper","here","http","index","inlin","insid","int128","integ","interact","interfac","intern","intrinsics.","introduct","key","length","level","lexicograph","list","log/print","manag","memori","memoryapi","memorycppapi","messages.","modul","modules:","more","multi","multiindex","object.","optionaltyp","otion","over","point","privileg","privilegedapi","privilegedcapi","privilegedcppapi","produc","producertyp","proper","provid","public","publickeytyp","queri","read","retriev","rpc.","safe","send","serial","serialization/.","serializecpp","similar","singleton","size","smart","sort","specifi","state.","store","stream","symbolapi","symbolcppapi","symbols.","system","systemapi","systemcapi","table.","text","toolchain.","transact","transactionapi","transactioncapi","transactioncppapi","transactions.","type","type.","typedef","types,","variabl","varint","version","wraper","wrapper","write"],"group__compilerbuiltinsapi.html":["&","(","()","(a","(b","(the","(which",")","//","0","0;","1","1);","10000","100;","128","16","32","3;","4","64","64));","64),","8;","=",">>","__addtf3","__ashlti3","__ashlti3(res,","__ashrti3","__ashrti3(res,","__break_point","__cmptf2","__divtf3","__divti3","__divti3(res,","__eqtf2","__extenddftf2","__extendsftf2","__fixtfdi","__fixtfsi","__fixunstfdi","__fixunstfsi","__getf2","__gttf2","__int128","__letf2","__lshlti3","__lshlti3(res,","__lshrti3","__lshrti3(res,","__lttf2","__modti3","__modti3(res,","__multf3","__multi3","__multi3(res,","__netf2","__subtf3","__trunctfdf2","__trunctfsf2","__udivti3","__udivti3(res,","__umodti3","__umodti3(res,","__unordtf2","a,","add","arithmet","assign","b","b,","between","bit","builtin","check","compar","compilerbuiltinsapi","compilerbuiltinsapi::__addtf3","compilerbuiltinsapi::__ashlti3","compilerbuiltinsapi::__ashrti3","compilerbuiltinsapi::__break_point","compilerbuiltinsapi::__cmptf2","compilerbuiltinsapi::__divtf3","compilerbuiltinsapi::__divti3","compilerbuiltinsapi::__eqtf2","compilerbuiltinsapi::__extenddftf2","compilerbuiltinsapi::__extendsftf2","compilerbuiltinsapi::__fixtfdi","compilerbuiltinsapi::__fixtfsi","compilerbuiltinsapi::__fixunstfdi","compilerbuiltinsapi::__fixunstfsi","compilerbuiltinsapi::__getf2","compilerbuiltinsapi::__gttf2","compilerbuiltinsapi::__letf2","compilerbuiltinsapi::__lshlti3","compilerbuiltinsapi::__lshrti3","compilerbuiltinsapi::__lttf2","compilerbuiltinsapi::__modti3","compilerbuiltinsapi::__multf3","compilerbuiltinsapi::__multi3","compilerbuiltinsapi::__netf2","compilerbuiltinsapi::__subtf3","compilerbuiltinsapi::__trunctfdf2","compilerbuiltinsapi::__trunctfsf2","compilerbuiltinsapi::__udivti3","compilerbuiltinsapi::__umodti3","compilerbuiltinsapi::__unordtf2","convert","declar","divid","divis","doubl","double,","double.","equal","example:","extend","f","factor.","first","float","float.","function","gener","greater","group","h","ha","ha,","hb","helper","hi","hi,","high","inequ","input","int","int128","int32_t","int64_t","integ","integer.","integers)","integers.","l","l,","la","la,","lb","lb,","left","less","lo","lo,","logic","long","low","modular","modulu","multipl","multipli","nan","nan,","number","oper","output:","parameter.","parameters:","perform","post","printi128(&res);","product.","re","replac","repres","res,","result","ret","ret,","returns:","right","second","shift","shift.","split","subtract","toolchain.","truncat","two","uint32_t","uint64_t","unsign","valu","void"],"group__contractdev.html":["(","(char","(const",")","*","160","256","512","64","account","account.","account_nam","account_name;","account_permiss","action","action.","action_nam","action_name;","actions.","aliases.","align","align/overalign","aligned.","aligned;","api","argument","asset","assets.","atabl","base32","binari","bit","block_id_typ","block_id_type;","blockchain.","builtin","c","c)","calcul","call","chain","char","char_to_symbol","charact","check","checksum160","checksum256","checksum512","class","common","compil","consol","const","constexpr","contract","contract.","contractdev","contractdev::align","contractdev::char_to_symbol","contractdev::string_to_nam","convert","data","databas","defin","deseri","dispatch","encod","ensur","eos.io.","eosio","eosio::fixed_key","eosio::nam","function","functions.","gener","group","handler","hash","hash.","id.","inlin","insid","integ","interact","intern","interpret","intrins","intrinsics.","introduct","level","log/print","macro","manag","memori","messages.","method","modul","n","n;","name","object.","parameters:","permission.","permission_nam","permission_name;","pointers/refer","proper","properli","public_key","queri","represent","representation,","retriev","returns:","scope","scope.","scope_nam","scope_name;","send","serial","signatur","specifi","state.","static","store","str","str)","string","string_to_nam","string_to_name()","struct","symbol","symbols.","system","table.","table_nam","table_name;","templat","text","time","time.","time;","transact","transaction_id_typ","transaction_id_type;","type","typedef","types,","uint16_t","uint32_t","uint64_t","uint64_t.","unsign","us","weight_typ","weight_type;","well.","write","x","x."],"group__actionapi.html":["&","(","(\"action_member1_name\",","()","(a)(b)(c)",")","...","//","//1","//4","//8","=","a;","account","account_nam","accounts...","action","action.","action.cod","action;","action_member1_value)(\"action_member2_name\",","action_member2_value)","actionapi","actionapi::require_auth","actionapi::require_recipi","actionapi::unpack_action_data","ad","add","api","auth,","author","b;","bodi","c","c++","c;","call","cast","char","class","code","consid","const","contain","contract","current","data","defin","dispatch","doesn't","dummy_act","dummy_action,","enabl","eosio::act","eosio::action_meta","eosio::permission_level","eoslib_serialize(","example:","except","extend","fail.","function","group","have","helper","inlin","int","intend","interpret","level","list","long","member","meta,","meta.","method","modul","msg","multipl","n(account2),","n(account3));","name","name,","new","note:","notifi","parameters:","part","permission_level","queri","remaining_account","requir","require_auth","require_recipi","require_recipient(n(account1),","returns:","safe","send","send_inline_act","send_inline_action;","set","set.","similar","singl","specifi","struct","t","t.","theaction","throw","times.","type","unpack","unpack_action_data","unpack_action_data();","unsign","void","work","wraper","{","};"],"group__actioncapi.html":["\"account\":","\"active\"","\"amount\":","\"authorization\":","\"code\":","\"data\":","\"eos\",","\"from\":","\"inita\",","\"initb\",","\"permission\":","\"to\":","\"transfer\",","\"type\":","(","()","(in",")","*","//","0","1000","1970","1970)","5","5);","=","[{","abov","abstract","accordingly.","account","account_nam","act","action","action'","action.","action_data_s","action_nam","action_size();","actioncapi","actioncapi::action_data_s","actioncapi::current_receiv","actioncapi::has_auth","actioncapi::is_account","actioncapi::publication_tim","actioncapi::read_action_data","actioncapi::require_auth","actioncapi::require_auth2","actioncapi::require_read_lock","actioncapi::require_recipi","actioncapi::require_write_lock","actioncapi::send_context_free_inlin","actioncapi::send_inlin","add","api","array","assum","auth","auth.","authorization;","auths.","block","bool","buffer","buffer[128];","byte","char","code","code/typ","contain","content","context","contract","copi","copied,","current","current_receiv","data","data;","defin","descript","detail","dynam","enabl","eos.io","example:","examples:","except","execut","exist","field","field.","fill","follow","found","found.","free","function","group","has_auth","held","held.","inita","initc","inlin","inspect","is_account","len","len==0","length","level","list","locat","location.","lock","long","memori","method","microsecond","more...","msg","msg,","msgsize","name","name,","name;","noth","notifi","notified.","number","opaqu","output:","pack","parameters:","parent","pass","permiss","permission_level[]","permission_nam","pointer","post","precondition:","primari","print(current_time());","print(msgsize);","print(total);","process","provid","public","publication_tim","queri","rang","read","read_action(buffer,","read_action_data","receiv","report","requir","require_auth","require_auth(n(inita));","require_auth(n(initb));","require_auth2","require_read_lock","require_recipi","require_recipient(n(initc));","require_write_lock","return","returns:","scope;","scope_nam","send","send_context_free_inlin","send_inlin","serial","serialized\\_act","serialized_act","serialized_action,","set","size","size_t","specifi","struct","structure:","taken","throw","time","time.","timestamp","total","transact","uint32_t","uint64_t","up","us","valid","verifi","void","write","{","}","};","}],"],"group__actioncppapi.html":["&","(","(\"action_member1_name\",","()","(a)(b)(c)",")","...","//","//1","//4","//8","=","a;","account","account_nam","accounts...","action","action.","action.cod","action;","action_member1_value)(\"action_member2_name\",","action_member2_value)","actioncppapi","actioncppapi::require_auth","actioncppapi::require_recipi","actioncppapi::unpack_action_data","ad","add","addit","api","auth,","author","b;","bodi","c","c++","c;","call","cast","char","class","code","consid","const","contain","contract","current","data","defin","descript","detail","directli","dispatch","document","doesn't","dummy_act","dummy_action,","enabl","eosio::act","eosio::action_meta","eosio::permission_level","eoslib_serialize(","example:","except","extend","fail.","function","group","have","helper","inlin","int","intend","interpret","level","list","long","member","meta,","meta.","method","more...","msg","multipl","n(account2),","n(account3));","name","name,","new","note:","notifi","parameters:","part","permission_level","queri","remaining_account","requir","require_auth","require_recipi","require_recipient(n(account1),","returns:","safe","send","send_inline_act","send_inline_action;","set","set.","similar","singl","specifi","struct","t","t.","theaction","throw","times.","type","unpack","unpack_action_data","unpack_action_data();","unsign","us","void","work","wraper","{","};"],"group__assetapi.html":["api","asset","assetapi","assets.","class","cpp","defin","eosio::asset","eosio::extended_asset","extend","group","manag","modul","name","store","struct","type"],"group__assetcppapi.html":["api","assetcppapi","assets.","class","cpp","defin","eosio::asset","eosio::extended_asset","extend","group","manag","name","store","struct","type"],"group__chainapi.html":["\"invalid","###","&calc_hash","(",")",");","*","//","//if","==","```","```cpp","anyth","api","assert","assert160","assert256","assert512","assert\\_recover\\_key","assert_recover_key","assert_recover_key(","assert_ripemd160","assert_ripemod160(","assert_sha1","assert_sha1(","assert_sha256","assert_sha256(","assert_sha512","assert_sha512(","below","c","calc_hash","calc_hash;","calcul","chain","chainapi","chainapi::assert_recover_key","chainapi::assert_ripemd160","chainapi::assert_sha1","chainapi::assert_sha256","chainapi::assert_sha512","chainapi::recover_key","chainapi::ripemd160","chainapi::sha1","chainapi::sha256","chainapi::sha512","char","check","checksum","checksum.","checksum160","checksum160\\*","checksum256","checksum256\\*","checksum512","checksum512\\*","compar","const","creat","data","data,","data;","defin","digest","digest\");","digest,","digest;","eos_assert(","eosio::print(\"pub","eosio::print(\"ripemod160","eosio::print(\"sha1","eosio::print(\"sha256","eosio::print(\"sha512","equal","evalu","example:","execut","fast","fire.","function","gener","given","group","hard","hash","hash\"","hash\");","hash,","hash.","hash;","int","intern","key","length","length,","length;","match","memori","messag","message.","method","mode.","modul","never","next","op","optim","paramet","parameter.","parameters:","point","pointer","post","precondition:","provid","pub","pub,","pub;","publen","publen;","public","queri","recover_key","recoveri","result","return.","ripemd160","ripemod160","ripemod160(","sha1","sha1(","sha256","sha256(","sha512","sha512(","sig","sig,","sig;","siglen","siglen,","siglen;","signatur","signature,","signature.","size_t","state.","statement.","store","test","true,","uint32_t","us","void","want"],"group__chaincapi.html":["(",")","*","0","=","account","account_nam","activ","actual","api","array","buffer","buffer,","byte","bytes_popul","c","chain","chaincapi","chaincapi::get_active_produc","datalen","defin","example:","full","function","get","get_active_produc","get_active_producers(producers,","group","intern","length","long","memori","name","number","output.","parameters:","pass","pointer","popul","post","precondition:","produc","producers,","producers.","producers[21];","queri","rang","requir","return","returns:","set","size","sizeof(account_name)*21);","state.","store","uint32_t"],"group__cryptocapi.html":["\"invalid","###","&calc_hash","(",")",");","*","//","//if","==","```","```cpp","anyth","api","assert","assert160","assert256","assert512","assert\\_recover\\_key","assert_recover_key","assert_recover_key(","assert_ripemd160","assert_ripemod160(","assert_sha1","assert_sha1(","assert_sha256","assert_sha256(","assert_sha512","assert_sha512(","below","c","calc_hash","calc_hash;","calcul","char","check","checksum","checksum.","checksum160","checksum160\\*","checksum256","checksum256\\*","checksum512","checksum512\\*","compar","const","creat","cryptocapi","cryptocapi::assert_recover_key","cryptocapi::assert_ripemd160","cryptocapi::assert_sha1","cryptocapi::assert_sha256","cryptocapi::assert_sha512","cryptocapi::recover_key","cryptocapi::ripemd160","cryptocapi::sha1","cryptocapi::sha256","cryptocapi::sha512","data","data,","data;","defin","digest","digest\");","digest,","digest;","eos_assert(","eosio::print(\"pub","eosio::print(\"ripemod160","eosio::print(\"sha1","eosio::print(\"sha256","eosio::print(\"sha512","equal","evalu","example:","execut","fast","fire.","function","gener","given","group","hard","hash","hash\"","hash\");","hash,","hash.","hash;","int","key","length","length,","length;","match","memori","messag","message.","method","mode.","never","next","op","optim","paramet","parameter.","parameters:","point","pointer","post","precondition:","provid","pub","pub,","pub;","publen","publen;","public","recover_key","recoveri","result","return.","ripemd160","ripemod160","ripemod160(","sha1","sha1(","sha256","sha256(","sha512","sha512(","sig","sig,","sig;","siglen","siglen,","siglen;","signatur","signature,","signature.","size_t","statement.","store","test","true,","uint32_t","us","void","want"],"group__consoleapi.html":["\"hello","%\",","&","&&","&&...","(","(87654323456);","(it",")","*","*s",",","/","//","10);","1e+18;","=","a,","api","apples:","arg","args...","behav","c","c++","char","class","consol","consoleapi","consoleapi::oper","consoleapi::print","consoleapi::print_f","const","contain","cout","defin","defn","eosio::cout;","eosio::iostream","example:","format","function","group","hello","input","iostream","iostream&","iostream.","list","log/print","messages.","modul","n(abcde);","name","null","oper","operator<<","ouput:","out","output","overload","parameters:","print","print(","print_f","print_f(\"numb","printf/","refer","replac","rest","returns:","s","s,","similar","specifi","specifier)","static","std::out","stream","strem","string","string.","string_as_unsigned_64_bit","string_as_unsigned_64_bit);","templat","termin","text","type","uint128_t","uint64_t","unsigned_128_bit_int","unsigned_128_bit_int,","unsigned_64_bit_int","unsigned_64_bit_int,","us","v","val","val,","valu","values.","variabl","void","world!\";","world!100000000000000000087654323456abcd","wrapper"],"group__consolecapi.html":["(","(i.e.",")","*","/","//","0.5","10.0;","1000000000000000000","128","1e+18);","5);","5.0","64","87654323456","87654323456);","=","abcd","api","base32","bit","c","char","consolecapi","consolecapi::print","consolecapi::printdf","consolecapi::printhex","consolecapi::printi","consolecapi::printi128","consolecapi::printn","consolecapi::printqf","consolecapi::prints_l","consolecapi::printsf","consolecapi::printui","consolecapi::printui128","const","cstr","cstr,","data,","datalen","defn","doubl","double)","encod","example:","float","float)","function","given","group","hello","int128_t","int64_t","integ","integer.","large_int(","large_int(87654323456);","len","length","log/print","long","messages.","name","null","number","output:","parameters:","point","pointer","precis","print","printdf","printdf(value);","printhex","printi","printi(","printi128","printi128(&large_int);","printn","printn(n(abcde));","printqf","printqf(value);","prints(\"hello","prints_l","prints_l(\"hello","printsf","printsf(value);","printui","printui(1e+18);","printui128","printui128(&large_int);","quadrupl","sign","singl","string","string.","termin","text","uint128_t","uint32_t","uint64_t","unsign","up","valu","void","world!","world!\");","world!\","],"group__consolecppapi.html":["\",","\"hello","%\",","&","&&","&&...","(","(87654323456);","(it",")",");","*","*s",",","/","//","10);","1e+18;","5","=","``","a,","api","apples:","arg","args...","behav","c","c++","char","class","consolecppapi","consolecppapi::oper","consolecppapi::print","consolecppapi::print_f","const","contain","cout","custom","defin","descript","detail","detect","easi","eosio::cout;","eosio::iostream","even","example:","format","function","group","hello","input","iostream","iostream&","iostream.","list","log/print","make","messages.","method","more...","n(abcde);","name","nativ","null","number:","oper","operator<<","ouput:","out","output","overload","parameters:","print","print(","print_f","print_f(\"numb","printf/","refer","replac","rest","returns:","s","s,","similar","specifi","specifier)","static","std::out","stream","strem","string","string.","string_as_unsigned_64_bit","string_as_unsigned_64_bit);","templat","termin","text","type","type.","types.","uint128_t","uint64_t","unsigned_128_bit_int","unsigned_128_bit_int,","unsigned_64_bit_int","unsigned_64_bit_int,","us","v","val","val,","valu","values.","variabl","variad","void","world!\";","world!100000000000000000087654323456abcd","world,","wrapper"],"group__cryptoapi.html":["api","calcul","check","cryptoapi","defin","group","hash."],"group__database.html":["\"alic","&prim);","(","(impli","(it","(or","(truncat","(use","(which",")","*","//","0","0);","0,","0.","0;","1","128","2","256","64","=","==",">",">=","\\*((uint64\\_t\\*)data)","\\*primari","\\*secondari","account","account_nam","act","alreadi","api","array","associ","assum","auto","between","bit","blockchain.","buffer","byte","c","c++","char","charli","charlie_itr","code","code,","condit","const","contain","continu","copi","cost","creat","current","data","data,","data_len","data_len,","databas","database.","database::db_end_i64","database::db_find_i64","database::db_get_i64","database::db_idx128_end","database::db_idx128_find_primari","database::db_idx128_find_secondari","database::db_idx128_lowerbound","database::db_idx128_next","database::db_idx128_previ","database::db_idx128_remov","database::db_idx128_stor","database::db_idx128_upd","database::db_idx128_upperbound","database::db_idx256_end","database::db_idx256_find_primari","database::db_idx256_find_secondari","database::db_idx256_lowerbound","database::db_idx256_next","database::db_idx256_previ","database::db_idx256_remov","database::db_idx256_stor","database::db_idx256_upd","database::db_idx256_upperbound","database::db_idx64_end","database::db_idx64_find_primari","database::db_idx64_find_secondari","database::db_idx64_lowerbound","database::db_idx64_next","database::db_idx64_previ","database::db_idx64_remov","database::db_idx64_stor","database::db_idx64_upd","database::db_idx64_upperbound","database::db_idx_double_end","database::db_idx_double_find_primari","database::db_idx_double_find_secondari","database::db_idx_double_lowerbound","database::db_idx_double_next","database::db_idx_double_previ","database::db_idx_double_remov","database::db_idx_double_stor","database::db_idx_double_upd","database::db_idx_double_upperbound","database::db_idx_long_double_end","database::db_idx_long_double_find_primari","database::db_idx_long_double_find_secondari","database::db_idx_long_double_lowerbound","database::db_idx_long_double_next","database::db_idx_long_double_previ","database::db_idx_long_double_remov","database::db_idx_long_double_stor","database::db_idx_long_double_upd","database::db_idx_long_double_upperbound","database::db_lowerbound_i64","database::db_next_i64","database::db_previous_i64","database::db_remove_i64","database::db_store_i64","database::db_update_i64","database::db_upperbound_i64","db_end_i64","db_find_i64","db_find_i64(receiver,","db_get_i64","db_get_i64(itr,","db_idx128_end","db_idx128_find_primari","db_idx128_find_secondari","db_idx128_lowerbound","db_idx128_next","db_idx128_previ","db_idx128_remov","db_idx128_stor","db_idx128_upd","db_idx128_upperbound","db_idx256_end","db_idx256_find_primari","db_idx256_find_secondari","db_idx256_lowerbound","db_idx256_next","db_idx256_previ","db_idx256_remov","db_idx256_stor","db_idx256_upd","db_idx256_upperbound","db_idx64_end","db_idx64_find_primari","db_idx64_find_secondari","db_idx64_lowerbound","db_idx64_next","db_idx64_previ","db_idx64_remov","db_idx64_stor","db_idx64_upd","db_idx64_upperbound","db_idx_double_end","db_idx_double_find_primari","db_idx_double_find_secondari","db_idx_double_lowerbound","db_idx_double_next","db_idx_double_previ","db_idx_double_remov","db_idx_double_stor","db_idx_double_upd","db_idx_double_upperbound","db_idx_long_double_end","db_idx_long_double_find_primari","db_idx_long_double_find_secondari","db_idx_long_double_lowerbound","db_idx_long_double_next","db_idx_long_double_previ","db_idx_long_double_remov","db_idx_long_double_stor","db_idx_long_double_upd","db_idx_long_double_upperbound","db_lowerbound_i64","db_next_i64","db_next_i64(charlie_itr,","db_previous_i64","db_previous_i64(itr,","db_remove_i64","db_remove_i64(itr);","db_store_i64","db_update_i64","db_upperbound_i64","defin","determin","doubl","end","end_itr","entri","eosio","eosio_assert(end_itr","eosio_assert(itr","eosio_assert(len","equal","example:","exist","exists,","expect","fill","find","first","float","follow","found","found,","function","given","group","hold","id","id,","index","int","int32_t","integ","integers)","interfac","iter","iterator,","itr","itr_prev","key","key.","keys)","last","left","len","lexicograph","long","look","lookup","lowerbound","lowest","match","memori","modul","n(alice));","n(charlie));","name","necessary)","new","newli","next","noth","on","order","otherwis","owner","parameters:","past","pay","payer","payer)","payer,","point","pointer","post","preced","precis","precondition:","previou","prim","primari","quadrupl","rang","receiver)","receiver,","record","referenc","refund","remov","replac","repres","resid","retriev","return","returns:","row","scope","scope,","secondari","secondary,","set","size","specifi","storag","store","tabl","table\");","table)","table,","table.","table1,","table_nam","uint128\\_t","uint128_t","uint32_t","uint64\\_t","uint64_t","untouch","up","updat","upperbound","us","valid","valu","value,","value[50];","variabl","void","within"],"group__databasec.html":["\"alic","&prim);","(","(impli","(it","(or","(truncat","(use","(which",")","*","//","0","0);","0,","0.","0;","1","128","2","256","64","=","==",">",">=","\\*((uint64\\_t\\*)data)","\\*primari","\\*secondari","account","account_nam","act","alreadi","api","array","associ","assum","auto","between","bit","buffer","byte","c","char","charli","charlie_itr","code","code,","condit","const","contain","continu","copi","cost","creat","current","data","data,","data_len","data_len,","databas","database.","databasec","databasec::db_end_i64","databasec::db_find_i64","databasec::db_get_i64","databasec::db_idx128_end","databasec::db_idx128_find_primari","databasec::db_idx128_find_secondari","databasec::db_idx128_lowerbound","databasec::db_idx128_next","databasec::db_idx128_previ","databasec::db_idx128_remov","databasec::db_idx128_stor","databasec::db_idx128_upd","databasec::db_idx128_upperbound","databasec::db_idx256_end","databasec::db_idx256_find_primari","databasec::db_idx256_find_secondari","databasec::db_idx256_lowerbound","databasec::db_idx256_next","databasec::db_idx256_previ","databasec::db_idx256_remov","databasec::db_idx256_stor","databasec::db_idx256_upd","databasec::db_idx256_upperbound","databasec::db_idx64_end","databasec::db_idx64_find_primari","databasec::db_idx64_find_secondari","databasec::db_idx64_lowerbound","databasec::db_idx64_next","databasec::db_idx64_previ","databasec::db_idx64_remov","databasec::db_idx64_stor","databasec::db_idx64_upd","databasec::db_idx64_upperbound","databasec::db_idx_double_end","databasec::db_idx_double_find_primari","databasec::db_idx_double_find_secondari","databasec::db_idx_double_lowerbound","databasec::db_idx_double_next","databasec::db_idx_double_previ","databasec::db_idx_double_remov","databasec::db_idx_double_stor","databasec::db_idx_double_upd","databasec::db_idx_double_upperbound","databasec::db_idx_long_double_end","databasec::db_idx_long_double_find_primari","databasec::db_idx_long_double_find_secondari","databasec::db_idx_long_double_lowerbound","databasec::db_idx_long_double_next","databasec::db_idx_long_double_previ","databasec::db_idx_long_double_remov","databasec::db_idx_long_double_stor","databasec::db_idx_long_double_upd","databasec::db_idx_long_double_upperbound","databasec::db_lowerbound_i64","databasec::db_next_i64","databasec::db_previous_i64","databasec::db_remove_i64","databasec::db_store_i64","databasec::db_update_i64","databasec::db_upperbound_i64","db_end_i64","db_find_i64","db_find_i64(receiver,","db_get_i64","db_get_i64(itr,","db_idx128_end","db_idx128_find_primari","db_idx128_find_secondari","db_idx128_lowerbound","db_idx128_next","db_idx128_previ","db_idx128_remov","db_idx128_stor","db_idx128_upd","db_idx128_upperbound","db_idx256_end","db_idx256_find_primari","db_idx256_find_secondari","db_idx256_lowerbound","db_idx256_next","db_idx256_previ","db_idx256_remov","db_idx256_stor","db_idx256_upd","db_idx256_upperbound","db_idx64_end","db_idx64_find_primari","db_idx64_find_secondari","db_idx64_lowerbound","db_idx64_next","db_idx64_previ","db_idx64_remov","db_idx64_stor","db_idx64_upd","db_idx64_upperbound","db_idx_double_end","db_idx_double_find_primari","db_idx_double_find_secondari","db_idx_double_lowerbound","db_idx_double_next","db_idx_double_previ","db_idx_double_remov","db_idx_double_stor","db_idx_double_upd","db_idx_double_upperbound","db_idx_long_double_end","db_idx_long_double_find_primari","db_idx_long_double_find_secondari","db_idx_long_double_lowerbound","db_idx_long_double_next","db_idx_long_double_previ","db_idx_long_double_remov","db_idx_long_double_stor","db_idx_long_double_upd","db_idx_long_double_upperbound","db_lowerbound_i64","db_next_i64","db_next_i64(charlie_itr,","db_previous_i64","db_previous_i64(itr,","db_remove_i64","db_remove_i64(itr);","db_store_i64","db_update_i64","db_upperbound_i64","defin","descript","detail","determin","doubl","end","end_itr","entri","eosio","eosio_assert(end_itr","eosio_assert(itr","eosio_assert(len","equal","example:","exist","exists,","expect","fill","find","first","float","follow","found","found,","function","given","group","hold","id","id,","index","int","int32_t","integ","integers)","interfac","iter","iterator,","itr","itr_prev","key","key.","keys)","last","left","len","level","lexicograph","long","look","lookup","low","lowerbound","lowest","match","memori","more...","n(alice));","n(charlie));","name","necessary)","new","newli","next","noth","on","order","otherwis","owner","parameters:","past","pay","payer","payer)","payer,","point","pointer","post","preced","precis","precondition:","previou","prim","primari","provid","quadrupl","rang","receiver)","receiver,","record","referenc","refund","remov","replac","repres","resid","retriev","return","returns:","row","scope","scope,","secondari","secondary,","set","size","specifi","storag","store","tabl","table\");","table)","table,","table.","table1,","table_nam","uint128\\_t","uint128_t","uint32_t","uint64\\_t","uint64_t","untouch","up","updat","upperbound","us","valid","valu","value,","value[50];","variabl","void","within"],"group__databasecpp.html":["class","database.","databasecpp","defin","descript","detail","eosio","eosio::singleton","group","index","interfac","modul","more...","multi","name","singleton","tabl","table.","type"],"group__multiindex.html":["#includ","(myaction)","(primary)(secondary_1)(secondary_2)(secondary_3)(secondary_4)(secondary_5)",")","):contract(self){}","16","=",">",">,","_self;","account_nam","api","auto","boost","c++","call","class","code","code,","const","container.","contract","data","database.","defin","descript","detail","doubl","eosio","eosio::multi_index","eosio;","eosio_abi(","eoslib_serialize(","exactli","example:","function","get_secondary_1()","get_secondary_2()","get_secondary_3()","get_secondary_4()","get_secondary_5()","group","here","index","indexed_bi","indic","indices.","insid","interfac","key,","key.","long","member","more...","multi","multi_index","multiindex","myaction()","mycontract(","mycontract,","mycontract:","name","namespac","object","of:","parameters:","pattern","primari","primary;","primary_key()","provid","public:","record","record,","requir","retriev","return","scope","scope);","secondari","secondary_1;","secondary_2;","secondary_3;","secondary_4;","secondary_5;","self","store","struct","support","t","tabl","table(","table,","table.","tablenam","templat","type","uint128_t","uint256_t","uint64_t","uint64_t.","up","us","void","{","}","};"],"group__singleton.html":["class","defin","eosio","eosio::singleton","group","name","singleton","table.","type"],"group__dispatcher.html":["(",")","*","accepts,","action","api","arg","argument","bool","c++","class","contract","contract.","correpond","defin","deriv","dispatch","dispatcher::execute_act","eosio::contract","execut","execute_act","func","function","group","handler","handler,","handler.","i.e.","insid","member","modul","namespac","obj","obj,","object","parameters:","proper","q","receiv","returns:","t","templat","true","unpack","void(q::*)(args...)"],"group__dispatchercpp.html":["(",")","*","accepts,","action","arg","argument","bool","c++","class","contract","contract.","correpond","defin","deriv","dispatch","dispatchercpp","dispatchercpp::execute_act","eosio::contract","execut","execute_act","func","function","group","handler","handler,","handler.","i.e.","insid","member","namespac","obj","obj,","object","parameters:","proper","q","receiv","returns:","t","templat","true","unpack","void(q::*)(args...)"],"group__memoryapi.html":["(",")","*","0","0.","addit","alloc","api","area","array","bit","block","byte","c++","calloc","calloc(),","common","count","count,","dealloc","defin","each","element","elements,","eosio","free","function","functions.","given","group","initi","long,","malloc","malloc(),","memori","memory,","memory.","memoryapi","memoryapi::calloc","memoryapi::fre","memoryapi::malloc","memoryapi::realloc","modul","namespac","new","number","parameters:","pointer","previous","ptr","ptr,","realloc","realloc()","returns:","size","size_t","start","void","void*"],"group__memorycppapi.html":["(",")","*","0","0.","addit","alloc","area","array","bit","block","byte","calloc","calloc(),","common","count","count,","dealloc","defin","each","element","elements,","eosio","free","function","functions.","given","group","initi","long,","malloc","malloc(),","memori","memory,","memory.","memorycppapi","memorycppapi::calloc","memorycppapi::fre","memorycppapi::malloc","memorycppapi::realloc","namespac","new","number","parameters:","pointer","previous","ptr","ptr,","realloc","realloc()","returns:","size","size_t","start","void","void*"],"group__serialize.html":["(args1)(args2)(args3)","(basea)(baseb)(basec)","(field1)(field2)(field3)","also:","api","args.","base","bytes.","c++","class","class.","classes.","data","declar","defin","defined.","deseri","empti","eosio::reflector","eoslib_reflect","eoslib_reflect;","eoslib_reflect_deriv","eoslib_reflect_derived;","eoslib_reflect_derived_templ","eoslib_reflect_derived_template;","eoslib_reflect_empti","eoslib_reflect_empty;","eoslib_reflect_fwd","eoslib_reflect_fwd;","eoslib_reflect_templ","eoslib_reflect_template;","eoslib_seri","eoslib_serialize;","eoslib_serialize_deriv","eoslib_serialize_derived;","form","forward","function","group","inherit","member","modul","name","names.","object.","parameters:","perform","read","reflect","reflection.","see","sequenc","serial","special","stream","templat","template_arg","type","type.","write"],"group__datastream.html":["&","(",")","*",">","alway","arg","array","array.","bool","bool.","boost::container::flat_map","boost::container::flat_set","buffer","buffer,","byte","bytes.","char","char.","checksum160","checksum256","checksum256.","checksum512","class","class.","const","contain","cs","d","data","data.","datastream","datastream&","datastream::oper","datastream::operator>>","datastream::pack","datastream::pack_s","datastream::unpack","defin","deseri","destin","ds","ds,","eosio::datastream","eosio::datastream<","error","except","fix","flat","form","function","group","insid","k","key","key256","key256.","len","length","m","map","map.","n","name","non","object","oper","operator<<","operator>>","pack","pack_siz","parameters:","pointer","pointer.","post","primit","pubkey","public_key","public_key.","read","refer","returns:","s","serial","serialized,","size","size_t","std::array","std::map","std::set","std::string","std::tupl","stream","stream.","string","string.","t","t(&)","t.","templat","throw","tupl","tuple.","type","type.","unpack","v","valu","variabl","vector","vector.","write"],"group__serializecpp.html":["(args1)(args2)(args3)","(basea)(baseb)(basec)","(field1)(field2)(field3)","also:","api","args.","base","c++","class","class.","classes.","declar","defin","defined.","deseri","empti","eosio::reflector","eoslib_reflect","eoslib_reflect;","eoslib_reflect_deriv","eoslib_reflect_derived;","eoslib_reflect_derived_templ","eoslib_reflect_derived_template;","eoslib_reflect_empti","eoslib_reflect_empty;","eoslib_reflect_fwd","eoslib_reflect_fwd;","eoslib_reflect_templ","eoslib_reflect_template;","eoslib_seri","eoslib_serialize;","eoslib_serialize_deriv","eoslib_serialize_derived;","forward","group","inherit","member","name","names.","object.","parameters:","perform","reflect","reflection.","see","sequenc","serial","serializecpp","special","templat","template_arg","type","type."],"group__symbolapi.html":["!=","&","(","()","(are","(symbol_nam","(uint64_t)","(uint8_t",")","*","0","0,","=","==","a,","acc","account_nam","api","asset","b","bool","boolean","both","char","charact","check","class","const","constexpr","contract","convert","cpp","defin","different)","eosio::extended_symbol","eosio::extended_symbol::contract;","eosio::symbol_name;","eosio::symbol_typ","eosio::symbol_type::value;","equival","extend","extended_symbol","friend","function","group","invert","is_valid","is_valid_symbol","length","macro","manag","modul","name","name_length","oper","operator!=","operator.","operator<","operator==","owner","parameters:","precis","precision,","print","provid","represent","retriev","return","returns:","s","s;","same","same)","show_precis","static","store","str","str)","string","string_to_symbol","struct","subtract","sym","sym)","symbol","symbol'","symbol.","symbol_nam","symbol_name_length","symbol_typ","symbolapi","symbolapi::extended_symbol","symbolapi::is_valid","symbolapi::is_valid_symbol","symbolapi::nam","symbolapi::name_length","symbolapi::oper","symbolapi::operator!=","symbolapi::operator==","symbolapi::precis","symbolapi::print","symbolapi::string_to_symbol","symbolapi::symbol_name_length","symbolapi::symbol_typ","symbols.","true","type","typedef","uint32_t","uint64_t","uint8_t","us","valid","valid.","valu","variabl","void"],"group__symbolcppapi.html":["!=","&","(","()","(are","(symbol_nam","(uint64_t)","(uint8_t",")","*","0","0,","=","==","a,","acc","account_nam","api","asset","b","bool","boolean","both","char","charact","check","class","const","constexpr","contract","convert","cpp","defin","different)","eosio::extended_symbol","eosio::extended_symbol::contract;","eosio::symbol_name;","eosio::symbol_typ","eosio::symbol_type::value;","equival","extend","extended_symbol","friend","function","group","invert","is_valid","is_valid_symbol","length","macro","manag","name","name_length","oper","operator!=","operator.","operator<","operator==","owner","parameters:","precis","precision,","print","provid","represent","retriev","return","returns:","s","s;","same","same)","show_precis","static","store","str","str)","string","string_to_symbol","struct","subtract","sym","sym)","symbol","symbol'","symbol.","symbol_nam","symbol_name_length","symbol_typ","symbolcppapi","symbolcppapi::extended_symbol","symbolcppapi::is_valid","symbolcppapi::is_valid_symbol","symbolcppapi::nam","symbolcppapi::name_length","symbolcppapi::oper","symbolcppapi::operator!=","symbolcppapi::operator==","symbolcppapi::precis","symbolcppapi::print","symbolcppapi::string_to_symbol","symbolcppapi::symbol_name_length","symbolcppapi::symbol_typ","symbols.","true","type","typedef","uint32_t","uint64_t","uint8_t","us","valid","valid.","valu","variabl","void"],"group__systemapi.html":["\"one","(","()","(i.e.","(round",")","*","/","0","1","1,","1970","2,","==","abort","abort,","access","accounts.","action","action)","api","block","bypass","c","called.","chain","chang","changes.","char","cleanup","code","condit","configur","const","contract.","current","current_tim","defin","destructor","done","down","eosio_assert","eosio_assert(1","eosio_assert_cod","eosio_assert_messag","eosio_exit","eosio_exit(0);","eosio_exit(1);","eosio_exit(2);","eosio_exit(3);","equal","error","example:","execut","exit","explain","fail","failur","function","group","ignor","includ","int32_t","interact","intrinsics.","length","level","method","microsecond","modul","msg","msg,","msg_len","nearest","normal","now","null","one.\");","parameters:","pend","pointer","privileg","process","reason","return","returns:","second","second)","start","string","system","systemapi","systemapi::current_tim","systemapi::eosio_assert","systemapi::eosio_assert_cod","systemapi::eosio_assert_messag","systemapi::eosio_exit","systemapi::now","termin","test","test,","time","true","two.\");","uint32_t","uint64_t","unwind","us","void","wasm","without"],"group__privilegedapi.html":["&","(",")","access","accounts.","api","api.","blockchain","blolckchain","c","c++","chain","class","configur","const","defin","done","eosio::blockchain_paramet","function","get_blockchain_paramet","group","modul","name","new","param","paramet","parameters.","parameters:","privileg","privilegedapi","privilegedapi::get_blockchain_paramet","privilegedapi::set_blockchain_paramet","replac","retriev","set","set_blockchain_paramet","struct","type","void"],"group__privilegedcapi.html":["\"active\"","\"pending\"","(","(identifier)","(weight",")","*","/","0","1","absolut","account","account,","account.","account_nam","activ","activate_featur","api.","appropri","automatically.","avail","base","becom","block","blockchain","blolckchain","bool","buffer","buffer,","byte","c","change,","char","check","contain","cpu","cpu_weight","data","data,","data.","datalen","defin","f","fals","featur","feature.","fill","fraction","function","get_blockchain_parameters_pack","get_resource_limit","group","hold","int64\\_t","int64_t","irreversible,","irrreversible.","is_priv","is_privileg","limit","long","memori","name","net","net_weight","net_weight,","new","next","onc","order","otherwis","output","pack","param","paramet","parameters,","parameters.","parameters:","pointer","post","precondition:","privileg","privileged.","privilegedcapi","privilegedcapi::activate_featur","privilegedcapi::get_blockchain_parameters_pack","privilegedcapi::get_resource_limit","privilegedcapi::is_privileg","privilegedcapi::set_active_produc","privilegedcapi::set_blockchain_parameters_pack","privilegedcapi::set_privileg","privilegedcapi::set_proposed_produc","privilegedcapi::set_resource_limit","produc","produce_key","producer\\_data","producer\\_data\\_s","producer_data","producer_data,","producer_data_s","producers.","promot","proportion","propos","ram","ram_byt","ram_bytes,","rang","report","requir","resourc","retriev","return","returns:","round","schedul","serial","set","set_active_produc","set_blockchain_parameters_pack","set_privileg","set_proposed_produc","set_resource_limit","size","size.","start","statu","suffic","total_weight_of_all_accounts)","true","uint32_t","unsuccessful,","valid","version","void","whose"],"group__privilegedcppapi.html":["&","(",")","api.","blockchain","blolckchain","c++","class","const","defin","eosio::blockchain_paramet","function","get_blockchain_paramet","group","name","new","param","paramet","parameters.","parameters:","privileg","privilegedcppapi","privilegedcppapi::get_blockchain_paramet","privilegedcppapi::set_blockchain_paramet","replac","retriev","set","set_blockchain_paramet","struct","type","void"],"group__systemcapi.html":["\"one","(","()","(i.e.","(round",")","*","/","0","1","1,","1970","2,","==","abort","abort,","action","action)","api","block","bypass","called.","chang","changes.","char","cleanup","code","condit","const","contract.","current","current_tim","defin","destructor","down","eosio_assert","eosio_assert(1","eosio_assert_cod","eosio_assert_messag","eosio_exit","eosio_exit(0);","eosio_exit(1);","eosio_exit(2);","eosio_exit(3);","equal","error","example:","execut","exit","explain","fail","failur","function","group","ignor","includ","int32_t","interact","intrinsics.","length","level","method","microsecond","msg","msg,","msg_len","nearest","normal","now","null","one.\");","parameters:","pend","pointer","process","reason","return","returns:","second","second)","start","string","system","systemcapi","systemcapi::current_tim","systemcapi::eosio_assert","systemcapi::eosio_assert_cod","systemcapi::eosio_assert_messag","systemcapi::eosio_exit","systemcapi::now","termin","test","test,","time","true","two.\");","uint32_t","uint64_t","unwind","us","void","wasm","without"],"group__transactionapi.html":["(",")","0","1","action","action,","actions.","activ","api","api.","c","c++","class","context","defin","descript","detail","directli","eosio::onerror","eosio::transact","eosio::transaction_head","free","function","get_act","group","index","indic","inlin","method","modul","more...","name","note:","parameters:","request","retriev","returns:","safe","send","struct","transact","transaction.","transactionapi","transactionapi::get_act","transactions.","type","type,","uint32_t","us","wrapper"],"group__transactioncapi.html":["&","(","()",")",");","*","0","0xffffffffffffffff","1","=","access","account","account_nam","action","action,","activ","alreadi","amount","api","assert.","atom","block","buff","buff,","buffer","buffer,","byte","cancel","cancel/replac","cancel_def","cancel_deferred(","canceled,","canceled.","char","const","context","context_free_data","context_free_data[index]","context_free_data[index].size()","contract,","copi","copied,","current","defer","defin","entri","eosio_print(tm);","example:","execut","exists.","expir","expiration();","f","fail","failur","flight","found","free","function","get","get_act","get_context_free_data","group","id","index","index,","indic","inflight","int","number","output","pack","parameters:","pass","pay","payer","payer,","pointer","post","precondition:","prefix","provid","published.","ram","read,","read_transact","replace_exist","report","request","requir","reserv","retriev","return","returns:","send","send_def","sender","sender_id","sender_id,","serial","serialized_transact","serialized_transaction,","signed_transaction.context_free_data[index].","size","size,","size==0","size_t","tapo","tapos_block_num","tapos_block_num();","tapos_block_prefix","tapos_block_prefix();","tbn","tbp","time","tm","transact","transaction.","transaction_s","transactioncapi","transactioncapi::cancel_def","transactioncapi::expir","transactioncapi::get_act","transactioncapi::get_context_free_data","transactioncapi::read_transact","transactioncapi::send_def","transactioncapi::tapos_block_num","transactioncapi::tapos_block_prefix","transactioncapi::transaction_s","transactions.","type","type,","uint128_t","uint32_t","us","valid","void","write","written"],"group__transactioncppapi.html":["(",")","0","1","action","action,","activ","api","api.","c","c++","class","context","descript","detail","directli","eosio::onerror","eosio::transact","eosio::transaction_head","free","function","get_act","group","index","indic","method","more...","name","note:","parameters:","request","retriev","returns:","safe","struct","transact","transaction.","transactioncppapi","transactioncppapi::get_act","type","type,","uint32_t","us","wrapper"],"group__types.html":["/.","aliases.","base","boost::optional.","builtin","class","contract","contract.","defin","effici","eosio","fix","group","index","integ","key","length","lexicograph","modul","more","multi","name","option","otion","produc","provid","public","serial","signed_int","similar","size","sort","specifi","struct","table.","type","type.","typedef","types,","unsigned_int","variabl"],"group__contracttype.html":["base","class","contract","contract.","contracttyp","defin","eosio","eosio::contract","group","name","type"],"group__fixed__key.html":["!=","&","(",")","==",">","bool","c1","c1,","c2","c2,","c2.","class","compar","const","eosio::fixed_key","fals","first","fix","fixed_key","fixed_key::oper","fixed_key::operator!=","fixed_key::operator==","fixed_key::operator>","function","group","index","key","lexicograph","multi","name","object","oper","operator!=","operator<","operator==","operator>","otherwis","parameters:","return","returns:","second","size","sort","table.","true,","two","type","variabl"],"group__optionaltype.html":["&","(",")","anoth","between","bool","boost::optional.","both","check","class","compar","const","contain","defin","eosio::opt","equal","fals","first","function","group","inequ","inqqual","inqual","left","left,","name","object","operator!=","operator.","operator==","option","optionaltyp","optionaltype::operator!=","optionaltype::operator==","otion","parameters:","returns:","right","same","second","share","similar","t","templat","true","two","type","u","unequ","valu"],"group__producertype.html":["account_nam","action","action.","amount","author","base","base_per_transaction_net_usag","bill","block","block_signing_key","bool","cfa'","cfa's.","class","context_free_discount_cpu_usage_den","context_free_discount_cpu_usage_num","context_free_discount_net_usage_den","context_free_discount_net_usage_num","cover","cpu","deferred_trx_expiration_window","defin","denomin","depth","depth.","discount","eosio::blockchain_parameters::base_per_transaction_net_usage;","eosio::blockchain_parameters::context_free_discount_cpu_usage_den;","eosio::blockchain_parameters::context_free_discount_cpu_usage_num;","eosio::blockchain_parameters::context_free_discount_net_usage_den;","eosio::blockchain_parameters::context_free_discount_net_usage_num;","eosio::blockchain_parameters::deferred_trx_expiration_window;","eosio::blockchain_parameters::max_authority_depth;","eosio::blockchain_parameters::max_block_cpu_usage;","eosio::blockchain_parameters::max_block_net_usage;","eosio::blockchain_parameters::max_inline_action_depth;","eosio::blockchain_parameters::max_inline_action_size;","eosio::blockchain_parameters::max_transaction_cpu_usage;","eosio::blockchain_parameters::max_transaction_delay;","eosio::blockchain_parameters::max_transaction_lifetime;","eosio::blockchain_parameters::max_transaction_net_usage;","eosio::blockchain_parameters::min_transaction_cpu_usage;","eosio::blockchain_parameters::net_usage_leeway;","eosio::blockchain_parameters::target_block_cpu_usage_pct;","eosio::blockchain_parameters::target_block_net_usage_pct;","eosio::producer_key","eosio::producer_key::block_signing_key;","eosio::producer_key::producer_name;","friend","group","incident","incidentals.","inlin","key","lifetim","max_authority_depth","max_block_cpu_usag","max_block_net_usag","max_inline_action_depth","max_inline_action_s","max_transaction_cpu_usag","max_transaction_delay","max_transaction_lifetim","max_transaction_net_usag","maximum","min_transaction_cpu_usag","name","net","net_usage_leeway","numer","oper","operator<","produc","producer.","producer_nam","producertyp","producertype::oper","public_key","sign","size","struct","target_block_cpu_usage_pct","target_block_net_usage_pct","transact","transacton","transacton.","type","type.","uint16_t","uint32_t","uint64_t","us","usag","variabl"],"group__publickeytype.html":["&","(",")","a,","b","bool","byte","class","const","data","eosio::public_key","eosio::public_key::data;","eosio::public_key::type;","friend","group","k1","key","key,","key.","name","operator!=","operator==","public","public_key","publickeytyp","publickeytype::operator!=","publickeytype::operator==","r1","specifi","std::array","struct","type","type.","unsigned_int","variabl"],"group__varint.html":["class","defin","effici","group","integ","length","more","name","provid","serialization/.","signed_int","struct","type","unsigned_int","variabl","varint"],"group__eosiorpc.html":["describ","eosd","eosiorpc","group","http","interfac","over","rpc."],"group__fixedpoint.html":["32,64,128,256","appropri","arithmet","basic","bit","class","comparison","contract","contract.","decim","descript","detail","develop","eosio::fixed_point128","eosio::fixed_point32","eosio::fixed_point64","fix","fixed_point","fixedpoint","float","format","group","henc","indeterministic,","integ","more...","name","number","oper","pass","point","prevent","repres","required.","smart","struct","support","templat","type","us","variabl","version"],"classes.html":["(_multi_index_detail)","(eosio)","(std)",">","account_permiss","action","action_meta","asset","b","block_timestamp","blockchain_paramet","brows","c","checksum256","class","contract","currenc","currency::account","currency::cr","currency::currency_stat","currency::fee_schedul","currency::issu","currency::transf","d","datastream","datastream<","e","extend","extended_asset","extended_symbol","f","fixed_key","fixed_key::bool_pack","fixed_point128","fixed_point32","fixed_point64","index","indexed_bi","inline_dispatch","inline_dispatcher<","iostream","key256","l","less","less<","m","memory_manag","memory_manager::memori","memory_manager::memory::buffer_ptr","microsecond","multi_index","multi_index::const_iter","multi_index::index","multi_index::index::const_iter","multi_index::intc","multi_index::item","multi_index::item_ptr","n","name","o","onerror","option","p","permission_level","producer_key","producer_schedul","public_key","r","reflector","s","secondary_index_db_funct","secondary_key_trait","secondary_key_traits<","signatur","signed_int","singleton","singleton::row","size_t","store","symbol_typ","t","time_point","time_point_sec","transact","transaction_head","u","unsigned_int","void(t::*)(args...),"],"functions.html":["(eosio::_multi_index_detail::secondary_key_traits)","(eosio::action)","(eosio::action_meta)","(eosio::asset)","(eosio::asset,","(eosio::block_timestamp)","(eosio::block_timestamp,","(eosio::contract)","(eosio::currency)","(eosio::currency::account,","(eosio::datastream)","(eosio::datastream,","(eosio::extended_asset)","(eosio::extended_symbol)","(eosio::fixed_key)","(eosio::fixed_point128)","(eosio::fixed_point128,","(eosio::fixed_point32)","(eosio::fixed_point32,","(eosio::fixed_point64)","(eosio::inline_dispatcher)","(eosio::memory_manager)","(eosio::memory_manager,","(eosio::memory_manager::memory)","(eosio::memory_manager::memory::buffer_ptr)","(eosio::memory_manager::memory::buffer_ptr,","(eosio::microseconds)","(eosio::multi_index)","(eosio::multi_index,","(eosio::multi_index::const_iterator,","(eosio::multi_index::index)","(eosio::multi_index::index,","(eosio::multi_index::intc,","(eosio::multi_index::item)","(eosio::multi_index::item_ptr)","(eosio::name)","(eosio::onerror)","(eosio::optional)","(eosio::permission_level)","(eosio::singleton)","(eosio::symbol_type)","(eosio::time_point)","(eosio::time_point,","(eosio::time_point_sec)","(eosio::transaction)","(eosio::transaction_header)","(signed_int)","(std::less)","(unsigned_int)","::free","=",">",">::call",">::datastream",">::lowest",">::operator()",">::put",">::remain",">::seekp",">::skip",">::tellp",">::write","_","action","action::act","action::data_a","action::eoslib_seri","action::send_context_fre","action_meta::get_account","action_meta::get_nam","add_bal","adjust_to_mem_block","appli","asset","asset::asset","asset::is_amount_within_rang","asset::operator*=","asset::operator/=","asset::set_amount","available_primary_key","b","begin","block_timestamp","block_timestamp::block_timestamp","block_timestamp::next","block_timestamp::set_time_point","block_timestamp::to_time_point","bool","buffer_ptr","c","call","cbegin","cend","checksum256","class","cleanup_remain","const_iter","contract","contract::contract","contract::get_self","count","crbegin","create_curr","crend","currenc","currency::add_bal","currency::appli","currency::create_curr","currency::curr","currency::get_bal","currency::get_suppli","currency::inline_transf","currency::issue_curr","currency::on","currency::sub_bal","d","data_a","datastream","datastream::po","datastream::read","datastream<","document","e","each","emplac","end","eosio::currency::currency_stats,","eosio::currency::fee_schedule,","eosio::datastream)","eosio::datastream,","eosio::extended_asset,","eosio::extended_symbol,","eosio::fixed_point128,","eosio::fixed_point32,","eosio::fixed_point64)","eosio::fixed_point64,","eosio::memory_manager::memory)","eosio::microseconds,","eosio::multi_index)","eosio::multi_index,","eosio::multi_index::const_iterator,","eosio::multi_index::index)","eosio::multi_index::index,","eosio::multi_index::index::const_iterator)","eosio::multi_index::index::const_iterator,","eosio::name)","eosio::optional)","eosio::optional,","eosio::singleton)","eosio::singleton::row)","eosio::symbol_type)","eosio::time_point)","eosio::time_point,","eosio::time_point_sec)","eosio::time_point_sec,","eoslib_seri","eras","exist","expand_memori","extended_asset","extended_asset::extended_asset","extended_asset::get_extended_symbol","extended_symbol","extended_symbol::extended_symbol","extract_secondary_key","f","find","fixed_key","fixed_key::fixed_key","fixed_key::num_word","fixed_key::padded_byt","fixed_key::set_from_word_sequ","fixed_point128","fixed_point128::fixed_point128","fixed_point32","fixed_point32::fixed_point32","fixed_point64","fixed_point64::fixed_point64","fixed_point64::frac_part","fixed_point64::int_part","fixed_point64::operator/","frac_part","free","from_current_act","from_iso_str","function","g","get_account","get_bal","get_cod","get_extended_symbol","get_index","get_nam","get_or_cr","get_or_default","get_scop","get_self","get_suppli","h","here","index","init","inline_dispatcher<","inline_transf","int32_t","int_part","is_alloc","is_amount_within_rang","is_capacity_remain","is_in_heap","is_init","is_valid","issue_curr","item","item_ptr","iterator_to","key256","l","less<","link","list","load_object_by_primary_iter","lower_bound","lowest","m","malloc","malloc_from_fre","mark_alloc","mark_fre","maximum","member:","memori","memory_manag","memory_manager::adjust_to_mem_block","memory_manager::memory::buffer_ptr::buffer_ptr","memory_manager::memory::buffer_ptr::is_alloc","memory_manager::memory::buffer_ptr::mark_alloc","memory_manager::memory::buffer_ptr::mark_fre","memory_manager::memory::buffer_ptr::merge_contigu","memory_manager::memory::buffer_ptr::merge_contiguous_if_avail","memory_manager::memory::buffer_ptr::next_ptr","memory_manager::memory::buffer_ptr::s","memory_manager::memory::cleanup_remain","memory_manager::memory::expand_memori","memory_manager::memory::fre","memory_manager::memory::init","memory_manager::memory::is_capacity_remain","memory_manager::memory::is_in_heap","memory_manager::memory::is_init","memory_manager::memory::malloc","memory_manager::memory::malloc_from_fre","memory_manager::memory::memori","memory_manager::memory::realloc_in_plac","memory_manager::memory_manag","memory_manager::next_active_heap","memory_manager::realloc","memory_manager::void","merge_contigu","merge_contiguous_if_avail","microsecond","microseconds::count","microseconds::microsecond","microseconds::to_second","min","modifi","multi_index","multi_index::available_primary_key","multi_index::get_index","multi_index::index::begin","multi_index::index::cbegin","multi_index::index::cend","multi_index::index::const_iterator::const_iter","multi_index::index::const_iterator::oper","multi_index::index::crbegin","multi_index::index::crend","multi_index::index::end","multi_index::index::eras","multi_index::index::extract_secondary_key","multi_index::index::find","multi_index::index::get_cod","multi_index::index::get_scop","multi_index::index::index","multi_index::index::numb","multi_index::index::validate_index_nam","multi_index::item::item","multi_index::item_ptr::item_ptr","multi_index::iterator_to","multi_index::load_object_by_primary_iter","multi_index::lower_bound","multi_index::modifi","multi_index::multi_index","multi_index::rbegin","multi_index::rend","multi_index::require_find","multi_index::transform_indic","multi_index::upper_bound","multi_index::validate_table_nam","n","name","name::oper","name::to_str","name::trim_right_dot","name_length","next","next_active_heap","next_ptr","num_word","number","o","onerror::from_current_act","onerror::unpack_sent_trx","oper","operator!","operator!=","operator()","operator*","operator*=","operator+","operator++","operator+=","operator/","operator/=","operator=","operator==","operator>","operator>=","option","optional::emplac","optional::oper","optional::operator!","optional::operator*","optional::opt","optional::ptr","optional::ref","optional::reset","optional::valid","optional::~opt","p","padded_byt","permission_level","permission_level::permission_level","po","precis","primary_key","print","ptr","put","r","rbegin","read","realloc","realloc_in_plac","ref","remain","remov","rend","require_find","reset","s","sec_since_epoch","secondary_key_traits<","seekp","send","send_context_fre","set","set_amount","set_from_word_sequ","set_time_point","signed_int","signed_int)","signed_int,","signed_int::oper","signed_int::operator++","signed_int::signed_int","singleton","singleton::exist","singleton::get","singleton::get_or_cr","singleton::get_or_default","singleton::remov","singleton::row::primary_key","singleton::set","singleton::singleton","size","size_t","skip","std::string","sub_bal","symbol_nam","symbol_typ","symbol_type::is_valid","symbol_type::nam","symbol_type::name_length","symbol_type::oper","symbol_type::precis","symbol_type::print","symbol_type::symbol_typ","t","tellp","time_point","time_point::from_iso_str","time_point::oper","time_point::operator!=","time_point::operator<","time_point::operator<=","time_point::operator==","time_point::operator>","time_point::operator>=","time_point::time_point","time_point::time_since_epoch","time_point_sec","time_point_sec::maximum","time_point_sec::min","time_point_sec::oper","time_point_sec::operator+","time_point_sec::operator+=","time_point_sec::sec_since_epoch","time_point_sec::time_point_sec","time_since_epoch","to_second","to_str","to_time_point","transact","transaction::send","transaction::transact","transaction_head","transaction_header::transaction_head","transform_indic","trim_right_dot","u","uint64_t","unpack_sent_trx","unsigned_int","unsigned_int)","unsigned_int::oper","unsigned_int::operator=","unsigned_int::unsigned_int","upper_bound","v","valid","validate_index_nam","validate_table_nam","void","void(t::*)(args...),","w","write","~","~option"],"variables.html":["(account_permission,","(eosio::action)","(eosio::action,","(eosio::asset)","(eosio::block_timestamp)","(eosio::blockchain_parameters)","(eosio::contract)","(eosio::currency)","(eosio::currency::account)","(eosio::currency::create)","(eosio::currency::create,","(eosio::currency::currency_stats)","(eosio::currency::fee_schedule)","(eosio::currency::issue,","(eosio::currency::transfer)","(eosio::datastream)","(eosio::datastream,","(eosio::extended_asset,","(eosio::fixed_key)","(eosio::fixed_point128,","(eosio::memory_manager)","(eosio::memory_manager::memory)","(eosio::memory_manager::memory::buffer_ptr)","(eosio::microseconds)","(eosio::multi_index)","(eosio::multi_index::const_iterator,","(eosio::multi_index::index::const_iterator)","(eosio::multi_index::item)","(eosio::multi_index::item_ptr)","(eosio::name,","(eosio::onerror)","(eosio::optional)","(eosio::permission_level)","(eosio::producer_key)","(eosio::producer_schedule)","(eosio::public_key)","(eosio::singleton)","(eosio::time_point)","(eosio::time_point_sec)","(eosio::transaction)","(eosio::transaction_header)","_","__idx","__iter","__primary_itr","_active_free_heap","_active_heap","_alloc_memory_mask","_available_heap","_code","_contract","_count","_data","_end","_heap","_heap_end","_heap_siz","_heaps_actual_s","_heaps_siz","_idx","_indic","_initial_heap","_initial_heap_s","_item","_items_vector","_mem_block","_multidx","_next_primary_key","_offset","_po","_primary_itr","_primary_key","_ptr","_rem_mem_block_mask","_scope","_self","_size","_size_mark","_start","_t","_valid","_valu","account","action","action::account","action::author","action::nam","actor","amount","arr","arr_itr","asset::amount","asset::max_amount","asset::symbol","author","b","balanc","base_per_transaction_net_usag","block_interval_m","block_signing_key","block_timestamp::block_interval_m","block_timestamp::block_timestamp_epoch","block_timestamp::slot","block_timestamp_epoch","blockchain_parameters::base_per_transaction_net_usag","blockchain_parameters::context_free_discount_cpu_usage_den","blockchain_parameters::context_free_discount_cpu_usage_num","blockchain_parameters::context_free_discount_net_usage_den","blockchain_parameters::context_free_discount_net_usage_num","blockchain_parameters::deferred_trx_expiration_window","blockchain_parameters::max_authority_depth","blockchain_parameters::max_block_cpu_usag","blockchain_parameters::max_block_net_usag","blockchain_parameters::max_inline_action_depth","blockchain_parameters::max_inline_action_s","blockchain_parameters::max_transaction_cpu_usag","blockchain_parameters::max_transaction_delay","blockchain_parameters::max_transaction_lifetim","blockchain_parameters::max_transaction_net_usag","blockchain_parameters::min_transaction_cpu_usag","blockchain_parameters::net_usage_leeway","blockchain_parameters::target_block_cpu_usage_pct","blockchain_parameters::target_block_net_usage_pct","c","can_freez","can_recal","can_whitelist","class","context_free_act","context_free_discount_cpu_usage_den","context_free_discount_cpu_usage_num","context_free_discount_net_usage_den","context_free_discount_net_usage_num","contract","contract::_self","currency::_contract","currency::account::bal","currency::account::frozen","currency::account::whitelist","currency::create::issuer_can_freez","currency::create::issuer_can_recal","currency::create::issuer_can_whitelist","currency::create::maximum_suppli","currency::currency_stats::can_freez","currency::currency_stats::can_recal","currency::currency_stats::can_whitelist","currency::currency_stats::enforce_whitelist","currency::currency_stats::is_frozen","currency::currency_stats::issu","currency::currency_stats::max_suppli","currency::currency_stats::suppli","currency::fee_schedule::fee_per_length","currency::transfer::from","currency::transfer::memo","currency::transfer::quant","currency::transfer::to","d","data","datastream::_end","datastream::_po","datastream::_start","deferred_trx_expiration_window","delay_sec","document","e","each","elaps","enforce_whitelist","eosio::action)","eosio::currency::currency_stats)","eosio::currency::transfer)","eosio::extended_symbol)","eosio::fixed_point32,","eosio::fixed_point64)","eosio::memory_manager::memory::buffer_ptr)","eosio::multi_index::index)","eosio::multi_index::index::const_iterator,","eosio::multi_index::item_ptr)","eosio::permission_level)","eosio::public_key,","eosio::singleton::row,","eosio::symbol_type,","expir","extended_symbol::contract","f","fee_per_length","fixed_key::_data","fixed_key::arr","fixed_key::arr_itr","fixed_point64::v","frozen","here","index","indices_typ","is_frozen","issuer","issuer_can_freez","issuer_can_recal","issuer_can_whitelist","link","list","m","max_amount","max_authority_depth","max_block_cpu_usag","max_block_net_usag","max_cpu_usage_m","max_inline_action_depth","max_inline_action_s","max_stack_buffer_s","max_suppli","max_transaction_cpu_usag","max_transaction_delay","max_transaction_lifetim","max_transaction_net_usag","maximum_suppli","member:","memo","memory_manager::_active_free_heap","memory_manager::_active_heap","memory_manager::_alloc_memory_mask","memory_manager::_available_heap","memory_manager::_heaps_actual_s","memory_manager::_heaps_s","memory_manager::_initial_heap","memory_manager::_initial_heap_s","memory_manager::_mem_block","memory_manager::_rem_mem_block_mask","memory_manager::_size_mark","memory_manager::memory::_heap","memory_manager::memory::_heap_s","memory_manager::memory::_offset","memory_manager::memory::buffer_ptr::_heap_end","memory_manager::memory::buffer_ptr::_ptr","memory_manager::memory::buffer_ptr::_s","microseconds::_count","min_transaction_cpu_usag","multi_index::_cod","multi_index::_indic","multi_index::_items_vector","multi_index::_next_primary_key","multi_index::_scop","multi_index::index::_multidx","multi_index::index::const_iterator::_idx","multi_index::indices_typ","multi_index::item::__idx","multi_index::item::__it","multi_index::item::__primary_itr","multi_index::item_ptr::_item","multi_index::item_ptr::_primary_itr","multi_index::item_ptr::_primary_key","multi_index::max_stack_buffer_s","n","name","net_usage_leeway","net_usage_word","onerror::sender_id","onerror::sent_trx","optional::_valid","optional::_valu","p","permiss","permission_level::actor","permission_level::permiss","pk_valu","produc","producer_key::block_signing_key","producer_key::producer_nam","producer_nam","producer_schedule::produc","producer_schedule::vers","public_key,","public_key::typ","q","quantiti","r","ref_block_num","ref_block_prefix","s","sender_id","sent_trx","signature)","signature::data","signed_int,","singleton::_t","singleton::pk_valu","slot","suppli","symbol","t","target_block_cpu_usage_pct","target_block_net_usage_pct","time_point::elaps","time_point_sec::utc_second","transaction::act","transaction::context_free_act","transaction::transaction_extens","transaction_extens","transaction_header::delay_sec","transaction_header::expir","transaction_header::max_cpu_usage_m","transaction_header::net_usage_word","transaction_header::ref_block_num","transaction_header::ref_block_prefix","type","u","unsigned_int)","unsigned_int::valu","utc_second","v","val","valu","variabl","version","w","whitelist"],"enumerations.html":["(eosio::indexed_by,","(eosio::multi_index)","(eosio::multi_index::intc)","c","class","constant","document","e","each","enumer","eosio::multi_index::index)","here","index","link","list","member:","multi_index::index::const","multi_index::intc::","multi_index::next_primary_key_tag","n","next_primary_key_tag"],"annotated.html":[">","_datastream_detail","_multi_index_detail","account","account_permiss","action","action_meta","asset","block_timestamp","blockchain_paramet","bool_pack","brief","buffer_ptr","checksum256","class","classes,","const_iter","contract","creat","currenc","currency_stat","datastream","datastream<","descriptions:","eosio","extend","extended_asset","extended_symbol","fee_schedul","fixed_key","fixed_point128","fixed_point32","fixed_point64","here","index","indexed_bi","inline_dispatch","inline_dispatcher<","intc","interfac","iostream","issu","item","item_ptr","key256","less","less<","list","memori","memory_manag","microsecond","multi_index","name","namespac","onerror","option","permission_level","producer_key","producer_schedul","public_key","reflector","row","secondary_index_db_funct","secondary_key_trait","secondary_key_traits<","signatur","signed_int","singleton","size_t","std","store","struct","structs,","symbol_typ","time_point","time_point_sec","transact","transaction_head","transfer","union","unsigned_int","void(t::*)(args...),"],"struct_extended.html":[">","asset","asset.","class","descript","detail","document","extend","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/asset.hpp","inform","list","more...","owner","store","struct"],"struct_stores.html":[">","class","descript","detail","document","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/symbol.hpp","inform","list","more...","store","struct","symbol","symbol."],"structaccount__permission.html":[">","account","account_nam","account_permiss","account_permission::account;","account_permission::permission;","attribut","class","document","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/types.h","list","name","permiss","permission_nam","public","struct","type","variabl"],"namespaceeosio.html":["!=","\"hello","%\",","&","&&","&&...","(","()","(1/18)","(1/2)","(1/21)","(1/3)","(10/18)","(10/21)","(11/18)","(11/21)","(12/18)","(12/21)","(13/18)","(13/21)","(14/18)","(14/21)","(15/18)","(15/21)","(16/18)","(16/21)","(17/18)","(17/21)","(18/18)","(18/21)","(19/21)","(2/18)","(2/2)","(2/21)","(2/3)","(20/21)","(21/21)","(3/18)","(3/21)","(3/3)","(4/18)","(4/21)","(5/18)","(5/21)","(6/18)","(6/21)","(7/18)","(7/21)","(8/18)","(8/21)","(87654323456);","(9/18)","(9/21)","(a)(b)(c)","(account_nam","(arg","(bool","(cannot","(char","(const","(datastream","(doubl","(empti","(eosio::blockchain_paramet","(fixed_key","(float","(i.e.","(int","(int128_t","(int32_t","(int64_t","(iostream","(it","(long","(name","(std::string","(symbol_nam","(t","(uint128_t","(uint32_t","(uint64_t","(uint64_t)","(uint8_t","(unsign",")","*","*s",",","/","//","//1","//4","//8","0","1","10);","128","1e+18;","2323)","32","64","=","==",">",">())",">(),","a,","a;","accepts,","account","account,","account_nam","accounts...","act","act)","act,","action","action,","action.","action.cod","action_meta","action_nam","actiontyp","activ","ad","add","alway","anoth","api","apples:","arg","args)","args...","argument","array","array.","asset","assignhelp","auth,","author","b;","base32","behav","between","binari","bit","block_timestamp","block_timestamp_typ","blockchain","blockchain_paramet","blolckchain","bodi","bool","bool.","boost::container::flat_map","boost::container::flat_set","both","buffer","buffer,","byte","bytes)","c","c)","c++","c1","c1,","c2","c2)","c2,","c2.","c;","call","cast","char","char.","char_to_symbol","charact","check","check_permission_author","check_transaction_author","checksum160","checksum256","checksum256.","checksum512","class","class.","code,","compar","consid","const","constexpr","contain","context","contract","contract::on(","convert","correpond","cout","cs","cs)","currenc","current","d","d)","data","data.","datastream","datastream&","datastream<","day","delay","delay,","deriv","deseri","destin","dispatch","dispatch_inlin","divid","document","doesn't","doubl","double)","ds","ds,","dummy_act","dummy_action,","dynam","enabl","encod","eosio","eosio::assignhelp","eosio::block_timestamp_type;","eosio::blockchain_paramet","eosio::bytes;","eosio::char_to_symbol","eosio::check_permission_author","eosio::check_transaction_author","eosio::contract","eosio::cout;","eosio::day","eosio::dispatch","eosio::dispatch_inlin","eosio::execute_act","eosio::extensions_type;","eosio::fixed_divid","eosio::get_act","eosio::get_blockchain_paramet","eosio::hour","eosio::is_valid_symbol","eosio::key256;","eosio::memory_heap;","eosio::millisecond","eosio::minut","eosio::name_suffix","eosio::oper","eosio::operator!=","eosio::operator==","eosio::operator>","eosio::operator>>","eosio::pack","eosio::pack_s","eosio::print","eosio::print_f","eosio::require_auth","eosio::require_recipi","eosio::second","eosio::set_blockchain_paramet","eosio::string_to_nam","eosio::string_to_symbol","eosio::symbol_name;","eosio::symbol_name_length","eosio::unpack","eosio::unpack_action_data","eoslib_serialize(","equal","error","example:","exce","except","execut","execute_act","extended_asset","extended_symbol","extensions_typ","fail.","fals","file:","first","fix","fixed_divid","fixed_divide(131313,","fixed_key","fixed_point128","fixed_point128.","fixed_point32","fixed_point64","fixed_point64.","flat","float","float)","follow","format","free","func","func)","function","gener","get_act","get_blockchain_paramet","h","h)","handler","handler,","handler.","have","hello","helper","hexidecim","hour","i.e.","implement","in/eosio.cdt/libraries/eosiolib/action.hpp","incom","index","index)","indexed_bi","indic","inequ","inline_dispatch","inline_dispatcher<","input","inqqual","inqual","insid","int","int128_t","int32_t","int64_max)","int64_t","integ","integer.","interpret","iostream","iostream&","iostream.","is_valid_symbol","k","key","key256","key256.","keys,","left","left,","len","len)","length","level","level)","lexicograph","lhs,","list","long","m","m)","map","map.","member","memory_heap","memory_manag","method","microsecond","millisecond","minut","msg","multi_index","multipl","n","n(abcde);","n(account2),","n(account3));","n)","name","name)","name,","name_suffix","namespac","new","non","note:","notifi","null","num","num)","number","obj","obj,","object","object.","onerror","oper","operator!=","operator.","operator<","operator<<","operator==","operator>","operator>>","option","otherwis","ouput:","out","out,","output","overload","owner","pack","pack_siz","param","paramet","parameters.","parameters:","params)","part","permiss","permission,","permission_level","permission_nam","permissions.","perms,","point","pointer","pointer.","post","precis","precision,","precondition:","primit","print","print(","print()","print_f","print_f(\"numb","printf/","producer_key","producer_schedul","provid","provided_delay_u","provided_key","provided_keys,","provided_permiss","provided_permissions,","ptr","ptr)","pubkey","pubkey)","public","public_key","public_key.","q","q,","qr","qr)","quadrupl","read","receiv","refer","reflector","remaining_account","remaining_accounts)","replac","represent","representation,","request","requir","require_auth","require_recipi","require_recipient(n(account1),","rest","rest)","result","retriev","return","returns:","rh","rhs)","rhs_val,","right","right)","s","s)","s,","same","second","serial","serialized,","set","set.","set_blockchain_paramet","share","sign","similar","singl","singleton","size","size_t","specifi","specifier)","static","static_cast(std::numeric_limits::max())","static_cast(std::numeric_limits::max()))","std::array","std::arrayn","std::map","std::out","std::set","std::set()","std::set(),","std::setpermission_level","std::setpublic_key","std::string","std::tupl","std::vector","store","str","str)","stream","stream.","strem","string","string.","string_as_unsigned_64_bit","string_as_unsigned_64_bit);","string_to_nam","string_to_name()","string_to_symbol","struct","sym","sym)","symbol","symbol_nam","symbol_name_length","symbol_typ","t","t(&)","t)","t.","templat","termin","throw","time_point","time_point_sec","times.","transact","transaction.","transaction_head","true","true,","trx","trx,","tupl","tuple.","two","type","type,","type.","typedef","u","u)","uint128_t","uint32_t","uint64_t","uint64_t.","uint8_t","unequ","unit32","unit64","unpack","unpack_action_data","unpack_action_data();","unsign","unsigned_128_bit_int","unsigned_128_bit_int,","unsigned_64_bit_int","unsigned_64_bit_int,","us","v","v)","val","val)","val,","valid","valid.","valu","value)","values.","variabl","vector","vector.","vectorpermission_level","void","void(q::*)(args...)","void(t::*)(args...),","well.","whether","wildcard)","work","world!\";","world!100000000000000000087654323456abcd","wrapper","write","{","};"],"namespaceeosio_1_1__datastream__detail.html":["()","::",">","_datastream_detail","bool","check","class","constexpr","document","eosio","eosio::_datastream_detail","eosio::_datastream_detail::is_point","eosio::_datastream_detail::is_primit","fals","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/datastream.hpp","is_point","is_primit","list","name","namespac","otherwis","parameters:","pointer","pointer.","primit","returns:","t","templat","true","type","type."],"namespaceeosio_1_1__multi__index__detail.html":["::",">","_multi_index_detail","class","document","eosio","eosio::_multi_index_detail","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","key256","list","name","namespac","secondary_index_db_funct","secondary_key_trait","secondary_key_traits<","struct","type"],"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":["::",">","_multi_index_detail","class","document","eosio","eosio::_multi_index_detail::secondary_index_db_funct","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","list","secondary_index_db_funct","struct"],"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":["::",">","_multi_index_detail","class","document","eosio","eosio::_multi_index_detail::secondary_key_trait","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","list","secondary_key_trait","struct"],"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":["()","::",">","_multi_index_detail","class","constexpr","document","eosio","eosio::_multi_index_detail::secondary_key_trait","eosio::_multi_index_detail::secondary_key_traits::lowest","eosio::_multi_index_detail::secondary_key_traits<","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","key256","list","lowest","name","public","secondary_key_trait","secondary_key_traits<","static","struct","type"],"structeosio_1_1action.html":["&","&&","(","()","(1/6)","(2/6)","(3/6)","(4/6)","(5/6)","(6/6)","(account)(name)(authorization)(data)","(account)(name)(authorization)(data))","(action","(action,","(const","(vectorpermission_level",")",",","::","=",">","a,","account","account_nam","accountnam","action","action.","action_nam","along","attribut","auth","auth,","author","authorizationlist","auths,","byte","class","const","construct","constructor","contain","context","data","data.","data_a","datapayload","default","descript","detail","document","eosio","eosio::act","eosio::action::account;","eosio::action::act","eosio::action::authorization;","eosio::action::data;","eosio::action::data_a","eosio::action::eoslib_seri","eosio::action::name;","eosio::action::send_context_fre","eoslib_seri","expect","file:","follow","for.","free","function","gener","given","in/eosio.cdt/libraries/eosiolib/action.hpp","inlin","intend","levels.","list","meta","more...","n","n,","name","name,","namenam","new","object","object.","pack","pack(...)","parameters:","payload","permiss","permission,","permission_level","permissions,","precondition:","public","receiver)","receiver,","represent","retriev","returns:","send","send_context_fre","serial","serializ","struct","struct,","struct.","t","t.","templat","type","unpack","valu","value)","variabl","vector","vectorpermission_level","via","void"],"structeosio_1_1action__meta.html":["()","::",">","account","action","action.","action_meta","advantag","base","class","defin","deriv","descript","detail","dispatch","document","eosio","eosio::action_meta","eosio::action_meta::get_account","eosio::action_meta::get_nam","file:","follow","for.","from.","function","gener","get_account","get_nam","in/eosio.cdt/libraries/eosiolib/action.hpp","intend","list","more...","name","new","parameters:","public","returns:","static","struct","take","templat","type","uint64_t"],"structeosio_1_1asset.html":["&","(","()","(1/2)","(2/2)","(const","(int64_t",")","0,","1","2^62","::","=",">","a)","a,","act","ad","addit","amount","amount.","amountth","anoth","asset","asset&","asset'","asset.","assign","attribut","b","b,","bool","both","cap","check","class","classes:","compar","const","constexpr","construct","core_symbol","core_symbol)","default","divid","dividend","divis","divisor","document","doesn't","eosio","eosio::asset","eosio::asset::amount;","eosio::asset::asset","eosio::asset::is_amount_within_rang","eosio::asset::is_valid","eosio::asset::max_amount;","eosio::asset::oper","eosio::asset::operator!=","eosio::asset::operator*","eosio::asset::operator*=","eosio::asset::operator+","eosio::asset::operator+=","eosio::asset::operator/","eosio::asset::operator/=","eosio::asset::operator==","eosio::asset::operator>","eosio::asset::operator>=","eosio::asset::print","eosio::asset::set_amount","eosio::asset::symbol;","eosio::extended_asset","equal","exce","explicit","fals","file:","first","follow","friend","function","gener","given","greater","in/eosio.cdt/libraries/eosiolib/asset.hpp","inequ","inherit","int64_t","is_amount_within_rang","is_valid","it'","itself.","less","list","max","max_amount","max_amountmaximum","maximum","minu","multipl","multipli","name","neg","new","number","number.","object.","oper","operator!=","operator!=inequ","operator*","operator*=","operator*multipl","operator+","operator+=","operator+addit","operator,","operator.","operator/","operator/=","operator/divis","operator<","operator<=","operator==","operator==equ","operator>","operator>=","operator>=great","operator>great","operatorless","otherwis","parameters:","possibl","post","preceed","preceeding.","precondition:","print","proceed","proceeding.","public","refer","result","returns:","s","same","second","set","set_amount","static","struct","subtract","symbol","symbol,","symbol_typ","symbolth","true","type","unari","us","valid","valid.","valu","variabl","void"],"classeosio_1_1block__timestamp.html":["&","(","()","(1/3)","(2/3)","(3/3)","(const","(uint32_t",")","0","0)","::","=",">","attribut","block","block_interval_m","block_timestamp","block_timestamp_epoch","bool","class","comput","const","constexpr","descript","detail","document","eosio","eosio::block_timestamp","eosio::block_timestamp::block_interval_ms;","eosio::block_timestamp::block_timestamp","eosio::block_timestamp::block_timestamp_epoch;","eosio::block_timestamp::maximum","eosio::block_timestamp::min","eosio::block_timestamp::next","eosio::block_timestamp::oper","eosio::block_timestamp::operator!=","eosio::block_timestamp::operator=","eosio::block_timestamp::operator==","eosio::block_timestamp::operator>","eosio::block_timestamp::operator>=","eosio::block_timestamp::slot;","eosio::block_timestamp::to_time_point","epoch","explicit","file:","follow","function","gener","header","in/eosio.cdt/libraries/eosiolib/time.hpp","int32_t","int64_t","interv","list","maximum","millisecond","min","name","next","number","oper","operator!=","operator<","operator<=","operator=","operator==","operator>","operator>=","parameteris","public","repres","s","slot","slots.","static","t","t)","take","time","time_point","time_point_sec","to_time_point","type","uint32_t","us","variabl","void"],"structeosio_1_1blockchain__parameters.html":["::",">","action","action.","amount","attribut","author","base","base_per_transaction_net_usag","base_per_transaction_net_usageth","bill","blockchain","blockchain_paramet","cfa'","cfa's.","chang","class","configur","consensu","consensus.","context_free_discount_cpu_usage_den","context_free_discount_cpu_usage_denth","context_free_discount_cpu_usage_num","context_free_discount_cpu_usage_numth","context_free_discount_net_usage_den","context_free_discount_net_usage_num","cover","cpu","deferred_trx_expiration_window","denomin","depth","depth.","descript","detail","discount","document","eosio","eosio::blockchain_paramet","eosio::blockchain_parameters::base_per_transaction_net_usage;","eosio::blockchain_parameters::context_free_discount_cpu_usage_den;","eosio::blockchain_parameters::context_free_discount_cpu_usage_num;","eosio::blockchain_parameters::context_free_discount_net_usage_den;","eosio::blockchain_parameters::context_free_discount_net_usage_num;","eosio::blockchain_parameters::deferred_trx_expiration_window;","eosio::blockchain_parameters::max_authority_depth;","eosio::blockchain_parameters::max_block_cpu_usage;","eosio::blockchain_parameters::max_block_net_usage;","eosio::blockchain_parameters::max_inline_action_depth;","eosio::blockchain_parameters::max_inline_action_size;","eosio::blockchain_parameters::max_transaction_cpu_usage;","eosio::blockchain_parameters::max_transaction_delay;","eosio::blockchain_parameters::max_transaction_lifetime;","eosio::blockchain_parameters::max_transaction_net_usage;","eosio::blockchain_parameters::min_transaction_cpu_usage;","eosio::blockchain_parameters::net_usage_leeway;","eosio::blockchain_parameters::target_block_cpu_usage_pct;","eosio::blockchain_parameters::target_block_net_usage_pct;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/privileged.hpp","incident","incidentals.","inlin","lifetim","list","max_authority_depth","max_authority_depthmaximum","max_block_cpu_usag","max_block_net_usag","max_inline_action_depth","max_inline_action_depthmaximum","max_inline_action_s","max_inline_action_sizemaximum","max_transaction_cpu_usag","max_transaction_delay","max_transaction_lifetim","max_transaction_lifetimemaximum","max_transaction_net_usag","maximum","min_transaction_cpu_usag","more...","name","net","net_usage_leeway","numer","public","size","struct","target_block_cpu_usage_pct","target_block_net_usage_pct","transact","transacton","transacton.","tunabl","type","uint16_t","uint32_t","uint64_t","usag","variabl","via"],"classeosio_1_1contract.html":["(","()","(account_nam",")","::",">","_self","_selfth","account_nam","attribut","base","class","class,","const","construct","contract","contract.","deriv","descript","detail","document","eosio","eosio::contract","eosio::contract::_self;","eosio::contract::contract","eosio::contract::get_self","eosio_abi","file:","follow","function","gener","get_self","given","in/eosio.cdt/libraries/eosiolib/contract.hpp","list","macro.","make","more...","n","n)","name","name.","new","object.","parameters:","protect","public","returns:","type","us","variabl"],"classeosio_1_1currency.html":["&","(","(1/2)","(1/3)","(2/2)","(2/3)","(3/3)","(account_nam","(const","(symbol_nam",")","3.0","::","=",">","account","account_nam","act","act)","action_nam","amount,","appli","asset","block","bool","build","c","c)","class","const","contract","contract)","contract,","creat","create_curr","creation,","currenc","currency_stat","dawn","deprec","descript","detail","differ","document","enabl","eosio","eosio.token","eosio::curr","eosio::currency::accounts;","eosio::currency::appli","eosio::currency::create_curr","eosio::currency::curr","eosio::currency::get_bal","eosio::currency::get_suppli","eosio::currency::inline_transf","eosio::currency::issue_curr","eosio::currency::on","eosio::currency::stats;","eosio::multi_index","eosio::multi_indexn(accounts),","eosio::multi_indexn(stat),","extended_asset","factor","favor","fee_schedul","file:","follow","from,","function","gener","get_bal","get_suppli","i)","in/eosio.cdt/libraries/eosiolib/currency.hpp","inline_transf","issu","issuance,","issue_curr","list","mani","memo","n(active)","n(active))","name","out","owner,","perm","permission_nam","public","stat","static","string","string(),","struct","symbol","symbol)","symbol_nam","t","t)","to,","tokens.","transfer","type","typedef","us","void"],"structeosio_1_1currency_1_1account.html":["()","::",">","account","asset","attribut","balanc","bool","class","const","currenc","document","eosio","eosio::currency::account","eosio::currency::account::balance;","eosio::currency::account::frozen;","eosio::currency::account::primary_key","eosio::currency::account::whitelist;","file:","follow","frozen","function","gener","in/eosio.cdt/libraries/eosiolib/currency.hpp","list","name","primary_key","public","struct","type","uint64_t","variabl","whitelist"],"structeosio_1_1currency_1_1create.html":["::",">","account_nam","asset","attribut","class","creat","currenc","document","eosio","eosio::currency::cr","eosio::currency::create::issuer;","eosio::currency::create::issuer_can_freeze;","eosio::currency::create::issuer_can_recall;","eosio::currency::create::issuer_can_whitelist;","eosio::currency::create::maximum_supply;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/currency.hpp","issuer","issuer_can_freez","issuer_can_recal","issuer_can_whitelist","list","maximum_suppli","name","public","struct","type","uint8_t","variabl"],"structeosio_1_1currency_1_1currency__stats.html":["()","::",">","account_nam","asset","attribut","bool","can_freez","can_recal","can_whitelist","class","const","currenc","currency_stat","document","enforce_whitelist","eosio","eosio::currency::currency_stat","eosio::currency::currency_stats::can_freeze;","eosio::currency::currency_stats::can_recall;","eosio::currency::currency_stats::can_whitelist;","eosio::currency::currency_stats::enforce_whitelist;","eosio::currency::currency_stats::is_frozen;","eosio::currency::currency_stats::issuer;","eosio::currency::currency_stats::max_supply;","eosio::currency::currency_stats::primary_key","eosio::currency::currency_stats::supply;","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/currency.hpp","is_frozen","issuer","list","max_suppli","name","primary_key","public","struct","suppli","type","uint64_t","variabl"],"structeosio_1_1currency_1_1fee__schedule.html":["()","7","::",">","array","arrayextended_asset,","attribut","class","const","currenc","document","eosio","eosio::currency::fee_schedul","eosio::currency::fee_schedule::fee_per_length;","eosio::currency::fee_schedule::primary_key","fee_per_length","fee_schedul","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/currency.hpp","list","name","primary_key","public","struct","type","uint64_t","variabl"],"structeosio_1_1currency_1_1issue.html":["::",">","account_nam","asset","attribut","class","currenc","document","eosio","eosio::currency::issu","eosio::currency::issue::memo;","eosio::currency::issue::quantity;","eosio::currency::issue::to;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/currency.hpp","issu","list","memo","name","public","quantiti","string","struct","type","variabl"],"structeosio_1_1currency_1_1transfer.html":["::",">","account_nam","asset","attribut","class","currenc","document","eosio","eosio::currency::transf","eosio::currency::transfer::from;","eosio::currency::transfer::memo;","eosio::currency::transfer::quantity;","eosio::currency::transfer::to;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/currency.hpp","list","memo","name","public","quantiti","string","struct","transfer","type","variabl"],"classeosio_1_1datastream.html":["&","(","()","(1/2)","(2/2)","(char","(const","(size_t","(t","(unsign",")","*","::",">","bool","buffer","buffer.","byte","bytes.","c","c)","char","class","const","construct","current","d","d,","data","datastream","descript","destin","detail","document","eosio","eosio::datastream","eosio::datastream::datastream","eosio::datastream::get","eosio::datastream::po","eosio::datastream::put","eosio::datastream::read","eosio::datastream::remain","eosio::datastream::seekp","eosio::datastream::skip","eosio::datastream::tellp","eosio::datastream::valid","eosio::datastream::writ","fals","file:","follow","form","function","gener","get","given","in/eosio.cdt/libraries/eosiolib/datastream.hpp","list","more...","name","new","number","object","object.","offset","origin","p","p)","parameters:","po","pointer","posit","public","put","rang","rawng","read","read/skip","read/skipped.","refer","rel","remain","retriev","return","returns:","s","s)","seekp","set","size","size_t","skip","sourc","specif","specifi","start","start,","stream","stream.","t","tellp","templat","true","type","unsign","valid","void","within","write"],"classeosio_1_1datastream_3_01size__t_01_4.html":["(","()","(char)","(const","(size_t",")",").","*","*,",",",",size_t","0","0)","0.","::","=",">","alway","amount","behav","bool","char","char*","check","class","const","construct","datastream","datastream<","determin","document","eosio","eosio::datastream","eosio::datastream::datastream","eosio::datastream::put","eosio::datastream::remain","eosio::datastream::seekp","eosio::datastream::skip","eosio::datastream::tellp","eosio::datastream::valid","eosio::datastream::writ","eosio::datastream<","file:","final","follow","function","gener","given","help","in/eosio.cdt/libraries/eosiolib/datastream.hpp","increas","increment","init_s","initi","it'","list","name","new","object","object.","on","one.","p","p)","parameters:","public","put","remain","return","returns:","s","s)","s.","same","seekp","serial","set","size","size.","size_t","skip","skip(","special","tellp","true","type","us","valid","validity.","value.","write","write("],"structeosio_1_1extended__asset.html":["&","(","()","(1/2)","(1/3)","(2/2)","(2/3)","(3/3)","(asset","(int64_t",")","::","=",">","a,","account_nam","ad","add","addit","amount","asset","asset.","attribut","b","both","c","c)","class","classes:","const","construct","constructor","contract","contractth","default","document","eosio","eosio::asset","eosio::extended_asset","eosio::extended_asset::contract;","eosio::extended_asset::extended_asset","eosio::extended_asset::get_extended_symbol","eosio::extended_asset::oper","eosio::extended_asset::operator+","eosio::extended_asset::print","extend","extended_asset","extended_symbol","file:","follow","friend","function","gener","get_extended_symbol","given","in/eosio.cdt/libraries/eosiolib/asset.hpp","inherit","int64_t","list","minu","name","need","neg","new","object.","oper","operator+","operator+addit","operator.","owner","parameters:","precondition:","print","public","result","returns:","s","s)","same","struct","subtract","symbol","type","unari","us","v,","variabl","void"],"structeosio_1_1extended__symbol.html":["!=","&","(","()","(are","(symbol_nam",")","0","0)","0,","::","=","==",">","a,","acc","account_nam","asset","attribut","b","bool","boolean","both","class","classes:","const","contract","contractth","different)","document","eosio","eosio::extended_symbol","eosio::extended_symbol::contract;","eosio::extended_symbol::extended_symbol","eosio::extended_symbol::oper","eosio::extended_symbol::operator!=","eosio::extended_symbol::operator==","eosio::extended_symbol::print","eosio::symbol_typ","equival","extend","extended_symbol","file:","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/symbol.hpp","inherit","invert","list","name","oper","operator!=","operator!=subtract","operator.","operator<","operator==","operator==subtract","owner","parameters:","print","provid","public","return","returns:","same","same)","struct","subtract","sym","symbol","symbol.","symbol_nam","true","type","us","variabl","void"],"classeosio_1_1fixed__key.html":["!=","&","(","()","(1/2)","(2/2)","(const",")","16","::","==",">","alloc","arr","arr)","arr_itr","arr_itrconstructor","attribut","bool","bool_pack","byte","c1","c1,","c2","c2,","c2.","class","compar","const","constexpr","constructor","contain","data","default","defin","descript","detail","document","eosio","eosio::fixed_key","eosio::fixed_key::arr;","eosio::fixed_key::arr_itr;","eosio::fixed_key::fixed_key","eosio::fixed_key::num_word","eosio::fixed_key::oper","eosio::fixed_key::operator!=","eosio::fixed_key::operator==","eosio::fixed_key::operator>","eosio::fixed_key::padded_byt","eosio::fixed_key::word_t;","fals","file:","first","fix","fixed_key","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp","index","initi","insid","key","lexicograph","list","more...","multi","name","num_word","num_words()","num_words()>","number","object","object.","oper","operator!=","operator!=compar","operator<","operator==","operator==compar","operator>","operator>compar","operatorcompar","otherwis","pad","padded_byt","parameters:","public","remain","return","returns:","second","size","size_t","sort","sourc","static","std::array","std::arrayword_t,","struct","tabl","table.","templat","true,","two","type","typedef","uint128_t","variabl","word","word_t","words.","zero"],"structeosio_1_1fixed__key_1_1bool__pack.html":["::",">","bool_pack","class","document","eosio","eosio::fixed_key::bool_pack","file:","fixed_key","follow","gener","in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp","list","struct"],"structeosio_1_1fixed__point128.html":["&","(","()","(1/3)","(1/4)","(2/3)","(2/4)","(3/3)","(3/4)","(4/4)","(const","(int128_t",")","0","0)","128","64","::","=",">","a(123232.455667233)","a(1234.455667)","a(1234.455667);","a(123424)","a*b;","a+b+c;","anoth","assign","attribut","b(13324.32323);","b(a);","b/a;","bit","bool","c","c(a);","class","class.","const","construct","constructor","creat","d","decim","descript","detail","document","e","eosio","eosio::fixed_point128","eosio::fixed_point128::fixed_point128","eosio::fixed_point128::frac_part","eosio::fixed_point128::int_part","eosio::fixed_point128::oper","eosio::fixed_point128::operator=","eosio::fixed_point128::operator==","eosio::fixed_point128::operator>","eosio::fixed_point128::print","eosio::fixed_point128::val;","equal","example:","factor","fals","file:","fix","fixed_point128","fixed_point128&","fixed_point128,64,32","fixed_point128.","fixed_point32","fixed_point32.","fixed_point64","fixed_point64.","follow","frac_part","function","gener","greater","i.","in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp","instanc","int128_t","int128_t,","int128_t.","int_part","integ","less","list","more...","name","new","number","number.","object","oper","operator.","operator<","operator=","operator==","operator>","otherwis","param","parameters:","part","point","point128","precis","print","public","q","qr","r","r)","refer","repres","represent","return","returns:","sourc","std::cout","struct","templat","true","type","uint128_t","v","val","valu","value.","valvalu","variabl","variou","void"],"structeosio_1_1fixed__point32.html":["&","(","()","(1/2)","(1/3)","(1/4)","(2/2)","(2/3)","(2/4)","(3/3)","(3/4)","(4/4)","(const","(int32_t",")","/","0","0)","32","64","::","=",">","a(1234.455667)","a*b;","a+b+c;","addend","addit","anoth","assign","attribut","b(9.654);","b/a;","between","bit","bool","c","class","class.","const","construct","d","decim","descript","detail","divis","divisor","document","e","eosio","eosio::fixed_point32","eosio::fixed_point32::fixed_point32","eosio::fixed_point32::frac_part","eosio::fixed_point32::int_part","eosio::fixed_point32::oper","eosio::fixed_point32::operator*","eosio::fixed_point32::operator+","eosio::fixed_point32::operator/","eosio::fixed_point32::operator=","eosio::fixed_point32::operator==","eosio::fixed_point32::operator>","eosio::fixed_point32::print","eosio::fixed_point32::val;","equal","example:","fals","file:","fix","fixed_point32","fixed_point32&","fixed_point32(131313)","fixed_point32(2323)","fixed_point32.","fixed_point32qr)?q:qr","fixed_point64","fixed_point64.","float","follow","frac_part","function","gener","goe","greater","implement","in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp","int32_t","int32_t.","int_part","integ","issu","less","lh","list","max","minuend","more...","multipl","multipli","name","new","number","number.","object","object.","oper","operator*","operator+","operator.","operator/","operator<","operator=","operator==","operator>","otherwis","param","parameters:","part","point","point32","precis","print","public","qr","r","r)","refer","relat","replac","repres","represent","resolv","result","return","returns:","rh","rhs)","second","sourc","std::cout","store","struct","subtract","sum","templat","true","truncated.","two","type","uint32_t","undetermenist","v","val","valu","value.","valvalu","variabl","void"],"structeosio_1_1fixed__point64.html":["&","(","()","(1/2)","(1/3)","(2/2)","(2/3)","(3/3)","(const","(int64_t",")","/","0","0)","64","::","=",">","a(123232.455667233)","a(1234.455667)","a(123424)","a*b;","a+b+c;","addend","addit","anoth","assign","attribut","b/a;","between","bit","bool","c","class","class.","const","construct","d","decim","descript","detail","divis","divisor","document","e","eosio","eosio::fixed_point64","eosio::fixed_point64::fixed_point64","eosio::fixed_point64::frac_part","eosio::fixed_point64::int_part","eosio::fixed_point64::oper","eosio::fixed_point64::operator*","eosio::fixed_point64::operator+","eosio::fixed_point64::operator/","eosio::fixed_point64::operator=","eosio::fixed_point64::operator==","eosio::fixed_point64::operator>","eosio::fixed_point64::print","eosio::fixed_point64::val;","equal","example:","fals","file:","fix","fixed64","fixed_point128","fixed_point128.","fixed_point32","fixed_point32.","fixed_point64","fixed_point64&","fixed_point64(131313)","fixed_point64(2323)","fixed_point64.","fixed_point64qr)?q:qr","follow","frac_part","function","gener","goe","greater","in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp","int64_t","int64_t.","int_part","integ","less","lh","list","max","minuend","more...","multipl","multipli","name","new","number","number.","object","object.","oper","operator*","operator+","operator.","operator/","operator<","operator=","operator==","operator>","otherwis","parameters:","part","point","point64","precis","print","public","qr","r","r)","refer","repres","represent","result","return","returns:","rh","rhs)","second","sourc","std::cout","store","struct","subtract","sum","templat","true","two","type","uint64_t","v","val","valu","value.","valvalu","variabl","void"],"structeosio_1_1indexed__by.html":["\".\",","\".\".","#includ","(myaction)","(primary)(secondary)",")","):contract(self){}","0","13","13th","16","5,","64","::","=",">","_self;","account_nam","alia","auto","base32","bit","boost","boost::multi\\_index::const\\_mem\\_fun.","call","charact","character,","characters,","class","code","code,","conform","const","const\\_mem\\_fun","constant","descript","detail","details.","digit","document","encod","enum","eosio","eosio,","eosio::const\\_mem\\_fun","eosio::contract","eosio::indexed_bi","eosio::indexed_by::const","eosio::indexed_by::secondary_extractor_type;","eosio;","eosio_abi(","eoslib_serialize(","example:","extractor","file:","first","follow","function","gener","get_secondary()","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","index","index.","index_nam","indexed_bi","indexnam","indexname,","indic","instanti","integ","key","list","lowercas","maximum","more","more...","multi","multi_index","myaction()","mycontract(","mycontract,","mycontract:","name","namespac","object","oper","p","parameters:","primary;","primary_key()","provid","public","public:","recommend","record","record,","refer","requir","restrict","return","scope","scope);","secondari","secondary;","secondary_extractor_typ","see","self","specified.","struct","tabl","table(","table.","take","templat","template,","twelv","type","type.","typedef","uint128_t","uint64_t","up","us","void","z,","{","}","};"],"structeosio_1_1inline__dispatcher.html":["::",">","class","document","eosio","eosio::inline_dispatch","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","inline_dispatch","list","struct"],"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":["&","(","(1/2)","(2/2)","(account_nam",")","::",">","account_nam","arg","args)","call","class","code,","const","document","eosio","eosio::inline_dispatch","eosio::inline_dispatcher::cal","eosio::inline_dispatcher<","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","inline_dispatch","inline_dispatcher<","list","name","perm,","permission_level","perms,","public","static","std::tupl","struct","type","vector","vectorpermission_level","void","void(t::*)(args...),"],"classeosio_1_1iostream.html":["::",">","c++","class","descript","detail","document","eosio","eosio::iostream","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/print.hpp","iostream","list","simul","stream","style"],"classeosio_1_1memory__manager.html":["(","()","(1/2)",")","*","0","0.","::",">","addit","alloc","area","array","bit","block","byte","calloc","calloc(),","callocalloc","class","count","count,","document","each","element","elements,","eosio","eosio::memory_manag","eosio::memory_manager::calloc","eosio::memory_manager::malloc","eosio::memory_manager::memory_manag","eosio::memory_manager::realloc","file:","follow","friend","function","gener","given","in/eosio.cdt/libraries/eosiolib/eosiolib.cpp","initi","list","long,","malloc","malloc(),","mallocnamespac","memori","memory,","memory.","memory_manag","name","namespac","new","number","parameters:","pointer","previous","ptr","ptr,","public","realloc","realloc()","reallocrealloc","returns:","size","size_t","start","type","void","void*"],"classeosio_1_1memory__manager_1_1memory.html":["(","()","(char","(const","(uint32_t",")","*","*const","::",">","bool","buffer_ptr","char","class","cleanup_remain","const","document","eosio","eosio::memory_manager::memori","eosio::memory_manager::memory::cleanup_remain","eosio::memory_manager::memory::expand_memori","eosio::memory_manager::memory::fre","eosio::memory_manager::memory::init","eosio::memory_manager::memory::is_capacity_remain","eosio::memory_manager::memory::is_in_heap","eosio::memory_manager::memory::is_init","eosio::memory_manager::memory::malloc","eosio::memory_manager::memory::malloc_from_fre","eosio::memory_manager::memory::memori","eosio::memory_manager::memory::realloc_in_plac","exp_mem,","expand_memori","file:","follow","free","function","gener","in/eosio.cdt/libraries/eosiolib/eosiolib.cpp","init","is_capacity_remain","is_in_heap","is_init","list","malloc","malloc_from_fre","mem_heap,","memori","memory_manag","name","orig_ptr_s","orig_ptr_size)","ptr","ptr)","ptr,","public","realloc_in_plac","size","size)","size,","type","uint32_t","void"],"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":["(","()","(1/2)","(2/2)","(uint32_t","(void",")","*","*const","::",">","bool","buff_size,","buffer_ptr","char","class","const","document","end","eosio","eosio::memory_manager::memory::buffer_ptr","eosio::memory_manager::memory::buffer_ptr::buffer_ptr","eosio::memory_manager::memory::buffer_ptr::end","eosio::memory_manager::memory::buffer_ptr::is_alloc","eosio::memory_manager::memory::buffer_ptr::mark_alloc","eosio::memory_manager::memory::buffer_ptr::mark_fre","eosio::memory_manager::memory::buffer_ptr::merge_contigu","eosio::memory_manager::memory::buffer_ptr::merge_contiguous_if_avail","eosio::memory_manager::memory::buffer_ptr::next_ptr","eosio::memory_manager::memory::buffer_ptr::ptr","eosio::memory_manager::memory::buffer_ptr::s","file:","follow","function","gener","heap_end","heap_end)","in/eosio.cdt/libraries/eosiolib/eosiolib.cpp","is_alloc","list","mark_alloc","mark_fre","memori","memory_manag","merge_contigu","merge_contiguous_if_avail","name","needed_s","needed_size)","next_ptr","ptr","ptr,","public","size","type","uint32_t","val","val)","void"],"classeosio_1_1microseconds.html":["&","(","()","(const","(int64_t",")","0","0)","::","=",">","_count","a,","attribut","b","bool","c","c)","class","const","count","document","eosio","eosio::microsecond","eosio::microseconds::_count;","eosio::microseconds::count","eosio::microseconds::maximum","eosio::microseconds::microsecond","eosio::microseconds::oper","eosio::microseconds::operator!=","eosio::microseconds::operator+","eosio::microseconds::operator+=","eosio::microseconds::operator==","eosio::microseconds::operator>","eosio::microseconds::operator>=","eosio::microseconds::to_second","explicit","file:","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/time.hpp","int64_t","l,","list","maximum","microsecond","name","oper","operator!=","operator+","operator+=","operator<","operator<=","operator==","operator>","operator>=","public","r","static","time_point","time_point;","to_second","type","variabl"],"classeosio_1_1multi__index.html":["!=","\");","\".\"","\"1","\"address","\"blacksburg\";","\"blumer\";","\"brendan\";","\"ca\";","\"code","\"couldn't","\"daniel\",","\"daniel\";","\"hk\";","\"hong","\"incorrect","\"invalid","\"larimer\";","\"onli","\"record","\"san","\"scope","\"unabl","\"va\";","#includ","&","&&","(","()","(1/2)","(2/2)","(a","(account_name)(first_name)(last_name)(street)(city)(state)","(account_name)(first_name)(last_name)(street)(city)(state)(zip)","(and","(const","(const_iter","(i.e.,","(idx128),","(idx256),","(idx64),","(key)(first_name)(last_name)(street)(city)(state)","(myaction)","(period)","(quadruple)","(uint64_t","(unused)",")",");","*","*itr,","//","0;","1","1.","12","128","16","256","5,","64","93445;","93446;","::",";","=","==",">",">account_nam",">citi","[&](","[&](auto&","_self);","`","``,","aborted.","account","account_name;","action","ad","add","address","address)","address,","address.account_nam","address.c","address.find(n(dan));","address.first_nam","address.key","address.last_nam","address.st","address.street","address.zip","address_index","address_index;","addressbook(account_nam","addressbook,","addressbook:","addresses(_self,","addresses(n(dan),","addresses.available_primary_key();","addresses.begin(),","addresses.cbegin(),","addresses.cend(),","addresses.crbegin();","addresses.crend();","addresses.emplace(_self,","addresses.emplace(payer,","addresses.end(),","addresses.erase(","addresses.erase(*itr);","addresses.find(n(dan));","addresses.get(n(dan));","addresses.get_index();","addresses.modify(","addresses.rbegin();","addresses.rend();","agreement","alia","alloc","and,","appear","appropri","arbitrari","argument","associ","author","auto","auto&","autoincr","avail","available_primary_key","begin","between","bill","bit","boost","boost::multi_index::const_mem_fun.","bound","by_zip()","call","cbegin","cend","changed.","char","charact","character;","charg","city;","class","code","code,","const","const_iter","const_mem_fun","const_reverse_iter","const_reverse_iteratorstruct","constant","construct","constructor","constructor)","contain","contract","contract.","crbegin","creat","created,","created.","creation.","crend","current","custom","default","definition);","deleted\");","desir","details.","determin","differ","digit","document","doesn't","don't","doubl","due","each","element","emplac","end","eo","eosio","eosio::const_mem_fun","eosio::multi_index","eosio::multi_index::available_primary_key","eosio::multi_index::begin","eosio::multi_index::cbegin","eosio::multi_index::cend","eosio::multi_index::const_reverse_iterator;","eosio::multi_index::crbegin","eosio::multi_index::crend","eosio::multi_index::emplac","eosio::multi_index::end","eosio::multi_index::eras","eosio::multi_index::find","eosio::multi_index::get","eosio::multi_index::get_cod","eosio::multi_index::get_index","eosio::multi_index::get_scop","eosio::multi_index::iterator_to","eosio::multi_index::lower_bound","eosio::multi_index::modifi","eosio::multi_index::multi_index","eosio::multi_index::rbegin","eosio::multi_index::rend","eosio::multi_index::require_find","eosio::multi_index::upper_bound","eosio;","eosio_abi(","eosio_assert(addresses.get_code()","eosio_assert(iterator_to(user)","eosio_assert(itr","eosio_assert(user.first_nam","eoslib_serialize(","equal","eras","error","error_msg","establish","example:","except","exceptions:","execut","exist","exist\");","exist**","exist,","expect","extractor","file:","find","first","first_name;","fix","float","follow","found","found\");","found,","found.","front.\");","full","function","gener","get_cod","get_index","get_scop","given","greater","hierarchi","highest","him.\");","id","ideal","identifi","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","inabl","incrementing,","index","index.","indexnam","indic","indices.","initi","instanc","instanti","intc","integ","intend","invalid","invalid.","item","item_ptr","iter","iterator\");","iterator.","iterator_to","itr","itr)","itr++;","itr,","key","key\"","key\")","key,","key.","key;","kong\";","lambda","last","last_name;","left.","less","letters,","lexicograph","like","list","load_object_by_primary_iter","long","long,","lower","lower_bound","lowercas","lowest","lui","match","match\");","match.\");","maximum","member","messag","method","modifi","modified\");","more","multi","multi_index","multi_index::const_iter","myaction()","n(brendan),","n(brendan);","n(dan));","n(dan),","n(dan);","name","namespac","negative).","never","new","newli","note","notes:","obispo\",","obispo\";","obj","obj)","obj,","object","object).","object,","object.","object\\_typ","object_typ","oper","overhead","overhead.","own","parameters:","parameters`,","pay","payer","payer,","place","plenti","point","pointer","post","precis","precondition,","precondition:","primari","primary)","primary,","primary.","primary_key()","primit","properly\");","properti","property.","public","public:","rbegin","realiti","receiv","reclaimed.","recommend","record","record\");","refer","referenc","refund","remov","removed,","rend","replac","require_find","result","retriev","return","returns:","revers","row","row)","same","scope","scope)","search","search.","second","secondari","see","self):contract(self)","serial","serialized,","set","signatur","size","space","specifi","state;","std::reverse_iter","std::reverse_iteratorconst_iter","std;","storag","street;","strictli","string","struct","t","tabl","table,","table.","tablenam","tables)","take","target","templat","template,","throw","thu","type","type:","typedef","uint32_t","uint64_t","under","uniqu","unsign","up","updat","updated.","updated;","updater)","upper","upper_bound","us","usag","usage.","user","valid","valu","value.","violat","void","way\";","where:","within","write","written","zip","zip;","zip_index","zip_index.end(),","zip_index.find(zipnumb);","zip_index.lower_bound(zipnumb);","zip_index.upper_bound(zipnumb);","zipnumb","{","{}","}","});","};"],"structeosio_1_1multi__index_1_1const__iterator.html":["&","(","()","(1/2)","(2/2)","(int)",")","*","::",">","a,","b","bool","class","classes:","const","const_iter","document","eosio","eosio::multi_index::const_iter","eosio::multi_index::const_iterator::oper","eosio::multi_index::const_iterator::operator!=","eosio::multi_index::const_iterator::operator*","eosio::multi_index::const_iterator::operator++","eosio::multi_index::const_iterator::operator==","file:","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","inherit","int","list","multi_index","multi_index;","name","oper","operator!=","operator*","operator++","operator==","public","std::iter","struct","t","type"],"structeosio_1_1multi__index_1_1index.html":["\"unabl","&","&&","(","()","(1/2)","(2/2)","(const","(const_iter","(number","(secondary_key_typ","(tablenam","(uint64_t",")","*","0x000000000000000full)","0x000000000000000full),","0xfffffffffffffff0ull)","::","=",">","auto","begin","bool","cbegin","cend","char","class","const","const_iter","const_reverse_iter","const_reverse_iteratorstruct","constant","constexpr","crbegin","crend","document","end","enum","eosio","eosio::multi_index::index","eosio::multi_index::index::begin","eosio::multi_index::index::cbegin","eosio::multi_index::index::cend","eosio::multi_index::index::const","eosio::multi_index::index::const_reverse_iterator;","eosio::multi_index::index::crbegin","eosio::multi_index::index::crend","eosio::multi_index::index::end","eosio::multi_index::index::eras","eosio::multi_index::index::extract_secondary_key","eosio::multi_index::index::find","eosio::multi_index::index::get","eosio::multi_index::index::get_cod","eosio::multi_index::index::get_scop","eosio::multi_index::index::iterator_to","eosio::multi_index::index::lower_bound","eosio::multi_index::index::modifi","eosio::multi_index::index::nam","eosio::multi_index::index::numb","eosio::multi_index::index::rbegin","eosio::multi_index::index::rend","eosio::multi_index::index::require_find","eosio::multi_index::index::secondary_extractor_type;","eosio::multi_index::index::secondary_key_type;","eosio::multi_index::index::upper_bound","eosio::multi_index::index::validate_index_nam","eras","error_msg","extract_secondary_key","extractor","file:","find","follow","friend","function","gener","get_cod","get_scop","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","index","index_nam","index_numb","index_table_nam","indexname,","iterator_to","itr","itr)","itr,","key\"","key\")","lambda","list","lower_bound","modifi","multi_index","multi_index::index::const_iter","multi_index;","n","n)","name","number","number,","obj","obj)","payer,","public","rbegin","rend","require_find","secondari","secondary)","secondary,","secondary_extractor_typ","secondary_key_typ","static","std::decay::typ","std::reverse_iter","std::reverse_iteratorconst_iter","struct","t","table_nam","tablename,","type","typedef","uint64_t","updat","updater)","upper_bound","validate_index_nam","void","{","|","}","};"],"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":["&","(","()","(1/2)","(2/2)","(int)",")","*","::",">","a,","b","bool","class","classes:","const","const_iter","document","eosio","eosio::multi_index::index::const_iter","eosio::multi_index::index::const_iterator::const_iter","eosio::multi_index::index::const_iterator::oper","eosio::multi_index::index::const_iterator::operator!=","eosio::multi_index::index::const_iterator::operator*","eosio::multi_index::index::const_iterator::operator++","eosio::multi_index::index::const_iterator::operator==","file:","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","index","index;","inherit","int","list","multi_index","name","oper","operator!=","operator*","operator++","operator==","public","std::iter","struct","t","type"],"structeosio_1_1multi__index_1_1intc.html":["()","::","=",">","class","const","document","e","enum","eosio","eosio::multi_index::intc","eosio::multi_index::intc::","eosio::multi_index::intc::oper","file:","follow","function","gener","i,","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","intc","list","multi_index","multi_index::index","name","oper","public","struct","type","uint64_t","valu","{","}","};"],"structeosio_1_1multi__index_1_1item.html":["&&","(","(const",")","*","::",">","__idx","__iter","__primary_itr","attribut","c","c)","class","classes:","const","constructor","document","eosio","eosio::multi_index::item","eosio::multi_index::item::__idx;","eosio::multi_index::item::__iters[sizeof...(indices)+(sizeof...(indices)==0)];","eosio::multi_index::item::__primary_itr;","eosio::multi_index::item::item","file:","follow","function","gener","idx,","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","inherit","int32_t","item","list","multi_index","multi_index*","name","public","struct","t","type","variabl"],"structeosio_1_1multi__index_1_1item__ptr.html":["&&","(","(std::unique_ptr",")","::",">","_item","_primary_itr","_primary_key","attribut","class","document","eosio","eosio::multi_index::item_ptr","eosio::multi_index::item_ptr::_item;","eosio::multi_index::item_ptr::_primary_itr;","eosio::multi_index::item_ptr::_primary_key;","eosio::multi_index::item_ptr::item_ptr","file:","follow","function","gener","i,","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","int32_t","item_ptr","list","multi_index","name","pitr","pitr)","pk,","public","std::unique_ptr","struct","type","uint64_t","variabl"],"structeosio_1_1name.html":["&","(","()",")","::",">","a,","account","account_nam","attribut","b","base32","bool","class","compar","const","convers","convert","data","descript","detail","document","enabl","ensur","eosio","eosio::nam","eosio::name::oper","eosio::name::operator==","eosio::name::to_str","eosio::name::value;","equal","expect","fals","file:","first","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/types.hpp","intern","list","mathemat","method","more...","name","name.","occur.","oper","operator.","operator==","operator==equ","parameters:","pass","print","public","represent","result","returns:","second","special","std::string","string.","struct","to_str","true","type","uint64_t","unequ","valu","valueintern","variabl","wrap"],"structeosio_1_1onerror.html":["()","::",">","attribut","byte","class","const","document","eosio","eosio::onerror","eosio::onerror::from_current_act","eosio::onerror::sender_id;","eosio::onerror::sent_trx;","eosio::onerror::unpack_sent_trx","file:","follow","from_current_act","function","gener","in/eosio.cdt/libraries/eosiolib/transaction.hpp","list","name","onerror","public","sender_id","sent_trx","static","struct","transact","type","uint128_t","unpack_sent_trx","variabl"],"classeosio_1_1optional.html":["!!","&","&&","&&...","(","()","(1/2)","(1/8)","(1/9)","(2/2)","(2/8)","(2/9)","(3/8)","(3/9)","(4/8)","(4/9)","(5/8)","(5/9)","(6/8)","(6/9)","(7/8)","(7/9)","(8/8)","(8/9)","(9/9)","(arg","(const","(option","(std::nullptr_t)","(u",")","*","::",">","a,","access","anoth","arg","args)","assign","b","base","bool","boost::opt","boost::optional.","call","cast","check","class","compar","comparisons,","const","construct","constructor","contain","copi","datastream","default","derefer","descript","deseri","destin","destroy","destructor","detail","document","ds","ds,","emplac","eosio","eosio::datastream","eosio::datastream&","eosio::opt","eosio::optional::emplac","eosio::optional::oper","eosio::optional::operator!","eosio::optional::operator*","eosio::optional::operator=","eosio::optional::operator==","eosio::optional::operator>>","eosio::optional::opt","eosio::optional::reset","eosio::optional::storage_type;","eosio::optional::valid","eosio::optional::value_type;","eosio::optional::~opt","equal","explicit","fals","file:","first","follow","fot","friend","function","gener","however,","in/eosio.cdt/libraries/eosiolib/optional.hpp","invalid","less","list","logic","mark","member","more...","move","name","negat","new","nullabl","nullptr","nullptr.","o","o)","object","object.","op","oper","operator!","operator*","operator.","operator<","operator<<","operator=","operator==","operator==equ","operator>>","operator>>seri","operatordeseri","operatorless","option","optional&","optional;","otherwis","parameters:","place","place.","pointer","provid","public","read","refer","reset","result","returns:","safe","second","serial","similar","stack","std::aligned_storage::typ","std::nullptr_t","storage_typ","stream","t","t&","templat","through","true","type","typedef","u","u)","unintenti","us","valid","valid()","valid().","valu","value.","value_typ","void","write","~option"],"structeosio_1_1permission__level.html":["&","(","()","(1/2)","(2/2)","(account_nam","(authorization)",")","::",">","a,","account","account_nam","actor","actornam","attribut","author","b","bool","check","class","compar","const","construct","constructor","default","descript","detail","document","eosio","eosio::permission_level","eosio::permission_level::actor;","eosio::permission_level::operator==","eosio::permission_level::permission;","eosio::permission_level::permission_level","equal","fals","file:","first","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","level","list","more...","name","new","object","object.","operator==","operator==check","own","p","p)","pack","parameters:","permiss","permission.","permission_level","permission_nam","permissionnam","permissions.","public","represent","returns:","second","struct","true","two","type","unequ","variabl"],"structeosio_1_1producer__key.html":["::",">","account_nam","attribut","block","block_signing_key","block_signing_keyblock","bool","class","descript","detail","document","eosio","eosio::producer_key","eosio::producer_key::block_signing_key;","eosio::producer_key::oper","eosio::producer_key::producer_name;","file:","follow","friend","gener","in/eosio.cdt/libraries/eosiolib/privileged.hpp","key","key,","key.","list","map","more...","name","oper","operator<","produc","producer.","producer_key","producer_nam","producer_namenam","public","public_key","schedul","sign","struct","type","us","variabl"],"structeosio_1_1producer__schedule.html":["::",">","account","activ","attribut","both","class","defin","descript","detail","document","eosio","eosio::producer_schedul","eosio::producer_schedule::producers;","eosio::producer_schedule::version;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/producer\\_schedule.hpp","includ","increment","key","key.","list","more...","name","name,","number","order,","produc","producer_schedul","producers.","producerslist","public","schedule,","schedule.","sequenti","set","sign","std::vector","std::vectorproducer_key","struct","type","uint32_t","variabl","version","versionvers"],"structeosio_1_1public__key.html":["&","(",")","::",">","a,","attribut","b","bool","byte","class","const","data","databyt","descript","detail","document","eosio","eosio::public_key","eosio::public_key::data;","eosio::public_key::operator!=","eosio::public_key::operator==","eosio::public_key::type;","file:","follow","friend","gener","in/eosio.cdt/libraries/eosiolib/public\\_key.hpp","k1","key","key,","key.","list","more...","name","operator!=","operator==","public","public_key","r1","std::array","struct","type","typetyp","unsigned_int","variabl"],"structeosio_1_1reflector.html":["::",">","class","document","eosio","eosio::reflector","eosio::reflector::is_enum;","eosio::reflector::is_reflected;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/reflect.hpp","is_enum","is_reflect","list","name","public","reflector","std::false_typ","struct","type","typedef"],"classeosio_1_1singleton.html":["&","(","()","(account_nam","(const",")","::","=",">","account","account_nam","bill","bill_to_account","bill_to_account)","bill_to_account,","bool","case","check","class","code","code,","const","construct","creat","data","def","default","descript","detail","document","doesn't","eosio","eosio::singleton","eosio::singleton::exist","eosio::singleton::get","eosio::singleton::get_or_cr","eosio::singleton::get_or_default","eosio::singleton::remov","eosio::singleton::set","eosio::singleton::singleton","except","exist","exist,","exist.","exists.","fals","file:","follow","function","gener","get_or_cr","get_or_default","given","in/eosio.cdt/libraries/eosiolib/singleton.hpp","insid","list","name","new","newli","object","object.","on","otherwis","owner","parameters:","pay","public","remov","return","returns:","row","scope","scope)","scope_nam","set","singl","singleton","singletonnam","specifi","store","struct","t","t()","t())","tabl","table'","table.","templat","throw","true","type","types.","us","valu","value,","variabl","variou","void","wrapper"],"structeosio_1_1singleton_1_1row.html":["()","::",">","attribut","class","const","data","data.","descript","detail","document","eosio","eosio::singleton::row","eosio::singleton::row::primary_key","eosio::singleton::row::value;","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/singleton.hpp","insid","key","list","more...","name","primari","primary_key","public","returns:","row","singleton","store","struct","structur","t","tabl","table.","type","uint64_t","valu","valuevalu","variabl"],"structeosio_1_1symbol__type.html":["(","()","(1/2)","(2/2)","(bool","(symbol_nam",")","::","=",">","attribut","bool","class","classes:","const","document","eosio","eosio::extended_symbol","eosio::symbol_typ","eosio::symbol_type::is_valid","eosio::symbol_type::nam","eosio::symbol_type::name_length","eosio::symbol_type::oper","eosio::symbol_type::precis","eosio::symbol_type::print","eosio::symbol_type::symbol_typ","eosio::symbol_type::value;","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/symbol.hpp","inherit","is_valid","length","list","name","name_length","oper","precis","print","public","represent","return","s","s)","show_precis","struct","symbol","symbol'","symbol_nam","symbol_typ","true","true)","type","uint32_t","uint64_t","valid","valu","variabl","void"],"classeosio_1_1time__point.html":["&","(","()","(1/2)","(2/2)","(const","(microsecond",")","::","=",">","attribut","bool","class","const","document","e","elaps","eosio","eosio::time_point","eosio::time_point::elapsed;","eosio::time_point::from_iso_str","eosio::time_point::oper","eosio::time_point::operator!=","eosio::time_point::operator+","eosio::time_point::operator+=","eosio::time_point::operator==","eosio::time_point::operator>","eosio::time_point::operator>=","eosio::time_point::sec_since_epoch","eosio::time_point::time_point","eosio::time_point::time_since_epoch","explicit","file:","follow","from_iso_str","function","gener","in/eosio.cdt/libraries/eosiolib/time.hpp","list","m","m)","microsecond","microseconds()","microseconds())","name","oper","operator!=","operator+","operator+=","operator<","operator<=","operator==","operator>","operator>=","public","s","s)","sec_since_epoch","static","std::string","t","t)","time_point","time_since_epoch","type","uint32_t","variabl"],"classeosio_1_1time__point__sec.html":["&","(","()","(1/2)","(1/3)","(1/4)","(2/2)","(2/3)","(2/4)","(3/3)","(3/4)","(4/4)","(const","(microsecond","(time_point_sec","(uint32_t",")","1970","::","=",">","a,","accur","attribut","b","bool","class","const","descript","detail","document","eosio","eosio::time_point","eosio::time_point_sec","eosio::time_point_sec::maximum","eosio::time_point_sec::min","eosio::time_point_sec::oper","eosio::time_point_sec::operator!=","eosio::time_point_sec::operator+","eosio::time_point_sec::operator+=","eosio::time_point_sec::operator=","eosio::time_point_sec::operator==","eosio::time_point_sec::operator>","eosio::time_point_sec::operator>=","eosio::time_point_sec::sec_since_epoch","eosio::time_point_sec::time_point_sec","eosio::time_point_sec::utc_seconds;","explicit","file:","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/time.hpp","list","lower","m","m)","maximum","microsecond","min","name","offset","offset)","oper","operator!=","operator+","operator+=","operator<","operator<=","operator=","operator==","operator>","operator>=","public","resolut","sec_since_epoch","second","seconds)","static","t","t)","t,","time_point","time_point_sec","type","uint32_t","utc_second","variabl"],"classeosio_1_1transaction.html":["&","(","(const","(time_point_sec",")","::","=",">","account_nam","action","attribut","bool","class","classes:","const","context_free_act","document","eosio","eosio::transact","eosio::transaction::actions;","eosio::transaction::context_free_actions;","eosio::transaction::send","eosio::transaction::transact","eosio::transaction::transaction_extensions;","eosio::transaction_head","exp","extensions_typ","fals","false)","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/transaction.hpp","inherit","list","name","payer,","public","replace_exist","send","sender_id,","time_point_sec","time_point_sec(now()+60)","time_point_sec(now()+60))","transact","transaction_extens","type","uint128_t","variabl","vector","vectoract","void"],"classeosio_1_1transaction__header.html":["(","(time_point_sec",")","8","::","=",">","attribut","bill","byte","class","classes:","compress","cpu","delay_sec","delay_secnumb","document","eosio","eosio::transact","eosio::transaction_head","eosio::transaction_header::delay_sec;","eosio::transaction_header::expiration;","eosio::transaction_header::max_cpu_usage_ms;","eosio::transaction_header::net_usage_words;","eosio::transaction_header::ref_block_num;","eosio::transaction_header::ref_block_prefix;","eosio::transaction_header::transaction_head","exp","expir","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/transaction.hpp","inherit","list","max_cpu_usage_m","max_cpu_usage_msnumb","name","net_usage_word","number","public","ref_block_num","ref_block_prefix","serial","time_point_sec","time_point_sec(now()+60)","time_point_sec(now()+60))","transact","transaction_head","type","uint16_t","uint32_t","uint8_t","unit","unsigned_int","usag","variabl","word"],"structpublic__key.html":["34",">","attribut","bytes.","char","class","data","descript","detail","document","eosio","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/types.h","key.","list","more...","name","public","public_key","public_key::data[34];","struct","type","variabl"],"structsignature.html":["66",">","attribut","bytes.","class","data","descript","detail","document","eosio","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/types.h","list","more...","name","public","signatur","signature.","signature::data[66];","struct","type","uint8_t","variabl"],"structsigned__int.html":["&","(","()","(1/2)","(1/3)","(2/2)","(2/3)","(3/3)","(const","(int)","(int32_t",")","0","0)","32","=",">","assign","attribut","between","bit","bool","byte","check","class","compar","const","construct","contain","convers","convert","current","datastream","datastream&","descript","deseri","destin","detail","document","ds","ds,","effici","encod","equal","fals","few","file:","first","follow","friend","function","gener","given","greater","i,","in/eosio.cdt/libraries/eosiolib/varint.hpp","increment","inequ","int","int.","int32_t","integ","integer.","length","less","list","more","more...","name","new","object","object'","object.","oper","operator!=","operator!=equ","operator!=inequ","operator++","operator.","operator<","operator<<","operator=","operator==","operator==equ","operator>=","operator>=great","operator>>","operator>>deseri","operatorless","operatorseri","otherwis","parameters:","possibl","possible.","primit","provid","public","read","refer","result","returns:","second","serial","sign","signed_int","signed_int::oper","signed_int::operator!=","signed_int::operator++","signed_int::operator=","signed_int::operator==","signed_int::operator>=","signed_int::operator>>","signed_int::signed_int","signed_int::value;","sourc","stream","struct","t","templat","true","two","type","unequ","unsigned_int&","us","v","v)","valu","value.","valuecontain","variabl","varint32","vi","write","zag","zig"],"namespacestd.html":[">","checksum256","class","document","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/types.hpp","less","less<","list","name","namespac","std","struct","type"],"structstd_1_1less_3_01checksum256_01_4.html":["&","(","(const",")","::",">","binary_funct","bool","checksum256","checksum256.","class","classes:","const","descript","detail","document","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/types.hpp","inherit","less","less<","lhs,","list","more...","name","operator()","provid","public","rh","rhs)","std","std::less","std::less::operator()","std::less<","struct","type"],"structunsigned__int.html":["&","(","()","(1/2)","(1/3)","(2/2)","(2/3)","(3/3)","(t","(uint32_t",")","0","0)","128","32","=",">","assign","attribut","base","between","bit","bool","byte","check","class","compar","const","construct","contain","convers","convert","datastream","datastream&","descript","deseri","destin","detail","document","ds","ds,","effici","encod","equal","fals","few","file:","first","follow","friend","function","gener","given","greater","i,","in/eosio.cdt/libraries/eosiolib/varint.hpp","inequ","int","int.","integ","integer.","length","less","list","more","more...","name","new","object","object.","oper","operator!=","operator!=equ","operator!=inequ","operator.","operator<","operator<<","operator=","operator==","operator==equ","operator>=","operator>=great","operator>>","operator>>deseri","operatorless","operatorseri","otherwis","parameters:","possibl","possible.","precondition:","provid","public","read","refer","returns:","second","serial","serialuz","soruc","sourc","stream","struct","t","target","templat","true","two","type","uint32_t","unequ","unsign","unsigned_int","unsigned_int&","unsigned_int::oper","unsigned_int::operator!=","unsigned_int::operator=","unsigned_int::operator==","unsigned_int::operator>=","unsigned_int::operator>>","unsigned_int::unsigned_int","unsigned_int::value;","us","v","v)","valu","value.","valuecontain","variabl","varuint32","vi","vlq","write"],"files.html":["action.h","action.hpp","asset.hpp","brief","chain.h","compiler_builtins.h","contract.hpp","crypto.h","currency.hpp","datastream.hpp","db.h","descriptions:","dispatcher.hpp","document","eosio.cdt","eosio.cdt/","eosio.hpp","eosiolib","eosiolib.cpp","eosiolib/","file","fixed_key.hpp","fixedpoint.hpp","here","in/","librari","libraries/","list","memory.h","memory.hpp","multi_index.hpp","optional.hpp","permission.h","permission.hpp","print.h","print.hpp","privileged.h","privileged.hpp","producer_schedule.hpp","public_key.hpp","reflect.hpp","serialize.hpp","singleton.hpp","stdlib.hpp","symbol.hpp","system.h","time.hpp","transaction.h","transaction.hpp","types.h","types.hpp","varint.hpp","vector.hpp"],"dir_f4c96640472432942b3fc30ed441ca04.html":["directori","file","in/","in/eosio.cdt","in/eosio.cdt/","refer"],"dir_45e00aafcb063b38cae24fc05c5e0d54.html":["directori","eosio.cdt/","file","in/eosio.cdt","in/eosio.cdt/librari","in/eosio.cdt/libraries/","refer"],"dir_aec5bb64676d64f4f6eae682e441225e.html":["directori","file","in/eosio.cdt/librari","in/eosio.cdt/libraries/eosiolib","in/eosio.cdt/libraries/eosiolib/","libraries/","refer"],"dir_1134efb280eb12b0569be244927e10ce.html":["action.h","action.hpp","asset.hpp","chain.h","compiler_builtins.h","contract.hpp","crypto.h","currency.hpp","datastream.hpp","db.h","directori","dispatcher.hpp","eosio.hpp","eosiolib.cpp","eosiolib/","file","fixed_key.hpp","fixedpoint.hpp","in/eosio.cdt/libraries/eosiolib","memory.h","memory.hpp","multi_index.hpp","optional.hpp","permission.h","permission.hpp","print.h","print.hpp","privileged.h","privileged.hpp","producer_schedule.hpp","public_key.hpp","refer","reflect.hpp","serialize.hpp","singleton.hpp","stdlib.hpp","symbol.hpp","system.h","time.hpp","transaction.h","transaction.hpp","types.h","types.hpp","varint.hpp","vector.hpp"],"action_8h.html":["(","()","(account_nam","(char","(void",")","*","0","1970","account","account_nam","action","action'","action.","action.h","action.h::action_data_s","action.h::current_receiv","action.h::has_auth","action.h::is_account","action.h::publication_tim","action.h::read_action_data","action.h::require_auth","action.h::require_auth2","action.h::require_read_lock","action.h::require_recipi","action.h::require_write_lock","action.h::send_context_free_inlin","action.h::send_inlin","action_data_s","add","array","auth","auth.","auths.","bool","byte","char","class","code","context","copi","copied,","copyright","current","current_receiv","data","defin","descript","detail","document","dynam","eos/license.txt","exist","field","field.","file","file.","file:","fill","follow","found","found.","free","function","gener","go","has_auth","held","held.","in/eosio.cdt/libraries/eosiolib/action.h","inlin","is_account","len","len)","len==0","length","level","locat","location.","lock","long","memori","method","microsecond","msg","msg,","name","name)","name,","notifi","notified.","number","pack","parameters:","parent","pass","permiss","permission)","permission_nam","pointer","post","precondition:","provid","public","publication_tim","rang","read","read_action_data","receiv","report","requir","require_auth","require_auth2","require_read_lock","require_recipi","require_write_lock","return","returns:","send","send_context_free_inlin","send_inlin","serial","serialized\\_act","serialized_act","serialized_action,","set","size","size)","size_t","sourc","specifi","throw","time","time.","transact","uint32_t","uint64_t","up","us","valid","verifi","void","write","|","|account_name|current_receiv","|bool|has_auth","|bool|is_account","|type|name|","|uint32_t|action_data_s","|uint32_t|read_action_data","|uint64_t|publication_tim","|void|require_auth","|void|require_auth2","|void|require_read_lock","|void|require_recipi","|void|require_write_lock","|void|send_context_free_inlin","|void|send_inlin"],"action_8hpp.html":["(\"action_member1_name\",","...",">","account","action","action.","action.hpp","action;","action_member1_value)(\"action_member2_name\",","action_member2_value)","actionextend","class","code","contract","copyright","defin","descript","detail","dispatch","document","eos/license.txt","eosio::act","eosio::action_meta","eosio::inline_dispatch","eosio::inline_dispatcher<","eosio::permission_level","extend","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/action.hpp","inlin","inline_action_send","inline_action_sender2","inline_action_sender2;","inline_action_sender3","inline_action_sender3;","inline_action_sender;","intend","member","meta,","meta.","name","new","parameters:","send","send_inline_act","send_inline_action;","send_inline_actionsend","sourc","specifi","struct","theaction","type","void(t::*)(args...),","work"],"asset_8hpp.html":["asset.hpp","class","code","document","eosio::asset","eosio::extended_asset","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/asset.hpp","name","sourc","struct","type"],"chain_8h.html":["(","(account_nam",")","*","0","=","account","account_nam","activ","actual","array","buffer","buffer,","byte","bytes_popul","chain.h","chain.h::get_active_produc","class","code","copyright","datalen","datalen)","defin","descript","detail","document","eos/license.txt","example:","file","file.","file:","follow","full","function","gener","get","get_active_produc","get_active_producers(producers,","go","in/eosio.cdt/libraries/eosiolib/chain.h","length","long","memori","name","number","output.","parameters:","pass","pointer","popul","post","precondition:","produc","producers,","producers.","producers[21];","rang","requir","return","returns:","set","size","sizeof(account_name)*21);","sourc","store","uint32_t","|","|type|name|","|uint32_t|get_active_produc"],"compiler__builtins_8h.html":["&","(","()","(__int128","(a","(b","(long","(the","(uint64_t","(unsign","(which",")","//","0","0;","1","1);","10000","100;","128","16","32","3;","4","64","64));","64),","8;","=",">>","__addtf3","__ashlti3","__ashlti3(res,","__ashrti3","__ashrti3(res,","__break_point","__cmptf2","__divtf3","__divti3","__divti3(res,","__eqtf2","__extenddftf2","__extendsftf2","__fixtfdi","__fixtfsi","__fixunstfdi","__fixunstfsi","__getf2","__gttf2","__int128","__letf2","__lshlti3","__lshlti3(res,","__lshrti3","__lshrti3(res,","__lttf2","__modti3","__modti3(res,","__multf3","__multi3","__multi3(res,","__netf2","__subtf3","__trunctfdf2","__trunctfsf2","__udivti3","__udivti3(res,","__umodti3","__umodti3(res,","__unordtf2","a,","add","arithmet","assign","b","b,","between","bit","check","class","code","compar","compiler_builtins.h","compiler_builtins.h::__addtf3","compiler_builtins.h::__ashlti3","compiler_builtins.h::__ashrti3","compiler_builtins.h::__break_point","compiler_builtins.h::__cmptf2","compiler_builtins.h::__divtf3","compiler_builtins.h::__divti3","compiler_builtins.h::__eqtf2","compiler_builtins.h::__extenddftf2","compiler_builtins.h::__extendsftf2","compiler_builtins.h::__fixtfdi","compiler_builtins.h::__fixtfsi","compiler_builtins.h::__fixunstfdi","compiler_builtins.h::__fixunstfsi","compiler_builtins.h::__getf2","compiler_builtins.h::__gttf2","compiler_builtins.h::__letf2","compiler_builtins.h::__lshlti3","compiler_builtins.h::__lshrti3","compiler_builtins.h::__lttf2","compiler_builtins.h::__modti3","compiler_builtins.h::__multf3","compiler_builtins.h::__multi3","compiler_builtins.h::__netf2","compiler_builtins.h::__subtf3","compiler_builtins.h::__trunctfdf2","compiler_builtins.h::__trunctfsf2","compiler_builtins.h::__udivti3","compiler_builtins.h::__umodti3","compiler_builtins.h::__unordtf2","convert","copyright","defin","descript","detail","divid","divis","document","doubl","double,","double.","eos/license.txt","equal","example:","extend","f","f)","factor.","file","file.","file:","first","float","float.","follow","function","gener","go","greater","h","h)","ha","ha,","hb","hb)","hi","hi,","high","in/eosio.cdt/libraries/eosiolib/compiler\\_builtins.h","inequ","input","int","int32_t","int64_t","integ","integer.","integers)","integers.","l","l,","la","la,","lb","lb,","left","less","lo","lo,","logic","long","low","modular","modulu","multipl","multipli","nan","nan,","number","oper","output:","parameter.","parameters:","perform","post","printi128(&res);","product.","re","replac","repres","res,","result","ret","ret,","returns:","right","second","shift","shift)","shift.","sourc","split","subtract","truncat","two","uint32_t","uint64_t","unsign","valu","void","|","|double|__trunctfdf2","|float|__trunctfsf2","|int32_t|__fixtfsi","|int64_t|__fixtfdi","|int|__cmptf2","|int|__eqtf2","|int|__getf2","|int|__gttf2","|int|__letf2","|int|__lttf2","|int|__netf2","|int|__unordtf2","|type|name|","|uint32_t|__fixunstfsi","|uint64_t|__fixunstfdi","|void|__addtf3","|void|__ashlti3","|void|__ashrti3","|void|__break_point","|void|__divtf3","|void|__divti3","|void|__extenddftf2","|void|__extendsftf2","|void|__lshlti3","|void|__lshrti3","|void|__modti3","|void|__multf3","|void|__multi3","|void|__subtf3","|void|__udivti3","|void|__umodti3"],"contract_8hpp.html":["class","code","contract.hpp","document","eosio::contract","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/contract.hpp","name","sourc","type"],"crypto_8h.html":["\"invalid","###","&calc_hash","(","(char","(const",")",");","*","//","//if","==","```","```cpp","anyth","assert","assert160","assert256","assert512","assert\\_recover\\_key","assert_recover_key","assert_recover_key(","assert_ripemd160","assert_ripemod160(","assert_sha1","assert_sha1(","assert_sha256","assert_sha256(","assert_sha512","assert_sha512(","below","calc_hash","calc_hash;","calcul","char","checksum","checksum.","checksum160","checksum160\\*","checksum256","checksum256\\*","checksum512","checksum512\\*","class","code","compar","const","copyright","creat","crypto.h","crypto.h::assert_recover_key","crypto.h::assert_ripemd160","crypto.h::assert_sha1","crypto.h::assert_sha256","crypto.h::assert_sha512","crypto.h::recover_key","crypto.h::ripemd160","crypto.h::sha1","crypto.h::sha256","crypto.h::sha512","data","data,","data;","defin","descript","detail","digest","digest\");","digest,","digest;","document","eos/license.txt","eos_assert(","eosio::print(\"pub","eosio::print(\"ripemod160","eosio::print(\"sha1","eosio::print(\"sha256","eosio::print(\"sha512","equal","evalu","example:","execut","fast","file","file.","file:","fire.","follow","function","gener","given","go","hard","hash","hash\"","hash\");","hash)","hash,","hash.","hash;","in/eosio.cdt/libraries/eosiolib/crypto.h","int","key","length","length,","length;","match","memori","messag","message.","method","mode.","never","next","op","optim","paramet","parameter.","parameters:","point","pointer","post","precondition:","provid","pub","pub,","pub;","publen","publen)","publen;","public","recover_key","recoveri","result","return.","ripemd160","ripemod160","ripemod160(","sha1","sha1(","sha256","sha256(","sha512","sha512(","sig","sig,","sig;","siglen","siglen,","siglen;","signatur","signature,","signature.","size_t","sourc","statement.","store","test","true,","uint32_t","us","void","want","|","|int|recover_key","|type|name|","|void|assert_recover_key","|void|assert_ripemd160","|void|assert_sha1","|void|assert_sha256","|void|assert_sha512","|void|ripemd160","|void|sha1","|void|sha256","|void|sha512"],"currency_8hpp.html":["class","code","currency.hpp","document","eosio::curr","eosio::currency::account","eosio::currency::cr","eosio::currency::currency_stat","eosio::currency::fee_schedul","eosio::currency::issu","eosio::currency::transf","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/currency.hpp","name","sourc","struct","type"],"datastream_8hpp.html":[">","class","code","copyright","datastream.hpp","defin","descript","detail","document","eos/license.txt","eosio::datastream","eosio::datastream<","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/datastream.hpp","name","size_t","sourc","type"],"db_8h.html":["\"alic","&prim);","(","(account_nam","(impli","(int32_t","(it","(or","(truncat","(use","(which",")","*","//","0","0);","0,","0.","0;","1","128","2","256","64","=","==",">",">=","\\*((uint64\\_t\\*)data)","\\*primari","\\*secondari","account","account_nam","act","alreadi","api","array","associ","assum","auto","between","bit","blockchain","buffer","byte","c","char","charli","charlie_itr","class","code","code,","condit","const","contain","continu","copi","copyright","cost","creat","current","data","data,","data_len","data_len)","data_len,","database.","db.h","db.h::db_end_i64","db.h::db_find_i64","db.h::db_get_i64","db.h::db_idx128_end","db.h::db_idx128_find_primari","db.h::db_idx128_find_secondari","db.h::db_idx128_lowerbound","db.h::db_idx128_next","db.h::db_idx128_previ","db.h::db_idx128_remov","db.h::db_idx128_stor","db.h::db_idx128_upd","db.h::db_idx128_upperbound","db.h::db_idx256_end","db.h::db_idx256_find_primari","db.h::db_idx256_find_secondari","db.h::db_idx256_lowerbound","db.h::db_idx256_next","db.h::db_idx256_previ","db.h::db_idx256_remov","db.h::db_idx256_stor","db.h::db_idx256_upd","db.h::db_idx256_upperbound","db.h::db_idx64_end","db.h::db_idx64_find_primari","db.h::db_idx64_find_secondari","db.h::db_idx64_lowerbound","db.h::db_idx64_next","db.h::db_idx64_previ","db.h::db_idx64_remov","db.h::db_idx64_stor","db.h::db_idx64_upd","db.h::db_idx64_upperbound","db.h::db_idx_double_end","db.h::db_idx_double_find_primari","db.h::db_idx_double_find_secondari","db.h::db_idx_double_lowerbound","db.h::db_idx_double_next","db.h::db_idx_double_previ","db.h::db_idx_double_remov","db.h::db_idx_double_stor","db.h::db_idx_double_upd","db.h::db_idx_double_upperbound","db.h::db_idx_long_double_end","db.h::db_idx_long_double_find_primari","db.h::db_idx_long_double_find_secondari","db.h::db_idx_long_double_lowerbound","db.h::db_idx_long_double_next","db.h::db_idx_long_double_previ","db.h::db_idx_long_double_remov","db.h::db_idx_long_double_stor","db.h::db_idx_long_double_upd","db.h::db_idx_long_double_upperbound","db.h::db_lowerbound_i64","db.h::db_next_i64","db.h::db_previous_i64","db.h::db_remove_i64","db.h::db_store_i64","db.h::db_update_i64","db.h::db_upperbound_i64","db_end_i64","db_find_i64","db_find_i64(receiver,","db_get_i64","db_get_i64(itr,","db_idx128_end","db_idx128_find_primari","db_idx128_find_secondari","db_idx128_lowerbound","db_idx128_next","db_idx128_previ","db_idx128_remov","db_idx128_stor","db_idx128_upd","db_idx128_upperbound","db_idx256_end","db_idx256_find_primari","db_idx256_find_secondari","db_idx256_lowerbound","db_idx256_next","db_idx256_previ","db_idx256_remov","db_idx256_stor","db_idx256_upd","db_idx256_upperbound","db_idx64_end","db_idx64_find_primari","db_idx64_find_secondari","db_idx64_lowerbound","db_idx64_next","db_idx64_previ","db_idx64_remov","db_idx64_stor","db_idx64_upd","db_idx64_upperbound","db_idx_double_end","db_idx_double_find_primari","db_idx_double_find_secondari","db_idx_double_lowerbound","db_idx_double_next","db_idx_double_previ","db_idx_double_remov","db_idx_double_stor","db_idx_double_upd","db_idx_double_upperbound","db_idx_long_double_end","db_idx_long_double_find_primari","db_idx_long_double_find_secondari","db_idx_long_double_lowerbound","db_idx_long_double_next","db_idx_long_double_previ","db_idx_long_double_remov","db_idx_long_double_stor","db_idx_long_double_upd","db_idx_long_double_upperbound","db_lowerbound_i64","db_next_i64","db_next_i64(charlie_itr,","db_previous_i64","db_previous_i64(itr,","db_remove_i64","db_remove_i64(itr);","db_store_i64","db_update_i64","db_upperbound_i64","defin","descript","detail","determin","document","doubl","end","end_itr","entri","eos/license.txt","eosio_assert(end_itr","eosio_assert(itr","eosio_assert(len","equal","example:","exist","exists,","expect","file","file.","file:","fill","find","first","float","follow","found","found,","function","gener","given","go","hold","id","id)","id,","in/eosio.cdt/libraries/eosiolib/db.h","index","int","int32_t","integ","integers)","interfac","iter","iterator)","iterator,","itr","itr_prev","key","key.","keys)","last","left","len","len)","lexicograph","long","look","lookup","lowerbound","lowest","match","memori","more...","n(alice));","n(charlie));","name","necessary)","new","newli","next","noth","on","order","otherwis","owner","parameters:","past","pay","payer","payer)","payer,","point","pointer","post","preced","precis","precondition:","previou","prim","primari","primary)","quadrupl","rang","receiver)","receiver,","record","referenc","refund","remov","replac","repres","resid","retriev","return","returns:","row","scope","scope,","secondari","secondary)","secondary,","set","size","sourc","specifi","storag","store","tabl","table\");","table)","table,","table.","table1,","table_nam","uint128\\_t","uint128_t","uint32_t","uint64\\_t","uint64_t","untouch","up","updat","upperbound","us","valid","valu","value,","value[50];","variabl","void","within","|","|int32_t|db_end_i64","|int32_t|db_find_i64","|int32_t|db_get_i64","|int32_t|db_idx128_end","|int32_t|db_idx128_find_primari","|int32_t|db_idx128_find_secondari","|int32_t|db_idx128_lowerbound","|int32_t|db_idx128_next","|int32_t|db_idx128_previ","|int32_t|db_idx128_stor","|int32_t|db_idx128_upperbound","|int32_t|db_idx256_end","|int32_t|db_idx256_find_primari","|int32_t|db_idx256_find_secondari","|int32_t|db_idx256_lowerbound","|int32_t|db_idx256_next","|int32_t|db_idx256_previ","|int32_t|db_idx256_stor","|int32_t|db_idx256_upperbound","|int32_t|db_idx64_end","|int32_t|db_idx64_find_primari","|int32_t|db_idx64_find_secondari","|int32_t|db_idx64_lowerbound","|int32_t|db_idx64_next","|int32_t|db_idx64_previ","|int32_t|db_idx64_stor","|int32_t|db_idx64_upperbound","|int32_t|db_idx_double_end","|int32_t|db_idx_double_find_primari","|int32_t|db_idx_double_find_secondari","|int32_t|db_idx_double_lowerbound","|int32_t|db_idx_double_next","|int32_t|db_idx_double_previ","|int32_t|db_idx_double_stor","|int32_t|db_idx_double_upperbound","|int32_t|db_idx_long_double_end","|int32_t|db_idx_long_double_find_primari","|int32_t|db_idx_long_double_find_secondari","|int32_t|db_idx_long_double_lowerbound","|int32_t|db_idx_long_double_next","|int32_t|db_idx_long_double_previ","|int32_t|db_idx_long_double_stor","|int32_t|db_idx_long_double_upperbound","|int32_t|db_lowerbound_i64","|int32_t|db_next_i64","|int32_t|db_previous_i64","|int32_t|db_store_i64","|int32_t|db_upperbound_i64","|type|name|","|void|db_idx128_remov","|void|db_idx128_upd","|void|db_idx256_remov","|void|db_idx256_upd","|void|db_idx64_remov","|void|db_idx64_upd","|void|db_idx_double_remov","|void|db_idx_double_upd","|void|db_idx_long_double_remov","|void|db_idx_long_double_upd","|void|db_remove_i64","|void|db_update_i64"],"dispatcher_8hpp.html":["(setpriv)(setalimits)(setglimits)(setprods)(reqauth)",")","action","appli","avail","class","code","contract","conveni","creat","defin","deriv","dispatcher.hpp","document","eosio::bios,","eosio::contract","eosio_abi","eosio_abi(","eosio_abi;","eosio_abiconveni","eosio_api","eosio_api;","eosio_api_cal","eosio_api_call;","example:","file","file.","file:","follow","gener","go","handler","handler.","in/eosio.cdt/libraries/eosiolib/dispatcher.hpp","macro","macro,","member","n","n;","name","need","parameters:","sequenc","sourc","support","type","us"],"eosio_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","eosio.hpp","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/eosio.hpp","sourc"],"eosiolib_8cpp.html":["(","(size_t","(void",")","*","0","0.","addit","alloc","area","array","bit","block","byte","calloc","calloc(),","class","code","count","count,","dealloc","document","each","element","elements,","eosio","eosio::memory_manag","eosio::memory_manager::memori","eosio::memory_manager::memory::buffer_ptr","eosiolib.cpp","eosiolib.cpp::calloc","eosiolib.cpp::fre","eosiolib.cpp::malloc","eosiolib.cpp::realloc","eosiolib.cpp::sbrk","file","file.","file:","follow","free","function","gener","given","go","in/eosio.cdt/libraries/eosiolib/eosiolib.cpp","initi","long,","malloc","malloc(),","memori","memory,","memory.","name","namespac","new","num_byt","num_bytes)","number","parameters:","pointer","previous","ptr","ptr)","ptr,","realloc","realloc()","returns:","sbrk","size","size)","size_t","sourc","start","type","void","void*"],"fixed__key_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","eosio::fixed_key","eosio::fixed_key::bool_pack","file","file.","file:","fixed_key.hpp","follow","gener","go","in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp","name","sourc","struct","type"],"fixedpoint_8hpp.html":["class","code","document","eosio::fixed_point128","eosio::fixed_point32","eosio::fixed_point64","file","file.","file:","fixedpoint.hpp","follow","gener","go","in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp","name","sourc","struct","type"],"memory_8h.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/memory.h","memory.h","sourc"],"memory_8hpp.html":["(","(size_t","(void",")","*","*|calloc","*|malloc","*|realloc","*|sbrk","0","0.","addit","alloc","area","array","bit","block","byte","calloc","calloc(),","class","code","copyright","count","count,","dealloc","defin","descript","detail","document","each","element","elements,","eos/license.txt","eosio","file","file.","file:","follow","free","function","gener","given","go","in/eosio.cdt/libraries/eosiolib/memory.hpp","initi","long,","malloc","malloc(),","memori","memory,","memory.","memory.hpp","memory.hpp::calloc","memory.hpp::fre","memory.hpp::malloc","memory.hpp::realloc","memory.hpp::sbrk","namespac","new","num_byt","num_bytes)","number","parameters:","pointer","previous","ptr","ptr)","ptr,","realloc","realloc()","returns:","sbrk","size","size)","size_t","sourc","start","void","void*","|","|type|name|","|void","|void|fre"],"multi__index_8hpp.html":[">","class","code","copyright","defin","descript","detail","document","eos/license.txt","eosio::_multi_index_detail::secondary_index_db_funct","eosio::_multi_index_detail::secondary_key_trait","eosio::_multi_index_detail::secondary_key_traits<","eosio::indexed_bi","eosio::multi_index","eosio::multi_index::const_iter","eosio::multi_index::index","eosio::multi_index::index::const_iter","eosio::multi_index::intc","eosio::multi_index::item","eosio::multi_index::item_ptr","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","key256","make_traits_for_arithmetic_secondary_key","make_traits_for_arithmetic_secondary_key;","multi_index.hpp","name","sourc","struct","type","wrap_secondary_array_typ","wrap_secondary_array_type;","wrap_secondary_simple_typ","wrap_secondary_simple_type;"],"optional_8hpp.html":["class","code","document","eosio::opt","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/optional.hpp","name","optional.hpp","sourc","type"],"permission_8h.html":["(","(account_nam","(can","(cannot","(const","(empti","(in",")","*","0","1","account","account)","account,","account.","account_nam","act","author","authorized,","bytes)","char","check","check_permission_author","check_transaction_author","class","code","const","copyright","creation","defin","delay","delay_u","delay_us)","descript","detail","document","eos/license.txt","epoch)","exce","file","file.","file:","follow","function","gener","get_account_creation_tim","get_permission_last_us","go","in/eosio.cdt/libraries/eosiolib/permission.h","int32_t","int64_max)","int64_t","key","last","microsecond","name","otherwis","owner","parameters:","permiss","permission)","permission,","permission.","permission.h","permission.h::check_permission_author","permission.h::check_transaction_author","permission.h::get_account_creation_tim","permission.h::get_permission_last_us","permission_nam","permissions.","perms_data","perms_data,","perms_siz","perms_size)","perms_size,","pointer","provid","provided)","pubkeys_data","pubkeys_data,","pubkeys_s","pubkeys_size,","public","return","returns:","serial","set","size","sourc","start","time","transact","trx_data","trx_data,","trx_size","trx_size,","uint32_t","uint64_t","unix","us","vector","wildcard)","|","|int32_t|check_permission_author","|int32_t|check_transaction_author","|int64_t|get_account_creation_tim","|int64_t|get_permission_last_us","|type|name|"],"permission_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/permission.hpp","permission.hpp","sourc"],"print_8h.html":["(","(const","(doubl","(float","(i.e.","(int64_t","(uint64_t",")","*","/","//","0.5","10.0;","1000000000000000000","128","1e+18);","5);","5.0","64","87654323456","87654323456);","=","abcd","base32","bit","char","class","code","const","copyright","cstr","cstr)","cstr,","data,","datalen","datalen)","defin","descript","detail","document","doubl","double)","encod","eos/license.txt","example:","file","file.","file:","float","float)","follow","function","gener","given","go","hello","in/eosio.cdt/libraries/eosiolib/print.h","int128_t","int64_t","integ","integer.","large_int(","large_int(87654323456);","len","len)","length","long","name","name)","null","number","output:","parameters:","point","pointer","precis","print","print.h","print.h::print","print.h::printdf","print.h::printhex","print.h::printi","print.h::printi128","print.h::printn","print.h::printqf","print.h::prints_l","print.h::printsf","print.h::printui","print.h::printui128","printdf","printdf(value);","printhex","printi","printi(","printi128","printi128(&large_int);","printn","printn(n(abcde));","printqf","printqf(value);","prints(\"hello","prints_l","prints_l(\"hello","printsf","printsf(value);","printui","printui(1e+18);","printui128","printui128(&large_int);","quadrupl","sign","singl","sourc","string","string.","termin","uint128_t","uint32_t","uint64_t","unsign","up","valu","value)","void","world!","world!\");","world!\",","|","|type|name|","|void|print","|void|printdf","|void|printhex","|void|printi","|void|printi128","|void|printn","|void|printqf","|void|prints_l","|void|printsf","|void|printui","|void|printui128"],"print_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","eosio::iostream","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/print.hpp","name","print.hpp","sourc","type"],"privileged_8h.html":["\"active\"","\"pending\"","(","(account_nam","(char","(identifier)","(int64_t","(weight",")","*","/","0","1","absolut","account","account)","account,","account.","account_nam","activ","activate_featur","appropri","automatically.","avail","base","becom","block","blockchain","blolckchain","bool","buffer","buffer,","byte","change,","char","check","class","code","contain","cpu","cpu_weight","cpu_weight)","data","data,","data.","datalen","datalen)","document","f","f)","fals","featur","feature.","file","file.","file:","fill","follow","fraction","function","gener","get_blockchain_parameters_pack","get_resource_limit","go","hold","in/eosio.cdt/libraries/eosiolib/privileged.h","int64\\_t","int64_t","irreversible,","irrreversible.","is_priv","is_priv)","is_privileg","limit","long","memori","name","net","net_weight","net_weight,","new","next","onc","order","otherwis","output","pack","param","paramet","parameters,","parameters.","parameters:","pointer","post","precondition:","privileg","privileged.","privileged.h","privileged.h::activate_featur","privileged.h::get_blockchain_parameters_pack","privileged.h::get_resource_limit","privileged.h::is_privileg","privileged.h::set_active_produc","privileged.h::set_blockchain_parameters_pack","privileged.h::set_privileg","privileged.h::set_proposed_produc","privileged.h::set_resource_limit","produc","produce_key","producer\\_data","producer\\_data\\_s","producer_data","producer_data,","producer_data_s","producer_data_size)","producers.","promot","proportion","propos","ram","ram_byt","ram_bytes,","rang","report","requir","resourc","retriev","return","returns:","round","schedul","serial","set","set_active_produc","set_blockchain_parameters_pack","set_privileg","set_proposed_produc","set_resource_limit","size","size.","sourc","start","statu","suffic","total_weight_of_all_accounts)","true","uint32_t","unsuccessful,","valid","version","void","whose","|","|bool|is_privileg","|int64_t|set_proposed_produc","|type|name|","|uint32_t|get_blockchain_parameters_pack","|void|activate_featur","|void|get_resource_limit","|void|set_active_produc","|void|set_blockchain_parameters_pack","|void|set_privileg","|void|set_resource_limit"],"privileged_8hpp.html":["class","code","document","eosio::blockchain_paramet","eosio::producer_key","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/privileged.hpp","name","privileged.hpp","sourc","struct","type"],"producer__schedule_8hpp.html":["class","code","document","eosio::producer_schedul","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/producer\\_schedule.hpp","name","producer_schedule.hpp","sourc","struct","type"],"public__key_8hpp.html":["class","code","document","eosio::public_key","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/public\\_key.hpp","name","public_key.hpp","sourc","struct","type"],"reflect_8hpp.html":["(args1)(args2)(args3)","(basea)(baseb)(basec)","(field1)(field2)(field3)","also:","args.","base","class","class.","classes.","code","declar","defin","document","empti","eosio","eosio::reflector","eoslib_reflect","eoslib_reflect;","eoslib_reflect_base_member_count","eoslib_reflect_base_member_count;","eoslib_reflect_deriv","eoslib_reflect_derived;","eoslib_reflect_derived_impl","eoslib_reflect_derived_impl;","eoslib_reflect_derived_impl_ext","eoslib_reflect_derived_impl_ext;","eoslib_reflect_derived_impl_inlin","eoslib_reflect_derived_impl_inline;","eoslib_reflect_derived_templ","eoslib_reflect_derived_template;","eoslib_reflect_derived_templateperform","eoslib_reflect_derivedspeci","eoslib_reflect_empti","eoslib_reflect_empty;","eoslib_reflect_emptyperform","eoslib_reflect_fwd","eoslib_reflect_fwd;","eoslib_reflect_fwdperform","eoslib_reflect_impl","eoslib_reflect_impl;","eoslib_reflect_member_count","eoslib_reflect_member_count;","eoslib_reflect_templ","eoslib_reflect_template;","eoslib_reflect_templateperform","eoslib_reflect_visit2_bas","eoslib_reflect_visit2_base;","eoslib_reflect_visit2_memb","eoslib_reflect_visit2_member;","eoslib_reflect_visit_bas","eoslib_reflect_visit_base;","eoslib_reflect_visit_baseeosio","eoslib_reflect_visit_memb","eoslib_reflect_visit_member;","eoslib_reflectspeci","file","file.","file:","follow","forward","gener","go","in/eosio.cdt/libraries/eosiolib/reflect.hpp","inherit","member","name","names.","parameters:","perform","reflect","reflect.hpp","reflection.","see","sequenc","sourc","special","struct","templat","template_arg","type","type."],"serialize_8hpp.html":["(basea)(baseb)(basec)","(field1)(field2)(field3)","base","class","class.","code","defin","defined.","deseri","document","eoslib_reflect_member_op","eoslib_reflect_member_op;","eoslib_seri","eoslib_serialize;","eoslib_serialize_deriv","eoslib_serialize_derived;","eoslib_serialize_deriveddefin","eoslib_serializedefin","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/serialize.hpp","inherit","member","name","names.","parameters:","sequenc","serial","serialize.hpp","sourc","type"],"singleton_8hpp.html":["class","code","document","eosio::singleton","eosio::singleton::row","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/singleton.hpp","name","singleton.hpp","sourc","struct","type"],"stdlib_8hpp.html":["class","code","document","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/stdlib.hpp","sourc","stdlib.hpp"],"symbol_8hpp.html":["char","class","code","convert","defin","document","eosio::extended_symbol","eosio::symbol_typ","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/symbol.hpp","macro","name","parameters:","precis","represent","s","s;","sourc","str","string","struct","symbol","symbol.hpp","type"],"system_8h.html":["\"one","(","()","(i.e.","(int32_t","(round","(uint32_t",")","*","/","0","1","1,","1970","2,","==","abort","abort,","action","action)","block","bypass","called.","chang","changes.","char","class","cleanup","code","code)","condit","const","contract.","copyright","current","current_tim","defin","descript","destructor","detail","document","down","eos/license.txt","eosio_assert","eosio_assert(1","eosio_assert_cod","eosio_assert_messag","eosio_exit","eosio_exit(0);","eosio_exit(1);","eosio_exit(2);","eosio_exit(3);","equal","error","example:","execut","exit","explain","fail","failur","file","file.","file:","follow","function","gener","go","ignor","in/eosio.cdt/libraries/eosiolib/system.h","includ","int32_t","length","method","microsecond","msg","msg)","msg,","msg_len","msg_len)","nearest","normal","now","null","one.\");","parameters:","pend","pointer","process","reason","return","returns:","second","second)","sourc","start","string","system.h","system.h::current_tim","system.h::eosio_assert","system.h::eosio_assert_cod","system.h::eosio_assert_messag","system.h::eosio_exit","system.h::now","termin","test","test,","time","true","two.\");","uint32_t","uint64_t","unwind","us","void","wasm","without","|","|type|name|","|uint32_t|now","|uint64_t|current_tim","|void|eosio_assert","|void|eosio_assert_cod","|void|eosio_assert_messag","|void|eosio_exit"],"time_8hpp.html":["class","code","document","eosio::block_timestamp","eosio::microsecond","eosio::time_point","eosio::time_point_sec","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/time.hpp","name","sourc","time.hpp","type"],"transaction_8h.html":["&","(","()","(char","(const","(uint32_t",")",");","*","0","0)","0xffffffffffffffff","1","=","access","account","account_nam","action","action,","activ","alreadi","amount","assert.","atom","block","buff","buff,","buffer","buffer,","byte","cancel","cancel/replac","cancel_def","cancel_deferred(","canceled,","canceled.","char","class","code","const","context","context_free_data","context_free_data[index]","context_free_data[index].size()","contract,","copi","copied,","copyright","current","defer","defin","descript","detail","document","entri","eos/license.txt","eosio_print(tm);","example:","execut","exists.","expir","expiration();","f","fail","failur","file","file.","file:","flight","follow","found","free","function","gener","get","get_act","get_context_free_data","go","id","in/eosio.cdt/libraries/eosiolib/transaction.h","index","index,","indic","inflight","int","number","output","pack","parameters:","pass","pay","payer","payer,","pointer","post","precondition:","prefix","provid","published.","ram","read,","read_transact","replace_exist","report","request","requir","reserv","retriev","return","returns:","send","send_def","sender","sender_id","sender_id)","sender_id,","serial","serialized_transact","serialized_transaction,","signed_transaction.context_free_data[index].","size","size)","size,","size==0","size_t","sourc","tapo","tapos_block_num","tapos_block_num();","tapos_block_prefix","tapos_block_prefix();","tbn","tbp","time","tm","transact","transaction.","transaction.h","transaction.h::cancel_def","transaction.h::expir","transaction.h::get_act","transaction.h::get_context_free_data","transaction.h::read_transact","transaction.h::send_def","transaction.h::tapos_block_num","transaction.h::tapos_block_prefix","transaction.h::transaction_s","transaction_s","type","type,","uint128_t","uint32_t","us","valid","void","write","written","|","|int|cancel_def","|int|get_act","|int|get_context_free_data","|int|tapos_block_num","|int|tapos_block_prefix","|size_t|read_transact","|size_t|transaction_s","|time|expir","|type|name|","|void|send_def"],"transaction_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","eosio::onerror","eosio::transact","eosio::transaction_head","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/transaction.hpp","name","sourc","struct","transaction.hpp","type"],"types_8h.html":["(","(checksum160)","(checksum256)","(checksum512)",")","160","256","512","account","account.","account_nam","account_name;","account_namenam","account_permiss","action","action.","action_nam","action_name;","action_namenam","align","align/overalign","aligned.","aligned;","atabl","bit","block_id_typ","block_id_type;","call","checksum160","checksum256","checksum512","class","code","copyright","defin","descript","detail","document","ensur","eos/license.txt","eosio","file","file.","file:","follow","function","gener","go","hash","id.","in/eosio.cdt/libraries/eosiolib/types.h","intrins","macro","name","permission.","permission_nam","permission_name;","permission_namenam","pointers/refer","properli","public_key","scope","scope.","scope_nam","scope_name;","scope_namenam","signatur","sourc","struct","table.","table_nam","table_name;","table_namenam","time","time.","time;","timetime.","transact","transaction_id_typ","transaction_id_type;","transaction_id_typetyp","type","typedef","types.h","types.h::align","uint16_t","uint32_t","uint64_t","weight_typ","weight_type;","weight_typemacro"],"types_8hpp.html":["&","(","(const",")","64",">","base32","bit","bool","checksum160","checksum256","checksum256.","class","code","compar","compil","const","constexpr","copyright","data","defin","descript","detail","document","encod","eos/license.txt","eosio::nam","equal","fals","file","file.","file:","first","follow","function","gener","go","in/eosio.cdt/libraries/eosiolib/types.hpp","integ","interpret","lh","lhs,","n","n;","name","nuse","oper","operator!=","operator==","parameters:","represent","returns:","rh","rhs)","second","sourc","std::less","std::less<","string","struct","time","true","type","types.hpp","types.hpp::operator!=","types.hpp::operator==","uint64_t","unequ","unsign","us","x","x."],"varint_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/varint.hpp","name","signed_int","sourc","struct","type","unsigned_int","varint.hpp"],"vector_8hpp.html":["class","code","document","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/vector.hpp","sourc","vector.hpp"]},"length":164},"tokenStore":{"root":{"0":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.004120313143798929},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0012131715771230502},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0012142237640936687},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.02127659574468085},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0032289312237649337},"db_8h.html":{"ref":"db_8h.html","tf":0.0009728978457261987},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.01606425702811245}},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003708281829419036},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012575979878432194},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0029060381013884403},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},".":{"5":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}}},"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}},")":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}},"x":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}},",":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"0":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}},"docs":{},"f":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}},"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}},"docs":{},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003296250515039143},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002583144979011947}}}},"docs":{},")":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},".":{"0":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}}}},"docs":{}}},"2":{"8":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.043675319324268644},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__database.html":{"ref":"group__database.html","tf":0.004506065857885615},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004509973980919341},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.03713270907329674},"db_8h.html":{"ref":"db_8h.html","tf":0.00542043085476025},"print_8h.html":{"ref":"print_8h.html","tf":0.01556420233463035}}},"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}},"3":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}},"t":{"docs":{},"h":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}},"6":{"0":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723}}},"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008240626287597857},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006457862447529867}}},"9":{"7":{"0":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01593625498007968},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.017316017316017316},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"system_8h.html":{"ref":"system_8h.html","tf":0.0125}},")":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}},"docs":{}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.009476720230737536},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013297872340425532},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.007426541814659348},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.010040160642570281}},".":{"0":{"docs":{},".":{"0":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"docs":{}}},"1":{"docs":{},".":{"0":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"docs":{}}},"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}},")":{"docs":{},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012915724895059735}}}},"e":{"docs":{},"+":{"1":{"8":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"docs":{}},"docs":{}}},",":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}},"2":{"3":{"2":{"3":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}},"docs":{}},"docs":{}},"5":{"6":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.007556675062972292},"group__database.html":{"ref":"group__database.html","tf":0.004506065857885615},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004509973980919341},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"db_8h.html":{"ref":"db_8h.html","tf":0.005142460041695622},"types_8h.html":{"ref":"types_8h.html","tf":0.01680672268907563}}},"docs":{}},"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}},",":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}},"^":{"6":{"2":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}},"docs":{}},"docs":{}}},"3":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002472187886279357},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.022919179734620022},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.022809123649459785},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002583144979011947}},",":{"6":{"4":{"docs":{},",":{"1":{"2":{"8":{"docs":{},",":{"2":{"5":{"6":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"4":{"docs":{"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304}}},"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},".":{"0":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}},"5":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"docs":{}},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008240626287597857},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006457862447529867}}}},"4":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008240626287597857},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006457862447529867}}},"5":{"1":{"2":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723}}},"docs":{}},"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},".":{"0":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}}},"docs":{}},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}},"6":{"4":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.060980634528224144},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.023872679045092837},"group__database.html":{"ref":"group__database.html","tf":0.00779896013864818},"group__databasec.html":{"ref":"group__databasec.html","tf":0.007805724197745013},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.005125919322487185},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.05715208266063933},"db_8h.html":{"ref":"db_8h.html","tf":0.009312022237665045},"print_8h.html":{"ref":"print_8h.html","tf":0.023346303501945526},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055}},")":{"docs":{},")":{"docs":{},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0020601565718994645},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0016144656118824668}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003708281829419036},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0029060381013884403}}}}},"6":{"docs":{"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903}}},"docs":{}},"7":{"docs":{"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808}},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"8":{"7":{"6":{"5":{"4":{"3":{"2":{"3":{"4":{"5":{"6":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876}},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012915724895059735}}}},"9":{"3":{"4":{"4":{"5":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001467197652483756}}}},"6":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012575979878432194}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"\"":{"1":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0060783902745755606}}},"docs":{},"\"":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"\"":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001467197652483756}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}},"a":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}},"n":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"\"":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004401592957451268}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013}}}}},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.003353594634248585}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}},"k":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926}}}}}},",":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}},"l":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}},".":{"docs":{},"\"":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}},".":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926}}}},"b":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"b":{"docs":{},"u":{"docs":{},"r":{"docs":{},"g":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004401592957451268}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004401592957451268}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.013745704467353952}}}}}}},"v":{"docs":{},"a":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004401592957451268}}}}}}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}}}}}},"#":{"docs":{},"#":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}},"$":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635}},"{":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"}":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"}":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"1":{"0":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}}},"1":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}}},"2":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}}},"3":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}}},"4":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}}},"5":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}}},"6":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}}},"7":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}}},"8":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}}},"9":{"docs":{},"/":{"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}}},"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.01675977653631285},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0136986301369863},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.00859106529209622},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.01935483870967742},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0064516129032258064},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}},"3":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.007009345794392523},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492}}}},"4":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}},"6":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}},"8":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"9":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"docs":{}}},"2":{"0":{"docs":{},"/":{"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}}},"1":{"docs":{},"/":{"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}}},"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0136986301369863},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.00859106529209622},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012903225806451613},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0064516129032258064},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}},"3":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.007009345794392523},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492}}}},"4":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}},"6":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}},"8":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"9":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"docs":{}}},"3":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"3":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.007009345794392523},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492}}}},"4":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}},"6":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}},"8":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"9":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"docs":{}}},"4":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"4":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}},"6":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}},"8":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"9":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"docs":{}}},"5":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"6":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}},"8":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"9":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"docs":{}}},"6":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"6":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}},"8":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"9":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"docs":{}}},"7":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"8":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"9":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"docs":{}}},"8":{"7":{"6":{"5":{"4":{"3":{"2":{"3":{"4":{"5":{"6":{"docs":{},")":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"8":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"9":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"docs":{}}},"9":{"docs":{},"/":{"1":{"8":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"2":{"1":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"9":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"docs":{}}},"docs":{"./":{"ref":"./","tf":0.007288629737609329},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.011948908117016894},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.012594458438287154},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01240694789081886},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01272264631043257},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.029177718832891247},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__database.html":{"ref":"group__database.html","tf":0.010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010407632263660017},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"group__datastream.html":{"ref":"group__datastream.html","tf":0.014874915483434753},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.022535211267605635},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.023054755043227664},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01593625498007968},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0225},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.017316017316017316},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013297872340425532},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.015789473684210527},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.03125},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0171606864274571},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010657193605683837},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.016771488469601678},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.028368794326241134},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.03754266211604096},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.01834862385321101},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01953125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.013157894736842105},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.016574585635359115},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.008968609865470852},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.015789473684210527},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.019305019305019305},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.017310252996005325},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.03867403314917127},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.027932960893854747},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.03571428571428571},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0025151959756864388},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0273972602739726},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.02577319587628866},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.025806451612903226},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.017126546146527116},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020833333333333332},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.014285714285714285},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.03870967741935484},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.04439252336448598},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.015681544028950542},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.015606242496998799},"action_8h.html":{"ref":"action_8h.html","tf":0.01949317738791423},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.009363900548918308},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0099601593625498},"db_8h.html":{"ref":"db_8h.html","tf":0.008339124391938846},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.022727272727272728},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.02100840336134454},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"print_8h.html":{"ref":"print_8h.html","tf":0.021400778210116732},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01675977653631285},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.010040160642570281},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.004903053264987743},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0053285968028419185},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.031914893617021274},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.017064846416382253},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.015789473684210527},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.019305019305019305},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.017310252996005325},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.015873015873015872},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.012027491408934709},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.041935483870967745},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004672897196261682},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00199203187250996},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.022099447513812154},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00796812749003984},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},")":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"1":{"6":{"0":{"docs":{},")":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},")":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{},")":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"a":{"docs":{},"n":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},")":{"docs":{"classes.html":{"ref":"classes.html","tf":0.3851851851851852}}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.008298755186721992},"variables.html":{"ref":"variables.html","tf":0.007194244604316547}}},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996}}}}}}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01037344398340249},"variables.html":{"ref":"variables.html","tf":0.01079136690647482}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01037344398340249}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.008298755186721992},"variables.html":{"ref":"variables.html","tf":0.01079136690647482}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.02074688796680498}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0683453237410072}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.02074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.01079136690647482}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.014388489208633094}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.025179856115107913}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.01079136690647482}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996},"variables.html":{"ref":"variables.html","tf":0.01079136690647482}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01867219917012448},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.008298755186721992},"variables.html":{"ref":"variables.html","tf":0.01079136690647482}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.006224066390041493}}}},"docs":{}},"6":{"4":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}},"docs":{}},"docs":{}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},",":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":0.05}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01037344398340249},"variables.html":{"ref":"variables.html","tf":0.039568345323741004}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996}}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01867219917012448},"variables.html":{"ref":"variables.html","tf":0.01079136690647482}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.016597510373443983},"variables.html":{"ref":"variables.html","tf":0.007194244604316547}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.006224066390041493},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.012448132780082987},"variables.html":{"ref":"variables.html","tf":0.025179856115107913},"enumerations.html":{"ref":"enumerations.html","tf":0.05}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.02074688796680498}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.008298755186721992},"variables.html":{"ref":"variables.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.008298755186721992}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.016597510373443983}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},")":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":0.05}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.01079136690647482}}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996},"variables.html":{"ref":"variables.html","tf":0.007194244604316547}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.012448132780082987},"variables.html":{"ref":"variables.html","tf":0.007194244604316547}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.007194244604316547}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.012448132780082987},"variables.html":{"ref":"variables.html","tf":0.007194244604316547}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.008298755186721992}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.008298755186721992},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996},"variables.html":{"ref":"variables.html","tf":0.01079136690647482}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.02158273381294964}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}},"o":{"0":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}},"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.007611798287345386}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"1":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"2":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"3":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"4":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"5":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}},")":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002472187886279357},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0038747174685179204}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004672897196261682},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}}}}},"u":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464}},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"e":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0013864818024263432},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0013876843018213356},"db_8h.html":{"ref":"db_8h.html","tf":0.0011118832522585128}}}},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.01675977653631285},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.011682242990654205},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001467197652483756},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004520503713270907},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876}},")":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}},"docs":{}},"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"docs":{}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006457862447529867}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},")":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.011124845488257108},"group__database.html":{"ref":"group__database.html","tf":0.0006932409012131716},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0006938421509106678},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.015498869874071682},"db_8h.html":{"ref":"db_8h.html","tf":0.0005559416261292564}}}}}}},")":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.01971830985915493},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.020172910662824207},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010638297872340425},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.045454545454545456},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.06060606060606061},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010657193605683837},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.043010752688172046},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.008385744234800839},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.03546099290780142},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.019801980198019802},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.038461538461538464},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.024390243902439025},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.047619047619047616},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.01834862385321101},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0234375},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.02631578947368421},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.013452914798206279},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.010526315789473684},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007722007722007722},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007989347536617843},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.04419889502762431},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0782122905027933},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.023809523809523808},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005449591280653951},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0547945205479452},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.041237113402061855},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.06451612903225806},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.028169014084507043},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.06779661016949153},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.019029495718363463},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.01694915254237288},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.08571428571428572},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.01935483870967742},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.02336448598130841},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0048250904704463205},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613},"action_8h.html":{"ref":"action_8h.html","tf":0.011695906432748537},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006457862447529867},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.01606425702811245}}},"a":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003708281829419036},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0029060381013884403}},")":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}},"r":{"docs":{},"g":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}},"s":{"1":{"docs":{},")":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"2":{"docs":{},")":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"3":{"docs":{},")":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542}}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"docs":{}}},"e":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077}}}},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.007194244604316547}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.017064846416382253},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"action_8h.html":{"ref":"action_8h.html","tf":0.01364522417153996},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.004864489228630994},"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}},"e":{"docs":{},")":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},"(":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0037727939635296584}},"(":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010479983232026828}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279}},",":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526}}}}}},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941}}}}}}}}}}}}}}}},"b":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0020601565718994645},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0016144656118824668}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},")":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"b":{"docs":{},")":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},")":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.012048192771084338},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.013043478260869565},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143}}}}}},"\"":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"permission_8h.html":{"ref":"permission_8h.html","tf":0.020588235294117647}},"t":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"db_8h.html":{"ref":"db_8h.html","tf":0.0034746351633078527},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0041928721174004195},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}},"docs":{}},"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}},")":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0136986301369863},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012903225806451613},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801}}}}},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}},".":{"docs":{},"e":{"docs":{},".":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763},"system_8h.html":{"ref":"system_8h.html","tf":0.0125}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}},"x":{"1":{"2":{"8":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}},"docs":{}},"docs":{}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}},"m":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004672897196261682}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"1":{"docs":{},")":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"2":{"docs":{},")":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"3":{"docs":{},")":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.024096385542168676},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.02608695652173913},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.015267175572519083},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143}}}}}}}}}}},"t":{"docs":{},"d":{"docs":{},")":{"docs":{"classes.html":{"ref":"classes.html","tf":0.007407407407407408}}},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.00859106529209622}}}}}}}}}}}}}}}}},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"s":{"docs":{},")":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}}}}},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{"classes.html":{"ref":"classes.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0022602518566354536}}},"docs":{}},"docs":{}},"docs":{}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0078003120124804995}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0019373587342589602}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},"(":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}}}}},")":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.011948908117016894},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.012594458438287154},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.013392857142857142},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0136986301369863},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.018610421836228287},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.019083969465648856},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.029177718832891247},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__database.html":{"ref":"group__database.html","tf":0.010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010407632263660017},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"group__datastream.html":{"ref":"group__datastream.html","tf":0.02434077079107505},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.022535211267605635},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.023054755043227664},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01593625498007968},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0225},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.017316017316017316},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013297872340425532},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021052631578947368},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.03125},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.020949409404947626},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010657193605683837},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.016771488469601678},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.028368794326241134},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.03754266211604096},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.01834862385321101},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0234375},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.013157894736842105},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.016574585635359115},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.011210762331838564},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.017543859649122806},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.02059202059202059},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.018641810918774968},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.03867403314917127},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.027932960893854747},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.03571428571428571},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.012995179207713268},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0273972602739726},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.02577319587628866},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.025806451612903226},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.01807802093244529},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020833333333333332},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.014285714285714285},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.03870967741935484},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.04439252336448598},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.015681544028950542},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.015606242496998799},"action_8h.html":{"ref":"action_8h.html","tf":0.01949317738791423},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.009363900548918308},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.014940239043824702},"db_8h.html":{"ref":"db_8h.html","tf":0.008339124391938846},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.022727272727272728},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.02100840336134454},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"print_8h.html":{"ref":"print_8h.html","tf":0.021400778210116732},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01675977653631285},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.010040160642570281},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.009925558312655087},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.010178117048346057},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00796812749003984},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},")":{"docs":{},"{":{"docs":{},"}":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}},".":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}},"*":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.02729528535980149},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.027989821882951654},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010407632263660017},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.02976190476190476},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.03125},"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0175},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010638297872340425},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0031201248049922},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.009174311926605505},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.03763440860215054},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.06629834254143646},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.055865921787709494},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0136986301369863},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.013745704467353952},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012903225806451613},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.043478260869565216},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693},"action_8h.html":{"ref":"action_8h.html","tf":0.011695906432748537},"chain_8h.html":{"ref":"chain_8h.html","tf":0.020202020202020204},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.043824701195219126},"db_8h.html":{"ref":"db_8h.html","tf":0.01667824878387769},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.05454545454545454},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.03361344537815126},"permission_8h.html":{"ref":"permission_8h.html","tf":0.029411764705882353},"print_8h.html":{"ref":"print_8h.html","tf":0.023346303501945526},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0260707635009311},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.01606425702811245}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"s":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}},",":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.03314917127071823},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0223463687150838}}}}}}},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}},"|":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"r":{"docs":{},"k":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}}},"/":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}}},"/":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"u":{"docs":{},"s":{"docs":{},"r":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"s":{"docs":{},"d":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"1":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"4":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"8":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003708281829419036},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.041353383458646614},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.026525198938992044},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.009431984908824145},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0029060381013884403},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"print_8h.html":{"ref":"print_8h.html","tf":0.019455252918287938}},"i":{"docs":{},"f":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}}}}},".":{"docs":{"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176}}}},":":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}},":":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.043478260869565216},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.125},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.125},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.06060606060606061},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.038461538461538464},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.04},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.024390243902439025},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.047619047619047616},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.05555555555555555},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.05},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.125},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.01675977653631285},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0136986301369863},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.01935483870967742},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07670155446832229}}}}}}}},">":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__database.html":{"ref":"group__database.html","tf":0.0012131715771230502},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0012142237640936687},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__datastream.html":{"ref":"group__datastream.html","tf":0.34090909090909094},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842},"classes.html":{"ref":"classes.html","tf":0.8333333333333333},"functions.html":{"ref":"functions.html","tf":0.07670155446832229},"annotated.html":{"ref":"annotated.html","tf":0.7894736842105263},"struct_extended.html":{"ref":"struct_extended.html","tf":0.04},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.20837671080228726},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":2.5434782608695654},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":6.28030303030303},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007104795737122558},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.010238907849829351},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.047619047619047616},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":3.8675426136363638},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.004484304932735426},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011583011583011582},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011984021304926764},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014634146341463415},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":4.5285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001467197652483756},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":1.3910336239103365},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":1.2758064516129033},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.8174711343122381},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.03333333333333333},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"namespacestd.html":{"ref":"namespacestd.html","tf":3.8088235294117645},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":6.267543859649122},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.0714285714285714},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":3},"db_8h.html":{"ref":"db_8h.html","tf":0.0009728978457261987},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.8823529411764706},"types_8hpp.html":{"ref":"types_8hpp.html","tf":1.6666666666666665}},">":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0057684384013185},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004520503713270907}}},"=":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0012131715771230502},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0012142237640936687},"db_8h.html":{"ref":"db_8h.html","tf":0.0009728978457261987}}},",":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.019801980198019802}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}},"(":{"docs":{},")":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0027247956403269754}}}}}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}},"[":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"]":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}}}}}}},"{":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}},"&":{"docs":{},"]":{"docs":{},"(":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"&":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0060783902745755606}}}}}}}}}}},"_":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}}},"s":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}}},"s":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}},"docs":{}}}}}}},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}},"docs":{}}}}}},"e":{"docs":{},"q":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}}},"s":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.013185002060156572},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.010978366160800775}}},"docs":{}},"docs":{}},"docs":{}}},"d":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":3.028985507246377}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":3.028985507246377}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}},"docs":{}}}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}},"docs":{}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}},"docs":{}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}},"s":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}},"docs":{}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}},"docs":{}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.4842829990563154},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.484193860864312}}},"docs":{}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":3.028985507246377}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":3.75990099009901}},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561}}},"t":{"docs":{},"h":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901}}}},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004611192622091804}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":5.011363636363637}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":3.032258064516129}},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":5.043478260869565},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}},"p":{"docs":{},"o":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":3.032258064516129}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":3.032258064516129}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}},"u":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}},"`":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}},"`":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}},"`":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}},"a":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}},"b":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}},"o":{"docs":{},"v":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}},"r":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.03187250996015936},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.03463203463203463},"system_8h.html":{"ref":"system_8h.html","tf":0.0375}},",":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}},"c":{"docs":{},"d":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"c":{"docs":{},"c":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.044642857142857144},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.02819548872180451},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.045662100456621},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0425},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":5.071428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0024515266324938714},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.0820857650342552},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.06451612903225806},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":1.778357759486047},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":5.019230769230769},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00733598826241878},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.02112676056338028},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023529411764705882},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"action_8h.html":{"ref":"action_8h.html","tf":0.03313840155945419},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.018518518518518517},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692},"permission_8h.html":{"ref":"permission_8h.html","tf":0.023529411764705882},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.040968342644320296},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"types_8h.html":{"ref":"types_8h.html","tf":0.008403361344537815}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.015037593984962405},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.02631578947368421},"group__database.html":{"ref":"group__database.html","tf":0.01317157712305026},"group__databasec.html":{"ref":"group__databasec.html","tf":0.013183000867302688},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.07142857142857142},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010657193605683837},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0594059405940594},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.030716723549488054},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.04},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.024390243902439025},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.05555555555555555},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.1},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.013157894736842105},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.022099447513812154},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.01764705882352941},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02702702702702703},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"action_8h.html":{"ref":"action_8h.html","tf":0.015594541910331383},"chain_8h.html":{"ref":"chain_8h.html","tf":0.020202020202020204},"db_8h.html":{"ref":"db_8h.html","tf":0.01626129256428075},"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112},"types_8h.html":{"ref":"types_8h.html","tf":0.8865546218487395}},"e":{"docs":{},";":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.009641584573464682},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":10.071428571428571},"types_8h.html":{"ref":"types_8h.html","tf":0.8865546218487395}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863}},".":{"docs":{},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}},".":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0111731843575419},"types_8h.html":{"ref":"types_8h.html","tf":0.008403361344537815}}},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0111731843575419}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}},")":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.006024096385542169}}}},"p":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}},"u":{"docs":{},"r":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}}},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.02280130293159609},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.012594458438287154},"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.7514880952380951},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.041353383458646614},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.7397260273972601},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.16279069767441862},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.1643835616438356},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.027888446215139442},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.030303030303030304},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.06578947368421052},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013297872340425532},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.0847457627118644},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10853424352238276},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":11.600862725196649},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.10752688172043011},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.008368200836820083},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":2.522222222222222},"action_8h.html":{"ref":"action_8h.html","tf":0.029239766081871343},"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.1825396825396826},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"system_8h.html":{"ref":"system_8h.html","tf":0.03125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.012048192771084338},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009771986970684038},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.03125},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.011278195488721804},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0228310502283105},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.015985790408525755},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.021505376344086023},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.016736401673640166},"action_8h.html":{"ref":"action_8h.html","tf":0.011695906432748537},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.018518518518518517},"types_8h.html":{"ref":"types_8h.html","tf":0.008403361344537815}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"action_8h.html":{"ref":"action_8h.html","tf":11.073377889167363}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"action_8hpp.html":{"ref":"action_8hpp.html","tf":11.08068783068783}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"s":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}},"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__actionapi.html":{"ref":"group__actionapi.html","tf":11.671130952380953}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":11.07330827067669}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"s":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}},"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":11.671232876712327}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105}}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010657193605683837},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901},"types_8h.html":{"ref":"types_8h.html","tf":0.8865546218487395}},"e":{"docs":{},";":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}}}}}}}}},"docs":{}}}}},"t":{"docs":{},"a":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":5.010752688172043}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"s":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0733082706766917},"action_8h.html":{"ref":"action_8h.html","tf":1.0733778891673629}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}},";":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}},"'":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.011278195488721804},"action_8h.html":{"ref":"action_8h.html","tf":0.011695906432748537}}},")":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.0125}}},",":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"a":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}}}}}}}}},"v":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.015},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"chain_8h.html":{"ref":"chain_8h.html","tf":0.04040404040404041},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.020484171322160148},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.006024096385542169}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}},"o":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":2.511764705882353}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}},"d":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097}},"d":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008240626287597857},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776},"action_8h.html":{"ref":"action_8h.html","tf":0.005847953216374269},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0009686793671294801}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"/":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.006289308176100629},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.009868421052631578},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.009009009009009009},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009320905459387484},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.02100840336134454}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005868790609935024}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0060783902745755606}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005868790609935024}}}}}}}}}}}}},"c":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006497589603856634}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0060783902745755606}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0060783902745755606}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006497589603856634}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0060783902745755606}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0018863969817648292}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}}}}}}}}}}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}},":":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}}}}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004611192622091804}}}}}}}},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}},"c":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.002305596311045902}}}}}}}},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0037727939635296584}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}},"*":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0020959966464053656}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176}}}}}}},"g":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__contractdev.html":{"ref":"group__contractdev.html","tf":2.739867185711015},"types_8h.html":{"ref":"types_8h.html","tf":3.5672268907563023}},"/":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8h.html":{"ref":"types_8h.html","tf":0.008403361344537815}}},";":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.06547619047619048},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.06875},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.043010752688172046},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.03636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.0546218487394958}}},"w":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.015625}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}},"s":{"docs":{},"o":{"docs":{},":":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},"i":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.008849557522123894},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.005241090146750524},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.017543859649122806},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.010296010296010296},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009320905459387484},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.015223596574690771}}}}},"d":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.8891788797430235},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.04054054054054054}}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0018863969817648292},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":3.3984799131378933},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.05289672544080604},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.022321428571428572},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.11538461538461539},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.14285714285714285},"group__database.html":{"ref":"group__database.html","tf":0.0006932409012131716},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.008450704225352112},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.0199203187250996},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0410958904109589},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.06578947368421052},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009771986970684038},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288}}}}},"r":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003296250515039143},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0038747174685179204}}}}}}}},"g":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.03365384615384615},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0319634703196347},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0028972587474927567},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004401592957451268}}}}}}},"s":{"docs":{},".":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542}},".":{"docs":{},".":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":1.1650569161779925}},"a":{"docs":{},"y":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"group__datastream.html":{"ref":"group__datastream.html","tf":0.012170385395537525},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.004457321149988857},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":1.1560883063125216}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}}}}}}}}}}}}}},")":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}},"e":{"docs":{},"a":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.02976190476190476},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.03125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.031818181818181815},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.029411764705882353}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}},"t":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.038461538461538464},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.011267605633802818},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.011527377521613832},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"struct_extended.html":{"ref":"struct_extended.html","tf":0.08},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":5.687631027253668},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.020477815699658702},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.038461538461538464},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.04},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.04878048780487805},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.05555555555555555},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.05},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.08552631578947369},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.022099447513812154}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__assetapi.html":{"ref":"group__assetapi.html","tf":13.038461538461538}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":13.055555555555555}}}}}}}},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.07692307692307693},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"*":{"docs":{},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}},"/":{"docs":{},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}},".":{"docs":{"struct_extended.html":{"ref":"struct_extended.html","tf":0.04},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.011530398322851153},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.019736842105263157}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":15.052631578947368}}}}}},"&":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098}}},"'":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009433962264150943}}}},"r":{"docs":{},"t":{"1":{"6":{"0":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}},"\\":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}}}}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.3636363636363638},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3636363636363638},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3636363636363638}},"(":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.3648770584254457},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.364908628267407},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3646323795726187}}},"docs":{}},"docs":{}},"docs":{}},"o":{"docs":{},"d":{"1":{"6":{"0":{"docs":{},"(":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.3648770584254457},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.364908628267407},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3646323795726187}},"(":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}},"2":{"5":{"6":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.3648770584254457},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.364908628267407},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3646323795726187}},"(":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.3648770584254457},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.364908628267407},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3646323795726187}},"(":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}},"docs":{}},"docs":{}},"docs":{}}}}},".":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.005356407086938607},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.014675052410901468},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.021052631578947368},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.010296010296010296},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.010652463382157125},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.029495718363463368},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0048250904704463205},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004197610590894414}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}}}}}}}},"u":{"docs":{},"m":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.007972270363951473},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00797918473547268},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012575979878432194},"db_8h.html":{"ref":"db_8h.html","tf":0.00778318276580959}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0060783902745755606},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}},"&":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}},"h":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007104795737122558},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846}},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010657193605683837}}},"o":{"docs":{},"r":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.013392857142857142},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0136986301369863},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0035658569199910855},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.0891905607713779},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.012552301255230125},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010479983232026828},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}}}},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"action_8h.html":{"ref":"action_8h.html","tf":0.005847953216374269}}},"s":{"docs":{},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"action_8h.html":{"ref":"action_8h.html","tf":0.007797270955165692}}},",":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.01020408163265306},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010479983232026828},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003708281829419036},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.03125},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007104795737122558},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009433962264150943},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.013157894736842105},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.007936507936507936},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0136986301369863},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012903225806451613},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.01764705882352941},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020833333333333332},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.009345794392523364},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0029060381013884403}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}}},"o":{"docs":{},"m":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0070921985815602835},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}}}}}},";":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.6058700209643606},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.012552301255230125},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.01644736842105263},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}},".":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098}}},"t":{"docs":{},"h":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}},",":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.013651877133105802}}}}}}}},")":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.005241090146750524}}},"(":{"1":{"2":{"3":{"2":{"3":{"2":{"docs":{},".":{"4":{"5":{"5":{"6":{"6":{"7":{"2":{"3":{"3":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"4":{"2":{"4":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}},"docs":{}},"docs":{},".":{"4":{"5":{"5":{"6":{"6":{"7":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"*":{"docs":{},"b":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}}},"+":{"docs":{},"b":{"docs":{},"+":{"docs":{},"c":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}}}}}},"b":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.01442109600329625},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.016901408450704224},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.01729106628242075},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.03125},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.023060796645702306},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.013157894736842105},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.03314917127071823},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.007936507936507936},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0136986301369863},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012903225806451613},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.006660323501427212},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020833333333333332},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.009345794392523364},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.011301259283177269}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"s":{"docs":{},"e":{"3":{"2":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.020151133501259445},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0020057945174949856},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__serialize.html":{"ref":"group__serialize.html","tf":0.01606425702811245},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.017391304347826087},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.021505376344086023},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.012552301255230125},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.019801980198019802},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368}},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.75418410041841}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":3.0384615384615383}}}}}}},"e":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"group__database.html":{"ref":"group__database.html","tf":0.0008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0008673026886383347},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007722007722007722},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007989347536617843},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.007237635705669481},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007202881152460984},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0019373587342589602},"db_8h.html":{"ref":"db_8h.html","tf":0.0006949270326615705}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4844997667358571},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.007556675062972292},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}},"y":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806}}}}}}}}}}}},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.10877626699629171},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.022670025188916875},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.03978779840848806},"group__database.html":{"ref":"group__database.html","tf":0.01681109185441941},"group__databasec.html":{"ref":"group__databasec.html","tf":0.016825672159583693},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0078003120124804995},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.022919179734620022},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.022809123649459785},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.09815950920245399},"db_8h.html":{"ref":"db_8h.html","tf":0.019874913134120917},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723},"print_8h.html":{"ref":"print_8h.html","tf":0.038910505836575876},"types_8h.html":{"ref":"types_8h.html","tf":0.04201680672268908},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055}}},"l":{"docs":{},"l":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.012552301255230125},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004820792286732341},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.00847457627118644}},")":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}},",":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.03187250996015936},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.03463203463203463},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.015957446808510637},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0070921985815602835},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02702702702702703},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946},"system_8h.html":{"ref":"system_8h.html","tf":0.0375},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.01606425702811245}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0547945205479452},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.02},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.07407407407407407},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.008368200836820083},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0186219739292365}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":5.00418410041841}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"types_8h.html":{"ref":"types_8h.html","tf":0.8907563025210083}},"e":{"docs":{},";":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7570921985815603}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":3.7635135135135136}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10340832419989558},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":7.331560283687943}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7570921985815603}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}}}}}}}}}}}}}}}}},"l":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}},".":{"docs":{},"s":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},"i":{"docs":{},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176}}}}}}},"f":{"docs":{},"f":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013297872340425532},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.010040160642570281}},"e":{"docs":{},"r":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0012131715771230502},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0012142237640936687},"group__datastream.html":{"ref":"group__datastream.html","tf":0.013522650439486139},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.004903053264987743},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.020642201834862386},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.0009728978457261987},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}},"[":{"1":{"2":{"8":{"docs":{},"]":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}},"docs":{}},"docs":{}},"docs":{}},",":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.007978723404255319},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.008032128514056224}}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.159371015724607},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":7.335625268586163}}}}}},".":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.009174311926605505}}}}},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.007978723404255319},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.010040160642570281}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.004424778761061947},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0033806626098715348},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.01971830985915493},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.020172910662824207},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021052631578947368},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.03125},"functions.html":{"ref":"functions.html","tf":0.07670155446832229},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.008468910184978827},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.045454545454545456},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.016771488469601678},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0425531914893617},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.07692307692307693},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.12195121951219512},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.03211009174311927},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0390625},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.03314917127071823},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.017937219730941704},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.010526315789473684},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007722007722007722},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007989347536617843},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0335195530726257},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.047619047619047616},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0273972602739726},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.025806451612903226},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.4158716280505053},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02702702702702703},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.041666666666666664},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.02142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.03870967741935484},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.028037383177570093},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.028950542822677925},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.03508771929824561},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.028811524609843937},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.027149321266968326}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077}}}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":1.1560883063125216},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":5.0625}}}}}}}}},"d":{"docs":{},"i":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}},"t":{"docs":{},"h":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.008849557522123894},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009433962264150943},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012575979878432194}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.020676691729323307},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__database.html":{"ref":"group__database.html","tf":0.0006932409012131716},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0006938421509106678},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"group__datastream.html":{"ref":"group__datastream.html","tf":0.002704530087897228},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0175},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.03125},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10429978842989335},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.06651376146788991},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01569506726457399},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.03389830508474576},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020833333333333332},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0048250904704463205},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.004801920768307323},"action_8h.html":{"ref":"action_8h.html","tf":0.017543859649122806},"chain_8h.html":{"ref":"chain_8h.html","tf":0.030303030303030304},"db_8h.html":{"ref":"db_8h.html","tf":0.0005559416261292564},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01303538175046555},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903}}},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}},"_":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010479983232026828}}}}}}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0020601565718994645},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0016144656118824668}}},";":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"classes.html":{"ref":"classes.html","tf":10}}}}},"i":{"docs":{},"e":{"docs":{},"f":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.006993006993006993},"files.html":{"ref":"files.html","tf":0.019230769230769232}}}}}},"(":{"1":{"3":{"3":{"2":{"4":{"docs":{},".":{"3":{"2":{"3":{"2":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"docs":{},".":{"6":{"5":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}},"/":{"docs":{},"a":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}}}},"c":{"1":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.08421052631578947},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.004457321149988857},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.04484304932735426}},",":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021052631578947368},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017829284599955428},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.008968609865470852}}}},"2":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.06315789473684211},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002674392689993314},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.026905829596412557}},",":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.015789473684210527},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.006726457399103139}}},".":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021052631578947368},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017829284599955428},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.017937219730941704}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}}}},"docs":{"./":{"ref":"./","tf":0.004373177842565598},"modules.html":{"ref":"modules.html","tf":0.019543973941368076},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.039473684210526314},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.03389830508474576},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"enumerations.html":{"ref":"enumerations.html","tf":0.05},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.013761467889908258},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.023809523809523808},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.015873015873015872},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406}}},"+":{"docs":{},"+":{"1":{"7":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.007288629737609329},"modules.html":{"ref":"modules.html","tf":0.019543973941368076},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.023255813953488372},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.039473684210526314},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.03389830508474576},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05}}}},"c":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"f":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635}}},"a":{"docs":{},"'":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.008368200836820083}},"s":{"docs":{},".":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.016736401673640166}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}}}},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.038461538461538464},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.06896551724137931},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485},"group__singleton.html":{"ref":"group__singleton.html","tf":0.18181818181818182},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__serialize.html":{"ref":"group__serialize.html","tf":0.11646586345381527},"group__datastream.html":{"ref":"group__datastream.html","tf":0.004732927653820149},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.12608695652173912},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.039473684210526314},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.05084745762711865},"group__types.html":{"ref":"group__types.html","tf":0.029411764705882353},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.21428571428571427},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.010526315789473684},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.008849557522123894},"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.057692307692307696},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"enumerations.html":{"ref":"enumerations.html","tf":0.05},"annotated.html":{"ref":"annotated.html","tf":5.1328671328671325},"struct_extended.html":{"ref":"struct_extended.html","tf":0.08},"struct_stores.html":{"ref":"struct_stores.html","tf":0.10526315789473684},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.07142857142857142},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0060173835524849565},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.13043478260869565},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.125},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.125},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.06060606060606061},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.043010752688172046},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":5.0177304964539005},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.008368200836820083},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":5.0495049504950495},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":5.017064846416382},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.038461538461538464},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.04},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.024390243902439025},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.047619047619047616},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.05555555555555555},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.05},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":5.006880733944954},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":2.51171875},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":5.00896860986547},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.125},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.003861003861003861},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014634146341463415},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.14285714285714285},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":5.15},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":5.026881720430108},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":5.027624309392265},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":5.016759776536313},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":5.01984126984127},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":5.006078390274576},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0273972602739726},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.00859106529209622},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012903225806451613},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.03389830508474576},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":5.004757373929591},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02702702702702703},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020833333333333332},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.058823529411764705},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":5.011299435028248},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.014285714285714285},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":5.009677419354839},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":5.007009345794392},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":5.033333333333333},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":5.03},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.06060606060606061},"structsignature.html":{"ref":"structsignature.html","tf":0.06451612903225806},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"namespacestd.html":{"ref":"namespacestd.html","tf":0.17647058823529413},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.03508771929824561},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.018518518518518517},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.10526315789473684},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.17647058823529413},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.10344827586206896},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.16666666666666666},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.02702702702702703},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.022727272727272728},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.15384615384615385},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.07407407407407407},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.05},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.17647058823529413},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.13636363636363635},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.10526315789473684},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.11764705882352941},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.11764705882352941},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.10305343511450382},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.11578947368421053},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.15789473684210525},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.04878048780487805},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.2608695652173913},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.15384615384615385},"types_8h.html":{"ref":"types_8h.html","tf":0.008403361344537815},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.00904977375565611},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.08333333333333333},"vector_8hpp.html":{"ref":"vector_8hpp.html","tf":0.08333333333333333}},".":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.015267175572519083}}},",":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.006993006993006993}}},":":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806}}}}},",":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.006065857885615251},"group__databasec.html":{"ref":"group__databasec.html","tf":0.006071118820468344},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.018518518518518517},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.034482758620689655},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.005003474635163308},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.058823529411764705},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025},"system_8h.html":{"ref":"system_8h.html","tf":0.021875},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664},"vector_8hpp.html":{"ref":"vector_8hpp.html","tf":0.08333333333333333}},":":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"/":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0050259965337954935},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005030355594102341},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.05714285714285714},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005449591280653951},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"db_8h.html":{"ref":"db_8h.html","tf":0.008061153578874217}}},")":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}},"o":{"docs":{},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625}}}}},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.011661807580174927},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"r":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},",":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":10.484282999056315}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}}}}}}}}}}}},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}}},"e":{"docs":{},"q":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}},"s":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}}},"s":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}}},"s":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}},"s":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":10.484193860864313}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}}}}}}},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}},"e":{"docs":{},"q":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"s":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}},"s":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}},"s":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}},"s":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008240626287597857},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.08421052631578947},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.05309734513274336},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.007131713839982171},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.012578616352201259},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.03587443946188341},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.028950542822677925},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.028811524609843937},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0009686793671294801},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.027149321266968326}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}},"s":{"docs":{},",":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}}}}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"t":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.011166253101736972},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.011450381679389313},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0136986301369863},"group__database.html":{"ref":"group__database.html","tf":0.003119584055459272},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003122289679098005},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.034653465346534656},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0067613252197430695},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.036619718309859155},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.037463976945244955},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.007978723404255319},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.03684210526315789},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.035398230088495575},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.0625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.016269222197459327},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.019538188277087035},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.02830188679245283},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.08156028368794327},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.019801980198019802},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.030716723549488054},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.038461538461538464},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.024390243902439025},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.047619047619047616},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.020642201834862386},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.03125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.03289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.03314917127071823},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.017937219730941704},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.02456140350877193},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.04118404118404118},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.03994673768308921},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014634146341463415},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.03867403314917127},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0782122905027933},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.07936507936507936},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.015719974848040243},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0821917808219178},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.1013745704467354},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.07741935483870968},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.043478260869565216},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.04225352112676056},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.03389830508474576},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.019029495718363463},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.041666666666666664},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.08571428571428572},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.11935483870967742},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.06074766355140187},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.03333333333333333},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.025331724969843185},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.08771929824561403},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.024009603841536616},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.01593625498007968},"db_8h.html":{"ref":"db_8h.html","tf":0.005003474635163308},"permission_8h.html":{"ref":"permission_8h.html","tf":0.026470588235294117},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.008032128514056224},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.04072398190045249}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"enumerations.html":{"ref":"enumerations.html","tf":0.05},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":5.009756097560976},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.03019538188277087},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0297029702970297},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.02631578947368421},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.01929824561403509},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011583011583011582},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011984021304926764},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.025689819219790674},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.029411764705882353},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.00847457627118644},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007202881152460984}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.017937219730941704},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0028544243577545195},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.020151133501259445},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.016901408450704224},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.01729106628242075},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0033429908624916425},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.045454545454545456},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.06060606060606061},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.014184397163120567},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.013452914798206279},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.010309278350515464},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055}}}}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.4087228560912772},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4891109593579489},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":5.089041095890411},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.5220146048109966},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":6.346774193548387}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48575736472370035},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4842139175257732}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}}},"\\":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":12.504807692307692}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308}},"_":{"docs":{},"f":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":11.2526525198939}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}},"d":{"docs":{},"f":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}}}},"i":{"1":{"2":{"8":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}},"docs":{}},"docs":{}},"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}},"n":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}},"q":{"docs":{},"f":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}}},"s":{"docs":{},"_":{"docs":{},"l":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}}},"f":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}}},"u":{"docs":{},"i":{"1":{"2":{"8":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}},"docs":{}},"docs":{}},"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":12.504566210045661}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}},"_":{"docs":{},"f":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}},"s":{"docs":{},".":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"modules.html":{"ref":"modules.html","tf":3.339847991313789},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.03488372093023256},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0410958904109589},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5797399783315277},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5798049213034805},"group__types.html":{"ref":"group__types.html","tf":0.029411764705882353},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10363119025739502},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":8.888613861386139},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":1.5032894736842106},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":2.1483820047355957},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.08108108108108109}},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}},";":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009771986970684038},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.023255813953488372},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.039603960396039604},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":17.558823529411764}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__contractdev.html":{"ref":"group__contractdev.html","tf":10.684337073505839}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.007556675062972292}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__contracttype.html":{"ref":"group__contracttype.html","tf":17.571428571428573}}}},"h":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384}}}},")":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}}},"o":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.0013864818024263432},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0013876843018213356},"group__datastream.html":{"ref":"group__datastream.html","tf":0.010818120351588911},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.035398230088495575},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.005794517494985513},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.013452914798206279},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.03139866793529972},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613},"db_8h.html":{"ref":"db_8h.html","tf":0.0011118832522585128},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}},"x":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0053285968028419185},"action_8h.html":{"ref":"action_8h.html","tf":0.005847953216374269},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.75418410041841}},"t":{"docs":{},"h":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.75418410041841}},"t":{"docs":{},"h":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.7583682008368201}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.7583682008368201}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":2.522222222222222}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.008368200836820083}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.006592501030078286},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.020151133501259445},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0020057945174949856},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.004801920768307323},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.007103648692282854},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025}}},"s":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.02112676056338028},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492}}}},"n":{"docs":{},"i":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.02702702702702703}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.006239168110918544},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00624457935819601},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"db_8h.html":{"ref":"db_8h.html","tf":0.006671299513551077},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}}}}}},"p":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.009398496240601503},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.007978723404255319},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"action_8h.html":{"ref":"action_8h.html","tf":0.011695906432748537},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.008032128514056224}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}}}}}}}}},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098}},")":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.046511627906976744},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0547945205479452},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142}}}}}}}}},"u":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":2.5096153846153846},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":2.509132420091324},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}},"n":{"docs":{},"t":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.01818181818181818},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563}},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}}}}},"s":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.003119584055459272},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003122289679098005},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.012552301255230125}}}}}},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.008746355685131196},"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.07692307692307693},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"/":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}},"u":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__producertype.html":{"ref":"group__producertype.html","tf":0.02247191011235955},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.02510460251046025},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"_":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}},")":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":25.142857142857142}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":11.364908628267406}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257}}},"2":{"5":{"6":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257}}},"2":{"5":{"6":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},".":{"docs":{},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"crypto_8h.html":{"ref":"crypto_8h.html","tf":11.364632379572619}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"2":{"5":{"6":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"2":{"5":{"6":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.003816793893129771},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.8994177875928528},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":5.02},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.014124293785310734},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.04054054054054054}},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.8891788797430235}}}}}}},"d":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706}},",":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.022556390977443608},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.0199203187250996},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.021645021645021644},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0398936170212766},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.02522935779816514},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"action_8h.html":{"ref":"action_8h.html","tf":0.025341130604288498},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692},"system_8h.html":{"ref":"system_8h.html","tf":0.021875},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.040160642570281124}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0733082706766917},"action_8h.html":{"ref":"action_8h.html","tf":1.0733778891673629}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":2.1468412066021627},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":2.1471861471861473},"system_8h.html":{"ref":"system_8h.html","tf":2.1459821428571426}}}}}}},"c":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":5.8925918490263},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025}},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"c":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"z":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"z":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}},"s":{"docs":{},"u":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}},"t":{"docs":{},"o":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.8891788797430235},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":5.012195121951219}}}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":11.90948275862069}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.003816793893129771},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.14285714285714285},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00298804780876494}}}},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}}}}}}}}},"l":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":5.057142857142857},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723}},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":3.005952380952381},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":3.00625},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":2.5053763440860215},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6757575757575756},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":2.504201680672269}},"(":{"docs":{},")":{"docs":{},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}},"s":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}},"e":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.006024096385542169}},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.502659574468085},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.502008032128514}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}},".":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"z":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":1.524390243902439}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":1.524390243902439}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":1.524390243902439}}}}}}}}}}}}},"p":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009771986970684038},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.007556675062972292},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__chainapi.html":{"ref":"group__chainapi.html","tf":11.364877058425446}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859}}},"2":{"5":{"6":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859}}},"2":{"5":{"6":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":17.513157894736842}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"chain_8h.html":{"ref":"chain_8h.html","tf":17.51010101010101}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.015113350125944584},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.022332506203473945},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.022900763358778626},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0136986301369863},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__datastream.html":{"ref":"group__datastream.html","tf":0.002028397565922921},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.008450704225352112},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.008645533141210375},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010638297872340425},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.005125919322487185},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.016055045871559634},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.06629834254143646},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.055865921787709494},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.013745704467353952},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.06060606060606061},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.021912350597609563},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"permission_8h.html":{"ref":"permission_8h.html","tf":0.029411764705882353},"print_8h.html":{"ref":"print_8h.html","tf":0.007782101167315175},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.014056224899598393}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6868559651934968},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}},"s":{"docs":{},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}},"l":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}}},"*":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}},"g":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}}}},"n":{"docs":{},"g":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.008368200836820083},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"system_8h.html":{"ref":"system_8h.html","tf":0.01875}}}},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}},"d":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0057684384013185},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.14285714285714285},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0024515266324938714},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.09090909090909091},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.006289308176100629},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.006660323501427212},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.00847457627118644},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.014475271411338963},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.014405762304921969},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.006780755569906361},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00931098696461825}},"s":{"docs":{},"u":{"docs":{},"m":{"1":{"6":{"0":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"group__datastream.html":{"ref":"group__datastream.html","tf":0.004056795131845842},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0022286605749944283},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00796812749003984},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.04524886877828054}},"\\":{"docs":{},"*":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0024813895781637717},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.002544529262086514},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00199203187250996}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.007556675062972292},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"group__datastream.html":{"ref":"group__datastream.html","tf":0.002704530087897228},"classes.html":{"ref":"classes.html","tf":0.20833333333333331},"functions.html":{"ref":"functions.html","tf":0.07462686567164178},"annotated.html":{"ref":"annotated.html","tf":0.19736842105263158},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"namespacestd.html":{"ref":"namespacestd.html","tf":3.75},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":6.337719298245614},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00796812749003984},"types_8h.html":{"ref":"types_8h.html","tf":0.02100840336134454},"types_8hpp.html":{"ref":"types_8hpp.html","tf":1.6892911010558067}},"\\":{"docs":{},"*":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.027149321266968326}}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0024813895781637717},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.002544529262086514},"group__datastream.html":{"ref":"group__datastream.html","tf":0.004056795131845842},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0022286605749944283},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}},"\\":{"docs":{},"*":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}},"docs":{}},"docs":{}},"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.011166253101736972},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.011450381679389313},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.008964143426294821}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.009925558312655087},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.010178117048346057},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.01195219123505976}}}}}},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614},"permission_8h.html":{"ref":"permission_8h.html","tf":3.0029411764705882}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614},"permission_8h.html":{"ref":"permission_8h.html","tf":3.0029411764705882}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"s":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.005409060175794456},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017829284599955428}},"t":{"docs":{},"r":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}},",":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876}}},")":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}}}}},"d":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.008113590263691683},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0028972587474927567},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}},"=":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"m":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.008771929824561403},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007722007722007722},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.013315579227696404}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.011450381679389313}}}}}},"f":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.01694915254237288}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0053285968028419185},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.009868421052631578},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.006726457399103139},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.022598870056497175}}}}}},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"modules.html":{"ref":"modules.html","tf":0.11726384364820847},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.042821158690176324},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.044642857142857144},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0365296803652968},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.07692307692307693},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.14285714285714285},"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.10344827586206896},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__singleton.html":{"ref":"group__singleton.html","tf":0.09090909090909091},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.023255813953488372},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"group__serialize.html":{"ref":"group__serialize.html","tf":0.10843373493975904},"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.10869565217391304},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.014084507042253521},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.011527377521613832},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0410958904109589},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.02631578947368421},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"group__types.html":{"ref":"group__types.html","tf":0.058823529411764705},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.004424778761061947},"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.021505376344086023},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.1388888888888889},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.12162162162162163},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.13333333333333333},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.12595419847328243},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.14736842105263157},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.07317073170731707},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.01680672268907563},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.01809954751131222},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368}}}}}}},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}},"e":{"docs":{},"r":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.02127659574468085},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.020080321285140562}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.7583682008368201}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"t":{"docs":{},"h":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.016853932584269662},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.016736401673640166}},".":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.008368200836820083}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}},"o":{"docs":{},"y":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464}}}}},"i":{"docs":{},"n":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.011494252873563218},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.003788722977490528},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__eosiorpc.html":{"ref":"group__eosiorpc.html","tf":0.125}}},"p":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"struct_extended.html":{"ref":"struct_extended.html","tf":0.04},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.006993006993006993},"files.html":{"ref":"files.html","tf":0.019230769230769232}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__serialize.html":{"ref":"group__serialize.html","tf":0.040160642570281124},"group__datastream.html":{"ref":"group__datastream.html","tf":0.03515889114266396},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.0391304347826087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.015154891909962113},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0028544243577545195},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.11578947368421053}}}}},"i":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}}}}}},"c":{"docs":{},"t":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"struct_extended.html":{"ref":"struct_extended.html","tf":0.04},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},"s":{"docs":{},".":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.021505376344086023},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}}}},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.01818181818181818},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563}}}}}}},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.012552301255230125}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.885}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}},"u":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},"s":{"docs":{},")":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}},"i":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635},"dir_f4c96640472432942b3fc30ed441ca04.html":{"ref":"dir_f4c96640472432942b3fc30ed441ca04.html","tf":0.25},"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":0.2},"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":0.2},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.022727272727272728}}}}},"l":{"docs":{},"i":{"docs":{"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288}}}}}}}},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.007288629737609329}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.008746355685131196}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3431053203040174},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":17.546511627906977},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.20659378234229173},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":17.513698630136986}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186}}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":13.013513513513514}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.02247191011235955},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.02510460251046025}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002472187886279357},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015600624024961},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0029060381013884403}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}},"s":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009433962264150943},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007722007722007722},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007989347536617843},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}},"o":{"docs":{},"r":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}}}}}}},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007444168734491315},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.007633587786259542},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0069721115537848604}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.003816793893129771},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}}},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}}},"i":{"docs":{},"t":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012575979878432194}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384}}}}}}}}}}},"m":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}},"e":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.024721878862793572},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.021220159151193633},"group__database.html":{"ref":"group__database.html","tf":0.007105719237435009},"group__databasec.html":{"ref":"group__databasec.html","tf":0.007111882046834345},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0297029702970297},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0293832741362609},"db_8h.html":{"ref":"db_8h.html","tf":0.009034051424600417},"print_8h.html":{"ref":"print_8h.html","tf":0.019455252918287938}},"e":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003296250515039143},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0038747174685179204}}},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0012360939431396785},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0019373587342589602}}},")":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"print_8h.html":{"ref":"print_8h.html","tf":0.007782101167315175}}}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.005241090146750524},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.02824858757062147}}}}}}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"enumerations.html":{"ref":"enumerations.html","tf":0.05},"struct_extended.html":{"ref":"struct_extended.html","tf":0.04},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.043478260869565216},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"namespacestd.html":{"ref":"namespacestd.html","tf":0.058823529411764705},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"files.html":{"ref":"files.html","tf":0.019230769230769232},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.034482758620689655},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.058823529411764705},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664},"vector_8hpp.html":{"ref":"vector_8hpp.html","tf":0.08333333333333333}}}}}}}},"w":{"docs":{},"n":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009771986970684038},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.06451612903225806},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.06615776081424936},"group__database.html":{"ref":"group__database.html","tf":0.004332755632582322},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__serialize.html":{"ref":"group__serialize.html","tf":0.012048192771084338},"group__datastream.html":{"ref":"group__datastream.html","tf":0.012170385395537525},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.025},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":2.515625},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0042344550924894135},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.0945191575742197},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.009174311926605505},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.004484304932735426},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":3.0104166666666665},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.01977401129943503},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0375},"structpublic__key.html":{"ref":"structpublic__key.html","tf":7.5606060606060606},"structsignature.html":{"ref":"structsignature.html","tf":7.564516129032258},"action_8h.html":{"ref":"action_8h.html","tf":0.01949317738791423},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.05976095617529881},"db_8h.html":{"ref":"db_8h.html","tf":0.0033356497567755385},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0186219739292365},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.027149321266968326}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__database.html":{"ref":"group__database.html","tf":10.246421570020173},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}},"e":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"c":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__databasec.html":{"ref":"group__databasec.html","tf":10.24607509988199}},"p":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":17.53448275862069}}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}},"docs":{}},"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}},"docs":{}},"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"t":{"docs":{"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__datastream.html":{"ref":"group__datastream.html","tf":10.440300571639314},"classes.html":{"ref":"classes.html","tf":0.22314814814814812},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.21135443503864557},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.1435242145497953},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":6.379691409507923},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3948863636363638},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.013268998793727383},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.013205282112845138}},"&":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.023664638269100743},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0078003120124804995},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.011494252873563218}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},">":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.012170385395537525}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307}},"_":{"docs":{},"s":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307}}}}}}},"o":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}},"p":{"docs":{},"o":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.20833333333333331},"functions.html":{"ref":"functions.html","tf":0.5223880597014926},"annotated.html":{"ref":"annotated.html","tf":0.19736842105263158},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10273972602739725},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":2.5}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":13.041666666666666}}}}}}}}}}}},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.019851116625310174},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.020356234096692113},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__database.html":{"ref":"group__database.html","tf":0.001559792027729636},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0015611448395490026},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.02390438247011952},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.015},"chain_8h.html":{"ref":"chain_8h.html","tf":0.030303030303030304},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0111731843575419}},")":{"docs":{"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0013864818024263432},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0013876843018213356},"db_8h.html":{"ref":"db_8h.html","tf":0.0011118832522585128}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0006932409012131716},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0006938421509106678},"db_8h.html":{"ref":"db_8h.html","tf":0.0011118832522585128}}},")":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}}}}},"a":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.0749809692971326}}}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}}}}}}}},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}},"w":{"docs":{},"n":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}},"e":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}},"b":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"docs":{}},"docs":{}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}},"docs":{}},"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"docs":{}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"docs":{}},"docs":{}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"docs":{}},"docs":{}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"db_8h.html":{"ref":"db_8h.html","tf":10.246040624750796}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}},"docs":{}},"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.023664638269100743},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0078003120124804995},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613}},",":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.016227180527383367},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.013149097392467127},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015600624024961}}},",":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.009174311926605505}}}},"e":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"enumerations.html":{"ref":"enumerations.html","tf":0.1},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":3.7884615384615383},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0064516129032258064}},"l":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}},"s":{"docs":{},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.72073732718894}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.011450381679389313}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.40730835497724177}}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.008746355685131196},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761}}}}},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__database.html":{"ref":"group__database.html","tf":0.010918544194107453},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010928013876843019},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4855477650590598},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385},"db_8h.html":{"ref":"db_8h.html","tf":0.010284920083391245}},"i":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"u":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014634146341463415},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.005154639175257732},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.057692307692307696}},"'":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"e":{"docs":{},"r":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":5.1}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":1.524390243902439}}}}}}}}}}}}}}}}}},"o":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0060783902745755606}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.043731778425655975},"modules.html":{"ref":"modules.html","tf":0.013029315960912053},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.10344827586206896},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.024752475247524754},"group__singleton.html":{"ref":"group__singleton.html","tf":0.09090909090909091},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":5.103185458142396},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.043478260869565216},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0297029702970297},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014634146341463415},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.03125},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.06060606060606061},"structsignature.html":{"ref":"structsignature.html","tf":0.06451612903225806},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723}},".":{"docs":{},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"s":{"docs":{},"d":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}}}},"c":{"docs":{},"d":{"docs":{},"t":{"docs":{"files.html":{"ref":"files.html","tf":0.3488372093023256}},"/":{"docs":{"files.html":{"ref":"files.html","tf":0.019230769230769232},"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":10}}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":25.058823529411764}}}}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__contracttype.html":{"ref":"group__contracttype.html","tf":7.571428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":3.75990099009901},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":7.5588235294117645},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},";":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.8857659104597471},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":1.9094827586206897}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":1.5121951219512195},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":1.9094827586206897}},"s":{"docs":{},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":2.52},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":1.9094827586206897}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":5.023809523809524},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":1.9094827586206897}},"e":{"docs":{},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":5.025},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":1.9094827586206897}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.01079136690647482}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":3.019230769230769},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":1.9094827586206897}},"s":{"docs":{},";":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232}}}}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":5.027777777777778},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":1.9094827586206897}},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}}}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},";":{"docs":{"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.010238907849829351}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":2.5052631578947366},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":1.1560883063125216},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":7.576923076923077}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},";":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.004484304932735426}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}},"=":{"docs":{},"=":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}},">":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},";":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":15.0625},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":3.7884615384615383}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":3.769230769230769},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0017543859649123},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":4.35978835978836}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01037344398340249}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.007017543859649123}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842}},"=":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}},">":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}}}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":3.769230769230769},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.7155727155727155},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":4.35978835978836}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.016597510373443983},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.003861003861003861}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.003861003861003861}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"*":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}},"+":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574}}},"/":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}},"=":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.005148005148005148}},"=":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}}},">":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}}}}}}}},"docs":{}},"6":{"4":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":3.769230769230769},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.790805242133296},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":4.35978835978836}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.006224066390041493},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.016597510373443983}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"*":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}},"+":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}}},"/":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}},"=":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}},"=":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}},">":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}}}}}}},"docs":{}},"docs":{}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":2.507042253521127},"types_8hpp.html":{"ref":"types_8hpp.html","tf":1.6711915535444946}},"e":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.6711309523809523},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.6712328767123286},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.073204770362852},"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.0806878306878307}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.6711309523809523},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.6712328767123286},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":5.010752688172043},"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.0806878306878307}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012}}}}}}}}}}}}}}}},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}}}}},"t":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010657193605683837}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},";":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}},"_":{"docs":{},"a":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__assetapi.html":{"ref":"group__assetapi.html","tf":3.0384615384615383},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":3.0555555555555554},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5566037735849056},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":5.052631578947368}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.005241090146750524}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}},"*":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098}},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}},"+":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}},"/":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098}},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}},"=":{"docs":{},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}},">":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},";":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.6711309523809523},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.6712328767123286},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":2.5058823529411764},"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.0806878306878307}},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0046801872074883}},"(":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"2":{"5":{"6":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"docs":{}}}}}},"_":{"docs":{},"f":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":3.7635135135135136},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":5.052631578947368}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":5.0120481927710845},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":7.5588235294117645}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},";":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":2.515625},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":3.0104166666666665},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":7.5588235294117645}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},";":{"docs":{"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666}}}},"=":{"docs":{},"=":{"docs":{"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666}}}}}}}}}}}}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}},"_":{"docs":{},"s":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__assetapi.html":{"ref":"group__assetapi.html","tf":3.0384615384615383},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":3.0555555555555554},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":1.5032894736842106},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":5.052631578947368}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},";":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.009868421052631578}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5797399783315277},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5798049213034805},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":2.1483820047355957},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":3.774390243902439}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},";":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384}}}},"=":{"docs":{},"=":{"docs":{"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384}}}}}}}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":2.5048076923076925},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":2.5045662100456623},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":15.05},"print_8hpp.html":{"ref":"print_8hpp.html","tf":7.545454545454546}}}}}}}}},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":5.004878048780488},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.8990196078431373}}},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":15.071428571428571},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.08994708994709}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857}}}}}}},"<":{"docs":{"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":2.5},"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.0714285714285714}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":7.5344827586206895},"group__singleton.html":{"ref":"group__singleton.html","tf":7.590909090909091},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.877824858757062},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":5.052631578947368}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":5.0125},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":5.052631578947368}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5797399783315277},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5798049213034805},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":1.3707792207792209},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":3.774390243902439}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143}},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.014285714285714285}}}}}}}}}}}}}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.006224066390041493}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":7.5049504950495045},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4891109593579489},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.8990196078431373}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.014522821576763486}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":1.370485678704857},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.8990196078431373}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.02054794520547945}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315}}}},"*":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315}}},"+":{"docs":{},"+":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0136986301369863}}}},"=":{"docs":{},"=":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.47046821305841924},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.8990196078431373}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.02074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"enumerations.html":{"ref":"enumerations.html","tf":0.05}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":1.2564516129032257},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.8990196078431373}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.006224066390041493},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.01935483870967742}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064}}}},"*":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064}}},"+":{"docs":{},"+":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012903225806451613}}}},"=":{"docs":{},"=":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":3.769230769230769},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.8990196078431373}},":":{"docs":{},":":{"docs":{"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":3.0144927536231885},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.8990196078431373}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":3.0161290322580645},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.8990196078431373}},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"+":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}}},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":2.5053763440860215},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6712121212121211}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.004149377593360996}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.159432746024925},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6712121212121211}},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"_":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}},"s":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}},"i":{"docs":{},"t":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}}},"i":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.159371015724607},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6712121212121211}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},";":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8373015873015872},"time_8hpp.html":{"ref":"time_8hpp.html","tf":3.0434782608695654}},"s":{"docs":{},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01037344398340249}}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}}},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.015873015873015872}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}},"+":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}},"=":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}},"=":{"docs":{},"=":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}},">":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}},"=":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":5.029411764705882},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8524173027989821}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},";":{"docs":{"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.3422613559530395},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.365929941618015},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.004757373929590866},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":3.0833333333333335}},"<":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.34090909090909094},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3636363636363638},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":3}}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.014522821576763486}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525}}}}},"p":{"docs":{},"o":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}}},"u":{"docs":{},"t":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}}},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"p":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}}},"&":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464}}}}}}}}}}},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":3.791095890410959},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":3.8055555555555554},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.75418410041841},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":5.052631578947368}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7535460992907801},"time_8hpp.html":{"ref":"time_8hpp.html","tf":3.0434782608695654}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"m":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.010638297872340425}},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},";":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}}}}}},"i":{"docs":{},"n":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.010638297872340425}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}},"=":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}},"=":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}},">":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}},"=":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}},"i":{"docs":{},"o":{"docs":{},"s":{"docs":{},",":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":3.013157894736842},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":3.016949152542373},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":3.016949152542373},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":3.7884615384615383}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},";":{"docs":{"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288}}}}}}}}},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{},";":{"docs":{"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":2.504424778761062},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.4063568801913236},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":7.5588235294117645}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01037344398340249}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.004757373929590866}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}},"*":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464}}},"=":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.007611798287345386}},"=":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},">":{"docs":{},">":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}}}}},"t":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.007611798287345386}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}}}}}}}},"~":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0042344550924894135}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}},"=":{"docs":{},"=":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}},">":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}},">":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.004011589034989971}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":3.013157894736842},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":3.016949152542373},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":2.511111111111111},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":3.7884615384615383}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":3.013157894736842},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":3.016949152542373},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.885},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":3.7884615384615383}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},";":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},";":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},";":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.717511520737327},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004672897196261682},"time_8hpp.html":{"ref":"time_8hpp.html","tf":3.0434782608695654}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.012448132780082987}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.008298755186721992}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.4710864485981308},"time_8hpp.html":{"ref":"time_8hpp.html","tf":3.0434782608695654}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.016597510373443983}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}}}}}},"i":{"docs":{},"n":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.02336448598130841}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}},"+":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004672897196261682}},"=":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.007009345794392523}}}},"=":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}},"=":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}},">":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}},"=":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.007009345794392523}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.01935483870967742}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}}}},"+":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0064516129032258064}},"=":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}}}},"=":{"docs":{},"=":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}}}},">":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}},"=":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"2":{"5":{"6":{"docs":{},";":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"docs":{}},"docs":{}},"docs":{}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":5.011363636363637}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364}}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":2.5434782608695654}},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":15.0625},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.8990196078431373}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":15.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.9156862745098039}},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304}}}}}}}}}},"<":{"docs":{"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":3.75},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.8823529411764706}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}},"_":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":3.0135135135135136}},"(":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}}},";":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":2.1468412066021627},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":2.1471861471861473},"system_8h.html":{"ref":"system_8h.html","tf":2.1459821428571426}},"(":{"1":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}},"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005868790609935024},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":2.1468412066021627},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":2.1471861471861473},"system_8h.html":{"ref":"system_8h.html","tf":2.1459821428571426}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":2.1468412066021627},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":2.1471861471861473},"system_8h.html":{"ref":"system_8h.html","tf":2.1459821428571426}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":3.027027027027027}},";":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":3.027027027027027}},"l":{"docs":{},";":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":2.1468412066021627},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":2.1471861471861473},"system_8h.html":{"ref":"system_8h.html","tf":2.1459821428571426}},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"1":{"docs":{},")":{"docs":{},";":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"docs":{}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}}}},"r":{"docs":{},"p":{"docs":{},"c":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__eosiorpc.html":{"ref":"group__eosiorpc.html","tf":25.125}}}}},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"files.html":{"ref":"files.html","tf":0.3488372093023256}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":11.67121212121212}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"r":{"docs":{},"k":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545}}}}}}}}}}}},"/":{"docs":{"files.html":{"ref":"files.html","tf":0.019230769230769232},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":10}}}}}}}},".":{"docs":{},"i":{"docs":{},"o":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307}}}}}},"d":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__eosiorpc.html":{"ref":"group__eosiorpc.html","tf":0.125}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.0749809692971326},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":3.7605263157894737}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":3.7605263157894737}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.837150127226463}},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6746987951807228},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.6753623188405795},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.837150127226463}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},"e":{"docs":{},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.837150127226463}}},"y":{"docs":{},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}},"f":{"docs":{},"w":{"docs":{},"d":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.837150127226463}},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.837150127226463}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}},"o":{"docs":{},"p":{"docs":{"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":3.7710526315789474}},";":{"docs":{"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"2":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},"e":{"docs":{},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}},"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.837150127226463}},"e":{"docs":{},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}}}}}}}}}},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},".":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},"e":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003708281829419036},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01240694789081886},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01272264631043257},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.026525198938992044},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"group__database.html":{"ref":"group__database.html","tf":0.0008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0008673026886383347},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010638297872340425},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015600624024961},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.007017543859649123},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.005148005148005148},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.006657789613848202},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0029060381013884403},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0099601593625498},"db_8h.html":{"ref":"db_8h.html","tf":0.0006949270326615705},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"print_8h.html":{"ref":"print_8h.html","tf":0.019455252918287938},"system_8h.html":{"ref":"system_8h.html","tf":0.00625},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.008032128514056224}}},"s":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}}}},"p":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}}}}},"i":{"docs":{},"r":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.5106382978723405},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.895},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.5100401606425702}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},",":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003296250515039143},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__assetapi.html":{"ref":"group__assetapi.html","tf":3.0384615384615383},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":3.0555555555555554},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5966413867822319},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5970959875859012},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"struct_extended.html":{"ref":"struct_extended.html","tf":20.12},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.09210526315789473},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.03867403314917127},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.018518518518518517},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0032289312237649337}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5910075839653305},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5913322988250943},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.01644736842105263},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":7.181531176006313}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":9.56578947368421}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.01951219512195122},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}},"c":{"docs":{},"e":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0041928721174004195},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}},"p":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.023255813953488372},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0273972602739726},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.03723404255319149},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.03815261044176707}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":7.511627906976744},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":7.513698630136986},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.016917293233082706},"group__database.html":{"ref":"group__database.html","tf":0.006239168110918544},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00624457935819601},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.008174386920980926},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.8975988700564972},"action_8h.html":{"ref":"action_8h.html","tf":0.023391812865497075},"db_8h.html":{"ref":"db_8h.html","tf":0.005003474635163308}},"s":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}}},".":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}},"*":{"docs":{},"*":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}}},".":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588}}}}},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.005356407086938607},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.016129032258064516},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01653944020356234},"group__database.html":{"ref":"group__database.html","tf":0.0019064124783362219},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0019080659150043364},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.02654867256637168},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017829284599955428},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.010482180293501049},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.010526315789473684},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007722007722007722},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007989347536617843},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0020959966464053656},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.02112676056338028},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0028544243577545195},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023529411764705882},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.026537997587454766},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.026410564225690276},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005166289958023894},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.012948207171314742},"db_8h.html":{"ref":"db_8h.html","tf":0.0015288394718554553},"system_8h.html":{"ref":"system_8h.html","tf":0.00625},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.05429864253393665}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.003816793893129771},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00298804780876494}}}}},"e":{"docs":{},"n":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}},"c":{"docs":{},"h":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"enumerations.html":{"ref":"enumerations.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.01818181818181818},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},"_":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010479983232026828},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.013745704467353952}}}}}}}}},"a":{"docs":{},"s":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.9687899338070737},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}},")":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}}},"f":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012915724895059735},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"s":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.015789473684210527},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015600624024961},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.008385744234800839},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.006726457399103139},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.003861003861003861},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.004757373929590866},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.014475271411338963},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.014405762304921969},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}},"e":{"docs":{},")":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.036258755665430575},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.028414594769131416}}}}}}},"i":{"docs":{},"l":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"u":{"docs":{},"r":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"system_8h.html":{"ref":"system_8h.html","tf":0.00625},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}},"s":{"docs":{},"t":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.003816793893129771},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00298804780876494}}}},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}},"e":{"docs":{},".":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}}},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":5.0476190476190474}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.8857659104597471},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":5.023809523809524}}}}}}}}}}},"w":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0048250904704463205},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.004801920768307323}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.007288629737609329},"files.html":{"ref":"files.html","tf":10.038461538461538},"dir_f4c96640472432942b3fc30ed441ca04.html":{"ref":"dir_f4c96640472432942b3fc30ed441ca04.html","tf":0.25},"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":0.2},"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":0.2},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.022727272727272728},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.034482758620689655},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.058823529411764705},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664},"vector_8hpp.html":{"ref":"vector_8hpp.html","tf":0.08333333333333333}},":":{"docs":{"struct_extended.html":{"ref":"struct_extended.html","tf":0.04},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.043478260869565216},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"namespacestd.html":{"ref":"namespacestd.html","tf":0.058823529411764705},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.034482758620689655},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.058823529411764705},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664},"vector_8hpp.html":{"ref":"vector_8hpp.html","tf":0.08333333333333333}}},".":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.034482758620689655},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.058823529411764705},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664},"vector_8hpp.html":{"ref":"vector_8hpp.html","tf":0.08333333333333333}}}},"l":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__database.html":{"ref":"group__database.html","tf":0.0008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0008673026886383347},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"db_8h.html":{"ref":"db_8h.html","tf":0.0006949270326615705},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.012131715771230503},"group__databasec.html":{"ref":"group__databasec.html","tf":0.012142237640936688},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4851285657297787},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.958118556701031},"db_8h.html":{"ref":"db_8h.html","tf":0.014593467685892982}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.027606098063452822},"group__database.html":{"ref":"group__database.html","tf":0.0058925476603119585},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005897658282740676},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021052631578947368},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017829284599955428},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.011530398322851153},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.008968609865470852},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005449591280653951},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.007237635705669481},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007202881152460984},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.02292541168873103},"db_8h.html":{"ref":"db_8h.html","tf":0.00472550382209868},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}}}}}}}},"e":{"docs":{},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}}}}},"x":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__datastream.html":{"ref":"group__datastream.html","tf":0.009465855307640297},"group__types.html":{"ref":"group__types.html","tf":0.029411764705882353},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":5.005263157894737},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0042344550924894135},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.004484304932735426},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.04736842105263158},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.02702702702702703},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.033288948069241014},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}},"e":{"docs":{},"d":{"6":{"4":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}},"docs":{}},"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":2.626315789473684},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.11321443072987107},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":7.417557778544326},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842}}}},"=":{"docs":{},"=":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842}}}},">":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":13.788461538461538}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10407692237239391},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":9.063157894736841},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009320905459387484}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}},".":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.008771929824561403},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}},"&":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842}}},",":{"6":{"4":{"docs":{},",":{"3":{"2":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.01929824561403509},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":7.216216216216216},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007989347536617843}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}},"docs":{}},"docs":{}}}}}}}}}}}}}},".":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.010296010296010296},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}}},"&":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574}}},"(":{"1":{"3":{"1":{"3":{"1":{"3":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"3":{"2":{"3":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"q":{"docs":{},"r":{"docs":{},")":{"docs":{},"?":{"docs":{},"q":{"docs":{},":":{"docs":{},"q":{"docs":{},"r":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.010296010296010296}}}}}}}}}}},"docs":{}},"6":{"4":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10385405631489447},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.015789473684210527},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.018018018018018018},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":7.4376620646156}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}},"v":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}},".":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.006435006435006435},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011984021304926764}}},"&":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}}},"(":{"1":{"3":{"1":{"3":{"1":{"3":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"3":{"2":{"3":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"q":{"docs":{},"r":{"docs":{},")":{"docs":{},"?":{"docs":{},"q":{"docs":{},":":{"docs":{},"q":{"docs":{},"r":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.010652463382157125}}}}}}}}}}},"docs":{}},"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.2063709162847923}},"e":{"docs":{},"(":{"1":{"3":{"1":{"3":{"1":{"3":{"docs":{},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":13.76923076923077}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":12.179894179894179}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"action_8h.html":{"ref":"action_8h.html","tf":0.005847953216374269}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"t":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.005409060175794456},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0022286605749944283}}}},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"a":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.004532344458178822},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.023872679045092837},"group__database.html":{"ref":"group__database.html","tf":0.008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.008673026886383347},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0022286605749944283},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012575979878432194},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004520503713270907},"db_8h.html":{"ref":"db_8h.html","tf":0.010284920083391245},"print_8h.html":{"ref":"print_8h.html","tf":0.023346303501945526}},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006457862447529867}}},")":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"n":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.01020408163265306}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__database.html":{"ref":"group__database.html","tf":0.004159445407279029},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"struct_extended.html":{"ref":"struct_extended.html","tf":0.04},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.043478260869565216},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0136986301369863},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012903225806451613},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.014285714285714285},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"namespacestd.html":{"ref":"namespacestd.html","tf":0.058823529411764705},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.03508771929824561},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.034482758620689655},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.004308547602501737},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.058823529411764705},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664},"vector_8hpp.html":{"ref":"vector_8hpp.html","tf":0.08333333333333333}}}}}},"r":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"m":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525}},"a":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.03365384615384615},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0319634703196347},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017829284599955428}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.011450381679389313}}}}}},".":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.021505376344086023}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__database.html":{"ref":"group__database.html","tf":0.016637781629116118},"group__databasec.html":{"ref":"group__databasec.html","tf":0.01665221162185603},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"db_8h.html":{"ref":"db_8h.html","tf":0.013342599027102154},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005203816131830009},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"db_8h.html":{"ref":"db_8h.html","tf":0.004169562195969423}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}}}}}}}},"t":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}},"n":{"docs":{},"c":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.023255813953488372},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0273972602739726},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.013119533527696793},"modules.html":{"ref":"modules.html","tf":0.009771986970684038},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.012360939431396786},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.017632241813602016},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.013392857142857142},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.02443609022556391},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0136986301369863},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01240694789081886},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01272264631043257},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.029177718832891247},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0136986301369863},"group__database.html":{"ref":"group__database.html","tf":0.010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010407632263660017},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.046511627906976744},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0410958904109589},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.027045300878972278},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.036619718309859155},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.037463976945244955},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0225},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.023936170212765957},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021052631578947368},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"functions.html":{"ref":"functions.html","tf":5.004149377593361},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.023846668152440385},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.06060606060606061},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.017761989342806393},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.03225806451612903},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.011530398322851153},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.06028368794326241},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0297029702970297},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.04436860068259386},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.038461538461538464},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.024390243902439025},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.047619047619047616},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.02981651376146789},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.03515625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.023026315789473683},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.016574585635359115},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.013452914798206279},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.02456140350877193},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.02574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.023968042609853527},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.04285714285714286},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.06629834254143646},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.07262569832402235},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.03968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006287989939216097},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.04794520547945205},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.04982817869415808},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.05161290322580645},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.02112676056338028},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.06779661016949153},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.025689819219790674},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.01764705882352941},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.022598870056497175},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.06428571428571428},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.06129032258064516},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.04205607476635514},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.03333333333333333},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.007237635705669481},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.03508771929824561},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.006002400960384154},"action_8h.html":{"ref":"action_8h.html","tf":0.025341130604288498},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.009686793671294802},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0099601593625498},"db_8h.html":{"ref":"db_8h.html","tf":0.008339124391938846},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.022727272727272728},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.02100840336134454},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"print_8h.html":{"ref":"print_8h.html","tf":0.021400778210116732},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01675977653631285},"system_8h.html":{"ref":"system_8h.html","tf":0.01875},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.018072289156626505},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":3.005952380952381},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":3.00625},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0053285968028419185},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6757575757575756},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":2.504201680672269},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.016901408450704224},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.01729106628242075},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.0625},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.03878406708595388},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.023026315789473683},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.055248618784530384},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.02914798206278027},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.053763440860215055},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.0873015873015873},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0684931506849315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.006872852233676976},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.06451612903225806},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.028169014084507043},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.015223596574690771},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023529411764705882},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.05405405405405406},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.07291666666666667},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.07242990654205607},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.05186972255729795},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.05162064825930372}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0035087719298246},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.7168597168597167},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7921368000560656}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":3.0338983050847457}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.72073732718894}}}}}}}}}},".":{"docs":{"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012}}},",":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.013651877133105802}}}},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":3.0384615384615383}}}}},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}},")":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006457862447529867},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}},"g":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.007288629737609329},"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.02729528535980149},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.027989821882951654},"struct_extended.html":{"ref":"struct_extended.html","tf":0.04},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.043478260869565216},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"namespacestd.html":{"ref":"namespacestd.html","tf":0.058823529411764705},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.027888446215139442},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.034482758620689655},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.058823529411764705},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.01809954751131222},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664},"vector_8hpp.html":{"ref":"vector_8hpp.html","tf":0.08333333333333333}}}}},"t":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.02127659574468085},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"chain_8h.html":{"ref":"chain_8h.html","tf":0.04040404040404041},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.024096385542168676}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":3.013157894736842},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.502659574468085},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":3.016949152542373},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.502008032128514}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":7.5131578947368425},"chain_8h.html":{"ref":"chain_8h.html","tf":7.51010101010101}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":5.021505376344086}},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":3.0029411764705882}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}},"3":{"docs":{},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}},"4":{"docs":{},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}},"5":{"docs":{},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}},"docs":{}},"(":{"docs":{},")":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}}}}}}},"l":{"docs":{},"f":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":3.76980198019802}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.8891788797430235}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":3.7636986301369864},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":3.7685185185185186},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.8891788797430235}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.502659574468085},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.502008032128514}}}}}}}}}}}}}}}}},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":1.506578947368421}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.9685803341424332}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":5.021505376344086}}}}},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.8806497175141244}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.8806497175141244}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":3.0029411764705882}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"v":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},"n":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__database.html":{"ref":"group__database.html","tf":0.006239168110918544},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00624457935819601},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.02664298401420959},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0027247956403269754},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.014475271411338963},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.014405762304921969},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0069721115537848604},"db_8h.html":{"ref":"db_8h.html","tf":0.006671299513551077},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.02727272727272727},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.025210084033613446},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.004532344458178822},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.006289308176100629},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.003861003861003861},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.010856453558504222},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.010804321728691477},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004197610590894414}}}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.038461538461538464},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.14285714285714285},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__singleton.html":{"ref":"group__singleton.html","tf":0.09090909090909091},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.004424778761061947},"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"group__eosiorpc.html":{"ref":"group__eosiorpc.html","tf":0.125},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}}}},"o":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.034482758620689655},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.058823529411764705},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664},"vector_8hpp.html":{"ref":"vector_8hpp.html","tf":0.08333333333333333}},"e":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007722007722007722},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007989347536617843}}}}},"h":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.004944375772558714},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0038747174685179204}},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.011661807580174927},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125}},"e":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"d":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846}},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"action_8h.html":{"ref":"action_8h.html","tf":0.007797270955165692}}}},"l":{"docs":{},"o":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876}}}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},"r":{"docs":{},"e":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"enumerations.html":{"ref":"enumerations.html","tf":0.05},"annotated.html":{"ref":"annotated.html","tf":0.006993006993006993},"files.html":{"ref":"files.html","tf":0.019230769230769232}}}},"n":{"docs":{},"c":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}},"x":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}}},"p":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}},")":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}}}}}}}}}},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012915724895059735}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635}}}}}},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002583144979011947}}},"g":{"docs":{},"h":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.018129377832715288},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.014207297384565708}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004191993292810731}}}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}},"m":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__eosiorpc.html":{"ref":"group__eosiorpc.html","tf":0.125}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"s":{"docs":{},"d":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.007004532344458179},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005489183080400388}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.08139534883720931},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0821917808219178},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}},",":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},".":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.02702702702702703}}}}}}}},"s":{"docs":{},"h":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.017632241813602016},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0880893300248139},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.09033078880407125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0796812749003984},"types_8h.html":{"ref":"types_8h.html","tf":0.04201680672268908}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.011166253101736972},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.011450381679389313},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.14285714285714285},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.01195219123505976}}},"\"":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}},")":{"docs":{},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}}}}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.009925558312655087},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.010178117048346057},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00796812749003984}}},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}}},")":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00796812749003984}}}},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0733082706766917},"action_8h.html":{"ref":"action_8h.html","tf":1.0733778891673629}}}}}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.007004532344458179},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.010978366160800775}}},"v":{"docs":{},"e":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"r":{"docs":{},"d":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}}}}},"b":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.014009064688916358},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.010978366160800775}},")":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005489183080400388}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}}},"u":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}}},"w":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0019373587342589602}}}},"i":{"docs":{},"=":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"f":{"docs":{},"(":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}}}}}}}}},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.008746355685131196},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.03614457831325301},"system_8h.html":{"ref":"system_8h.html","tf":0.015625}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},"o":{"docs":{},"m":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.008368200836820083}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.03125}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.008443908323281062}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__producertype.html":{"ref":"group__producertype.html","tf":0.02247191011235955},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010657193605683837},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.02510460251046025},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.027777777777777776}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes.html":{"ref":"classes.html","tf":0.22314814814814812},"annotated.html":{"ref":"annotated.html","tf":0.21135443503864557},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":5.071428571428571},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285}},"e":{"docs":{},"r":{"docs":{},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.20833333333333331},"functions.html":{"ref":"functions.html","tf":0.07462686567164178},"annotated.html":{"ref":"annotated.html","tf":0.19736842105263158},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10273972602739725},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":2}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":1.778357759486047}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.08994708994709}},"e":{"docs":{},"r":{"2":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.08994708994709}},";":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}}},"3":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.08994708994709}},";":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}}},"docs":{},";":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008240626287597857},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006457862447529867}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.01020408163265306}}},"n":{"docs":{},"c":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097}}},"t":{"docs":{},"i":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"i":{"docs":{},"d":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.023255813953488372},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__datastream.html":{"ref":"group__datastream.html","tf":0.002704530087897228},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.03389830508474576},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0625}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}},"t":{"1":{"2":{"8":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}},"_":{"docs":{},"t":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.014035087719298246},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}},",":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}},".":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615}}}}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"group__database.html":{"ref":"group__database.html","tf":0.013344887348353552},"group__databasec.html":{"ref":"group__databasec.html","tf":0.013356461405030355},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"functions.html":{"ref":"functions.html","tf":0.07670155446832229},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0070921985815602835},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.010296010296010296},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.057971014492753624},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.06451612903225806},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.698705998464744},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"db_8h.html":{"ref":"db_8h.html","tf":0.010701876302988186},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},".":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574}}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.02},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.014675052410901468},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0070921985815602835},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.010652463382157125},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.027777777777777776},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0260707635009311}},".":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}},"\\":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}}}}}},"docs":{}},"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003296250515039143},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.018617021276595744},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0136986301369863},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012903225806451613},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0048250904704463205},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007202881152460984},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002583144979011947},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.014056224899598393}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.008880994671403197},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.053763440860215055},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.018518518518518517}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"modules.html":{"ref":"modules.html","tf":0.009771986970684038},"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__eosiorpc.html":{"ref":"group__eosiorpc.html","tf":0.125},"annotated.html":{"ref":"annotated.html","tf":0.006993006993006993},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0024813895781637717},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}}}}}},"v":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.017717346518335394},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.021220159151193633},"group__database.html":{"ref":"group__database.html","tf":0.012651646447140381},"group__databasec.html":{"ref":"group__databasec.html","tf":0.012662619254119687},"group__types.html":{"ref":"group__types.html","tf":0.029411764705882353},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0046801872074883},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.007017543859649123},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.005148005148005148},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.005326231691078562},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.021712907117008445},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.021608643457382955},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.016790442363577657},"db_8h.html":{"ref":"db_8h.html","tf":0.015010423905489923},"print_8h.html":{"ref":"print_8h.html","tf":0.01556420233463035},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003296250515039143},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.010610079575596816},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0035658569199910855},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0038747174685179204},"print_8h.html":{"ref":"print_8h.html","tf":0.01556420233463035}}},"s":{"docs":{},")":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.013185002060156572},"group__database.html":{"ref":"group__database.html","tf":0.0006932409012131716},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0006938421509106678},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.018727801097836616},"db_8h.html":{"ref":"db_8h.html","tf":0.0005559416261292564}}},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006457862447529867}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10},"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723}},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}}}}}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0035087719298246},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.7168597168597167},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7921368000560656}}}}}}},"c":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.484080567406576},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":5.019230769230769}}},".":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__database.html":{"ref":"group__database.html","tf":0.021663778162911613},"group__databasec.html":{"ref":"group__databasec.html","tf":0.02168256721595837},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.06896551724137931},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.024752475247524754},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.039473684210526314},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013297872340425532},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.05084745762711865},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":5.004149377593361},"variables.html":{"ref":"variables.html","tf":5.003597122302159},"enumerations.html":{"ref":"enumerations.html","tf":5.05},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.004484304932735426},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4941413513093218},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":5.001718213058419},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":1.2693548387096774},"db_8h.html":{"ref":"db_8h.html","tf":0.02571230020847811},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.010040160642570281}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.019801980198019802},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":5.014634146341463}}}}}}},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.008032128514056224}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},".":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012575979878432194}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}},"e":{"docs":{},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}},";":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.019801980198019802},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.02631578947368421},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.03389830508474576},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.01951219512195122},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.002305596311045902},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.006024096385542169}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008240626287597857},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.008849557522123894},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.008443908323281062},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.008403361344537815},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0009686793671294801}}}}},"i":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}},"a":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}},"c":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}},"i":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}}},"_":{"docs":{},"s":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.0321285140562249},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.034782608695652174},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.030534351145038167},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.031578947368421054}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"struct_extended.html":{"ref":"struct_extended.html","tf":0.08},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842}}}}}},"q":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.004424778761061947},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.004424778761061947},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}},"/":{"docs":{"files.html":{"ref":"files.html","tf":0.019230769230769232},"dir_f4c96640472432942b3fc30ed441ca04.html":{"ref":"dir_f4c96640472432942b3fc30ed441ca04.html","tf":10}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"d":{"docs":{},"t":{"docs":{"dir_f4c96640472432942b3fc30ed441ca04.html":{"ref":"dir_f4c96640472432942b3fc30ed441ca04.html","tf":15},"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":0.2}},"/":{"docs":{"dir_f4c96640472432942b3fc30ed441ca04.html":{"ref":"dir_f4c96640472432942b3fc30ed441ca04.html","tf":0.25}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":15},"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":0.2}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":0.2}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":15},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.022727272727272728}},"/":{"docs":{"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":0.2}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"struct_extended.html":{"ref":"struct_extended.html","tf":0.04},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}},"p":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"h":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}}}}}}}}}}}}},"t":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}},"p":{"docs":{},"p":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"namespacestd.html":{"ref":"namespacestd.html","tf":0.058823529411764705},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"p":{"docs":{},"p":{"docs":{"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664}}}}}}}}}}}}}}},"b":{"docs":{},".":{"docs":{},"h":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.043478260869565216},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705}},"p":{"docs":{},"p":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"h":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}},"p":{"docs":{},"p":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}},"p":{"docs":{},"p":{"docs":{"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}},"p":{"docs":{},"p":{"docs":{"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.034482758620689655}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}}}},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"h":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035}}}}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545}}}}}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.058823529411764705}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"vector_8hpp.html":{"ref":"vector_8hpp.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"=":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0733082706766917},"action_8h.html":{"ref":"action_8h.html","tf":1.0733778891673629}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5576519916142558}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5797399783315277},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5798049213034805},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5576519916142558},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":1.377922077922078}},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5825568797399784},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5826867656838839},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}},")":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":5.0227272727272725}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":5.0227272727272725}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}}},"i":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":1.524390243902439}}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":5.0588235294117645}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":5.0588235294117645}}}}}}}}}},"s":{"docs":{},"u":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.8994177875928528},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":5.027777777777778},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.8891788797430235}}}}}}},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":2.54},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":1.524390243902439}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"z":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":2.54}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":2.54}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":2.54}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}}}}}}},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004159445407279029},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.015957446808510637},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"db_8h.html":{"ref":"db_8h.html","tf":0.0033356497567755385},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.012048192771084338}},".":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}}},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}},"x":{"docs":{},",":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812}}}},")":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10407692237239391},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":5.05}},"&":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},".":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.03240901213171577},"group__databasec.html":{"ref":"group__databasec.html","tf":0.03243712055507372},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.009641584573464682},"db_8h.html":{"ref":"db_8h.html","tf":0.026824183460736624}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.003292894280762565},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003295750216825672},"db_8h.html":{"ref":"db_8h.html","tf":0.005281445448227936}}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}}}}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}},")":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}}}}}},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.484080567406576},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":8.043478260869565}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.484080567406576},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":8.048387096774194}}}}}}}},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0060783902745755606},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012575979878432194}}}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}},"'":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098}}}}}}}},".":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}},"e":{"docs":{},".":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}}}}}}}}}},")":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901}}},",":{"docs":{"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.010856453558504222},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.010804321728691477}}}},"l":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002472187886279357},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0019373587342589602}},"=":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635}}},"a":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.007004532344458179},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005489183080400388}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.007004532344458179},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.010978366160800775}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"8":{"7":{"6":{"5":{"4":{"3":{"2":{"3":{"4":{"5":{"6":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.003119584055459272},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003122289679098005},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"db_8h.html":{"ref":"db_8h.html","tf":0.0033356497567755385},"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0018863969817648292},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}},"d":{"docs":{"./":{"ref":"./","tf":0.007288629737609329}},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},",":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635},"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.041176470588235294},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"s":{"docs":{},".":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}}}},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.011278195488721804},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"group__database.html":{"ref":"group__database.html","tf":0.0022530329289428075},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0022549869904596705},"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"action_8h.html":{"ref":"action_8h.html","tf":0.011695906432748537},"db_8h.html":{"ref":"db_8h.html","tf":0.0018068102849200835},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.02481389578163772},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.02544529262086514},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.014084507042253521},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.01440922190201729},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__types.html":{"ref":"group__types.html","tf":0.029411764705882353},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613},"action_8h.html":{"ref":"action_8h.html","tf":0.007797270955165692},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0199203187250996},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.019851116625310174},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.020356234096692113},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.02390438247011952}}},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}}}}}},"=":{"docs":{},"=":{"0":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}},"docs":{}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.02631578947368421},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.013452914798206279},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0019373587342589602},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}},",":{"docs":{"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017829284599955428}}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}},"s":{"docs":{},"s":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.004532344458178822},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"annotated.html":{"ref":"annotated.html","tf":0.006993006993006993},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.006289308176100629},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.003861003861003861},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0028544243577545195},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.010856453558504222},"namespacestd.html":{"ref":"namespacestd.html","tf":0.058823529411764705},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.05263157894736842},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.010804321728691477},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004197610590894414}},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.20833333333333331},"functions.html":{"ref":"functions.html","tf":0.07462686567164178},"annotated.html":{"ref":"annotated.html","tf":0.19736842105263158},"namespacestd.html":{"ref":"namespacestd.html","tf":3.75},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":2.5}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.007288629737609329},"files.html":{"ref":"files.html","tf":0.3488372093023256}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{"files.html":{"ref":"files.html","tf":0.019230769230769232},"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":10}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"n":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"enumerations.html":{"ref":"enumerations.html","tf":0.05}},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.008746355685131196},"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"enumerations.html":{"ref":"enumerations.html","tf":0.05},"annotated.html":{"ref":"annotated.html","tf":5.006993006993007},"struct_extended.html":{"ref":"struct_extended.html","tf":0.04},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.043478260869565216},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.017761989342806393},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.019230769230769232},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.012195121951219513},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.03614457831325301},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"namespacestd.html":{"ref":"namespacestd.html","tf":0.058823529411764705},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"files.html":{"ref":"files.html","tf":0.038461538461538464}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.03},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0297951582867784}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.012552301255230125}}}}}}},"k":{"docs":{},"e":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"v":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"o":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012915724895059735}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846}}}}}}}},"k":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.007518796992481203},"action_8h.html":{"ref":"action_8h.html","tf":0.011695906432748537}}}},"g":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009771986970684038},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}}}}},"i":{"docs":{},"c":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0028544243577545195},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0019373587342589602}}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002583144979011947}}},"n":{"docs":{},"g":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.012360939431396786},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.010610079575596816},"group__database.html":{"ref":"group__database.html","tf":0.0019064124783362219},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0019080659150043364},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"action_8h.html":{"ref":"action_8h.html","tf":0.005847953216374269},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.013561511139812722},"db_8h.html":{"ref":"db_8h.html","tf":0.00236275191104934},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}}}}},"w":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.018129377832715288},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.014207297384565708}},"e":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004159445407279029},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"db_8h.html":{"ref":"db_8h.html","tf":0.004169562195969423}}}}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.944372852233677}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}},"s":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":3.8106060606060606},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004191993292810731},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}}}}}},"o":{"docs":{},"k":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}},"u":{"docs":{},"p":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0008673026886383347},"db_8h.html":{"ref":"db_8h.html","tf":0.0006949270326615705}}}}}},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.011661807580174927}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002472187886279357},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.007936507936507936},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0038747174685179204}}},"b":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.007004532344458179},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005489183080400388}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.007004532344458179},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.010978366160800775}}}},"h":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.003861003861003861},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}},"s":{"docs":{},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.03508771929824561},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.027149321266968326}}}}},"u":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097}}}}},"m":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.005409060175794456},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0020057945174949856},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.01935483870967742},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.02336448598130841}},"a":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.04054054054054054},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025},"types_8h.html":{"ref":"types_8h.html","tf":0.008403361344537815}},".":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901}}},",":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}}}}}},"n":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"a":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.013029315960912053},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.07692307692307693},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}}}},"i":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}},"r":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01240694789081886},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01272264631043257},"group__database.html":{"ref":"group__database.html","tf":0.006239168110918544},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00624457935819601},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.013944223107569721},"db_8h.html":{"ref":"db_8h.html","tf":0.006671299513551077}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761}}}}}}}},"k":{"docs":{},"e":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901}},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.9156862745098039}},";":{"docs":{"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":3.005952380952381},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":3.00625},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":2.5053763440860215},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6757575757575756},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":2.504201680672269}},"(":{"docs":{},")":{"docs":{},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}}}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}}}}}}}},"p":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.008113590263691683},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002674392689993314},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02702702702702703}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.002704530087897228},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017829284599955428}}}},"x":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0041928721174004195},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.75418410041841}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5566037735849056}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.7583682008368201}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.7583682008368201}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.75418410041841}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}},"s":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.75418410041841}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.7583682008368201}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.7583682008368201}}}}}}},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.75418410041841}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.7583682008368201}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.885}},"s":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":1.524390243902439}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0449438202247191},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7570921985815603},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.03347280334728033},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.4734228971962617}},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":2.54}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"m":{"docs":{},"o":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.013651877133105802},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":5.055555555555555},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":5.05}},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.009925558312655087},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.010178117048346057},"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.07738095238095238},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.06875},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":2.553763440860215},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":6.170420739481513},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.01195219123505976},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.04090909090909091},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.046218487394957986},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}}},"y":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":13.005952380952381}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952}}}}}}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":13.00625}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625}}}}}}}}}}}}}}}}},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}},".":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.022727272727272728},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.029411764705882353}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"memory_8h.html":{"ref":"memory_8h.html","tf":25.058823529411764}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":12.504201680672269}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"r":{"docs":{},"k":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10340832419989558},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":7.516129032258065},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}}},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"_":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}},"s":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"i":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__serialize.html":{"ref":"group__serialize.html","tf":0.04819277108433735},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.05217391304347826},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001467197652483756},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.030534351145038167},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.042105263157894736}},":":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"enumerations.html":{"ref":"enumerations.html","tf":0.05}}}}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},",":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077}}}}}}}}},"r":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"_":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0136986301369863},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.003816793893129771},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00298804780876494},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"a":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.018518518518518517}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009771986970684038},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0024813895781637717},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.002544529262086514},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00298804780876494}}}}}}}}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10541411871739056},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":5.948412698412698},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.04838709677419355},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.018691588785046728},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}},"(":{"docs":{},")":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}},")":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}}}}}}}}}}}}}}},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7570921985815603},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.4734228971962617}},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.7583682008368201}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.009868421052631578}},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0070921985815602835}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.003816793893129771},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00298804780876494}}}},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.038461538461538464},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013}}}}},"a":{"docs":{},"r":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0019373587342589602}}}},"u":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008240626287597857},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006457862447529867}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.9706763307888385},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}},")":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"struct_extended.html":{"ref":"struct_extended.html","tf":0.04},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"v":{"docs":{},"e":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.06896551724137931},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.024752475247524754},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.004484304932735426},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.008174386920980926}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__multiindex.html":{"ref":"group__multiindex.html","tf":17.504950495049506}}}}}}},"p":{"docs":{},"l":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009433962264150943},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007722007722007722},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007989347536617843},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.007337526205450734},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0019373587342589602}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":5.4844997667358575},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":1.3841843088418433},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4739046391752577},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.057971014492753624},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":5}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}},":":{"docs":{},":":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":5}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"_":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":5}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}},"*":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":10.899019607843139}}}}}}}}}}}}}}}},"s":{"docs":{},"g":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"action_8h.html":{"ref":"action_8h.html","tf":0.005847953216374269},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"action_8h.html":{"ref":"action_8h.html","tf":0.005847953216374269},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}},")":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}},")":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}},",":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}},":":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.01935483870967742},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.014018691588785047}}}},"n":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"group__datastream.html":{"ref":"group__datastream.html","tf":0.002704530087897228},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"enumerations.html":{"ref":"enumerations.html","tf":0.05},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.019801980198019802},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":3.027027027027027},"types_8hpp.html":{"ref":"types_8hpp.html","tf":1.6711915535444946}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.04030226700251889},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.026785714285714284},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.04887218045112782},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0273972602739726},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.038461538461538464},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.013262599469496022},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__database.html":{"ref":"group__database.html","tf":0.011091854419410746},"group__databasec.html":{"ref":"group__databasec.html","tf":0.011101474414570685},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__singleton.html":{"ref":"group__singleton.html","tf":0.09090909090909091},"group__serialize.html":{"ref":"group__serialize.html","tf":0.012048192771084338},"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.013043478260869565},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5994582881906826},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5999778319663046},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0125},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.004424778761061947},"group__producertype.html":{"ref":"group__producertype.html","tf":0.016853932584269662},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"classes.html":{"ref":"classes.html","tf":0.42407407407407405},"functions.html":{"ref":"functions.html","tf":0.07670155446832229},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"annotated.html":{"ref":"annotated.html","tf":0.40172984909827014},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.21015963926228282},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.043478260869565216},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.0909667597056585},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.07526881720430108},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009433962264150943},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.014184397163120567},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0891089108910891},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.013651877133105802},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.038461538461538464},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.024390243902439025},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.047619047619047616},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.013157894736842105},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.016574585635359115},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.013452914798206279},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.01951219512195122},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":4.514285714285714},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.015873015873015872},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0018863969817648292},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0136986301369863},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4807774914089347},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012903225806451613},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":5.077464788732394},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.05084745762711865},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0028544243577545195},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.06470588235294118},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.05405405405405406},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020833333333333332},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":1.4064935064935067},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.00967741935483871},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.009345794392523364},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"namespacestd.html":{"ref":"namespacestd.html","tf":0.058823529411764705},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492},"action_8h.html":{"ref":"action_8h.html","tf":0.056530214424951264},"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.126984126984127},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.034482758620689655},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.008895066018068103},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.02702702702702703},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.03333333333333333},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.058823529411764705},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00931098696461825},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.015267175572519083},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.04878048780487805},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.058823529411764705},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.02262443438914027},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"annotated.html":{"ref":"annotated.html","tf":0.027972027972027972},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":5.000445732114999},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":5.011363636363637},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":5.043478260869565},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.010060783902745755},"namespacestd.html":{"ref":"namespacestd.html","tf":5.0588235294117645},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}},".":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.024096385542168676},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.02608695652173913},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.015267175572519083},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368}}}},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007104795737122558},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846}}},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5797399783315277},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5798049213034805},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":1.377922077922078}}}}}}}},"s":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}}}}}}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"_":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"action_8h.html":{"ref":"action_8h.html","tf":0.011695906432748537},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395}}}}},".":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.019801980198019802},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.028169014084507043}}}}},"n":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003708281829419036},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0029060381013884403}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008240626287597857},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0009686793671294801}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"_":{"docs":{},"s":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}}}}}}}}}}}},"w":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__database.html":{"ref":"group__database.html","tf":0.0022530329289428075},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0022549869904596705},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.015},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.03019538188277087},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.021505376344086023},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.010482180293501049},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.039603960396039604},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.02734375},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.03618421052631579},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.01929824561403509},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011583011583011582},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011984021304926764},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.022835394862036156},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.029411764705882353},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.031073446327683617},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0048250904704463205},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007202881152460984},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.027777777777777776},"db_8h.html":{"ref":"db_8h.html","tf":0.0018068102849200835},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0186219739292365}},"l":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}}}}},"x":{"docs":{},"t":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7570921985815603},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":0.05}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}}}}},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.012552301255230125},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"_":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.7583682008368201}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.895}}}}}}}}}}}}}},"g":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526}},"a":{"docs":{},"t":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0028544243577545195}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"group__datastream.html":{"ref":"group__datastream.html","tf":0.008113590263691683},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0035658569199910855}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}},"t":{"docs":{},"e":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},":":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"s":{"docs":{},":":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.026785714285714284},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0273972602739726},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015600624024961},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846}}}}}}}},"h":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}},"w":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"group__systemapi.html":{"ref":"group__systemapi.html","tf":2.1468412066021627},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":2.1471861471861473},"system_8h.html":{"ref":"system_8h.html","tf":2.1459821428571426}}}},"u":{"docs":{},"m":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.004903053264987743}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010638297872340425},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.038461538461538464},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0020057945174949856},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.011530398322851153},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.03669724770642202},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.013452914798206279},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.008771929824561403},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007722007722007722},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.010652463382157125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.04819277108433735},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012915724895059735},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815},"print_8h.html":{"ref":"print_8h.html","tf":0.017509727626459144},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.010040160642570281}},":":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}},".":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0041928721174004195},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.007017543859649123},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.005326231691078562}}},",":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}},"e":{"docs":{},"r":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.012552301255230125}}}},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":1.1583304587788894}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.013452914798206279}},">":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0024515266324938714}}}},"l":{"docs":{},"l":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}},".":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464}}}}}}}},"s":{"docs":{},"e":{"docs":{"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055}}}}},";":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055}}},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"2":{"docs":{},")":{"docs":{},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"3":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}},"docs":{}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901}},")":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901}}}}}}}}},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}}}}}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010479983232026828}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0020959966464053656}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004191993292810731}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}},",":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007104795737122558}}}},"o":{"3":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}},"docs":{"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.017126546146527116}},"=":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}}},"b":{"docs":{},"j":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001467197652483756},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__datastream.html":{"ref":"group__datastream.html","tf":0.005409060175794456},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.042105263157894736},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.11504424778761062},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.009806106529975486},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.02664298401420959},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.03811659192825112},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.02456140350877193},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011583011583011582},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011984021304926764},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.015510375183399707},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.04186489058039962},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.04463208685162847},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.04201680672268908}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.019801980198019802},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.019736842105263157},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.017937219730941704},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001467197652483756},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.024738344433872503},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023529411764705882},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0048250904704463205},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007202881152460984}}},")":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}},"\\":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00670718926849717}}}}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926}}}}}},"'":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801}}}}}},",":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}},"p":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.003816793893129771},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00298804780876494}},"t":{"docs":{},"=":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}},"i":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.011661807580174927},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.003816793893129771},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00298804780876494}}},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.008746355685131196},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.07964601769911504},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10831137746488333},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":8.761874148172911}},"s":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.007288629737609329}}}},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":12.504424778761061}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.008849557522123894}}}},"=":{"docs":{},"=":{"docs":{"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.14925373134328357}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}},"*":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"~":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}},"u":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}},"&":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.006660323501427212}}},";":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":17.558823529411764}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003296250515039143},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.011494252873563218},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5825568797399784},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5826867656838839},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842},"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.057692307692307696},"functions.html":{"ref":"functions.html","tf":0.026970954356846474},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.008468910184978827},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":1.6865828092243185},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7712765957446809},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":3.0164473684210527},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.008771929824561403},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":1.449163449163449},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":1.6002522951853668},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":1.6984126984126982},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":4.1320049813200495},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":3.7887096774193547},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":3.7884615384615383},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":2.5492957746478875},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":1.2342942371486616},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02702702702702703},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":1.377922077922078},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":2.8958525345622115},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":3.796728971962617},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.6914683627590745},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.7214885954381752},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002583144979011947},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.04072398190045249}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"<":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.576923076923077},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.576923076923077},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":2.5},"group__producertype.html":{"ref":"group__producertype.html","tf":0.625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10273972602739725},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5555555555555556},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.75},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":2.142857142857143},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":1.153846153846154},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.7142857142857142},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7894736842105263},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8333333333333333},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.40540540540540543},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":3.75},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7142857142857142},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.46875},"structsigned__int.html":{"ref":"structsigned__int.html","tf":2.0454545454545454},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":2.142857142857143}},"<":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":2.5},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":2.5},"group__datastream.html":{"ref":"group__datastream.html","tf":5.795454545454545},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":1.8493150684931505},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.40540540540540543},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.6818181818181819},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.7142857142857142}}},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5555555555555556},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.75},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8333333333333333},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7142857142857142},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.46875}}}},">":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":2.5052631578947366},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5566037735849056},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7570921985815603},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":1.1560883063125216},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0035087719298246},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.7168597168597167},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7921368000560656},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.72073732718894},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.4734228971962617}},">":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":6.148534021759175},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":1.8573382465631305},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.4063568801913236},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.6830244544357934},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.715486194477791}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}}}}}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5566037735849056},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7570921985815603},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.72073732718894},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.4734228971962617},"structsigned__int.html":{"ref":"structsigned__int.html","tf":2.04907336330738},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":2.146458583433373}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}}}}}},"!":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.40730835497724177}},"=":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5797399783315277},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5798049213034805},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":2.5052631578947366},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":5.008849557522124},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":2.515625},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.3095563744271885},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5566037735849056},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7570921985815603},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":2.1483820047355957},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":1.1560883063125216},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":1.3773349937733501},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":1.2629032258064516},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":3.0208333333333335},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.72073732718894},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.4734228971962617},"structsigned__int.html":{"ref":"structsigned__int.html","tf":2.04907336330738},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":2.146458583433373},"types_8hpp.html":{"ref":"types_8hpp.html","tf":1.6757164404223226}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}}}},".":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.011267605633802818},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.011527377521613832},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017829284599955428},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.025157232704402517},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.02631578947368421},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.03314917127071823},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.02631578947368421},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.02574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.02663115845539281},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.024738344433872503},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.038600723763570564},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.03361344537815126}}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7570921985815603},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":3.0105263157894737},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":2.867438867438867},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":1.5842736001121311},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":3.258466839817934},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.4734228971962617},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.684230727053405},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.7166866746698679}},"=":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5797399783315277},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5798049213034805},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":2.5052631578947366},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":5.008849557522124},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":2.515625},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.3095563744271885},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5566037735849056},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7570921985815603},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":2.1483820047355957},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":1.1560883063125216},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0035087719298246},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.7168597168597167},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7921368000560656},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":1.3773349937733501},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":1.2629032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":2.507042253521127},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.4063568801913236},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":2.5058823529411764},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":3.0208333333333335},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.72073732718894},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.4734228971962617},"structsigned__int.html":{"ref":"structsigned__int.html","tf":2.04907336330738},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":2.146458583433373},"types_8hpp.html":{"ref":"types_8hpp.html","tf":3.351432880844645}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705}}}}}}}}},"(":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":3.7850877192982457}}}},"*":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":1.1132075471698113},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.7168597168597167},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7921368000560656},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":1.3773349937733501},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":1.2629032258064516},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.8146167099544835}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5576519916142558}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098}}}}}}}}}},"+":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5566037735849056},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":1.5032894736842106},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":1.4337194337194334},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":1.5842736001121311},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":1.44147465437788},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.9468457943925234}},"+":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":2.7546699875467002},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":2.5258064516129033},"structsigned__int.html":{"ref":"structsigned__int.html","tf":1.36846145410681}}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5576519916142558},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.72073732718894},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":1.420268691588785}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526}}}}}}}},"/":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":1.1132075471698113},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.7168597168597167},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7921368000560656}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5576519916142558}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098}}}}}}}},",":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.016771488469601678}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}}}}}}}}},"a":{"docs":{},"q":{"docs":{},"u":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}},"u":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}},"p":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},"t":{"docs":{"./":{"ref":"./","tf":0.01020408163265306},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}},":":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003708281829419036},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.026525198938992044},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0029060381013884403},"print_8h.html":{"ref":"print_8h.html","tf":0.019455252918287938}}},".":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},":":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__eosiorpc.html":{"ref":"group__eosiorpc.html","tf":0.125}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.004424778761061947}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.015789473684210527},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.008385744234800839},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.006726457399103139},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.003861003861003861},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.004757373929590866},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.014475271411338963},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.014405762304921969},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}},"n":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.003986135181975737},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00398959236773634},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.00847457627118644},"db_8h.html":{"ref":"db_8h.html","tf":0.0031966643502432243}},"e":{"docs":{},".":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":5.0508474576271185}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}},",":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}}}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023529411764705882}},"e":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0050259965337954935},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005030355594102341},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"struct_extended.html":{"ref":"struct_extended.html","tf":0.08},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.019736842105263157},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.016574585635359115},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"db_8h.html":{"ref":"db_8h.html","tf":0.004030576789437109},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},",":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901}}}}}}},"f":{"docs":{},":":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004672897196261682}},")":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004672897196261682}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761}}}}}}},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.011417697431018078}}}},"p":{"docs":{"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.011467889908256881},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"a":{"docs":{},"m":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0684931506849315},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.09259259259259259},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}},"e":{"docs":{},"t":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0410958904109589},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.015},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.05555555555555555},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0148975791433892}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.005356407086938607},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004197610590894414},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}}},"s":{"docs":{},":":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.011948908117016894},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.007556675062972292},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.017857142857142856},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.016917293233082706},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0182648401826484},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01240694789081886},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01272264631043257},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.026525198938992044},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"group__database.html":{"ref":"group__database.html","tf":0.010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010407632263660017},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.023255813953488372},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0273972602739726},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"group__serialize.html":{"ref":"group__serialize.html","tf":0.0321285140562249},"group__datastream.html":{"ref":"group__datastream.html","tf":0.05273833671399594},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.034782608695652174},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.016901408450704224},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.01729106628242075},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.0199203187250996},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0225},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.021645021645021644},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013297872340425532},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021052631578947368},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.035398230088495575},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.028081123244929798},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.019538188277087035},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.018867924528301886},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.020642201834862386},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.015625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01569506726457399},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.028070175438596492},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.02702702702702703},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.02796271637816245},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.002934395304967512},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.016175071360608945},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.014124293785310734},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.022919179734620022},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.025210084033613446},"action_8h.html":{"ref":"action_8h.html","tf":0.017543859649122806},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.018518518518518517},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.009363900548918308},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0099601593625498},"db_8h.html":{"ref":"db_8h.html","tf":0.008339124391938846},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"print_8h.html":{"ref":"print_8h.html","tf":0.019455252918287938},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01675977653631285},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.022900763358778626},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025},"system_8h.html":{"ref":"system_8h.html","tf":0.015625},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.010040160642570281},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.01809954751131222}}},".":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}},"`":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}},"i":{"docs":{},"s":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}}}}}},"s":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.014035087719298246},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.005148005148005148},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.010652463382157125}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846}}}}}},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.02631578947368421},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.007978723404255319},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"chain_8h.html":{"ref":"chain_8h.html","tf":0.020202020202020204},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.006024096385542169}}},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654}}}},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}}}},"c":{"docs":{},"k":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__datastream.html":{"ref":"group__datastream.html","tf":0.34834654865080833},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.02},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10585985083238945},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.012433392539964476},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0148975791433892},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.34158522343106523},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}}}}},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279}}}}}}}}},"y":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"e":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.003119584055459272},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003122289679098005},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004611192622091804},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},")":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0025151959756864388},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"db_8h.html":{"ref":"db_8h.html","tf":0.0033356497567755385},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279}}}}}}},"d":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.008968609865470852}},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":1.1583304587788894}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.004944375772558714},"group__serialize.html":{"ref":"group__serialize.html","tf":0.040160642570281124},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.043478260869565216},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005812076202776881},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.03816793893129771}}}}}},"m":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.013651877133105802}},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.007518796992481203},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":5.071428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002674392689993314},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.023090586145648313},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":2.588235294117647},"action_8h.html":{"ref":"action_8h.html","tf":0.005847953216374269},"permission_8h.html":{"ref":"permission_8h.html","tf":0.05}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023529411764705882},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"types_8h.html":{"ref":"types_8h.html","tf":0.008403361344537815}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"permission_8h.html":{"ref":"permission_8h.html","tf":13.00294117647059}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":25.058823529411764}}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.07142857142857142},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.013651877133105802},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023529411764705882},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"types_8h.html":{"ref":"types_8h.html","tf":0.8865546218487395}},"e":{"docs":{},";":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10340832419989558},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007104795737122558},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":10.041176470588235}},"[":{"docs":{},"]":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}},"s":{"docs":{},".":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941}}},",":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705}}}}},")":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}},"s":{"docs":{},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706}},"e":{"docs":{},")":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}}}},",":{"docs":{"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857}}}}},"n":{"docs":{},"d":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"system_8h.html":{"ref":"system_8h.html","tf":0.028125}}}}},"o":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.3682235195996666}},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.01929824561403509}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011583011583011582}}},"docs":{}},"6":{"4":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011984021304926764}}},"docs":{}},"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.009925558312655087},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.010178117048346057},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__database.html":{"ref":"group__database.html","tf":0.01559792027729636},"group__databasec.html":{"ref":"group__databasec.html","tf":0.015611448395490026},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.038461538461538464},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0020057945174949856},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.014035087719298246},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.01287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.010652463382157125},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.009222385244183609},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.01195219123505976},"db_8h.html":{"ref":"db_8h.html","tf":0.01584433634468381},"print_8h.html":{"ref":"print_8h.html","tf":0.017509727626459144}},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.007518796992481203},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.010610079575596816},"group__database.html":{"ref":"group__database.html","tf":0.010571923743500867},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010581092801387684},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.02976190476190476},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.03125},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0067613252197430695},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.02},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002674392689993314},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.011417697431018078},"action_8h.html":{"ref":"action_8h.html","tf":0.007797270955165692},"chain_8h.html":{"ref":"chain_8h.html","tf":0.030303030303030304},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992},"db_8h.html":{"ref":"db_8h.html","tf":0.00847810979847116},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.01818181818181818},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.02100840336134454},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176},"print_8h.html":{"ref":"print_8h.html","tf":0.007782101167315175},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0148975791433892},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723}}}}}}}}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728}}}}}}}},"l":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0057684384013185},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"group__database.html":{"ref":"group__database.html","tf":0.010571923743500867},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010581092801387684},"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0041928721174004195},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004611192622091804},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004520503713270907},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749},"db_8h.html":{"ref":"db_8h.html","tf":0.00847810979847116},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613}},"e":{"docs":{},".":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613}}}}}}}},"i":{"docs":{},"t":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.02981651376146789}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}},"p":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"group__database.html":{"ref":"group__database.html","tf":0.005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005203816131830009},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.007337526205450734},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"action_8h.html":{"ref":"action_8h.html","tf":0.005847953216374269},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749},"db_8h.html":{"ref":"db_8h.html","tf":0.004169562195969423},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__database.html":{"ref":"group__database.html","tf":0.008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.008673026886383347},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5938244853737812},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5942141432054977},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0024515266324938714},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.010526315789473684},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011583011583011582},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011984021304926764},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":1.385064935064935},"db_8h.html":{"ref":"db_8h.html","tf":0.010284920083391245},"print_8h.html":{"ref":"print_8h.html","tf":0.017509727626459144},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.04878048780487805}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}}}},"e":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004159445407279029},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"db_8h.html":{"ref":"db_8h.html","tf":0.004169562195969423}}},"e":{"docs":{},"d":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}},"s":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.007978723404255319},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.008032128514056224}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":2.543269230769231},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.329575596816976},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":2.545662100456621},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":1.1707475622968582},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":1.1711372201285748},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":2.1849467716477737},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5607966457023061},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":1.5164473684210527},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":2.170481452249408},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0087719298245614},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.7207207207207206},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7961314738243745},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":1.3993506493506496},"print_8h.html":{"ref":"print_8h.html","tf":1.3278210116731517}},"i":{"1":{"2":{"8":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"&":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003708281829419036},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0029060381013884403}}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"(":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}}}}}}}},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"_":{"docs":{},"f":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":2.5048076923076925},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":2.5045662100456623},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.2063709162847923}},"(":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}},"f":{"docs":{},"/":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"d":{"docs":{},"f":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}}}}},"n":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}}}},"q":{"docs":{},"f":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}},"_":{"docs":{},"l":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}},"f":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}},"u":{"docs":{},"i":{"1":{"2":{"8":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"&":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"1":{"docs":{},"e":{"docs":{},"+":{"1":{"8":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"docs":{}},"docs":{}}}},"docs":{}}}},".":{"docs":{},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"print_8h.html":{"ref":"print_8h.html","tf":11.251945525291829}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"print_8hpp.html":{"ref":"print_8hpp.html","tf":17.545454545454547}}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}},"d":{"docs":{},"f":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"i":{"1":{"2":{"8":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"docs":{}},"docs":{}},"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"n":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"q":{"docs":{},"f":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"s":{"docs":{},"_":{"docs":{},"l":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"f":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"u":{"docs":{},"i":{"1":{"2":{"8":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"docs":{}},"docs":{}},"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009771986970684038},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0684931506849315},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.02},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0186219739292365}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":13.763698630136986}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":11.5025}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":13.768518518518519}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"privileged_8h.html":{"ref":"privileged_8h.html","tf":11.501862197392924}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":15.052631578947368}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__database.html":{"ref":"group__database.html","tf":0.03500866551126516},"group__databasec.html":{"ref":"group__databasec.html","tf":0.035039028620988726},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.020750366799413122},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.05},"db_8h.html":{"ref":"db_8h.html","tf":0.031966643502432245}}},"y":{"docs":{},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561}}},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":3.0384615384615383},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":1.524390243902439},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":5.0476190476190474},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":5.025}},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}}}}}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"db_8h.html":{"ref":"db_8h.html","tf":0.004447533009034051}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}},"i":{"docs":{},"t":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.009465855307640297},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0035658569199910855},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.045454545454545456},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801}}}}}},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"system_8h.html":{"ref":"system_8h.html","tf":0.028125}}}},"e":{"docs":{},"d":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0041928721174004195}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.008746355685131196}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0175},"group__types.html":{"ref":"group__types.html","tf":0.029411764705882353},"group__producertype.html":{"ref":"group__producertype.html","tf":0.016853932584269662},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.06756756756756757},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":5.048192771084337},"chain_8h.html":{"ref":"chain_8h.html","tf":0.030303030303030304},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01675977653631285}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__producertype.html":{"ref":"group__producertype.html","tf":10.63061797752809}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.020202020202020204}}},".":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"chain_8h.html":{"ref":"chain_8h.html","tf":0.04040404040404041},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}},"[":{"2":{"1":{"docs":{},"]":{"docs":{},";":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}},"docs":{}},"docs":{}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}}}}}}},"\\":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}},"\\":{"docs":{},"_":{"docs":{},"s":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}},"_":{"docs":{},"s":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":3.7635135135135136}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":5.013513513513513}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":5.0120481927710845}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":17.558823529411764}}}}}}}}}}}}}}},".":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.05405405405405406}}}},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}},"t":{"docs":{},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.009476720230737536},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.007426541814659348}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.023255813953488372},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863}},"l":{"docs":{},"i":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723}}},"y":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}},"t":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}},"y":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012575979878432194}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}},"s":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.009398496240601503},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.02481389578163772},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.02544529262086514},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.014084507042253521},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.01440922190201729},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002674392689993314},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.03508771929824561},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"action_8h.html":{"ref":"action_8h.html","tf":0.011695906432748537},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.02390438247011952},"permission_8h.html":{"ref":"permission_8h.html","tf":0.04411764705882353},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"_":{"docs":{},"u":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}},"s":{"docs":{},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}}}}}}}}}}},")":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}},"u":{"docs":{},"b":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.011166253101736972},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.011450381679389313},"group__types.html":{"ref":"group__types.html","tf":0.029411764705882353},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.078125},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.014184397163120567},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.010238907849829351},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.038461538461538464},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.024390243902439025},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.047619047619047616},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.008968609865470852},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.011904761904761904},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.005154639175257732},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.05084745762711865},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.09375},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.014285714285714285},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.00967741935483871},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.007009345794392523},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.09090909090909091},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.010956175298804782},"permission_8h.html":{"ref":"permission_8h.html","tf":0.01764705882352941}},":":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":12.515625}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625}}}},"=":{"docs":{},"=":{"docs":{"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"group__datastream.html":{"ref":"group__datastream.html","tf":0.002704530087897228},"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.0625},"classes.html":{"ref":"classes.html","tf":0.43148148148148147},"annotated.html":{"ref":"annotated.html","tf":0.4087228560912772},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10429978842989335},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02702702702702703},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":5.052083333333333},"structpublic__key.html":{"ref":"structpublic__key.html","tf":12.56060606060606},"types_8h.html":{"ref":"types_8h.html","tf":0.8865546218487395}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":17.558823529411764}}}}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"3":{"4":{"docs":{},"]":{"docs":{},";":{"docs":{"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0770676691729324},"action_8h.html":{"ref":"action_8h.html","tf":1.0772765246449456}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}},"e":{"docs":{},"n":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},")":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00199203187250996}}}}}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.003816793893129771},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}}},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.002704530087897228},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}},"s":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941}}}}}}},"s":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941}}}}}}}}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.3682235195996666},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3714488636363638}}}},"t":{"docs":{},"r":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0223463687150838},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}},"k":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}}}}}},",":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903}}}},")":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}},".":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}},")":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}}}}}}},"r":{"1":{"docs":{"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666}}},"docs":{"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.031578947368421054},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.03088803088803089},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.02929427430093209},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.007936507936507936}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}}},"m":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}}}}}}}}},"w":{"docs":{},"n":{"docs":{},"g":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}}}}}},"e":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.015657189946435928},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.012269938650306749}},"a":{"docs":{},"d":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.013522650439486139},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0042344550924894135},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.395746455379483},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"action_8h.html":{"ref":"action_8h.html","tf":0.005847953216374269}},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0733082706766917},"action_8h.html":{"ref":"action_8h.html","tf":1.0733778891673629}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.502659574468085},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.502008032128514}}}}}}}}}}},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}},"/":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":3.0297619047619047},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":3.03125},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":2.5268817204301075},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6984848484848483},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":2.5252100840336134}},"(":{"docs":{},")":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.023255813953488372},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0273972602739726},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"action_8h.html":{"ref":"action_8h.html","tf":0.007797270955165692}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007104795737122558},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.3648770584254457},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.364908628267407},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3646323795726187}}}}}},"i":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}}},"r":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0029462738301559792},"group__databasec.html":{"ref":"group__databasec.html","tf":0.002948829141370338},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926},"db_8h.html":{"ref":"db_8h.html","tf":0.0029186935371785963}},",":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010479983232026828}}}}}}},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00865265760197775},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.007017543859649123},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.003861003861003861},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.013561511139812722},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.010075566750629723},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.016901408450704224},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.01729106628242075},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.02112676056338028},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.04878048780487805},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.00904977375565611}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.007556675062972292},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.015245158632056036},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"group__database.html":{"ref":"group__database.html","tf":0.010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010407632263660017},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.011947045527930255},"db_8h.html":{"ref":"db_8h.html","tf":0.008339124391938846}},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.006024096385542169}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003296250515039143},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002583144979011947}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.034653465346534656},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.011267605633802818},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.011527377521613832},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.015789473684210527},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.011210762331838564},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014634146341463415},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.016139174177321317},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"system_8h.html":{"ref":"system_8h.html","tf":0.00625},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}},"s":{"docs":{},":":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.01442109600329625},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.007556675062972292},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.007518796992481203},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.008318890814558059},"group__databasec.html":{"ref":"group__databasec.html","tf":0.008326105810928014},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"group__datastream.html":{"ref":"group__datastream.html","tf":0.02636916835699797},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.011267605633802818},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.011527377521613832},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.02127659574468085},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021052631578947368},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.035398230088495575},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.013594829507466013},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.045454545454545456},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.021505376344086023},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.02830188679245283},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.02734375},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.013157894736842105},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.008968609865470852},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.01929824561403509},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.01673101673101673},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.018641810918774968},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004401592957451268},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.02112676056338028},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.021883920076117985},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.014124293785310734},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.03618817852834741},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.03361344537815126},"action_8h.html":{"ref":"action_8h.html","tf":0.007797270955165692},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.011301259283177269},"db_8h.html":{"ref":"db_8h.html","tf":0.006671299513551077},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946},"system_8h.html":{"ref":"system_8h.html","tf":0.00625},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.01606425702811245},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.03167420814479638}}}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0008673026886383347},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0410958904109589},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.05555555555555555},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.015957446808510637},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015600624024961},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0053285968028419185},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"db_8h.html":{"ref":"db_8h.html","tf":0.0006949270326615705},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0111731843575419},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.01606425702811245}}}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002472187886279357},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0038747174685179204}}}},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.003708281829419036},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005812076202776881}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.01442109600329625},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.009925558312655087},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.010178117048346057},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0020057945174949856},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.006289308176100629},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.02059202059202059},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.02130492676431425},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.011301259283177269},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.01195219123505976}}}}},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}}},"i":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.006065857885615251},"group__databasec.html":{"ref":"group__databasec.html","tf":0.006071118820468344},"db_8h.html":{"ref":"db_8h.html","tf":0.004864489228630994}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.02},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0223463687150838}}}}},"l":{"docs":{},"v":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}},"u":{"docs":{},"t":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.4092113045490781}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.377397831526272},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3714488636363638},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}},"s":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004332755632582322},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004336513443191674},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0031439949696080486},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.8891242937853108},"db_8h.html":{"ref":"db_8h.html","tf":0.004308547602501737}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.013392857142857142},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0136986301369863},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0733082706766917},"action_8h.html":{"ref":"action_8h.html","tf":1.0733778891673629}}},"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.6711309523809523},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0733082706766917},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.6712328767123286},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614},"action_8h.html":{"ref":"action_8h.html","tf":1.0733778891673629}},"(":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}},"b":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.6711309523809523},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0733082706766917},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.6712328767123286},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614},"action_8h.html":{"ref":"action_8h.html","tf":1.0733778891673629}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},")":{"docs":{},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"docs":{}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0733082706766917},"action_8h.html":{"ref":"action_8h.html","tf":1.0733778891673629}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0733082706766917},"action_8h.html":{"ref":"action_8h.html","tf":1.0733778891673629}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.944372852233677}}}}}}},"d":{"docs":{},".":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}},"f":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}},"e":{"docs":{},"r":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.023664638269100743},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.008023178069979943},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0041928721174004195},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001467197652483756},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.008563273073263558},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0048250904704463205},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492},"dir_f4c96640472432942b3fc30ed441ca04.html":{"ref":"dir_f4c96640472432942b3fc30ed441ca04.html","tf":0.25},"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":0.2},"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":0.2},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.022727272727272728}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.012478336221837088},"group__databasec.html":{"ref":"group__databasec.html","tf":0.01248915871639202},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"db_8h.html":{"ref":"db_8h.html","tf":0.011674774148714385}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012575979878432194},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.07228915662650602},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.0782608695652174},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.08396946564885496}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.015267175572519083}}}}}},"o":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":5.029411764705882}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":10.837150127226463}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.895}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.895}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}},"l":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}},"a":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}}}},"w":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.07400346620450607},"group__databasec.html":{"ref":"group__databasec.html","tf":0.07406764960971379},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.877824858757062},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":5.0125},"db_8h.html":{"ref":"db_8h.html","tf":0.06740792216817235}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"n":{"docs":{"./":{"ref":"./","tf":0.01020408163265306}}}},"p":{"docs":{},"c":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__eosiorpc.html":{"ref":"group__eosiorpc.html","tf":0.125}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0019373587342589602}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.3648770584254457},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.364908628267407},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3646323795726187}}},"docs":{}},"docs":{}},"docs":{}},"o":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0069721115537848604}},"(":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}}},"h":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.006435006435006435},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.006657789613848202},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.027149321266968326}},"s":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}}}}},")":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.015789473684210527},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.01673101673101673},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.014647137150466045}}}},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.002704530087897228},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5825568797399784},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5826867656838839},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0024515266324938714},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0070921985815602835},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.01834862385321101},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0234375},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":3.798780487804878}},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}},"d":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0027247956403269754}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.007288629737609329},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.02631578947368421},"group__database.html":{"ref":"group__database.html","tf":0.006412478336221837},"group__databasec.html":{"ref":"group__databasec.html","tf":0.006418039895923678},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0410958904109589},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.025},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.05555555555555555},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0035658569199910855},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.8919491525423728},"action_8h.html":{"ref":"action_8h.html","tf":0.029239766081871343},"chain_8h.html":{"ref":"chain_8h.html","tf":0.030303030303030304},"db_8h.html":{"ref":"db_8h.html","tf":0.005142460041695622},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0335195530726257}},"(":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":3.7636986301369864},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":3.7685185185185186},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5576519916142558}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"modules.html":{"ref":"modules.html","tf":0.016286644951140065},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.022321428571428572},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0136986301369863},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.02631578947368421},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.007978723404255319},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010657193605683837},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":2.522222222222222},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.018518518518518517},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.006024096385542169}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0733082706766917},"action_8h.html":{"ref":"action_8h.html","tf":1.0733778891673629}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.6711309523809523},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.6712328767123286},"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.0806878306878307}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.0749809692971326}},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.0733082706766917},"action_8h.html":{"ref":"action_8h.html","tf":1.0733778891673629}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.502659574468085},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.502008032128514}}}}}},"e":{"docs":{},"r":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010638297872340425},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":3.0338983050847457},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.008032128514056224}},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}}},")":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":3.0338983050847457}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3431053203040174},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.007518796992481203},"group__serialize.html":{"ref":"group__serialize.html","tf":11.714859437751004},"group__datastream.html":{"ref":"group__datastream.html","tf":0.034482758620689655},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.0391304347826087},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.014709159794963227},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.008880994671403197},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0028544243577545195},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.006031363088057901},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.004801920768307323},"action_8h.html":{"ref":"action_8h.html","tf":0.007797270955165692},"permission_8h.html":{"ref":"permission_8h.html","tf":0.029411764705882353},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.11578947368421053},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"i":{"docs":{},"z":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":11.671014492753622}}}}},"d":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846}}}}}}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"action_8h.html":{"ref":"action_8h.html","tf":0.007797270955165692}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}}}}}}}}}}}}}}},",":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":13.760526315789473}}}}}}}}},"u":{"docs":{},"z":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0173053152039555},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021052631578947368},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10496838660239169},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.011530398322851153},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.008968609865470852},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010479983232026828},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004672897196261682},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.007237635705669481},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007202881152460984},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.014853083629318696},"system_8h.html":{"ref":"system_8h.html","tf":0.00625},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.04922010398613518},"group__databasec.html":{"ref":"group__databasec.html","tf":0.049262792714657416},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.01951219512195122},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.024054982817869417},"db_8h.html":{"ref":"db_8h.html","tf":0.049895760945100766}}},"y":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0027729636048526864},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0027753686036426713},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.013745704467353952},"db_8h.html":{"ref":"db_8h.html","tf":0.004447533009034051}}},"_":{"1":{"docs":{},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901}}}},"2":{"docs":{},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901}}}},"3":{"docs":{},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901}}}},"4":{"docs":{},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901}}}},"5":{"docs":{},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":2.5434782608695654},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":5.0625}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes.html":{"ref":"classes.html","tf":0.22314814814814812},"annotated.html":{"ref":"annotated.html","tf":0.21135443503864557},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":2.5869565217391304},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":5.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304}},"s":{"docs":{},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.20833333333333331},"functions.html":{"ref":"functions.html","tf":0.07462686567164178},"annotated.html":{"ref":"annotated.html","tf":0.19736842105263158},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":2.5},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":2.5}}}}}}}},"y":{"docs":{},"p":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.49795962199312716}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":5.009756097560976},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}}}}}}}}}}}},";":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561}}},")":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.010309278350515464},"db_8h.html":{"ref":"db_8h.html","tf":0.0011118832522585128}}}}}},")":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}},"s":{"docs":{},")":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841}}}}}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.72073732718894},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.4734228971962617}}}}}}}}}}}}}}},"l":{"docs":{},"f":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}},")":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}},"k":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.3682235195996666},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3714488636363638}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.04417670682730924},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.04782608695652174},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.030534351145038167},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.031578947368421054}}},"t":{"docs":{},"i":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.014285714285714285}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.006592501030078286},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.006457862447529867}},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016481252575195715},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012915724895059735}}},")":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012915724895059735}}}}}},"a":{"1":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.372321227159937},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3725422160536667},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3726005070626586}},"(":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}},"2":{"5":{"6":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.371080532370855},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3712699514226232},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3716044911264036}},"(":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.371080532370855},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3712699514226232},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3716044911264036}},"(":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}},"docs":{}},"docs":{}},"docs":{},"r":{"docs":{},"e":{"docs":{"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.008849557522123894},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.004424778761061947},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0028544243577545195}}}}}},"u":{"docs":{},"l":{"docs":{"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"g":{"docs":{},"l":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3398479913137894},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.06896551724137931},"group__singleton.html":{"ref":"group__singleton.html","tf":17.681818181818183},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":6.948446327683616},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.075}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}},"p":{"docs":{},"k":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":15.052631578947368}}}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.020676691729323307},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0008673026886383347},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.05952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0625},"group__datastream.html":{"ref":"group__datastream.html","tf":0.01555104800540906},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.015},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.047872340425531915},"group__types.html":{"ref":"group__types.html","tf":0.029411764705882353},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.006685981724983285},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.012552301255230125},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.07421875},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.011210762331838564},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.05913978494623656},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.022099447513812154},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":2.330038676407392},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"action_8h.html":{"ref":"action_8h.html","tf":0.01949317738791423},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.0006949270326615705},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.045454545454545456},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.046218487394957986},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0111731843575419},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.03815261044176707}},"_":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007444168734491315},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.007633587786259542},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"group__datastream.html":{"ref":"group__datastream.html","tf":0.3429374884750139},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.015957446808510637},"classes.html":{"ref":"classes.html","tf":0.20833333333333331},"functions.html":{"ref":"functions.html","tf":0.5223880597014926},"annotated.html":{"ref":"annotated.html","tf":0.19736842105263158},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10385405631489447},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.02981651376146789},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":3.9105113636363638},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.008968609865470852},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"action_8h.html":{"ref":"action_8h.html","tf":0.007797270955165692},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0099601593625498},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":3},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.031818181818181815},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.029411764705882353},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.020080321285140562}}}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},"*":{"2":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},".":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.015625},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.006024096385542169}}},"=":{"docs":{},"=":{"0":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}},"docs":{}}},")":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.022099447513812154},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.006024096385542169}}}}},"g":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0024813895781637717},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.002544529262086514},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00199203187250996}},"n":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.004011589034989971},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.06756756756756757},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.060240963855421686},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.010856453558504222},"print_8h.html":{"ref":"print_8h.html","tf":0.01556420233463035}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007444168734491315},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.007633587786259542},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structsignature.html":{"ref":"structsignature.html","tf":12.564516129032258},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0069721115537848604},"types_8h.html":{"ref":"types_8h.html","tf":0.8865546218487395}},"e":{"docs":{},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0024813895781637717},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.002544529262086514},"structsignature.html":{"ref":"structsignature.html","tf":0.06451612903225806},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00298804780876494}}},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}},"[":{"6":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__types.html":{"ref":"group__types.html","tf":5.014705882352941},"group__varint.html":{"ref":"group__varint.html","tf":5.055555555555555},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"structsigned__int.html":{"ref":"structsigned__int.html","tf":6.439631538545893},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":5.041666666666667}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.006031363088057901}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{},"+":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603}}}},"!":{"docs":{},"=":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406}}}},"=":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801}},"=":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406}}}},">":{"docs":{},"=":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406}}},">":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801}}}}}}}}}}}}}}}}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.003816793893129771},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}}},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0024813895781637717},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.002544529262086514},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00199203187250996}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0037220843672456576},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.003816793893129771},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}}},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0012406947890818859},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.001272264631043257},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"modules.html":{"ref":"modules.html","tf":3.333333333333333},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.038461538461538464}}}},"s":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"o":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.02631578947368421},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.015444015444015444},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.015978695073235686},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.034482758620689655},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.058823529411764705},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.058823529411764705},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664},"vector_8hpp.html":{"ref":"vector_8hpp.html","tf":0.08333333333333333}}}}},"r":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.004484304932735426}}},"u":{"docs":{},"c":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525}},"i":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.017857142857142856},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.013157894736842105},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0182648401826484},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"group__types.html":{"ref":"group__types.html","tf":0.029411764705882353},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017829284599955428},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.016055045871559634},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.01694915254237288},"action_8h.html":{"ref":"action_8h.html","tf":0.021442495126705652},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},"d":{"docs":{},".":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561}}}}}}},"a":{"docs":{},"l":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01953125},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542}}}}}}},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.013597033374536464},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.012592831772683243}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.008746355685131196},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}}}},"t":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.8891788797430235}},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.010075566750629723},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.016901408450704224},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.01729106628242075},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0031201248049922},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.09090909090909091},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.053763440860215055},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.028368794326241134},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.010238907849829351},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.011210762331838564},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.07142857142857142},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.011904761904761904},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.015463917525773196},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.05084745762711865},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.00967741935483871},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.011682242990654205}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0024813895781637717},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}}}}}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}},"u":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00931098696461825}}}},"r":{"docs":{},"t":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},",":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525}}}}}},"d":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespacestd.html":{"ref":"namespacestd.html","tf":8.867647058823529},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806}},"=":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01569506726457399},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020833333333333332}},"n":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},",":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015600624024961}},"(":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"functions.html":{"ref":"functions.html","tf":0.07670155446832229},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7304147465437787}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.05714285714285714}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.00684931506849315},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.0064516129032258064}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.04838709677419355}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.11764705882352941}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806}}}}}}}}}}}}}},"<":{"docs":{"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":3.75},"types_8hpp.html":{"ref":"types_8hpp.html","tf":1.6666666666666665}}}}}}}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":25.083333333333332}}}}}}}}}},"e":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"r":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.008450704225352112},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.008645533141210375},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"a":{"docs":{},"m":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__datastream.html":{"ref":"group__datastream.html","tf":0.04056795131845842},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.01337196344996657},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0389908256880734},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.03211009174311927}}}}},"m":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"e":{"docs":{},"t":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}}}},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}},"l":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}},"n":{"docs":{},"g":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.017632241813602016},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.011267605633802818},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.011527377521613832},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0035658569199910855},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.013651877133105802},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.05555555555555555},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.05},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.02515195975686439},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.04878048780487805},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.01809954751131222}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6868559651934968},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.007556675062972292},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5825568797399784},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5826867656838839},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}},")":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},".":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.003788722977490528},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763}}},"(":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.013651877133105802}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}}},")":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.022670025188916875},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.017857142857142856},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0182648401826484},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.15384615384615385},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.2222222222222222},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.011267605633802818},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.011527377521613832},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__types.html":{"ref":"group__types.html","tf":0.029411764705882353},"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"group__varint.html":{"ref":"group__varint.html","tf":0.1111111111111111},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.057692307692307696},"annotated.html":{"ref":"annotated.html","tf":0.3146853146853147},"struct_extended.html":{"ref":"struct_extended.html","tf":5.04},"struct_stores.html":{"ref":"struct_stores.html","tf":5.052631578947368},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":5.035714285714286},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0046801872074883},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.13043478260869565},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":5.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":5.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":2.5303030303030303},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":5.024866785079929},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":5.010752688172043},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":5.00104821802935},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":5.00418410041841},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.020477815699658702},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":5.019230769230769},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":5.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":5.012195121951219},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":5.023809523809524},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":5.027777777777778},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":5.025},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":5.003289473684211},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":5.005524861878453},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":5.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":5.0017543859649125},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":5.001287001287001},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":5.00133155792277},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":5.019512195121951},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":5.071428571428571},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":2.0142857142857142},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006497589603856634},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":5.006849315068493},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":5.005154639175258},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":5.019354838709678},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":5.038461538461538},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":5.0144927536231885},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":5.016129032258065},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":5.007042253521127},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":5.016949152542373},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":5.0058823529411764},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":5.013513513513513},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":5.0120481927710845},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":5.010416666666667},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":5.029411764705882},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":5.0125},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":5.007142857142857},"structpublic__key.html":{"ref":"structpublic__key.html","tf":5.03030303030303},"structsignature.html":{"ref":"structsignature.html","tf":5.032258064516129},"structsigned__int.html":{"ref":"structsigned__int.html","tf":5.001206272617612},"namespacestd.html":{"ref":"namespacestd.html","tf":0.058823529411764705},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":2.517543859649123},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":5.001200480192077},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.046296296296296294},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.10526315789473684},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.20689655172413793},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.2222222222222222},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.16666666666666666},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.10526315789473684},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.04878048780487805},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.0546218487394958},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.00904977375565611},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.08333333333333333}},"u":{"docs":{},"r":{"docs":{"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025}},"e":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}},"s":{"docs":{},",":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.006993006993006993}}}},",":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279}}},".":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.017761989342806393}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__assetapi.html":{"ref":"group__assetapi.html","tf":3.0384615384615383},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":3.0555555555555554},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.009925558312655087},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.010178117048346057},"group__database.html":{"ref":"group__database.html","tf":0.003639514731369151},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003469210754553339},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5797399783315277},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5798049213034805},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"struct_extended.html":{"ref":"struct_extended.html","tf":0.08},"struct_stores.html":{"ref":"struct_stores.html","tf":20.157894736842106},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015600624024961},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.03672316384180791},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0375},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.01195219123505976},"db_8h.html":{"ref":"db_8h.html","tf":0.003613620569840167}}},"a":{"docs":{},"g":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.003119584055459272},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003122289679098005},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.007545587927059317},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654}},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.40730835497724177}}}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05}}}}}},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"l":{"docs":{},"i":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":1.524390243902439}}}}}},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008240626287597857},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.016901408450704224},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.01729106628242075},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.012578616352201259},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.023026315789473683},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.03314917127071823},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.009009009009009009},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009320905459387484},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0009686793671294801}}}}}}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}},"m":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}},"y":{"docs":{},"m":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.014084507042253521},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.01440922190201729},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077}},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.010075566750629723},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.07323943661971831},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.07204610951008646},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0028972587474927567},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5681341719077568},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.01644736842105263},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.03314917127071823},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.05714285714285714},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.07317073170731707}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":10.579739978331528}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044}},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044}},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044}}}},"=":{"docs":{},"=":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409}}}}}}}}}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":10.57980492130348}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}}}},"=":{"docs":{},"=":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}}}}}}}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458}}}},"'":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143}}},".":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":13.774390243902438}}}}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":1.1791982665222103},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":1.179782753269785},"functions.html":{"ref":"functions.html","tf":0.07670155446832229},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10385405631489447},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.010238907849829351},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":1.4064935064935067}},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5825568797399784},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5826867656838839},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":1.1594799566630554},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":1.159609842606961},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0041928721174004195},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":7.762987012987013}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}}},",":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}},"t":{"docs":{},"h":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049}}}},")":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.006825938566552901}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},")":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__systemapi.html":{"ref":"group__systemapi.html","tf":12.146841206602163}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":12.147186147186147}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}}}}}}}},".":{"docs":{},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"system_8h.html":{"ref":"system_8h.html","tf":12.145982142857143}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}}}},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"m":{"docs":{},"e":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.008849557522123894},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009433962264150943},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}},")":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__database.html":{"ref":"group__database.html","tf":0.012131715771230503},"group__databasec.html":{"ref":"group__databasec.html","tf":0.012142237640936688},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006916788933137707},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"db_8h.html":{"ref":"db_8h.html","tf":0.009728978457261988},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}},".":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8h.html":{"ref":"types_8h.html","tf":0.008403361344537815}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"types_8h.html":{"ref":"types_8h.html","tf":0.8865546218487395}},"e":{"docs":{},";":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}}}}}}}},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.006065857885615251},"group__databasec.html":{"ref":"group__databasec.html","tf":0.006071118820468344},"db_8h.html":{"ref":"db_8h.html","tf":0.009728978457261988}}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.025},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0186219739292365}},"e":{"docs":{},",":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.03614457831325301}}},".":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.03614457831325301}}}}}}}}}},";":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.024390243902439025}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.377397831526272},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3714488636363638}},"(":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7570921985815603}},"s":{"docs":{},".":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0020057945174949856},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.009174311926605505},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032}}},".":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0234375}}},"b":{"docs":{},"r":{"docs":{},"k":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6757575757575756},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":2.504201680672269}}}}}},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.023255813953488372},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0273972602739726},"group__datastream.html":{"ref":"group__datastream.html","tf":0.020960108181203516},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.07877624326500278},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.01181190104747047},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.11363636363636363},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.017761989342806393},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.024822695035460994},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.011467889908256881},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0018863969817648292},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0273972602739726},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.013745704467353952},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.025806451612903226},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.009514747859181731},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.04519774011299435},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.012903225806451613},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004672897196261682},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.7250900360144057}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613}},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.7583682008368201}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6306179775280899},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.7583682008368201}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.12720970537261697},"group__databasec.html":{"ref":"group__databasec.html","tf":0.12732003469210754},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.06896551724137931},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0297029702970297},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.009851184238105219},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.031073446327683617},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"db_8h.html":{"ref":"db_8h.html","tf":0.113273106323836}},"e":{"1":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423}}}},"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009771986970684038},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__database.html":{"ref":"group__database.html","tf":0.006412478336221837},"group__databasec.html":{"ref":"group__databasec.html","tf":0.006418039895923678},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.06896551724137931},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__singleton.html":{"ref":"group__singleton.html","tf":0.09090909090909091},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.011527981555229511},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.025423728813559324},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0375},"db_8h.html":{"ref":"db_8h.html","tf":0.010284920083391245},"types_8h.html":{"ref":"types_8h.html","tf":0.008403361344537815}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"group__database.html":{"ref":"group__database.html","tf":0.006065857885615251},"group__databasec.html":{"ref":"group__databasec.html","tf":0.006071118820468344},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"db_8h.html":{"ref":"db_8h.html","tf":0.009728978457261988},"types_8h.html":{"ref":"types_8h.html","tf":0.8865546218487395}},"e":{"docs":{},";":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},")":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0050259965337954935},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005030355594102341},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004820792286732341},"db_8h.html":{"ref":"db_8h.html","tf":0.008061153578874217}}},"(":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}},"e":{"docs":{},",":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}},"s":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}},"'":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}}}}}},"k":{"docs":{},"e":{"docs":{"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}},"p":{"docs":{},"o":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.015957446808510637},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.01606425702811245}},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.502659574468085},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.502008032128514}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.502659574468085},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.502008032128514}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__serialize.html":{"ref":"group__serialize.html","tf":0.0321285140562249},"group__datastream.html":{"ref":"group__datastream.html","tf":0.02636916835699797},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.034782608695652174},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.038461538461538464},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.01025183864497437},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010657193605683837},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.012280701754385965},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011583011583011582},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011984021304926764},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.005708848715509039},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.004801920768307323},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.03816793893129771}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542}}}}}},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01240694789081886},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01272264631043257},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.014940239043824702},"system_8h.html":{"ref":"system_8h.html","tf":0.01875}},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"system_8h.html":{"ref":"system_8h.html","tf":0.01875}}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009771986970684038},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.3682235195996666},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3714488636363638}}}}}},"o":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"d":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"o":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041203131437989287}}}}}}}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"p":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}},"_":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412}}}}}}},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":2.5140845070422535}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7570921985815603}}}}}}}}}}}}},",":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.013651877133105802}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.010075566750629723},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.06578947368421052},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0398936170212766},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.03389830508474576},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10519125265989113},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.012552301255230125},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.03389830508474576},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":7.533333333333333},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.04},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.030120481927710843},"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":13.013157894736842}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":11.502659574468085}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":13.016949152542374}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"types_8h.html":{"ref":"types_8h.html","tf":0.8865546218487395}},"e":{"docs":{},";":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}}}}}}}}}},"s":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.502659574468085},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.502008032128514}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":6.905}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":2.522222222222222}}}}}}}}},".":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0425531914893617},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.04819277108433735}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"transaction_8h.html":{"ref":"transaction_8h.html","tf":11.502008032128513}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":13.788461538461538}}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415}},".":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.008368200836820083}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.8960048183095763},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":5.025}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008240626287597857},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006457862447529867}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}}}}}}}},"e":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.016901408450704224},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.01729106628242075},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.017699115044247787},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.008385744234800839},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.013761467889908258},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01953125},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.022099447513812154},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.003861003861003861},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.004757373929590866},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.014475271411338963},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.014405762304921969},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00620347394540943},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.006361323155216285},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.015789473684210527},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.006726457399103139},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0049800796812749}}},")":{"docs":{"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143}}}}},"i":{"docs":{},"m":{"docs":{},"_":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}}}}}}}}}},"x":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"modules.html":{"ref":"modules.html","tf":0.35287730727470146},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.017632241813602016},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.017857142857142856},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0182648401826484},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.038461538461538464},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0228310502283105},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485},"group__singleton.html":{"ref":"group__singleton.html","tf":0.09090909090909091},"group__serialize.html":{"ref":"group__serialize.html","tf":0.05220883534136546},"group__datastream.html":{"ref":"group__datastream.html","tf":0.05070993914807302},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.05652173913043478},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.011267605633802818},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.011527377521613832},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.039473684210526314},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.05084745762711865},"group__types.html":{"ref":"group__types.html","tf":15.147058823529411},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.14285714285714285},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.04424778761061947},"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":2.5625},"group__varint.html":{"ref":"group__varint.html","tf":0.1111111111111111},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.03571428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.020726543347448185},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.125},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.043478260869565216},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.014209591474245116},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.010752688172043012},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0041928721174004195},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.014184397163120567},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0041841004184100415},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.019801980198019802},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.017064846416382253},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.038461538461538464},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.02},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.024390243902439025},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.047619047619047616},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.027777777777777776},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.025},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.009868421052631578},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.016574585635359115},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01569506726457399},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.024390243902439025},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.015873015873015872},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0031439949696080486},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0136986301369863},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.010309278350515464},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012903225806451613},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.057692307692307696},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.02112676056338028},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.05084745762711865},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.01807802093244529},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.01764705882352941},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02702702702702703},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":3.0520833333333335},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.058823529411764705},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.00847457627118644},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.02142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.00967741935483871},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.009345794392523364},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.007237635705669481},"namespacestd.html":{"ref":"namespacestd.html","tf":0.058823529411764705},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.017543859649122806},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.009603841536614645},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.018518518518518517},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"currency_8hpp.html":{"ref":"currency_8hpp.html","tf":0.034482758620689655},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.02702702702702703},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.03333333333333333},"optional_8hpp.html":{"ref":"optional_8hpp.html","tf":0.058823529411764705},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.061068702290076333},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.031578947368421054},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.04878048780487805},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.037815126050420166},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0067613252197430695},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"group__types.html":{"ref":"group__types.html","tf":0.029411764705882353},"group__producertype.html":{"ref":"group__producertype.html","tf":0.0056179775280898875},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0035658569199910855},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.04785894206549118},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0033429908624916425},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.020477815699658702},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.006726457399103139},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014634146341463415},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005659190945294487},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.015463917525773196},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.005708848715509039},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.17647058823529413},"types_8h.html":{"ref":"types_8h.html","tf":0.1134453781512605}}}}},"s":{"docs":{},",":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__types.html":{"ref":"group__types.html","tf":0.014705882352941176}}},".":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"types_8h.html":{"ref":"types_8h.html","tf":10.88655462184874}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"types_8hpp.html":{"ref":"types_8hpp.html","tf":11.671191553544494}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055}}}},"=":{"docs":{},"=":{"docs":{"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.00904977375565611}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.012605042016806723}}}}}}}}}}}},",":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112}}},":":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666}}}}}}}},"w":{"docs":{},"o":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.032138442521631644},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.042105263157894736},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.008849557522123894},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0046801872074883},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.026905829596412557},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.009009009009009009},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009320905459387484},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.01764705882352941},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.03777849531804973}},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6918937485688116},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"permission_8h.html":{"ref":"permission_8h.html","tf":0.01764705882352941},"system_8h.html":{"ref":"system_8h.html","tf":0.025},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.004016064257028112},"types_8h.html":{"ref":"types_8h.html","tf":0.8907563025210083},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}},".":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"time_8hpp.html":{"ref":"time_8hpp.html","tf":13.043478260869565}}}}}},";":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}},"s":{"docs":{},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}}}}},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.07877624326500278},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.7819148936170213},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":5.807834101382489},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.4944509345794392}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10296259208489669},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0070921985815602835},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":6.509053738317757},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.03}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.22388059701492538}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"6":{"0":{"docs":{},")":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}},")":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}},"docs":{}},"docs":{}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}},"<":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}},"=":{"docs":{},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}},">":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}}}}}}}}},";":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.72073732718894}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}}}}}}}},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.013392857142857142},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0136986301369863},"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017829284599955428},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.009398496240601503},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"action_8h.html":{"ref":"action_8h.html","tf":0.007797270955165692}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693}}}}}}},"u":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}},"(":{"docs":{},"&":{"docs":{},")":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.000676132521974307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}},")":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}},")":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.002704530087897228},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}},"e":{"docs":{},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.008368200836820083}}}}}}},"b":{"docs":{},"n":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}},"p":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}},"m":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.031914893617021274},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.01935483870967742},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004672897196261682}}},"&":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693}}},",":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.009345794392523364}}}},"u":{"docs":{"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.035398230088495575},"classes.html":{"ref":"classes.html","tf":0.007407407407407408},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0022286605749944283},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.006660323501427212}},"=":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287}}}}}}}}}}},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.030078285949732178},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0046801872074883},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.03361344537815126},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0339037778495318},"print_8h.html":{"ref":"print_8h.html","tf":0.01556420233463035},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.004524886877828055}},"e":{"docs":{},"d":{"docs":{},"_":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}},",":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}},",":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__types.html":{"ref":"group__types.html","tf":5.014705882352941},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"group__varint.html":{"ref":"group__varint.html","tf":5.055555555555555},"classes.html":{"ref":"classes.html","tf":0.21574074074074073},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"annotated.html":{"ref":"annotated.html","tf":0.2043614280456386},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020833333333333332},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.04},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":7.212484993997599},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":5.041666666666667}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.006002400960384154}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}},"=":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492}}}},"!":{"docs":{},"=":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492}}}},">":{"docs":{},"=":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492}}},">":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07462686567164178},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"variables.html":{"ref":"variables.html","tf":0.12820512820512822}},"e":{"docs":{},";":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}}}}}}},"&":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.023255813953488372},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0273972602739726},"group__datastream.html":{"ref":"group__datastream.html","tf":0.6885795070379249},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.2097139071472839},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0053285968028419185}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.6711309523809523},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.6712328767123286},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10318545814239614}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":3.0338983050847457}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"system_8h.html":{"ref":"system_8h.html","tf":0.028125}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.008849557522123894},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.0058823529411764705},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.013574660633484163}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.006993006993006993}}}},"t":{"3":{"2":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}},"docs":{}},"6":{"4":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.001337196344996657}}},"docs":{}},"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}}},"q":{"docs":{},"u":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}}},"x":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.009868421052631578}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.01020408163265306},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.015113350125944584},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.016129032258064516},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01653944020356234},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0228310502283105},"group__database.html":{"ref":"group__database.html","tf":0.003986135181975737},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00398959236773634},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.018617021276595744},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017829284599955428},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010482180293501049},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0035460992907801418},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.0034129692832764505},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.01951219512195122},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.01404317753091595},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.05405405405405406},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.018924302788844622},"db_8h.html":{"ref":"db_8h.html","tf":0.0031966643502432243},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.013513513513513514},"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.018072289156626505},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.00904977375565611}},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"group__producertype.html":{"ref":"group__producertype.html","tf":0.033707865168539325},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.03765690376569038},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0031439949696080486},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}},"e":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.004484304932735426},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.03389830508474576},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"db_8h.html":{"ref":"db_8h.html","tf":0.0033356497567755385},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.008032128514056224}}}},"\\":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0012131715771230502},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0012142237640936687},"db_8h.html":{"ref":"db_8h.html","tf":0.0009728978457261987}}}}}},"docs":{}},"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.016736401673640166},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"types_8h.html":{"ref":"types_8h.html","tf":0.008403361344537815}}}}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485}}}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0020601565718994645},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.009398496240601503},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01488833746898263},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.05263157894736842},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.015267175572519083},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"group__database.html":{"ref":"group__database.html","tf":0.001559792027729636},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0015611448395490026},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.008450704225352112},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.008645533141210375},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.0199203187250996},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0125},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.021645021645021644},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.02631578947368421},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010638297872340425},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.03389830508474576},"group__producertype.html":{"ref":"group__producertype.html","tf":0.07865168539325842},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0020057945174949856},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.010638297872340425},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.11715481171548117},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.08839779005524862},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.03910614525139665},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0018863969817648292},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.014285714285714285},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0064516129032258064},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.02102803738317757},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.014405762304921969},"action_8h.html":{"ref":"action_8h.html","tf":0.007797270955165692},"chain_8h.html":{"ref":"chain_8h.html","tf":0.050505050505050504},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0029060381013884403},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0199203187250996},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654},"permission_8h.html":{"ref":"permission_8h.html","tf":0.029411764705882353},"print_8h.html":{"ref":"print_8h.html","tf":0.007782101167315175},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01675977653631285},"system_8h.html":{"ref":"system_8h.html","tf":0.01875},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.012048192771084338},"types_8h.html":{"ref":"types_8h.html","tf":0.008403361344537815}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.036670786979810466},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.027707808564231738},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"group__database.html":{"ref":"group__database.html","tf":0.008492201039861352},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00849956634865568},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0297029702970297},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.022535211267605635},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.023054755043227664},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__producertype.html":{"ref":"group__producertype.html","tf":0.016853932584269662},"functions.html":{"ref":"functions.html","tf":0.07670155446832229},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0062402496099844},"structeosio_1_1action__meta.html":{"ref":"structeosio_1_1action__meta.html","tf":0.06451612903225806},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.02510460251046025},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.038461538461538464},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.024390243902439025},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.047619047619047616},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014634146341463415},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.01530077551875917},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.018900343642611683},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":3.8076923076923075},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.06451612903225806},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":2.5492957746478875},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0375},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.03571428571428571},"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.05263157894736842},"db_8h.html":{"ref":"db_8h.html","tf":0.013342599027102154},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"types_8h.html":{"ref":"types_8h.html","tf":0.04201680672268908},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.01809954751131222}},".":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.007556675062972292},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285}}}}},"\\":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004506065857885615},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004509973980919341},"db_8h.html":{"ref":"db_8h.html","tf":0.003613620569840167}}}}}},"docs":{}},"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0011143302874972142},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.12},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structsignature.html":{"ref":"structsignature.html","tf":0.06451612903225806}}}}},"docs":{}}}},"p":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"action_8h.html":{"ref":"action_8h.html","tf":0.003898635477582846},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0034662045060658577},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003469210754553339},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0037727939635296584},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"db_8h.html":{"ref":"db_8h.html","tf":0.003613620569840167}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}},"r":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004159445407279029},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"db_8h.html":{"ref":"db_8h.html","tf":0.004169562195969423}}}}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4842901670712166},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.944372852233677}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.4734228971962617}}}}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464}}}},"v":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0196078431372549},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.006685981724983285},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0039946737683089215},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.039806996381182146},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.04201680672268908}},"a":{"docs":{},"l":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015600624024961},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0017543859649123},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.7155727155727155},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.790805242133296},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}},"u":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.005356407086938607},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.04807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.08222811671087533},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.00537261698440208},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005377276669557675},"group__datastream.html":{"ref":"group__datastream.html","tf":0.028397565922920892},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.5797399783315277},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.5798049213034805},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.035398230088495575},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.013594829507466013},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.017761989342806393},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.007017543859649123},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.005148005148005148},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.005326231691078562},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.008174386920980926},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":2.507042253521127},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.03235014272121789},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.07344632768361582},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":5.0375},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":1.377922077922078},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.6890558175238514},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.7190876350540215},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004197610590894414},"db_8h.html":{"ref":"db_8h.html","tf":0.004308547602501737},"print_8h.html":{"ref":"print_8h.html","tf":0.07392996108949416}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"[":{"5":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"docs":{}},"docs":{}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.008880994671403197},"print_8h.html":{"ref":"print_8h.html","tf":0.013618677042801557}}},".":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761}}}}}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.40730835497724177}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020964360587002098},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.3682235195996666},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3753551136363638},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.41492015326458714},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"action_8h.html":{"ref":"action_8h.html","tf":0.005847953216374269},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},".":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875}}}}}},"(":{"docs":{},")":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}},".":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}}}}},",":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001287001287001287},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.0013315579227696406}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__database.html":{"ref":"group__database.html","tf":0.00537261698440208},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005377276669557675},"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.008450704225352112},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.008645533141210375},"group__types.html":{"ref":"group__types.html","tf":0.029411764705882353},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.042105263157894736},"group__producertype.html":{"ref":"group__producertype.html","tf":0.12359550561797752},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.046875},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"variables.html":{"ref":"variables.html","tf":5.0071942446043165},"structaccount__permission.html":{"ref":"structaccount__permission.html","tf":0.07142857142857142},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.005571651437486071},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007104795737122558},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0031446540880503146},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.010638297872340425},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.0794979079497908},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":0.057692307692307696},"structeosio_1_1currency_1_1create.html":{"ref":"structeosio_1_1currency_1_1create.html","tf":0.1},"structeosio_1_1currency_1_1currency__stats.html":{"ref":"structeosio_1_1currency_1_1currency__stats.html","tf":0.0975609756097561},"structeosio_1_1currency_1_1fee__schedule.html":{"ref":"structeosio_1_1currency_1_1fee__schedule.html","tf":0.023809523809523808},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":0.08333333333333333},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":0.1},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.003289473684210526},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.03139013452914798},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.010296010296010296},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009320905459387484},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.043478260869565216},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.04838709677419355},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.007042253521126761},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.03389830508474576},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02702702702702703},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020833333333333332},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.007142857142857143},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0032258064516129032},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002336448598130841},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.03333333333333333},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.06},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.030303030303030304},"structsignature.html":{"ref":"structsignature.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0036188178528347406},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.003601440576230492},"db_8h.html":{"ref":"db_8h.html","tf":0.004308547602501737}},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"d":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}},"n":{"docs":{},"t":{"3":{"2":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801}}},"docs":{}},"docs":{"modules.html":{"ref":"modules.html","tf":0.3365906623235614},"group__varint.html":{"ref":"group__varint.html","tf":15.055555555555555}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":15.041666666666666}}}}}}}},"o":{"docs":{},"u":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}},"docs":{}},"docs":{}}}}}}},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.008746355685131196},"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":5.048192771084337},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.03195488721804511},"action_8h.html":{"ref":"action_8h.html","tf":0.042884990253411304}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0074374577417173765},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0042344550924894135},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0053285968028419185},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"permission_8h.html":{"ref":"permission_8h.html","tf":0.023529411764705882}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.3680679785330948},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3977272727272727},"vector_8hpp.html":{"ref":"vector_8hpp.html","tf":25.083333333333332}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.0017761989342806395},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.006592501030078286},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.008928571428571428},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.015037593984962405},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0091324200913242},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.011166253101736972},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.011450381679389313},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.03183023872679045},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__database.html":{"ref":"group__database.html","tf":0.0025996533795493936},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0026019080659150044},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.03571428571428571},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0375},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.005633802816901409},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.005763688760806916},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01593625498007968},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.015},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.017316017316017316},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0124804992199688},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0041928721174004195},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0070921985815602835},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.04778156996587031},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.011049723756906077},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002574002574002574},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002663115845539281},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.05714285714285714},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.03763440860215054},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.03314917127071823},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0446927374301676},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006287989939216097},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.003805899143672693},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.014285714285714285},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"action_8h.html":{"ref":"action_8h.html","tf":0.015594541910331383},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005166289958023894},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.008964143426294821},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.05454545454545454},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.029411764705882353},"print_8h.html":{"ref":"print_8h.html","tf":0.02529182879377432},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0111731843575419},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"(":{"docs":{},"q":{"docs":{},":":{"docs":{},":":{"docs":{},"*":{"docs":{},")":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}}}}}}}}}}}},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"*":{"docs":{},")":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},",":{"docs":{"classes.html":{"ref":"classes.html","tf":0.20833333333333331},"functions.html":{"ref":"functions.html","tf":0.07462686567164178},"annotated.html":{"ref":"annotated.html","tf":0.19736842105263158},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.10273972602739725},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":4.5},"action_8hpp.html":{"ref":"action_8hpp.html","tf":1.0714285714285714}}}}}}}}}}}}}}}}}},"*":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}},"u":{"docs":{},"l":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0028972587474927567},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613}}},"i":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613}},"a":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.008880994671403197},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.008368200836820083}}},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}},",":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052}}},"l":{"docs":{},"q":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306}}}}},"w":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736}},"=":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}}},"s":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.004373177842565598},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}},",":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317}}},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}},")":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}}}}}}},"s":{"docs":{},"d":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0058309037900874635}}}}}}},"n":{"docs":{},"t":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.009925558312655087},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.010178117048346057},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00796812749003984}}}},"y":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0060783902745755606}}}}}},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.004373177842565598}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.6843370735058393},"types_8h.html":{"ref":"types_8h.html","tf":0.8865546218487395}},"e":{"docs":{},";":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.004201680672268907}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},".":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659}}},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.020642201834862386},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}}}}}}},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.011494252873563218},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0035658569199910855},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.3911592994161803},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3714488636363638},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0012004801920768306},"action_8h.html":{"ref":"action_8h.html","tf":0.005847953216374269},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}},"(":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0026595744680851063},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}},"a":{"docs":{},"p":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521}},"e":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.003257328990228013},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015600624024961},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.9156862745098039}},"e":{"docs":{},";":{"docs":{"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.9156862745098039}},"e":{"docs":{},";":{"docs":{"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009259259259259259}}},"l":{"docs":{},"d":{"docs":{},"!":{"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"8":{"7":{"6":{"5":{"4":{"3":{"2":{"3":{"4":{"5":{"6":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}},"\"":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},",":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},",":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}},"d":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01569506726457399},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}},"_":{"docs":{},"t":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":1.1583304587788894}}}},"s":{"docs":{},".":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.008968609865470852}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1account.html":{"ref":"structeosio_1_1currency_1_1account.html","tf":3.0384615384615383}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}}}}},"r":{"docs":{},"e":{"docs":{},":":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}},"{":{"docs":{"./":{"ref":"./","tf":0.0029154518950437317},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.005639097744360902},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.04455445544554455},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.03414634146341464},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.027667155732550828},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464}},"}":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776}}}},"}":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.039603960396039604},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.024390243902439025},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.016139174177321317},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232}},";":{"docs":{"./":{"ref":"./","tf":0.0014577259475218659},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00975609756097561},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232}}},"]":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006}}}},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006497589603856634}}}}},"k":{"1":{"docs":{"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666}}},"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.002704530087897228},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}},"e":{"docs":{},"y":{"2":{"5":{"6":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.002704530087897228},"classes.html":{"ref":"classes.html","tf":0.20833333333333331},"functions.html":{"ref":"functions.html","tf":0.07462686567164178},"annotated.html":{"ref":"annotated.html","tf":0.19736842105263158},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.1045226544873928},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":2.5},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","tf":6.3106060606060606},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.8823529411764706}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.001352265043948614},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714}}}},"docs":{}},"docs":{}},"docs":{"modules.html":{"ref":"modules.html","tf":0.006514657980456026},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.02109181141439206},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.021628498727735368},"group__database.html":{"ref":"group__database.html","tf":0.0440207972270364},"group__databasec.html":{"ref":"group__databasec.html","tf":0.044058976582827404},"group__datastream.html":{"ref":"group__datastream.html","tf":0.002704530087897228},"group__types.html":{"ref":"group__types.html","tf":0.058823529411764705},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":5.005263157894737},"group__producertype.html":{"ref":"group__producertype.html","tf":0.011235955056179775},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.03125},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0024515266324938714},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.004484304932735426},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014634146341463415},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.015091175854118634},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.04054054054054054},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.03614457831325301},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020833333333333332},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.05},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0199203187250996},"db_8h.html":{"ref":"db_8h.html","tf":0.03808200138985406},"permission_8h.html":{"ref":"permission_8h.html","tf":0.029411764705882353}},".":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.003986135181975737},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00398959236773634},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.03125},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005449591280653951},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.052083333333333336},"structpublic__key.html":{"ref":"structpublic__key.html","tf":0.06060606060606061},"db_8h.html":{"ref":"db_8h.html","tf":0.0063933287004864486}}},"s":{"docs":{},")":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}},",":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.015625},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013513513513513514},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010416666666666666}}},"\"":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.006872852233676976}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.006872852233676976}}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926}}}}}}}},"q":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011627906976744186},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.0136986301369863},"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615}},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.016286644951140065},"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.013392857142857142},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0018796992481203006},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0024813895781637717},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105}}}}},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"group__database.html":{"ref":"group__database.html","tf":0.004332755632582322},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004336513443191674},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006685981724983285},"db_8h.html":{"ref":"db_8h.html","tf":0.005142460041695622},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0035971223021582736},"structeosio_1_1currency_1_1issue.html":{"ref":"structeosio_1_1currency_1_1issue.html","tf":5.055555555555555},"structeosio_1_1currency_1_1transfer.html":{"ref":"structeosio_1_1currency_1_1transfer.html","tf":5.05}}}}}}}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857}}},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.010526315789473684},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011583011583011582},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011984021304926764}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"&":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.006180469715698393},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.06152805949966193},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.011267605633802818},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.011527377521613832},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005319148936170213},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.042105263157894736},"group__optionaltype.html":{"ref":"group__optionaltype.html","tf":0.035398230088495575},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.0625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.056830844662357924},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.017761989342806393},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.03039832285115304},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.05673758865248227},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.034129692832764506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.009174311926605505},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.013157894736842105},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.022099447513812154},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.02242152466367713},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.042105263157894736},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.0489060489060489},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.03994673768308921},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.07936507936507936},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.0684931506849315},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.037800687285223365},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.06451612903225806},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.014084507042253521},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.04186489058039962},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011764705882352941},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.041666666666666664},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.01694915254237288},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0967741935483871},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.07476635514018691},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.03618817852834741},"structstd_1_1less_3_01checksum256_01_4.html":{"ref":"structstd_1_1less_3_01checksum256_01_4.html","tf":0.07017543859649122},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.031212484993997598},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.009686793671294802},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.008032128514056224},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.05429864253393665}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992}}}}}}}}}}},"&":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0008914642299977714},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010657193605683837},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012575979878432194},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.020618556701030927},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.011417697431018078}},".":{"docs":{},".":{"docs":{},".":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004457321149988857},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0019029495718363464}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}}}}}}}},"=":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.009476720230737536},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.004464285714285714},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0037593984962406013},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0045662100456621},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.028846153846153848},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0273972602739726},"group__database.html":{"ref":"group__database.html","tf":0.0013864818024263432},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0013876843018213356},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.008450704225352112},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.008645533141210375},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013297872340425532},"functions.html":{"ref":"functions.html","tf":0.07670155446832229},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0033429908624916425},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.003552397868561279},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5628930817610063},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.0070921985815602835},"classeosio_1_1currency.html":{"ref":"classeosio_1_1currency.html","tf":0.027303754266211604},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006578947368421052},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.022099447513812154},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.008771929824561403},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.009009009009009009},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009320905459387484},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.01951219512195122},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8531746031746031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.04736952420876127},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.027491408934707903},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"structeosio_1_1symbol__type.html":{"ref":"structeosio_1_1symbol__type.html","tf":0.014285714285714285},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7304147465437787},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":1.4272780373831775},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.044444444444444446},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0024125452352231603},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0024009603841536613},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.007426541814659348},"db_8h.html":{"ref":"db_8h.html","tf":0.0011118832522585128},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.012048192771084338}},"=":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.004962779156327543},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005089058524173028},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0050303919513728776},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00398406374501992},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}},"x":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.005037783375314861},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.00904977375565611}},".":{"docs":{"group__contractdev.html":{"ref":"group__contractdev.html","tf":0.0025188916876574307},"types_8hpp.html":{"ref":"types_8hpp.html","tf":0.00904977375565611}}}},"%":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285}}}}},"\\":{"docs":{},"*":{"docs":{},"(":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"t":{"docs":{},"\\":{"docs":{},"*":{"docs":{},")":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.006759098786828423},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0067649609713790115},"db_8h.html":{"ref":"db_8h.html","tf":0.00542043085476025}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004159445407279029},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"db_8h.html":{"ref":"db_8h.html","tf":0.0033356497567755385}}}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.0028169014084507044},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.002881844380403458},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.005263157894736842},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00022286605749944285},"structeosio_1_1extended__symbol.html":{"ref":"structeosio_1_1extended__symbol.html","tf":0.0055248618784530384},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0016767973171242926}}},"!":{"docs":{"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.0009514747859181732}}}},"~":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.002074688796680498},"classeosio_1_1optional.html":{"ref":"classeosio_1_1optional.html","tf":0.40730835497724177}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.002242152466367713}}}}},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004878048780487805}}},"i":{"docs":{},"p":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010479983232026828}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010479983232026828}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006287989939216097}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020959966464053657}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041919932928107315}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}}}}}}},"g":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801}}}},"a":{"docs":{},"g":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.0012062726176115801}}}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008383986585621463}}},"|":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"action_8h.html":{"ref":"action_8h.html","tf":0.031189083820662766},"chain_8h.html":{"ref":"chain_8h.html","tf":0.04040404040404041},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.010655473038424281},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.012948207171314742},"db_8h.html":{"ref":"db_8h.html","tf":0.008756080611535788},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.03361344537815126},"permission_8h.html":{"ref":"permission_8h.html","tf":0.020588235294117647},"print_8h.html":{"ref":"print_8h.html","tf":0.027237354085603113},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0223463687150838},"system_8h.html":{"ref":"system_8h.html","tf":0.028125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.024096385542168676}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"|":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"|":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"|":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"|":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"|":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{},"|":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"s":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"s":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{},"|":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}},"_":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563}},"|":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}},"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.001949317738791423}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"1":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"2":{"5":{"6":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"docs":{}}}},"_":{"docs":{},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"s":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}}}}}}},"l":{"docs":{},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"2":{"5":{"6":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"docs":{}},"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}},"d":{"docs":{},"f":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"i":{"1":{"2":{"8":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"docs":{}},"docs":{}},"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"n":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"q":{"docs":{},"f":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"s":{"docs":{},"_":{"docs":{},"l":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"f":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"u":{"docs":{},"i":{"1":{"2":{"8":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"docs":{}},"docs":{}},"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"|":{"docs":{},"_":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"|":{"docs":{},"_":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"s":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{},"|":{"docs":{},"_":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"s":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}}}}},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}},"docs":{}},"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{},"|":{"docs":{},"_":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{},"|":{"docs":{},"_":{"docs":{},"_":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}},"e":{"docs":{},"q":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032289312237649337}}},"docs":{}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00099601593625498}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"|":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}},"length":13481},"corpusTokens":["!!","!=","\"\"","\");","\",","\".\"","\".\",","\".\".","\"1","\"account\":","\"active\"","\"address","\"alic","\"amount\":","\"authorization\":","\"blacksburg\";","\"blumer\";","\"brendan\";","\"ca\";","\"code","\"code\":","\"couldn't","\"daniel\",","\"daniel\";","\"data\":","\"eos\",","\"from\":","\"hello","\"hk\";","\"hong","\"incorrect","\"inita\",","\"initb\",","\"invalid","\"larimer\";","\"one","\"onli","\"pending\"","\"permission\":","\"record","\"san","\"scope","\"to\":","\"transfer\",","\"type\":","\"unabl","\"va\";","###","#includ","$","${cmake_install_prefix})","${wasm_root}/lib/cmake)","%\",","&","&&","&&...","&calc_hash","&prim);","(","(\"action_member1_name\",","()","(1/18)","(1/2)","(1/21)","(1/3)","(1/4)","(1/6)","(1/8)","(1/9)","(10/18)","(10/21)","(11/18)","(11/21)","(12/18)","(12/21)","(13/18)","(13/21)","(14/18)","(14/21)","(15/18)","(15/21)","(16/18)","(16/21)","(17/18)","(17/21)","(18/18)","(18/21)","(19/21)","(2/18)","(2/2)","(2/21)","(2/3)","(2/4)","(2/6)","(2/8)","(2/9)","(20/21)","(21/21)","(3/18)","(3/21)","(3/3)","(3/4)","(3/6)","(3/8)","(3/9)","(4/18)","(4/21)","(4/4)","(4/6)","(4/8)","(4/9)","(5/18)","(5/21)","(5/6)","(5/8)","(5/9)","(6/18)","(6/21)","(6/6)","(6/8)","(6/9)","(7/18)","(7/21)","(7/8)","(7/9)","(8/18)","(8/21)","(8/8)","(8/9)","(87654323456);","(9/18)","(9/21)","(9/9)","(__int128","(_multi_index_detail)","(a","(a)(b)(c)","(account)(name)(authorization)(data)","(account)(name)(authorization)(data))","(account_nam","(account_name)(first_name)(last_name)(street)(city)(state)","(account_name)(first_name)(last_name)(street)(city)(state)(zip)","(account_permission,","(action","(action,","(and","(are","(arg","(args1)(args2)(args3)","(asset","(authorization)","(b","(basea)(baseb)(basec)","(bool","(can","(cannot","(char","(char)","(checksum160)","(checksum256)","(checksum512)","(come","(compiler,","(const","(const_iter","(datastream","(doubl","(empti","(eosio","(eosio)","(eosio::_multi_index_detail::secondary_key_traits)","(eosio::action)","(eosio::action,","(eosio::action_meta)","(eosio::asset)","(eosio::asset,","(eosio::block_timestamp)","(eosio::block_timestamp,","(eosio::blockchain_paramet","(eosio::blockchain_parameters)","(eosio::contract)","(eosio::currency)","(eosio::currency::account)","(eosio::currency::account,","(eosio::currency::create)","(eosio::currency::create,","(eosio::currency::currency_stats)","(eosio::currency::fee_schedule)","(eosio::currency::issue,","(eosio::currency::transfer)","(eosio::datastream)","(eosio::datastream,","(eosio::extended_asset)","(eosio::extended_asset,","(eosio::extended_symbol)","(eosio::fixed_key)","(eosio::fixed_point128)","(eosio::fixed_point128,","(eosio::fixed_point32)","(eosio::fixed_point32,","(eosio::fixed_point64)","(eosio::indexed_by,","(eosio::inline_dispatcher)","(eosio::memory_manager)","(eosio::memory_manager,","(eosio::memory_manager::memory)","(eosio::memory_manager::memory::buffer_ptr)","(eosio::memory_manager::memory::buffer_ptr,","(eosio::microseconds)","(eosio::multi_index)","(eosio::multi_index,","(eosio::multi_index::const_iterator,","(eosio::multi_index::index)","(eosio::multi_index::index,","(eosio::multi_index::index::const_iterator)","(eosio::multi_index::intc)","(eosio::multi_index::intc,","(eosio::multi_index::item)","(eosio::multi_index::item_ptr)","(eosio::name)","(eosio::name,","(eosio::onerror)","(eosio::optional)","(eosio::permission_level)","(eosio::producer_key)","(eosio::producer_schedule)","(eosio::public_key)","(eosio::singleton)","(eosio::symbol_type)","(eosio::time_point)","(eosio::time_point,","(eosio::time_point_sec)","(eosio::transaction)","(eosio::transaction_header)","(explicitli","(field1)(field2)(field3)","(fixed_key","(float","(i.e.","(i.e.,","(identifier)","(idx128),","(idx256),","(idx64),","(impli","(in","(int","(int)","(int128_t","(int32_t","(int64_t","(iostream","(it","(key)(first_name)(last_name)(street)(city)(state)","(long","(microsecond","(myaction)","(name","(number","(o0","(option","(or","(period)","(post","(primary)(secondary)","(primary)(secondary_1)(secondary_2)(secondary_3)(secondary_4)(secondary_5)","(quadruple)","(round","(secondary_key_typ","(setpriv)(setalimits)(setglimits)(setprods)(reqauth)","(signed_int)","(size_t","(std)","(std::less)","(std::nullptr_t)","(std::string","(std::unique_ptr","(symbol_nam","(t","(tablenam","(test_action))","(the","(time_point_sec","(truncat","(u","(uint128_t","(uint32_t","(uint64_t","(uint64_t)","(uint8_t","(unsign","(unsigned_int)","(unused)","(use","(usual","(vectorpermission_level","(void","(wasm).","(webassembl","(weight","(which",")",").","):contract(self){}",");","*","*,","*build.sh","*const","*itr,","*s","*thi","*|calloc","*|malloc","*|realloc","*|sbrk",",",",size_t","...","./build.sh","./install.sh","/","/)","/.","//","//1","//4","//8","//if","/usr/local/bin","/usr/local/eosio.wasmsdk","0","0)","0);","0,","0.","0.5","0;","0x000000000000000full)","0x000000000000000full),","0xfffffffffffffff0ull)","0xffffffffffffffff","1","1);","1,","1.","1.0.0)","1.1.0","10);","10.0;","1000","10000","1000000000000000000","100;","12","128","13","13th","16","160","1970","1970)","1e+18);","1e+18;","2","2,","2323)","256","2^62","3","3.0","3.5)","32","32,64,128,256","34","3;","4","5","5);","5,","5.0","512","64","64));","64),","66","7","7,","8","87654323456","87654323456);","8;","93445;","93446;",":","::","::free",";","=","==",">",">())",">(),",">,",">::call",">::datastream",">::lowest",">::operator()",">::put",">::remain",">::seekp",">::skip",">::tellp",">::write",">=",">>",">account_nam",">citi","[&](","[&](auto&","[options]","[{","\\*((uint64\\_t\\*)data)","\\*primari","\\*secondari","_","__addtf3","__ashlti3","__ashlti3(res,","__ashrti3","__ashrti3(res,","__base_file__","__break_point","__cmptf2","__divtf3","__divti3","__divti3(res,","__eqtf2","__extenddftf2","__extendsftf2","__file__","__fixtfdi","__fixtfsi","__fixunstfdi","__fixunstfsi","__getf2","__gttf2","__idx","__int128","__iter","__letf2","__lshlti3","__lshlti3(res,","__lshrti3","__lshrti3(res,","__lttf2","__modti3","__modti3(res,","__multf3","__multi3","__multi3(res,","__netf2","__primary_itr","__subtf3","__trunctfdf2","__trunctfsf2","__udivti3","__udivti3(res,","__umodti3","__umodti3(res,","__unordtf2","_active_free_heap","_active_heap","_alloc_memory_mask","_available_heap","_code","_contract","_count","_data","_datastream_detail","_end","_heap","_heap_end","_heap_siz","_heaps_actual_s","_heaps_siz","_idx","_indic","_initial_heap","_initial_heap_s","_item","_items_vector","_mem_block","_multi_index_detail","_multidx","_next_primary_key","_offset","_po","_primary_itr","_primary_key","_ptr","_rem_mem_block_mask","_scope","_self","_self);","_self;","_selfth","_size","_size_mark","_start","_t","_valid","_valu","`","``","``,","```","```cpp","a(123232.455667233)","a(1234.455667)","a(1234.455667);","a(123424)","a)","a*b;","a+b+c;","a,","a;","aa","abcd","abi","abort","abort,","aborted.","abov","absolut","abstract","acc","accepts,","access","accordingly.","account","account)","account,","account.","account_nam","account_name;","account_namenam","account_permiss","account_permission::account;","account_permission::permission;","accountnam","accounts.","accounts...","accur","act","act)","act,","action","action'","action)","action,","action.","action.cod","action.h","action.h::action_data_s","action.h::current_receiv","action.h::has_auth","action.h::is_account","action.h::publication_tim","action.h::read_action_data","action.h::require_auth","action.h::require_auth2","action.h::require_read_lock","action.h::require_recipi","action.h::require_write_lock","action.h::send_context_free_inlin","action.h::send_inlin","action.hpp","action::account","action::act","action::author","action::data_a","action::eoslib_seri","action::nam","action::send_context_fre","action;","action_data_s","action_member1_value)(\"action_member2_name\",","action_member2_value)","action_meta","action_meta::get_account","action_meta::get_nam","action_nam","action_name;","action_namenam","action_size();","actionapi","actionapi::require_auth","actionapi::require_recipi","actionapi::unpack_action_data","actioncapi","actioncapi::action_data_s","actioncapi::current_receiv","actioncapi::has_auth","actioncapi::is_account","actioncapi::publication_tim","actioncapi::read_action_data","actioncapi::require_auth","actioncapi::require_auth2","actioncapi::require_read_lock","actioncapi::require_recipi","actioncapi::require_write_lock","actioncapi::send_context_free_inlin","actioncapi::send_inlin","actioncppapi","actioncppapi::require_auth","actioncppapi::require_recipi","actioncppapi::unpack_action_data","actionextend","actions.","actiontyp","activ","activate_featur","actor","actornam","actual","ad","add","add_bal","add_executable(","add_executable/","add_librari","addend","addit","address","address)","address,","address.account_nam","address.c","address.find(n(dan));","address.first_nam","address.key","address.last_nam","address.st","address.street","address.zip","address_index","address_index;","addressbook(account_nam","addressbook,","addressbook:","addresses(_self,","addresses(n(dan),","addresses.available_primary_key();","addresses.begin(),","addresses.cbegin(),","addresses.cend(),","addresses.crbegin();","addresses.crend();","addresses.emplace(_self,","addresses.emplace(payer,","addresses.end(),","addresses.erase(","addresses.erase(*itr);","addresses.find(n(dan));","addresses.get(n(dan));","addresses.get_index();","addresses.modify(","addresses.rbegin();","addresses.rend();","adjust_to_mem_block","advantag","against","agreement","alia","aliases.","align","align/overalign","aligned.","aligned;","alloc","allow","along","alreadi","also:","alway","amount","amount,","amount.","amountth","analys","analysi","and,","anoth","anyth","api","api.","appear","apples:","appli","appropri","ar","arbitrari","area","arg","args)","args.","args...","argument","arithmet","around","arr","arr)","arr_itr","arr_itrconstructor","array","array.","arrayextended_asset,","assembl","assert","assert.","assert160","assert256","assert512","assert\\_recover\\_key","assert_recover_key","assert_recover_key(","assert_ripemd160","assert_ripemod160(","assert_sha1","assert_sha1(","assert_sha256","assert_sha256(","assert_sha512","assert_sha512(","asset","asset&","asset'","asset.","asset.hpp","asset::amount","asset::asset","asset::is_amount_within_rang","asset::max_amount","asset::operator*=","asset::operator/=","asset::set_amount","asset::symbol","assetapi","assetcppapi","assets.","assign","assignhelp","associ","assum","ast","atabl","atom","attribut","auth","auth,","auth.","author","authorization;","authorizationlist","authorized,","auths,","auths.","auto","auto&","autoincr","automat","automatically.","avail","available_primary_key","b","b(13324.32323);","b(9.654);","b(a);","b,","b/a;","b;","bake","balanc","base","base32","base_per_transaction_net_usag","base_per_transaction_net_usageth","basic","be","becom","befor","begin","behav","below","between","bill","bill_to_account","bill_to_account)","bill_to_account,","binari","binary_funct","bit","block","block_id_typ","block_id_type;","block_interval_m","block_signing_key","block_signing_keyblock","block_timestamp","block_timestamp::block_interval_m","block_timestamp::block_timestamp","block_timestamp::block_timestamp_epoch","block_timestamp::next","block_timestamp::set_time_point","block_timestamp::slot","block_timestamp::to_time_point","block_timestamp_epoch","block_timestamp_typ","blockchain","blockchain.","blockchain_paramet","blockchain_parameters::base_per_transaction_net_usag","blockchain_parameters::context_free_discount_cpu_usage_den","blockchain_parameters::context_free_discount_cpu_usage_num","blockchain_parameters::context_free_discount_net_usage_den","blockchain_parameters::context_free_discount_net_usage_num","blockchain_parameters::deferred_trx_expiration_window","blockchain_parameters::max_authority_depth","blockchain_parameters::max_block_cpu_usag","blockchain_parameters::max_block_net_usag","blockchain_parameters::max_inline_action_depth","blockchain_parameters::max_inline_action_s","blockchain_parameters::max_transaction_cpu_usag","blockchain_parameters::max_transaction_delay","blockchain_parameters::max_transaction_lifetim","blockchain_parameters::max_transaction_net_usag","blockchain_parameters::min_transaction_cpu_usag","blockchain_parameters::net_usage_leeway","blockchain_parameters::target_block_cpu_usage_pct","blockchain_parameters::target_block_net_usage_pct","blolckchain","bodi","bool","bool.","bool_pack","boolean","boost","boost::container::flat_map","boost::container::flat_set","boost::multi\\_index::const\\_mem\\_fun.","boost::multi_index::const_mem_fun.","boost::opt","boost::optional.","both","bound","brief","brows","buff","buff,","buff_size,","buffer","buffer,","buffer.","buffer[128];","buffer_ptr","build","build.sh","built","builtin","by_zip()","bypass","byte","bytes)","bytes.","bytes_popul","c","c(a);","c)","c++","c++17","c1","c1,","c2","c2)","c2,","c2.","c;","calc_hash","calc_hash;","calcul","call","called.","calloc","calloc(),","callocalloc","can_freez","can_recal","can_whitelist","cancel","cancel/replac","cancel_def","cancel_deferred(","canceled,","canceled.","cap","case","cast","cbegin","cc","cc,","cd","cend","cfa'","cfa's.","cfl","chain","chain.h","chain.h::get_active_produc","chainapi","chainapi::assert_recover_key","chainapi::assert_ripemd160","chainapi::assert_sha1","chainapi::assert_sha256","chainapi::assert_sha512","chainapi::recover_key","chainapi::ripemd160","chainapi::sha1","chainapi::sha256","chainapi::sha512","chaincapi","chaincapi::get_active_produc","chang","change,","changed.","changes.","char","char*","char.","char_to_symbol","charact","character,","character;","characters,","charg","charli","charlie_itr","check","check_permission_author","check_transaction_author","checksum","checksum.","checksum160","checksum160\\*","checksum256","checksum256.","checksum256\\*","checksum512","checksum512\\*","city;","clang","class","class,","class.","classes,","classes.","classes:","cleanup","cleanup_remain","clone","cmake","cmake_minimum_required(vers","cmake_module_path","cmakelists.txt","code","code)","code,","code/typ","code:","command","comment","common","compar","comparison","comparisons,","compil","compile,","compiler)","compiler,","compiler_builtins.h","compiler_builtins.h::__addtf3","compiler_builtins.h::__ashlti3","compiler_builtins.h::__ashrti3","compiler_builtins.h::__break_point","compiler_builtins.h::__cmptf2","compiler_builtins.h::__divtf3","compiler_builtins.h::__divti3","compiler_builtins.h::__eqtf2","compiler_builtins.h::__extenddftf2","compiler_builtins.h::__extendsftf2","compiler_builtins.h::__fixtfdi","compiler_builtins.h::__fixtfsi","compiler_builtins.h::__fixunstfdi","compiler_builtins.h::__fixunstfsi","compiler_builtins.h::__getf2","compiler_builtins.h::__gttf2","compiler_builtins.h::__letf2","compiler_builtins.h::__lshlti3","compiler_builtins.h::__lshrti3","compiler_builtins.h::__lttf2","compiler_builtins.h::__modti3","compiler_builtins.h::__multf3","compiler_builtins.h::__multi3","compiler_builtins.h::__netf2","compiler_builtins.h::__subtf3","compiler_builtins.h::__trunctfdf2","compiler_builtins.h::__trunctfsf2","compiler_builtins.h::__udivti3","compiler_builtins.h::__umodti3","compiler_builtins.h::__unordtf2","compilerbuiltinsapi","compilerbuiltinsapi::__addtf3","compilerbuiltinsapi::__ashlti3","compilerbuiltinsapi::__ashrti3","compilerbuiltinsapi::__break_point","compilerbuiltinsapi::__cmptf2","compilerbuiltinsapi::__divtf3","compilerbuiltinsapi::__divti3","compilerbuiltinsapi::__eqtf2","compilerbuiltinsapi::__extenddftf2","compilerbuiltinsapi::__extendsftf2","compilerbuiltinsapi::__fixtfdi","compilerbuiltinsapi::__fixtfsi","compilerbuiltinsapi::__fixunstfdi","compilerbuiltinsapi::__fixunstfsi","compilerbuiltinsapi::__getf2","compilerbuiltinsapi::__gttf2","compilerbuiltinsapi::__letf2","compilerbuiltinsapi::__lshlti3","compilerbuiltinsapi::__lshrti3","compilerbuiltinsapi::__lttf2","compilerbuiltinsapi::__modti3","compilerbuiltinsapi::__multf3","compilerbuiltinsapi::__multi3","compilerbuiltinsapi::__netf2","compilerbuiltinsapi::__subtf3","compilerbuiltinsapi::__trunctfdf2","compilerbuiltinsapi::__trunctfsf2","compilerbuiltinsapi::__udivti3","compilerbuiltinsapi::__umodti3","compilerbuiltinsapi::__unordtf2","compress","comput","condit","configur","conform","consensu","consensus.","consid","consol","consoleapi","consoleapi::oper","consoleapi::print","consoleapi::print_f","consolecapi","consolecapi::print","consolecapi::printdf","consolecapi::printhex","consolecapi::printi","consolecapi::printi128","consolecapi::printn","consolecapi::printqf","consolecapi::prints_l","consolecapi::printsf","consolecapi::printui","consolecapi::printui128","consolecppapi","consolecppapi::oper","consolecppapi::print","consolecppapi::print_f","const","const\\_mem\\_fun","const_iter","const_mem_fun","const_reverse_iter","const_reverse_iteratorstruct","constant","constexpr","construct","constructor","constructor)","contain","container.","content","context","context_free_act","context_free_data","context_free_data[index]","context_free_data[index].size()","context_free_discount_cpu_usage_den","context_free_discount_cpu_usage_denth","context_free_discount_cpu_usage_num","context_free_discount_cpu_usage_numth","context_free_discount_net_usage_den","context_free_discount_net_usage_num","continu","contract","contract)","contract,","contract.","contract.hpp","contract::_self","contract::contract","contract::contract;","contract::get_self","contract::on(","contractdev","contractdev::align","contractdev::char_to_symbol","contractdev::string_to_nam","contracts.","contractth","contracttyp","control","conveni","convers","convert","copi","copied,","copyright","core","core_symbol","core_symbol)","coroutin","correpond","cost","count","count,","cout","cover","cpp","cpp,","cpp/eosio","cpu","cpu_weight","cpu_weight)","crbegin","creat","create_curr","created,","created.","creation","creation,","creation.","crend","cross","crypto.h","crypto.h::assert_recover_key","crypto.h::assert_ripemd160","crypto.h::assert_sha1","crypto.h::assert_sha256","crypto.h::assert_sha512","crypto.h::recover_key","crypto.h::ripemd160","crypto.h::sha1","crypto.h::sha256","crypto.h::sha512","cryptoapi","cryptocapi","cryptocapi::assert_recover_key","cryptocapi::assert_ripemd160","cryptocapi::assert_sha1","cryptocapi::assert_sha256","cryptocapi::assert_sha512","cryptocapi::recover_key","cryptocapi::ripemd160","cryptocapi::sha1","cryptocapi::sha256","cryptocapi::sha512","cs","cs)","cstr","cstr)","cstr,","currenc","currency.hpp","currency::_contract","currency::account","currency::account::bal","currency::account::frozen","currency::account::whitelist","currency::add_bal","currency::appli","currency::cr","currency::create::issuer_can_freez","currency::create::issuer_can_recal","currency::create::issuer_can_whitelist","currency::create::maximum_suppli","currency::create_curr","currency::curr","currency::currency_stat","currency::currency_stats::can_freez","currency::currency_stats::can_recal","currency::currency_stats::can_whitelist","currency::currency_stats::enforce_whitelist","currency::currency_stats::is_frozen","currency::currency_stats::issu","currency::currency_stats::max_suppli","currency::currency_stats::suppli","currency::fee_schedul","currency::fee_schedule::fee_per_length","currency::get_bal","currency::get_suppli","currency::inline_transf","currency::issu","currency::issue_curr","currency::on","currency::sub_bal","currency::transf","currency::transfer::from","currency::transfer::memo","currency::transfer::quant","currency::transfer::to","currency_stat","current","current_receiv","current_tim","custom","d","d)","d,","d=","data","data,","data.","data;","data_a","data_len","data_len)","data_len,","databas","database.","database::db_end_i64","database::db_find_i64","database::db_get_i64","database::db_idx128_end","database::db_idx128_find_primari","database::db_idx128_find_secondari","database::db_idx128_lowerbound","database::db_idx128_next","database::db_idx128_previ","database::db_idx128_remov","database::db_idx128_stor","database::db_idx128_upd","database::db_idx128_upperbound","database::db_idx256_end","database::db_idx256_find_primari","database::db_idx256_find_secondari","database::db_idx256_lowerbound","database::db_idx256_next","database::db_idx256_previ","database::db_idx256_remov","database::db_idx256_stor","database::db_idx256_upd","database::db_idx256_upperbound","database::db_idx64_end","database::db_idx64_find_primari","database::db_idx64_find_secondari","database::db_idx64_lowerbound","database::db_idx64_next","database::db_idx64_previ","database::db_idx64_remov","database::db_idx64_stor","database::db_idx64_upd","database::db_idx64_upperbound","database::db_idx_double_end","database::db_idx_double_find_primari","database::db_idx_double_find_secondari","database::db_idx_double_lowerbound","database::db_idx_double_next","database::db_idx_double_previ","database::db_idx_double_remov","database::db_idx_double_stor","database::db_idx_double_upd","database::db_idx_double_upperbound","database::db_idx_long_double_end","database::db_idx_long_double_find_primari","database::db_idx_long_double_find_secondari","database::db_idx_long_double_lowerbound","database::db_idx_long_double_next","database::db_idx_long_double_previ","database::db_idx_long_double_remov","database::db_idx_long_double_stor","database::db_idx_long_double_upd","database::db_idx_long_double_upperbound","database::db_lowerbound_i64","database::db_next_i64","database::db_previous_i64","database::db_remove_i64","database::db_store_i64","database::db_update_i64","database::db_upperbound_i64","databasec","databasec::db_end_i64","databasec::db_find_i64","databasec::db_get_i64","databasec::db_idx128_end","databasec::db_idx128_find_primari","databasec::db_idx128_find_secondari","databasec::db_idx128_lowerbound","databasec::db_idx128_next","databasec::db_idx128_previ","databasec::db_idx128_remov","databasec::db_idx128_stor","databasec::db_idx128_upd","databasec::db_idx128_upperbound","databasec::db_idx256_end","databasec::db_idx256_find_primari","databasec::db_idx256_find_secondari","databasec::db_idx256_lowerbound","databasec::db_idx256_next","databasec::db_idx256_previ","databasec::db_idx256_remov","databasec::db_idx256_stor","databasec::db_idx256_upd","databasec::db_idx256_upperbound","databasec::db_idx64_end","databasec::db_idx64_find_primari","databasec::db_idx64_find_secondari","databasec::db_idx64_lowerbound","databasec::db_idx64_next","databasec::db_idx64_previ","databasec::db_idx64_remov","databasec::db_idx64_stor","databasec::db_idx64_upd","databasec::db_idx64_upperbound","databasec::db_idx_double_end","databasec::db_idx_double_find_primari","databasec::db_idx_double_find_secondari","databasec::db_idx_double_lowerbound","databasec::db_idx_double_next","databasec::db_idx_double_previ","databasec::db_idx_double_remov","databasec::db_idx_double_stor","databasec::db_idx_double_upd","databasec::db_idx_double_upperbound","databasec::db_idx_long_double_end","databasec::db_idx_long_double_find_primari","databasec::db_idx_long_double_find_secondari","databasec::db_idx_long_double_lowerbound","databasec::db_idx_long_double_next","databasec::db_idx_long_double_previ","databasec::db_idx_long_double_remov","databasec::db_idx_long_double_stor","databasec::db_idx_long_double_upd","databasec::db_idx_long_double_upperbound","databasec::db_lowerbound_i64","databasec::db_next_i64","databasec::db_previous_i64","databasec::db_remove_i64","databasec::db_store_i64","databasec::db_update_i64","databasec::db_upperbound_i64","databasecpp","databyt","datalen","datalen)","datapayload","datastream","datastream&","datastream.hpp","datastream::_end","datastream::_po","datastream::_start","datastream::oper","datastream::operator>>","datastream::pack","datastream::pack_s","datastream::po","datastream::read","datastream::unpack","datastream<","dawn","day","db.h","db.h::db_end_i64","db.h::db_find_i64","db.h::db_get_i64","db.h::db_idx128_end","db.h::db_idx128_find_primari","db.h::db_idx128_find_secondari","db.h::db_idx128_lowerbound","db.h::db_idx128_next","db.h::db_idx128_previ","db.h::db_idx128_remov","db.h::db_idx128_stor","db.h::db_idx128_upd","db.h::db_idx128_upperbound","db.h::db_idx256_end","db.h::db_idx256_find_primari","db.h::db_idx256_find_secondari","db.h::db_idx256_lowerbound","db.h::db_idx256_next","db.h::db_idx256_previ","db.h::db_idx256_remov","db.h::db_idx256_stor","db.h::db_idx256_upd","db.h::db_idx256_upperbound","db.h::db_idx64_end","db.h::db_idx64_find_primari","db.h::db_idx64_find_secondari","db.h::db_idx64_lowerbound","db.h::db_idx64_next","db.h::db_idx64_previ","db.h::db_idx64_remov","db.h::db_idx64_stor","db.h::db_idx64_upd","db.h::db_idx64_upperbound","db.h::db_idx_double_end","db.h::db_idx_double_find_primari","db.h::db_idx_double_find_secondari","db.h::db_idx_double_lowerbound","db.h::db_idx_double_next","db.h::db_idx_double_previ","db.h::db_idx_double_remov","db.h::db_idx_double_stor","db.h::db_idx_double_upd","db.h::db_idx_double_upperbound","db.h::db_idx_long_double_end","db.h::db_idx_long_double_find_primari","db.h::db_idx_long_double_find_secondari","db.h::db_idx_long_double_lowerbound","db.h::db_idx_long_double_next","db.h::db_idx_long_double_previ","db.h::db_idx_long_double_remov","db.h::db_idx_long_double_stor","db.h::db_idx_long_double_upd","db.h::db_idx_long_double_upperbound","db.h::db_lowerbound_i64","db.h::db_next_i64","db.h::db_previous_i64","db.h::db_remove_i64","db.h::db_store_i64","db.h::db_update_i64","db.h::db_upperbound_i64","db_end_i64","db_find_i64","db_find_i64(receiver,","db_get_i64","db_get_i64(itr,","db_idx128_end","db_idx128_find_primari","db_idx128_find_secondari","db_idx128_lowerbound","db_idx128_next","db_idx128_previ","db_idx128_remov","db_idx128_stor","db_idx128_upd","db_idx128_upperbound","db_idx256_end","db_idx256_find_primari","db_idx256_find_secondari","db_idx256_lowerbound","db_idx256_next","db_idx256_previ","db_idx256_remov","db_idx256_stor","db_idx256_upd","db_idx256_upperbound","db_idx64_end","db_idx64_find_primari","db_idx64_find_secondari","db_idx64_lowerbound","db_idx64_next","db_idx64_previ","db_idx64_remov","db_idx64_stor","db_idx64_upd","db_idx64_upperbound","db_idx_double_end","db_idx_double_find_primari","db_idx_double_find_secondari","db_idx_double_lowerbound","db_idx_double_next","db_idx_double_previ","db_idx_double_remov","db_idx_double_stor","db_idx_double_upd","db_idx_double_upperbound","db_idx_long_double_end","db_idx_long_double_find_primari","db_idx_long_double_find_secondari","db_idx_long_double_lowerbound","db_idx_long_double_next","db_idx_long_double_previ","db_idx_long_double_remov","db_idx_long_double_stor","db_idx_long_double_upd","db_idx_long_double_upperbound","db_lowerbound_i64","db_next_i64","db_next_i64(charlie_itr,","db_previous_i64","db_previous_i64(itr,","db_remove_i64","db_remove_i64(itr);","db_store_i64","db_update_i64","db_upperbound_i64","dd","dealloc","decid","decim","declar","def","default","defer","deferred_trx_expiration_window","defin","defined.","definit","definition);","defn","delay","delay,","delay_sec","delay_secnumb","delay_u","delay_us)","deleted\");","denomin","depend","deploy","deprec","depth","depth.","derefer","deriv","describ","descript","descriptions:","deseri","desir","destin","destroy","destructor","detail","details.","detect","determin","develop","di","differ","different)","digest","digest\");","digest,","digest;","digit","direct","directli","directori","disabl","discount","dispatch","dispatch_inlin","dispatcher.hpp","dispatcher::execute_act","dispatchercpp","dispatchercpp::execute_act","display","divid","dividend","divis","divisor","dm","document","doesn't","don't","done","doubl","double)","double,","double.","down","ds","ds,","due","dummy_act","dummy_action,","dynam","e","each","easi","effici","elaps","element","elements,","elf","elid","elimin","elis","emit","emplac","empti","enabl","encod","end","end_itr","endif()","enforce_whitelist","ensur","entri","enum","enum'","enumer","eo","eos.io","eos.io.","eos/license.txt","eos_assert(","eosd","eosio","eosio,","eosio.cdt","eosio.cdt/","eosio.hpp","eosio.ld","eosio.token","eosio.wasmsdk","eosio::_datastream_detail","eosio::_datastream_detail::is_point","eosio::_datastream_detail::is_primit","eosio::_multi_index_detail","eosio::_multi_index_detail::secondary_index_db_funct","eosio::_multi_index_detail::secondary_key_trait","eosio::_multi_index_detail::secondary_key_traits::lowest","eosio::_multi_index_detail::secondary_key_traits<","eosio::act","eosio::action)","eosio::action::account;","eosio::action::act","eosio::action::authorization;","eosio::action::data;","eosio::action::data_a","eosio::action::eoslib_seri","eosio::action::name;","eosio::action::send_context_fre","eosio::action_meta","eosio::action_meta::get_account","eosio::action_meta::get_nam","eosio::asset","eosio::asset::amount;","eosio::asset::asset","eosio::asset::is_amount_within_rang","eosio::asset::is_valid","eosio::asset::max_amount;","eosio::asset::oper","eosio::asset::operator!=","eosio::asset::operator*","eosio::asset::operator*=","eosio::asset::operator+","eosio::asset::operator+=","eosio::asset::operator/","eosio::asset::operator/=","eosio::asset::operator==","eosio::asset::operator>","eosio::asset::operator>=","eosio::asset::print","eosio::asset::set_amount","eosio::asset::symbol;","eosio::assignhelp","eosio::bios,","eosio::block_timestamp","eosio::block_timestamp::block_interval_ms;","eosio::block_timestamp::block_timestamp","eosio::block_timestamp::block_timestamp_epoch;","eosio::block_timestamp::maximum","eosio::block_timestamp::min","eosio::block_timestamp::next","eosio::block_timestamp::oper","eosio::block_timestamp::operator!=","eosio::block_timestamp::operator=","eosio::block_timestamp::operator==","eosio::block_timestamp::operator>","eosio::block_timestamp::operator>=","eosio::block_timestamp::slot;","eosio::block_timestamp::to_time_point","eosio::block_timestamp_type;","eosio::blockchain_paramet","eosio::blockchain_parameters::base_per_transaction_net_usage;","eosio::blockchain_parameters::context_free_discount_cpu_usage_den;","eosio::blockchain_parameters::context_free_discount_cpu_usage_num;","eosio::blockchain_parameters::context_free_discount_net_usage_den;","eosio::blockchain_parameters::context_free_discount_net_usage_num;","eosio::blockchain_parameters::deferred_trx_expiration_window;","eosio::blockchain_parameters::max_authority_depth;","eosio::blockchain_parameters::max_block_cpu_usage;","eosio::blockchain_parameters::max_block_net_usage;","eosio::blockchain_parameters::max_inline_action_depth;","eosio::blockchain_parameters::max_inline_action_size;","eosio::blockchain_parameters::max_transaction_cpu_usage;","eosio::blockchain_parameters::max_transaction_delay;","eosio::blockchain_parameters::max_transaction_lifetime;","eosio::blockchain_parameters::max_transaction_net_usage;","eosio::blockchain_parameters::min_transaction_cpu_usage;","eosio::blockchain_parameters::net_usage_leeway;","eosio::blockchain_parameters::target_block_cpu_usage_pct;","eosio::blockchain_parameters::target_block_net_usage_pct;","eosio::bytes;","eosio::char_to_symbol","eosio::check_permission_author","eosio::check_transaction_author","eosio::const\\_mem\\_fun","eosio::const_mem_fun","eosio::contract","eosio::contract::_self;","eosio::contract::contract","eosio::contract::get_self","eosio::cout;","eosio::curr","eosio::currency::account","eosio::currency::account::balance;","eosio::currency::account::frozen;","eosio::currency::account::primary_key","eosio::currency::account::whitelist;","eosio::currency::accounts;","eosio::currency::appli","eosio::currency::cr","eosio::currency::create::issuer;","eosio::currency::create::issuer_can_freeze;","eosio::currency::create::issuer_can_recall;","eosio::currency::create::issuer_can_whitelist;","eosio::currency::create::maximum_supply;","eosio::currency::create_curr","eosio::currency::curr","eosio::currency::currency_stat","eosio::currency::currency_stats)","eosio::currency::currency_stats,","eosio::currency::currency_stats::can_freeze;","eosio::currency::currency_stats::can_recall;","eosio::currency::currency_stats::can_whitelist;","eosio::currency::currency_stats::enforce_whitelist;","eosio::currency::currency_stats::is_frozen;","eosio::currency::currency_stats::issuer;","eosio::currency::currency_stats::max_supply;","eosio::currency::currency_stats::primary_key","eosio::currency::currency_stats::supply;","eosio::currency::fee_schedul","eosio::currency::fee_schedule,","eosio::currency::fee_schedule::fee_per_length;","eosio::currency::fee_schedule::primary_key","eosio::currency::get_bal","eosio::currency::get_suppli","eosio::currency::inline_transf","eosio::currency::issu","eosio::currency::issue::memo;","eosio::currency::issue::quantity;","eosio::currency::issue::to;","eosio::currency::issue_curr","eosio::currency::on","eosio::currency::stats;","eosio::currency::transf","eosio::currency::transfer)","eosio::currency::transfer::from;","eosio::currency::transfer::memo;","eosio::currency::transfer::quantity;","eosio::currency::transfer::to;","eosio::datastream","eosio::datastream&","eosio::datastream)","eosio::datastream,","eosio::datastream::datastream","eosio::datastream::get","eosio::datastream::po","eosio::datastream::put","eosio::datastream::read","eosio::datastream::remain","eosio::datastream::seekp","eosio::datastream::skip","eosio::datastream::tellp","eosio::datastream::valid","eosio::datastream::writ","eosio::datastream<","eosio::day","eosio::dispatch","eosio::dispatch_inlin","eosio::execute_act","eosio::extended_asset","eosio::extended_asset,","eosio::extended_asset::contract;","eosio::extended_asset::extended_asset","eosio::extended_asset::get_extended_symbol","eosio::extended_asset::oper","eosio::extended_asset::operator+","eosio::extended_asset::print","eosio::extended_symbol","eosio::extended_symbol)","eosio::extended_symbol,","eosio::extended_symbol::contract;","eosio::extended_symbol::extended_symbol","eosio::extended_symbol::oper","eosio::extended_symbol::operator!=","eosio::extended_symbol::operator==","eosio::extended_symbol::print","eosio::extensions_type;","eosio::fixed_divid","eosio::fixed_key","eosio::fixed_key::arr;","eosio::fixed_key::arr_itr;","eosio::fixed_key::bool_pack","eosio::fixed_key::fixed_key","eosio::fixed_key::num_word","eosio::fixed_key::oper","eosio::fixed_key::operator!=","eosio::fixed_key::operator==","eosio::fixed_key::operator>","eosio::fixed_key::padded_byt","eosio::fixed_key::word_t;","eosio::fixed_point128","eosio::fixed_point128,","eosio::fixed_point128::fixed_point128","eosio::fixed_point128::frac_part","eosio::fixed_point128::int_part","eosio::fixed_point128::oper","eosio::fixed_point128::operator=","eosio::fixed_point128::operator==","eosio::fixed_point128::operator>","eosio::fixed_point128::print","eosio::fixed_point128::val;","eosio::fixed_point32","eosio::fixed_point32,","eosio::fixed_point32::fixed_point32","eosio::fixed_point32::frac_part","eosio::fixed_point32::int_part","eosio::fixed_point32::oper","eosio::fixed_point32::operator*","eosio::fixed_point32::operator+","eosio::fixed_point32::operator/","eosio::fixed_point32::operator=","eosio::fixed_point32::operator==","eosio::fixed_point32::operator>","eosio::fixed_point32::print","eosio::fixed_point32::val;","eosio::fixed_point64","eosio::fixed_point64)","eosio::fixed_point64,","eosio::fixed_point64::fixed_point64","eosio::fixed_point64::frac_part","eosio::fixed_point64::int_part","eosio::fixed_point64::oper","eosio::fixed_point64::operator*","eosio::fixed_point64::operator+","eosio::fixed_point64::operator/","eosio::fixed_point64::operator=","eosio::fixed_point64::operator==","eosio::fixed_point64::operator>","eosio::fixed_point64::print","eosio::fixed_point64::val;","eosio::get_act","eosio::get_blockchain_paramet","eosio::hour","eosio::indexed_bi","eosio::indexed_by::const","eosio::indexed_by::secondary_extractor_type;","eosio::inline_dispatch","eosio::inline_dispatcher::cal","eosio::inline_dispatcher<","eosio::iostream","eosio::is_valid_symbol","eosio::key256;","eosio::memory_heap;","eosio::memory_manag","eosio::memory_manager::calloc","eosio::memory_manager::malloc","eosio::memory_manager::memori","eosio::memory_manager::memory)","eosio::memory_manager::memory::buffer_ptr","eosio::memory_manager::memory::buffer_ptr)","eosio::memory_manager::memory::buffer_ptr::buffer_ptr","eosio::memory_manager::memory::buffer_ptr::end","eosio::memory_manager::memory::buffer_ptr::is_alloc","eosio::memory_manager::memory::buffer_ptr::mark_alloc","eosio::memory_manager::memory::buffer_ptr::mark_fre","eosio::memory_manager::memory::buffer_ptr::merge_contigu","eosio::memory_manager::memory::buffer_ptr::merge_contiguous_if_avail","eosio::memory_manager::memory::buffer_ptr::next_ptr","eosio::memory_manager::memory::buffer_ptr::ptr","eosio::memory_manager::memory::buffer_ptr::s","eosio::memory_manager::memory::cleanup_remain","eosio::memory_manager::memory::expand_memori","eosio::memory_manager::memory::fre","eosio::memory_manager::memory::init","eosio::memory_manager::memory::is_capacity_remain","eosio::memory_manager::memory::is_in_heap","eosio::memory_manager::memory::is_init","eosio::memory_manager::memory::malloc","eosio::memory_manager::memory::malloc_from_fre","eosio::memory_manager::memory::memori","eosio::memory_manager::memory::realloc_in_plac","eosio::memory_manager::memory_manag","eosio::memory_manager::realloc","eosio::microsecond","eosio::microseconds,","eosio::microseconds::_count;","eosio::microseconds::count","eosio::microseconds::maximum","eosio::microseconds::microsecond","eosio::microseconds::oper","eosio::microseconds::operator!=","eosio::microseconds::operator+","eosio::microseconds::operator+=","eosio::microseconds::operator==","eosio::microseconds::operator>","eosio::microseconds::operator>=","eosio::microseconds::to_second","eosio::millisecond","eosio::minut","eosio::multi_index","eosio::multi_index)","eosio::multi_index,","eosio::multi_index::available_primary_key","eosio::multi_index::begin","eosio::multi_index::cbegin","eosio::multi_index::cend","eosio::multi_index::const_iter","eosio::multi_index::const_iterator,","eosio::multi_index::const_iterator::oper","eosio::multi_index::const_iterator::operator!=","eosio::multi_index::const_iterator::operator*","eosio::multi_index::const_iterator::operator++","eosio::multi_index::const_iterator::operator==","eosio::multi_index::const_reverse_iterator;","eosio::multi_index::crbegin","eosio::multi_index::crend","eosio::multi_index::emplac","eosio::multi_index::end","eosio::multi_index::eras","eosio::multi_index::find","eosio::multi_index::get","eosio::multi_index::get_cod","eosio::multi_index::get_index","eosio::multi_index::get_scop","eosio::multi_index::index","eosio::multi_index::index)","eosio::multi_index::index,","eosio::multi_index::index::begin","eosio::multi_index::index::cbegin","eosio::multi_index::index::cend","eosio::multi_index::index::const","eosio::multi_index::index::const_iter","eosio::multi_index::index::const_iterator)","eosio::multi_index::index::const_iterator,","eosio::multi_index::index::const_iterator::const_iter","eosio::multi_index::index::const_iterator::oper","eosio::multi_index::index::const_iterator::operator!=","eosio::multi_index::index::const_iterator::operator*","eosio::multi_index::index::const_iterator::operator++","eosio::multi_index::index::const_iterator::operator==","eosio::multi_index::index::const_reverse_iterator;","eosio::multi_index::index::crbegin","eosio::multi_index::index::crend","eosio::multi_index::index::end","eosio::multi_index::index::eras","eosio::multi_index::index::extract_secondary_key","eosio::multi_index::index::find","eosio::multi_index::index::get","eosio::multi_index::index::get_cod","eosio::multi_index::index::get_scop","eosio::multi_index::index::iterator_to","eosio::multi_index::index::lower_bound","eosio::multi_index::index::modifi","eosio::multi_index::index::nam","eosio::multi_index::index::numb","eosio::multi_index::index::rbegin","eosio::multi_index::index::rend","eosio::multi_index::index::require_find","eosio::multi_index::index::secondary_extractor_type;","eosio::multi_index::index::secondary_key_type;","eosio::multi_index::index::upper_bound","eosio::multi_index::index::validate_index_nam","eosio::multi_index::intc","eosio::multi_index::intc::","eosio::multi_index::intc::oper","eosio::multi_index::item","eosio::multi_index::item::__idx;","eosio::multi_index::item::__iters[sizeof...(indices)+(sizeof...(indices)==0)];","eosio::multi_index::item::__primary_itr;","eosio::multi_index::item::item","eosio::multi_index::item_ptr","eosio::multi_index::item_ptr)","eosio::multi_index::item_ptr::_item;","eosio::multi_index::item_ptr::_primary_itr;","eosio::multi_index::item_ptr::_primary_key;","eosio::multi_index::item_ptr::item_ptr","eosio::multi_index::iterator_to","eosio::multi_index::lower_bound","eosio::multi_index::modifi","eosio::multi_index::multi_index","eosio::multi_index::rbegin","eosio::multi_index::rend","eosio::multi_index::require_find","eosio::multi_index::upper_bound","eosio::multi_indexn(accounts),","eosio::multi_indexn(stat),","eosio::nam","eosio::name)","eosio::name::oper","eosio::name::operator==","eosio::name::to_str","eosio::name::value;","eosio::name_suffix","eosio::onerror","eosio::onerror::from_current_act","eosio::onerror::sender_id;","eosio::onerror::sent_trx;","eosio::onerror::unpack_sent_trx","eosio::oper","eosio::operator!=","eosio::operator==","eosio::operator>","eosio::operator>>","eosio::opt","eosio::optional)","eosio::optional,","eosio::optional::emplac","eosio::optional::oper","eosio::optional::operator!","eosio::optional::operator*","eosio::optional::operator=","eosio::optional::operator==","eosio::optional::operator>>","eosio::optional::opt","eosio::optional::reset","eosio::optional::storage_type;","eosio::optional::valid","eosio::optional::value_type;","eosio::optional::~opt","eosio::pack","eosio::pack_s","eosio::permission_level","eosio::permission_level)","eosio::permission_level::actor;","eosio::permission_level::operator==","eosio::permission_level::permission;","eosio::permission_level::permission_level","eosio::print","eosio::print(\"pub","eosio::print(\"ripemod160","eosio::print(\"sha1","eosio::print(\"sha256","eosio::print(\"sha512","eosio::print_f","eosio::producer_key","eosio::producer_key::block_signing_key;","eosio::producer_key::oper","eosio::producer_key::producer_name;","eosio::producer_schedul","eosio::producer_schedule::producers;","eosio::producer_schedule::version;","eosio::public_key","eosio::public_key,","eosio::public_key::data;","eosio::public_key::operator!=","eosio::public_key::operator==","eosio::public_key::type;","eosio::reflector","eosio::reflector::is_enum;","eosio::reflector::is_reflected;","eosio::require_auth","eosio::require_recipi","eosio::second","eosio::set_blockchain_paramet","eosio::singleton","eosio::singleton)","eosio::singleton::exist","eosio::singleton::get","eosio::singleton::get_or_cr","eosio::singleton::get_or_default","eosio::singleton::remov","eosio::singleton::row","eosio::singleton::row)","eosio::singleton::row,","eosio::singleton::row::primary_key","eosio::singleton::row::value;","eosio::singleton::set","eosio::singleton::singleton","eosio::string_to_nam","eosio::string_to_symbol","eosio::symbol_name;","eosio::symbol_name_length","eosio::symbol_typ","eosio::symbol_type)","eosio::symbol_type,","eosio::symbol_type::is_valid","eosio::symbol_type::nam","eosio::symbol_type::name_length","eosio::symbol_type::oper","eosio::symbol_type::precis","eosio::symbol_type::print","eosio::symbol_type::symbol_typ","eosio::symbol_type::value;","eosio::time_point","eosio::time_point)","eosio::time_point,","eosio::time_point::elapsed;","eosio::time_point::from_iso_str","eosio::time_point::oper","eosio::time_point::operator!=","eosio::time_point::operator+","eosio::time_point::operator+=","eosio::time_point::operator==","eosio::time_point::operator>","eosio::time_point::operator>=","eosio::time_point::sec_since_epoch","eosio::time_point::time_point","eosio::time_point::time_since_epoch","eosio::time_point_sec","eosio::time_point_sec)","eosio::time_point_sec,","eosio::time_point_sec::maximum","eosio::time_point_sec::min","eosio::time_point_sec::oper","eosio::time_point_sec::operator!=","eosio::time_point_sec::operator+","eosio::time_point_sec::operator+=","eosio::time_point_sec::operator=","eosio::time_point_sec::operator==","eosio::time_point_sec::operator>","eosio::time_point_sec::operator>=","eosio::time_point_sec::sec_since_epoch","eosio::time_point_sec::time_point_sec","eosio::time_point_sec::utc_seconds;","eosio::transact","eosio::transaction::actions;","eosio::transaction::context_free_actions;","eosio::transaction::send","eosio::transaction::transact","eosio::transaction::transaction_extensions;","eosio::transaction_head","eosio::transaction_header::delay_sec;","eosio::transaction_header::expiration;","eosio::transaction_header::max_cpu_usage_ms;","eosio::transaction_header::net_usage_words;","eosio::transaction_header::ref_block_num;","eosio::transaction_header::ref_block_prefix;","eosio::transaction_header::transaction_head","eosio::unpack","eosio::unpack_action_data","eosio;","eosio_abi","eosio_abi(","eosio_abi;","eosio_abiconveni","eosio_api","eosio_api;","eosio_api_cal","eosio_api_call;","eosio_assert","eosio_assert(1","eosio_assert(addresses.get_code()","eosio_assert(end_itr","eosio_assert(iterator_to(user)","eosio_assert(itr","eosio_assert(len","eosio_assert(user.first_nam","eosio_assert_cod","eosio_assert_messag","eosio_exit","eosio_exit(0);","eosio_exit(1);","eosio_exit(2);","eosio_exit(3);","eosio_print(tm);","eosiolib","eosiolib.cpp","eosiolib.cpp::calloc","eosiolib.cpp::fre","eosiolib.cpp::malloc","eosiolib.cpp::realloc","eosiolib.cpp::sbrk","eosiolib/","eosiorpc","eosiowasmtoolchain","eoslib_reflect","eoslib_reflect;","eoslib_reflect_base_member_count","eoslib_reflect_base_member_count;","eoslib_reflect_deriv","eoslib_reflect_derived;","eoslib_reflect_derived_impl","eoslib_reflect_derived_impl;","eoslib_reflect_derived_impl_ext","eoslib_reflect_derived_impl_ext;","eoslib_reflect_derived_impl_inlin","eoslib_reflect_derived_impl_inline;","eoslib_reflect_derived_templ","eoslib_reflect_derived_template;","eoslib_reflect_derived_templateperform","eoslib_reflect_derivedspeci","eoslib_reflect_empti","eoslib_reflect_empty;","eoslib_reflect_emptyperform","eoslib_reflect_fwd","eoslib_reflect_fwd;","eoslib_reflect_fwdperform","eoslib_reflect_impl","eoslib_reflect_impl;","eoslib_reflect_member_count","eoslib_reflect_member_count;","eoslib_reflect_member_op","eoslib_reflect_member_op;","eoslib_reflect_templ","eoslib_reflect_template;","eoslib_reflect_templateperform","eoslib_reflect_visit2_bas","eoslib_reflect_visit2_base;","eoslib_reflect_visit2_memb","eoslib_reflect_visit2_member;","eoslib_reflect_visit_bas","eoslib_reflect_visit_base;","eoslib_reflect_visit_baseeosio","eoslib_reflect_visit_memb","eoslib_reflect_visit_member;","eoslib_reflectspeci","eoslib_seri","eoslib_serialize(","eoslib_serialize;","eoslib_serialize_deriv","eoslib_serialize_derived;","eoslib_serialize_deriveddefin","eoslib_serializedefin","epoch","epoch)","equal","equival","eras","error","error_msg","establish","etc.)","evalu","even","exactli","exampl","example:","examples:","exce","except","exceptions:","execut","execute_act","exist","exist\");","exist**","exist,","exist.","exists,","exists.","exit","exp","exp_mem,","expand_memori","expect","experimental,","expir","expiration();","explain","explicit","extend","extended_asset","extended_asset::extended_asset","extended_asset::get_extended_symbol","extended_symbol","extended_symbol::contract","extended_symbol::extended_symbol","extensions_typ","extract_secondary_key","extractor","f","f)","factor","factor.","fail","fail.","failur","falign","fall","fals","false)","fast","favor","fcoroutin","featur","feature.","fee_per_length","fee_schedul","few","field","field.","file","file.","file:","fill","final","finally,","find","finlin","fire.","first","first_name;","fix","fixed64","fixed_divid","fixed_divide(131313,","fixed_key","fixed_key.hpp","fixed_key::_data","fixed_key::arr","fixed_key::arr_itr","fixed_key::bool_pack","fixed_key::fixed_key","fixed_key::num_word","fixed_key::oper","fixed_key::operator!=","fixed_key::operator==","fixed_key::operator>","fixed_key::padded_byt","fixed_key::set_from_word_sequ","fixed_point","fixed_point128","fixed_point128&","fixed_point128,64,32","fixed_point128.","fixed_point128::fixed_point128","fixed_point32","fixed_point32&","fixed_point32(131313)","fixed_point32(2323)","fixed_point32.","fixed_point32::fixed_point32","fixed_point32qr)?q:qr","fixed_point64","fixed_point64&","fixed_point64(131313)","fixed_point64(2323)","fixed_point64.","fixed_point64::fixed_point64","fixed_point64::frac_part","fixed_point64::int_part","fixed_point64::operator/","fixed_point64::v","fixed_point64qr)?q:qr","fixedpoint","fixedpoint.hpp","flag","flat","flight","float","float)","float.","flow","fmerg","fno","folder.","follow","for.","forc","form","format","forward","fot","found","found\");","found,","found.","frac_part","fraction","free","friend","from,","from.","from_current_act","from_iso_str","front.\");","frozen","fstack","fstrict","full","fullpath.","func","func)","function","functions.","g","gener","get","get_account","get_account_creation_tim","get_act","get_active_produc","get_active_producers(producers,","get_bal","get_blockchain_paramet","get_blockchain_parameters_pack","get_cod","get_context_free_data","get_extended_symbol","get_index","get_nam","get_or_cr","get_or_default","get_permission_last_us","get_resource_limit","get_scop","get_secondary()","get_secondary_1()","get_secondary_2()","get_secondary_3()","get_secondary_4()","get_secondary_5()","get_self","get_suppli","git","give","given","global","go","goe","greater","group","guid","h","h)","ha","ha,","handler","handler,","handler.","hard","has_auth","hash","hash\"","hash\");","hash)","hash,","hash.","hash;","have","hb","hb)","header","heap_end","heap_end)","held","held.","hello","help","helper","henc","here","heurist","hexidecim","hi","hi,","hidden","hierarchi","high","highest","him.\");","hint","hold","hour","however,","http","https://github.com/eosio/eosio.wasmsdk","i)","i,","i.","i.e.","i=","id","id)","id,","id.","ideal","identifi","idx,","if(wasm_root","ignor","implement","implicitly)","in.","in/","in/eosio.cdt","in/eosio.cdt/","in/eosio.cdt/librari","in/eosio.cdt/libraries/","in/eosio.cdt/libraries/eosiolib","in/eosio.cdt/libraries/eosiolib/","in/eosio.cdt/libraries/eosiolib/action.h","in/eosio.cdt/libraries/eosiolib/action.hpp","in/eosio.cdt/libraries/eosiolib/asset.hpp","in/eosio.cdt/libraries/eosiolib/chain.h","in/eosio.cdt/libraries/eosiolib/compiler\\_builtins.h","in/eosio.cdt/libraries/eosiolib/contract.hpp","in/eosio.cdt/libraries/eosiolib/crypto.h","in/eosio.cdt/libraries/eosiolib/currency.hpp","in/eosio.cdt/libraries/eosiolib/datastream.hpp","in/eosio.cdt/libraries/eosiolib/db.h","in/eosio.cdt/libraries/eosiolib/dispatcher.hpp","in/eosio.cdt/libraries/eosiolib/eosio.hpp","in/eosio.cdt/libraries/eosiolib/eosiolib.cpp","in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp","in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp","in/eosio.cdt/libraries/eosiolib/memory.h","in/eosio.cdt/libraries/eosiolib/memory.hpp","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","in/eosio.cdt/libraries/eosiolib/optional.hpp","in/eosio.cdt/libraries/eosiolib/permission.h","in/eosio.cdt/libraries/eosiolib/permission.hpp","in/eosio.cdt/libraries/eosiolib/print.h","in/eosio.cdt/libraries/eosiolib/print.hpp","in/eosio.cdt/libraries/eosiolib/privileged.h","in/eosio.cdt/libraries/eosiolib/privileged.hpp","in/eosio.cdt/libraries/eosiolib/producer\\_schedule.hpp","in/eosio.cdt/libraries/eosiolib/public\\_key.hpp","in/eosio.cdt/libraries/eosiolib/reflect.hpp","in/eosio.cdt/libraries/eosiolib/serialize.hpp","in/eosio.cdt/libraries/eosiolib/singleton.hpp","in/eosio.cdt/libraries/eosiolib/stdlib.hpp","in/eosio.cdt/libraries/eosiolib/symbol.hpp","in/eosio.cdt/libraries/eosiolib/system.h","in/eosio.cdt/libraries/eosiolib/time.hpp","in/eosio.cdt/libraries/eosiolib/transaction.h","in/eosio.cdt/libraries/eosiolib/transaction.hpp","in/eosio.cdt/libraries/eosiolib/types.h","in/eosio.cdt/libraries/eosiolib/types.hpp","in/eosio.cdt/libraries/eosiolib/varint.hpp","in/eosio.cdt/libraries/eosiolib/vector.hpp","inabl","incident","incidentals.","includ","include(eosiowasmtoolchain)","include=","incom","incomplete.","increas","increment","incrementing,","indeterministic,","index","index)","index,","index.","index;","index_nam","index_numb","index_table_nam","indexed_bi","indexnam","indexname,","indic","indices.","indices_typ","inequ","inflight","inform","inherit","init","init_s","inita","initc","initi","inlin","inline_action_send","inline_action_sender2","inline_action_sender2;","inline_action_sender3","inline_action_sender3;","inline_action_sender;","inline_dispatch","inline_dispatcher<","inline_transf","input","inqqual","inqual","insid","inspect","instal","instanc","instanti","instead","int","int.","int128","int128_t","int128_t,","int128_t.","int32_t","int32_t.","int64\\_t","int64_max)","int64_t","int64_t.","int_part","intc","integ","integer.","integers)","integers.","intend","interact","interfac","intern","interpret","interv","intrins","intrinsics.","introduct","invalid","invalid.","invert","iostream","iostream&","iostream.","irreversible,","irrreversible.","is_account","is_alloc","is_amount_within_rang","is_capacity_remain","is_enum","is_frozen","is_in_heap","is_init","is_point","is_primit","is_priv","is_priv)","is_privileg","is_reflect","is_valid","is_valid_symbol","issu","issuance,","issue_curr","issuer","issuer_can_freez","issuer_can_recal","issuer_can_whitelist","isysroot=","it'","item","item_ptr","iter","iterator\");","iterator)","iterator,","iterator.","iterator_to","itr","itr)","itr++;","itr,","itr_prev","itself.","k","k1","key","key\"","key\")","key,","key.","key256","key256.","key;","keys)","keys,","kong\";","l","l,","l=","la","la,","lambda","languag","large_int(","large_int(87654323456);","last","last_name;","lb","lb,","ld","ld)","ld,","left","left,","left.","len","len)","len==0","length","length,","length;","less","less<","letters,","level","level)","levels.","lexicograph","lh","lhs,","librari","libraries/","licens","lifetim","like","limit","link","linker","linker)","list","list(append","lld","llvm","llvm,","lo","lo,","load_object_by_primary_iter","locat","location.","lock","log/print","logic","long","long,","look","lookup","low","lower","lower_bound","lowerbound","lowercas","lowest","lto","lui","m","m)","macro","macro,","macro.","make","make_traits_for_arithmetic_secondary_key","make_traits_for_arithmetic_secondary_key;","malloc","malloc(),","malloc_from_fre","mallocnamespac","manag","mani","manual","map","map.","mark","mark_alloc","mark_fre","match","match\");","match.\");","mathemat","max","max_amount","max_amountmaximum","max_authority_depth","max_authority_depthmaximum","max_block_cpu_usag","max_block_net_usag","max_cpu_usage_m","max_cpu_usage_msnumb","max_inline_action_depth","max_inline_action_depthmaximum","max_inline_action_s","max_inline_action_sizemaximum","max_stack_buffer_s","max_suppli","max_transaction_cpu_usag","max_transaction_delay","max_transaction_lifetim","max_transaction_lifetimemaximum","max_transaction_net_usag","maximum","maximum_suppli","mean","mem_heap,","member","member:","memo","memori","memory,","memory.","memory.h","memory.hpp","memory.hpp::calloc","memory.hpp::fre","memory.hpp::malloc","memory.hpp::realloc","memory.hpp::sbrk","memory_heap","memory_manag","memory_manager::_active_free_heap","memory_manager::_active_heap","memory_manager::_alloc_memory_mask","memory_manager::_available_heap","memory_manager::_heaps_actual_s","memory_manager::_heaps_s","memory_manager::_initial_heap","memory_manager::_initial_heap_s","memory_manager::_mem_block","memory_manager::_rem_mem_block_mask","memory_manager::_size_mark","memory_manager::adjust_to_mem_block","memory_manager::memori","memory_manager::memory::_heap","memory_manager::memory::_heap_s","memory_manager::memory::_offset","memory_manager::memory::buffer_ptr","memory_manager::memory::buffer_ptr::_heap_end","memory_manager::memory::buffer_ptr::_ptr","memory_manager::memory::buffer_ptr::_s","memory_manager::memory::buffer_ptr::buffer_ptr","memory_manager::memory::buffer_ptr::is_alloc","memory_manager::memory::buffer_ptr::mark_alloc","memory_manager::memory::buffer_ptr::mark_fre","memory_manager::memory::buffer_ptr::merge_contigu","memory_manager::memory::buffer_ptr::merge_contiguous_if_avail","memory_manager::memory::buffer_ptr::next_ptr","memory_manager::memory::buffer_ptr::s","memory_manager::memory::cleanup_remain","memory_manager::memory::expand_memori","memory_manager::memory::fre","memory_manager::memory::init","memory_manager::memory::is_capacity_remain","memory_manager::memory::is_in_heap","memory_manager::memory::is_init","memory_manager::memory::malloc","memory_manager::memory::malloc_from_fre","memory_manager::memory::memori","memory_manager::memory::realloc_in_plac","memory_manager::memory_manag","memory_manager::next_active_heap","memory_manager::realloc","memory_manager::void","memoryapi","memoryapi::calloc","memoryapi::fre","memoryapi::malloc","memoryapi::realloc","memorycppapi","memorycppapi::calloc","memorycppapi::fre","memorycppapi::malloc","memorycppapi::realloc","merg","merge_contigu","merge_contiguous_if_avail","messag","message.","messages.","meta","meta,","meta.","method","microsecond","microseconds()","microseconds())","microseconds::_count","microseconds::count","microseconds::microsecond","microseconds::to_second","millisecond","min","min_transaction_cpu_usag","minu","minuend","minut","mit","mode","mode.","modifi","modified\");","modul","modular","modules:","modulu","more","more)","more...","move","msg","msg)","msg,","msg_len","msg_len)","msgsize","multi","multi_index","multi_index*","multi_index.hpp","multi_index::_cod","multi_index::_indic","multi_index::_items_vector","multi_index::_next_primary_key","multi_index::_scop","multi_index::available_primary_key","multi_index::const_iter","multi_index::get_index","multi_index::index","multi_index::index::_multidx","multi_index::index::begin","multi_index::index::cbegin","multi_index::index::cend","multi_index::index::const","multi_index::index::const_iter","multi_index::index::const_iterator::_idx","multi_index::index::const_iterator::const_iter","multi_index::index::const_iterator::oper","multi_index::index::crbegin","multi_index::index::crend","multi_index::index::end","multi_index::index::eras","multi_index::index::extract_secondary_key","multi_index::index::find","multi_index::index::get_cod","multi_index::index::get_scop","multi_index::index::index","multi_index::index::numb","multi_index::index::validate_index_nam","multi_index::indices_typ","multi_index::intc","multi_index::intc::","multi_index::item","multi_index::item::__idx","multi_index::item::__it","multi_index::item::__primary_itr","multi_index::item::item","multi_index::item_ptr","multi_index::item_ptr::_item","multi_index::item_ptr::_primary_itr","multi_index::item_ptr::_primary_key","multi_index::item_ptr::item_ptr","multi_index::iterator_to","multi_index::load_object_by_primary_iter","multi_index::lower_bound","multi_index::max_stack_buffer_s","multi_index::modifi","multi_index::multi_index","multi_index::next_primary_key_tag","multi_index::rbegin","multi_index::rend","multi_index::require_find","multi_index::transform_indic","multi_index::upper_bound","multi_index::validate_table_nam","multi_index;","multiindex","multipl","multipli","myaction()","mycontract(","mycontract,","mycontract:","n","n(abcde);","n(account2),","n(account3));","n(active)","n(active))","n(alice));","n(brendan),","n(brendan);","n(charlie));","n(dan));","n(dan),","n(dan);","n)","n,","n;","name","name)","name,","name.","name::oper","name::to_str","name::trim_right_dot","name;","name_length","name_suffix","namenam","names.","namespac","nan","nan,","nativ","nearest","necessary)","need","needed.","needed_s","needed_size)","neg","negat","negative).","net","net_usage_leeway","net_usage_word","net_weight","net_weight,","never","new","newli","next","next_active_heap","next_primary_key_tag","next_ptr","non","normal","note","note,","note:","notes:","noth","notifi","notified.","now","null","nullabl","nullptr","nullptr.","num","num)","num_byt","num_bytes)","num_word","num_words()","num_words()>","number","number,","number.","number:","numer","nuse","o","o)","o3)","o=","obispo\",","obispo\";","obj","obj)","obj,","objdump","object","object'","object).","object,","object.","object\\_typ","object_typ","occur.","of:","offset","offset)","omitted)","on","onc","one.","one.\");","onerror","onerror::from_current_act","onerror::sender_id","onerror::sent_trx","onerror::unpack_sent_trx","op","opaqu","oper","operator!","operator!=","operator!=compar","operator!=equ","operator!=inequ","operator!=subtract","operator()","operator*","operator*=","operator*multipl","operator+","operator++","operator+=","operator+addit","operator,","operator.","operator/","operator/=","operator/divis","operator<","operator<<","operator<=","operator=","operator==","operator==check","operator==compar","operator==equ","operator==subtract","operator>","operator>=","operator>=great","operator>>","operator>>deseri","operator>>seri","operator>compar","operator>great","operatorcompar","operatordeseri","operatorless","operatorseri","opt=","optim","option","optional&","optional.hpp","optional::_valid","optional::_valu","optional::emplac","optional::oper","optional::operator!","optional::operator*","optional::opt","optional::ptr","optional::ref","optional::reset","optional::valid","optional::~opt","optional;","optionaltyp","optionaltype::operator!=","optionaltype::operator==","options:","order","order,","orig_ptr_s","orig_ptr_size)","origin","otherwis","otion","ouput:","out","out,","outpu","output","output.","output:","over","overhead","overhead.","overload","overview:","overwrit","own","owner","owner,","p","p)","pack","pack(...)","pack_siz","pad","padded_byt","param","paramet","parameter.","parameteris","parameters,","parameters.","parameters:","parameters`,","params)","parent","pars","part","pass","past","path","pattern","pay","payer","payer)","payer,","payload","pend","perfer","perform","perm","perm,","permiss","permission)","permission,","permission.","permission.h","permission.h::check_permission_author","permission.h::check_transaction_author","permission.h::get_account_creation_tim","permission.h::get_permission_last_us","permission.hpp","permission_level","permission_level::actor","permission_level::permiss","permission_level::permission_level","permission_level[]","permission_nam","permission_name;","permission_namenam","permissionnam","permissions,","permissions.","perms,","perms_data","perms_data,","perms_siz","perms_size)","perms_size,","pitr","pitr)","pk,","pk_valu","place","place.","plenti","po","point","point128","point32","point64","pointer","pointer.","pointers/refer","polymorph","popul","posit","possibl","possible.","post","postpass","potenti","pp","preced","preceed","preceeding.","precis","precision,","precondition,","precondition:","prefix","preprocess","preprocess,","preprocessor","prevent","previou","previous","prim","primari","primary)","primary,","primary.","primary;","primary_key","primary_key()","primit","print","print(","print()","print(current_time());","print(msgsize);","print(total);","print.h","print.h::print","print.h::printdf","print.h::printhex","print.h::printi","print.h::printi128","print.h::printn","print.h::printqf","print.h::prints_l","print.h::printsf","print.h::printui","print.h::printui128","print.hpp","print_f","print_f(\"numb","printdf","printdf(value);","printf/","printhex","printi","printi(","printi128","printi128(&large_int);","printi128(&res);","printn","printn(n(abcde));","printqf","printqf(value);","prints(\"hello","prints_l","prints_l(\"hello","printsf","printsf(value);","printui","printui(1e+18);","printui128","printui128(&large_int);","privileg","privileged.","privileged.h","privileged.h::activate_featur","privileged.h::get_blockchain_parameters_pack","privileged.h::get_resource_limit","privileged.h::is_privileg","privileged.h::set_active_produc","privileged.h::set_blockchain_parameters_pack","privileged.h::set_privileg","privileged.h::set_proposed_produc","privileged.h::set_resource_limit","privileged.hpp","privilegedapi","privilegedapi::get_blockchain_paramet","privilegedapi::set_blockchain_paramet","privilegedcapi","privilegedcapi::activate_featur","privilegedcapi::get_blockchain_parameters_pack","privilegedcapi::get_resource_limit","privilegedcapi::is_privileg","privilegedcapi::set_active_produc","privilegedcapi::set_blockchain_parameters_pack","privilegedcapi::set_privileg","privilegedcapi::set_proposed_produc","privilegedcapi::set_resource_limit","privilegedcppapi","privilegedcppapi::get_blockchain_paramet","privilegedcppapi::set_blockchain_paramet","proceed","proceeding.","process","produc","produce_key","producer.","producer\\_data","producer\\_data\\_s","producer_data","producer_data,","producer_data_s","producer_data_size)","producer_key","producer_key::block_signing_key","producer_key::producer_nam","producer_nam","producer_namenam","producer_schedul","producer_schedule.hpp","producer_schedule::produc","producer_schedule::vers","producers,","producers.","producers[21];","producerslist","producertyp","producertype::oper","product.","program","project(test_exampl","promot","proper","properli","properly\");","properti","property.","proportion","propos","protect","protector","provid","provided)","provided_delay_u","provided_key","provided_keys,","provided_permiss","provided_permissions,","ptr","ptr)","ptr,","pub","pub,","pub;","pubkey","pubkey)","pubkeys_data","pubkeys_data,","pubkeys_s","pubkeys_size,","publen","publen)","publen;","public","public:","public_key","public_key,","public_key.","public_key.hpp","public_key::data[34];","public_key::typ","publication_tim","publickeytyp","publickeytype::operator!=","publickeytype::operator==","published.","purpos","put","q","q,","qr","qr)","quadrupl","quantiti","queri","r","r)","r1","ram","ram_byt","ram_bytes,","rang","ranlib","rawng","rbegin","re","read","read,","read/skip","read/skipped.","read_action(buffer,","read_action_data","read_transact","readelf","realiti","realloc","realloc()","realloc_in_plac","reallocrealloc","reason","receiv","receiver)","receiver,","reclaimed.","recommend","record","record\");","record,","recover_key","recoveri","recurs","ref","ref_block_num","ref_block_prefix","refer","referenc","reflect","reflect.hpp","reflection.","reflector","refund","rel","relat","remain","remaining_account","remaining_accounts)","remov","removed,","rend","replac","replace_exist","report","repres","represent","representation,","request","requir","require_auth","require_auth(n(inita));","require_auth(n(initb));","require_auth2","require_find","require_read_lock","require_recipi","require_recipient(n(account1),","require_recipient(n(initc));","require_write_lock","required.","res,","reserv","reset","resid","resolut","resolv","resourc","rest","rest)","restrict","result","ret","ret,","retriev","return","return.","returns:","revers","rh","rhs)","rhs_val,","right","right)","ripemd160","ripemod160","ripemod160(","root","round","row","row)","rpc.","rule","run","s","s)","s,","s.","s;","safe","same","same)","sbrk","schedul","schedule,","schedule.","scope","scope)","scope);","scope,","scope.","scope;","scope_nam","scope_name;","scope_namenam","sdk","search","search.","sec_since_epoch","second","second)","secondari","secondary)","secondary,","secondary;","secondary_1;","secondary_2;","secondary_3;","secondary_4;","secondary_5;","secondary_extractor_typ","secondary_index_db_funct","secondary_key_trait","secondary_key_traits<","secondary_key_typ","seconds)","see","seekp","self","self):contract(self)","send","send_context_fre","send_context_free_inlin","send_def","send_inlin","send_inline_act","send_inline_action;","send_inline_actionsend","sender","sender_id","sender_id)","sender_id,","sent_trx","sequenc","sequenti","serial","serializ","serialization/.","serialize.hpp","serializecpp","serialized,","serialized\\_act","serialized_act","serialized_action,","serialized_transact","serialized_transaction,","serialuz","set","set(wasm_root","set.","set_active_produc","set_amount","set_blockchain_paramet","set_blockchain_parameters_pack","set_from_word_sequ","set_privileg","set_proposed_produc","set_resource_limit","set_time_point","sha1","sha1(","sha256","sha256(","sha512","sha512(","share","shift","shift)","shift.","show","show_precis","sig","sig,","sig;","siglen","siglen,","siglen;","sign","signatur","signature)","signature,","signature.","signature::data","signature::data[66];","signed_int","signed_int)","signed_int,","signed_int::oper","signed_int::operator!=","signed_int::operator++","signed_int::operator=","signed_int::operator==","signed_int::operator>=","signed_int::operator>>","signed_int::signed_int","signed_int::value;","signed_transaction.context_free_data[index].","similar","simpl","simul","since,","singl","singleton","singleton.hpp","singleton::_t","singleton::exist","singleton::get","singleton::get_or_cr","singleton::get_or_default","singleton::pk_valu","singleton::remov","singleton::row","singleton::row::primary_key","singleton::set","singleton::singleton","singletonnam","size","size)","size,","size.","size==0","size_t","sizeof(account_name)*21);","skip","skip(","slot","slots.","smart","smash","soon)","sort","soruc","sourc","space","special","specif","specifi","specified.","specifier)","split","stack","standard","start","start,","stat","state.","state;","statement.","static","static_cast(std::numeric_limits::max())","static_cast(std::numeric_limits::max()))","statu","std","std::aligned_storage::typ","std::array","std::arrayn","std::arrayword_t,","std::cout","std::decay::typ","std::false_typ","std::iter","std::less","std::less::operator()","std::less<","std::map","std::nullptr_t","std::out","std::reverse_iter","std::reverse_iteratorconst_iter","std::set","std::set()","std::set(),","std::setpermission_level","std::setpublic_key","std::string","std::tupl","std::unique_ptr","std::vector","std::vectorproducer_key","std;","std=","stdlib.hpp","step","still","storag","storage_typ","store","str","str)","stream","stream.","street;","strem","strequal","strict","strictli","string","string(),","string.","string_as_unsigned_64_bit","string_as_unsigned_64_bit);","string_to_nam","string_to_name()","string_to_symbol","strong","struct","struct,","struct.","structs,","structur","structure:","style","sub_bal","subtract","sudo","suffic","suitabl","sum","suppli","support","suppress","sym","sym)","symbol","symbol'","symbol)","symbol,","symbol.","symbol.hpp","symbol_nam","symbol_name_length","symbol_typ","symbol_type::is_valid","symbol_type::nam","symbol_type::name_length","symbol_type::oper","symbol_type::precis","symbol_type::print","symbol_type::symbol_typ","symbolapi","symbolapi::extended_symbol","symbolapi::is_valid","symbolapi::is_valid_symbol","symbolapi::nam","symbolapi::name_length","symbolapi::oper","symbolapi::operator!=","symbolapi::operator==","symbolapi::precis","symbolapi::print","symbolapi::string_to_symbol","symbolapi::symbol_name_length","symbolapi::symbol_typ","symbolcppapi","symbolcppapi::extended_symbol","symbolcppapi::is_valid","symbolcppapi::is_valid_symbol","symbolcppapi::nam","symbolcppapi::name_length","symbolcppapi::oper","symbolcppapi::operator!=","symbolcppapi::operator==","symbolcppapi::precis","symbolcppapi::print","symbolcppapi::string_to_symbol","symbolcppapi::symbol_name_length","symbolcppapi::symbol_typ","symbols.","symbolth","symlink","system","system.h","system.h::current_tim","system.h::eosio_assert","system.h::eosio_assert_cod","system.h::eosio_assert_messag","system.h::eosio_exit","system.h::now","systemapi","systemapi::current_tim","systemapi::eosio_assert","systemapi::eosio_assert_cod","systemapi::eosio_assert_messag","systemapi::eosio_exit","systemapi::now","systemcapi","systemcapi::current_tim","systemcapi::eosio_assert","systemcapi::eosio_assert_cod","systemcapi::eosio_assert_messag","systemcapi::eosio_exit","systemcapi::now","t","t&","t(&)","t()","t())","t)","t,","t.","tabl","table\");","table'","table(","table)","table,","table.","table1,","table_nam","table_name;","table_namenam","tablenam","tablename,","tables)","take","taken","tapo","tapos_block_num","tapos_block_num();","tapos_block_prefix","tapos_block_prefix();","target","target_block_cpu_usage_pct","target_block_net_usage_pct","tbn","tbp","tellp","templat","template,","template_arg","termin","test","test,","test.cpp","test_action(","text","theaction","through","throw","thu","time","time.","time.hpp","time;","time_point","time_point::elaps","time_point::from_iso_str","time_point::oper","time_point::operator!=","time_point::operator<","time_point::operator<=","time_point::operator==","time_point::operator>","time_point::operator>=","time_point::time_point","time_point::time_since_epoch","time_point;","time_point_sec","time_point_sec(now()+60)","time_point_sec(now()+60))","time_point_sec::maximum","time_point_sec::min","time_point_sec::oper","time_point_sec::operator+","time_point_sec::operator+=","time_point_sec::sec_since_epoch","time_point_sec::time_point_sec","time_point_sec::utc_second","time_since_epoch","times.","timestamp","timetime.","tm","to,","to.","to_second","to_str","to_time_point","todo","tokens.","tool","toolchain","toolchain,","toolchain.","tools.","top","total","total_weight_of_all_accounts)","transact","transaction.","transaction.h","transaction.h::cancel_def","transaction.h::expir","transaction.h::get_act","transaction.h::get_context_free_data","transaction.h::read_transact","transaction.h::send_def","transaction.h::tapos_block_num","transaction.h::tapos_block_prefix","transaction.h::transaction_s","transaction.hpp","transaction::act","transaction::context_free_act","transaction::send","transaction::transact","transaction::transaction_extens","transaction_extens","transaction_head","transaction_header::delay_sec","transaction_header::expir","transaction_header::max_cpu_usage_m","transaction_header::net_usage_word","transaction_header::ref_block_num","transaction_header::ref_block_prefix","transaction_header::transaction_head","transaction_id_typ","transaction_id_type;","transaction_id_typetyp","transaction_s","transactionapi","transactionapi::get_act","transactioncapi","transactioncapi::cancel_def","transactioncapi::expir","transactioncapi::get_act","transactioncapi::get_context_free_data","transactioncapi::read_transact","transactioncapi::send_def","transactioncapi::tapos_block_num","transactioncapi::tapos_block_prefix","transactioncapi::transaction_s","transactioncppapi","transactioncppapi::get_act","transactions.","transacton","transacton.","transfer","transform_indic","treat","trim_right_dot","true","true)","true,","truncat","truncated.","trx","trx,","trx_data","trx_data,","trx_size","trx_size,","ts","tunabl","tupl","tuple.","twelv","two","two.\");","type","type,","type.","type:","typedef","types,","types.","types.h","types.h::align","types.hpp","types.hpp::operator!=","types.hpp::operator==","typetyp","u","u)","u=","uint128\\_t","uint128_t","uint16_t","uint256_t","uint32_t","uint64\\_t","uint64_t","uint64_t.","uint8_t","unari","undefin","under","undetermenist","unequ","unintenti","union","uniqu","unit","unit32","unit64","unix","unpack","unpack_action_data","unpack_action_data();","unpack_sent_trx","unreach","unsign","unsigned_128_bit_int","unsigned_128_bit_int,","unsigned_64_bit_int","unsigned_64_bit_int,","unsigned_int","unsigned_int&","unsigned_int)","unsigned_int::oper","unsigned_int::operator!=","unsigned_int::operator=","unsigned_int::operator==","unsigned_int::operator>=","unsigned_int::operator>>","unsigned_int::unsigned_int","unsigned_int::valu","unsigned_int::value;","unsuccessful,","untouch","unwind","up","updat","updated.","updated;","updater)","upper","upper_bound","upperbound","us","usag","usage.","usage:","used.","user","utc_second","v","v)","v,","val","val)","val,","valid","valid()","valid().","valid.","validate_index_nam","validate_table_nam","validity.","valu","value)","value,","value.","value[50];","value_typ","valuecontain","valueintern","values.","valuevalu","valvalu","variabl","variable,","variad","varint","varint.hpp","varint32","variou","varuint32","vector","vector.","vector.hpp","vectoract","vectorpermission_level","verbos","verifi","version","versionvers","vi","via","violat","vlq","void","void(q::*)(args...)","void(t::*)(args...),","void*","vtabl","vulner","w","w=","want","warn","wasm","wasm,","wasm_root","wasm_root)","wasmsdk","way\";","webassembl","weight_typ","weight_type;","weight_typemacro","well.","where:","whether","whitelist","whose","wildcard)","with.","within","without","word","word_t","words.","work","world!","world!\");","world!\",","world!\";","world!100000000000000000087654323456abcd","world,","wrap","wrap_secondary_array_typ","wrap_secondary_array_type;","wrap_secondary_simple_typ","wrap_secondary_simple_type;","wraper","wrapper","write","write(","written","x","x.","z,","zag","zero","zig","zip","zip;","zip_index","zip_index.end(),","zip_index.find(zipnumb);","zip_index.lower_bound(zipnumb);","zip_index.upper_bound(zipnumb);","zipnumb","{","{}","|","|account_name|current_receiv","|bool|has_auth","|bool|is_account","|bool|is_privileg","|double|__trunctfdf2","|float|__trunctfsf2","|int32_t|__fixtfsi","|int32_t|check_permission_author","|int32_t|check_transaction_author","|int32_t|db_end_i64","|int32_t|db_find_i64","|int32_t|db_get_i64","|int32_t|db_idx128_end","|int32_t|db_idx128_find_primari","|int32_t|db_idx128_find_secondari","|int32_t|db_idx128_lowerbound","|int32_t|db_idx128_next","|int32_t|db_idx128_previ","|int32_t|db_idx128_stor","|int32_t|db_idx128_upperbound","|int32_t|db_idx256_end","|int32_t|db_idx256_find_primari","|int32_t|db_idx256_find_secondari","|int32_t|db_idx256_lowerbound","|int32_t|db_idx256_next","|int32_t|db_idx256_previ","|int32_t|db_idx256_stor","|int32_t|db_idx256_upperbound","|int32_t|db_idx64_end","|int32_t|db_idx64_find_primari","|int32_t|db_idx64_find_secondari","|int32_t|db_idx64_lowerbound","|int32_t|db_idx64_next","|int32_t|db_idx64_previ","|int32_t|db_idx64_stor","|int32_t|db_idx64_upperbound","|int32_t|db_idx_double_end","|int32_t|db_idx_double_find_primari","|int32_t|db_idx_double_find_secondari","|int32_t|db_idx_double_lowerbound","|int32_t|db_idx_double_next","|int32_t|db_idx_double_previ","|int32_t|db_idx_double_stor","|int32_t|db_idx_double_upperbound","|int32_t|db_idx_long_double_end","|int32_t|db_idx_long_double_find_primari","|int32_t|db_idx_long_double_find_secondari","|int32_t|db_idx_long_double_lowerbound","|int32_t|db_idx_long_double_next","|int32_t|db_idx_long_double_previ","|int32_t|db_idx_long_double_stor","|int32_t|db_idx_long_double_upperbound","|int32_t|db_lowerbound_i64","|int32_t|db_next_i64","|int32_t|db_previous_i64","|int32_t|db_store_i64","|int32_t|db_upperbound_i64","|int64_t|__fixtfdi","|int64_t|get_account_creation_tim","|int64_t|get_permission_last_us","|int64_t|set_proposed_produc","|int|__cmptf2","|int|__eqtf2","|int|__getf2","|int|__gttf2","|int|__letf2","|int|__lttf2","|int|__netf2","|int|__unordtf2","|int|cancel_def","|int|get_act","|int|get_context_free_data","|int|recover_key","|int|tapos_block_num","|int|tapos_block_prefix","|size_t|read_transact","|size_t|transaction_s","|time|expir","|type|name|","|uint32_t|__fixunstfsi","|uint32_t|action_data_s","|uint32_t|get_active_produc","|uint32_t|get_blockchain_parameters_pack","|uint32_t|now","|uint32_t|read_action_data","|uint64_t|__fixunstfdi","|uint64_t|current_tim","|uint64_t|publication_tim","|void","|void|__addtf3","|void|__ashlti3","|void|__ashrti3","|void|__break_point","|void|__divtf3","|void|__divti3","|void|__extenddftf2","|void|__extendsftf2","|void|__lshlti3","|void|__lshrti3","|void|__modti3","|void|__multf3","|void|__multi3","|void|__subtf3","|void|__udivti3","|void|__umodti3","|void|activate_featur","|void|assert_recover_key","|void|assert_ripemd160","|void|assert_sha1","|void|assert_sha256","|void|assert_sha512","|void|db_idx128_remov","|void|db_idx128_upd","|void|db_idx256_remov","|void|db_idx256_upd","|void|db_idx64_remov","|void|db_idx64_upd","|void|db_idx_double_remov","|void|db_idx_double_upd","|void|db_idx_long_double_remov","|void|db_idx_long_double_upd","|void|db_remove_i64","|void|db_update_i64","|void|eosio_assert","|void|eosio_assert_cod","|void|eosio_assert_messag","|void|eosio_exit","|void|fre","|void|get_resource_limit","|void|print","|void|printdf","|void|printhex","|void|printi","|void|printi128","|void|printn","|void|printqf","|void|prints_l","|void|printsf","|void|printui","|void|printui128","|void|require_auth","|void|require_auth2","|void|require_read_lock","|void|require_recipi","|void|require_write_lock","|void|ripemd160","|void|send_context_free_inlin","|void|send_def","|void|send_inlin","|void|set_active_produc","|void|set_blockchain_parameters_pack","|void|set_privileg","|void|set_resource_limit","|void|sha1","|void|sha256","|void|sha512","}","});","};","}],","~","~option"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"WasmSDK\nVersion : 1.1.0\nWasmSDK is a toolchain for WebAssembly (WASM).  In addition to being a general purpose WebAssembly toolchain, EOSIO specific optimizations are available to support building EOSIO smart contracts.  This new toolchain is built around Clang 7, which means that the SDK has the most currently available optimizations and analyses from LLVM, but as the WASM target is still considered experimental, some optimizations are not available or incomplete.\nNew Features from EOSIO\n\nCompile (-c) option flag will compile to a WASM-elf object file\nranlib and ar support for static libraries for WASM\n__FILE__ and __BASE_FILE__ will now only return the file name and not the fullpath. This eliminates any non-determinism from location of the compiled binary\nGlobal constructors and global destructors are now supported\neosio-cpp, eosio-cc, eosio-ld, and eosio-pp are set the core set of tools that you will interact with.\nThese are the C++ compiler, C compiler, linker and postpass tools.\n\n\nA simple CMake interface to build EOSIO smart contracts against WasmSDK\nABI generator (Coming Soon)\n\nGuided Installation\nFirst clone\n$ git clone --recursive https://github.com/eosio/eosio.wasmsdk\n$ cd eosio.wasmsdk\n\nNow run build.sh and give the core symbol for the EOSIO blockchain that intend to deploy to.\n    *build.sh will install any dependencies that are needed.\n$ ./build.sh \n\nFinally, install the build\n    *This install will install the core to /usr/local/eosio.wasmsdk and symlinks to the top level tools (compiler, ld, etc.) to /usr/local/bin\n$ sudo ./install.sh\n\nInstalled Tools\n\n\neosio-cpp\neosio-cc\neosio-ld\neosio-pp (post processing pass for WASM, automatically runs with eosio-cpp and eosio-ld)\neosio-ranlib\neosio-ar\neosio-objdump\neosio-readelf\n\nUsage\n\nTo compile an EOSIO smart contract, the perferred method is to use the template CMakeLists.txt in the examples folder.\nFor example:\n```\ncmake_minimum_required(VERSION 3.5)\nproject(test_example VERSION 1.0.0)\n\nif(WASM_ROOT STREQUAL \"\" OR NOT WASM_ROOT)\n    set(WASM_ROOT ${CMAKE_INSTALL_PREFIX})\nendif()\nlist(APPEND CMAKE_MODULE_PATH ${WASM_ROOT}/lib/cmake)\ninclude(EosioWasmToolchain)\n\nadd_executable( test test.cpp )\n\n```\n#include \nusing namespace eosio;\nclass test : public eosio::contract {\npublic:\n   using contract::contract;\n   void test_action( account_name test ) {\n   }\n};\nEOSIO_ABI( test, (test_action))\n\nSince, EosioWasmToolchain overwrites cmake to cross-compile WASM, standard cmake commands of add_executable/ add_library can then be used.  Also note, the WASM_ROOT variable, this needs to be set if you decided to install to the non-default location.\nTo manually compile source code:\nUse eosio-cpp/eosio-cc and eosio-ld as if it were clang and lld , with all includes and options specific to EOSIO and WasmSDK being baked in.\neosio-cpp\n\nOVERVIEW: eosio-cpp (Eosio C++ -> WebAssembly compiler)\nUSAGE: eosio-cpp [options]  ...\n\nOPTIONS:\n  -C                       - Include comments in preprocessed output\n  -CC                      - Include comments from within macros in preprocessed output\n  -D=              - Define  to  (or 1 if  omitted)\n  -E                       - Only run the preprocessor\n  -I=              - Add directory to include search path\n  -L=              - Add directory to library search path\n  -O=              - Optimization level s, 0-3\n  -S                       - Only run preprocess and compilation steps\n  -U=              - Undefine macro \n  -W=              - Enable the specified warning\n  -c                       - Only run preprocess, compile, and assemble steps\n  -dD                      - Print macro definitions in -E mode in addition to normal output\n  -dI                      - Print include directives in -E mode in addition to normal outpu\n  -dM                      - Print macro definitions in -E mode instead to normal output\n  -emit-ast                - Emit Clang AST files for source inputs\n  -emit-llvm               - Use the LLVM representation for assembler and object files\n  -faligned-allocation     - Enable C++17 aligned allocation functions\n  -fcoroutine-ts           - Enable support for the C++ Coroutines TS\n  -finline-functions       - Inline suitable functions\n  -finline-hint-functions  - Inline functions which are (explicitly or implicitly) marked inline\n  -fmerge-all-constants    - Allow merging of constants\n  -fno-cfl-aa              - Disable CFL Alias Analysis\n  -fno-elide-constructors  - Disable C++ copy constructor elision\n  -fno-lto                 - Disable LTO\n  -fstack-protector        - Enable stack protectors for functions potentially vulnerable to stack smashing\n  -fstack-protector-all    - Force the usage of stack protectors for all functions\n  -fstack-protector-strong - Use a strong heuristic to apply stack protectors to functions\n  -fstrict-enums           - Enable optimizations based on the strict definition of an enum's value range\n  -fstrict-return          - Always treat control flow paths that fall off the end of a non-void function as unreachable\n  -fstrict-vtable-pointers - Enable optimizations based on the strict rules for overwriting polymorphic C++ objects\n  -include=        - Include file before parsing\n  -isysroot=       - Set the system root directory (usually /)\n  -l=              - Root name of library to link\n  -lto-opt=        - LTO Optimization level (O0-O3)\n  -o=              - Write output to \n  -std=            - Language standard to compile for\n  -v                       - Show commands to run and use verbose output\n  -w                       - Suppress all warnings\n\nGeneric Options:\n\n  -help                    - Display available options (-help-hidden for more)\n  -help-list               - Display list of available options (-help-list-hidden for more)\n  -version                 - Display the version of this program\n\neosio-ld\n\nOVERVIEW: eosio-ld (WebAssembly linker)\nUSAGE: eosio-ld [options]  ...\n\nOPTIONS:\n\nGeneric Options:\n\n  -help             - Display available options (-help-hidden for more)\n  -help-list        - Display list of available options (-help-list-hidden for more)\n  -version          - Display the version of this program\n\neosio.ld options:\n\n  -L=       - Add directory to library search path\n  -fno-cfl-aa       - Disable CFL Alias Analysis\n  -fno-lto          - Disable LTO\n  -fno-post-pass    - Don't run post processing pass\n  -fno-stack-first  - Don't set the stack first in memory\n  -l=       - Root name of library to link\n  -lto-opt= - LTO Optimization level (O0-O3)\n  -o=       - Write output to \n\nTodos\n\n\nAdd ABI generation to eosio-cpp\n\nLicense\nMIT\n"},"modules.html":{"url":"modules.html","title":"Smart Contract API","keywords":"compilerbuiltinsapi contractdev actionapi actioncapi actioncppapi assetapi assetcppapi chainapi chaincapi cryptocapi consoleapi consolecapi consolecppapi cryptoapi database databasec databasecpp multiindex singleton dispatcher dispatchercpp memoryapi memorycppapi serialize datastream serializecpp symbolapi symbolcppapi systemapi privilegedapi privilegedcapi privilegedcppapi systemcapi transactionapi transactioncapi transactioncppapi types contracttype fixed_key optionaltype producertype publickeytype varint eosiorpc fixedpoint","body":"Modules\nHere is a list of all modules:\n\ncompilerbuiltinsapi Declares int128 helper builtins generated by the toolchain. \ncontractdev Introduction to writing contracts for EOS.IO. \nactionapi Defines API for for querying action and sending action. \nactioncapi Defines API for querying action and sending action. \nactioncppapi Defines type-safe C++ wrapers for querying action and sending action. \n\n\nassetapi Defines API for managing assets. \nassetcppapi Defines CPP API for managing assets. \n\n\nchainapi Defines API for querying internal chain state. \nchaincapi Defines C API for querying internal chain state. \ncryptocapi Defines C API for calculating and checking hash. \n\n\nconsoleapi Defines APIs to log/print text messages. \nconsolecapi Defnes C API to log/print text messages. \nconsolecppapi Defines C++ wrapper to log/print text messages. \n\n\ncryptoapi Defines API for calculating and checking hash. \ndatabase Defines APIs that store and retrieve data on the blockchain. \ndatabasec Defines C APIs for interfacing with the database. \ndatabasecpp Defines an interface to EOSIO database. \nmultiindex Defines EOSIO Multi Index Table. \nsingleton Defines EOSIO Singleton Table. \n\n\n\n\ndispatcher Defines functions to dispatch action to proper action handler inside a contract. \ndispatchercpp Defines C++ functions to dispatch action to proper action handler inside a contract. \n\n\nmemoryapi Defines common memory functions. \nmemorycppapi Defines common memory functions. \n\n\nserialize Defines functions to serialize and deserialize object. \ndatastream Defines data stream for reading and writing data in the form of bytes. \nserializecpp Defines C++ API to serialize and deserialize object. \n\n\nsymbolapi Defines API for managing symbols. \nsymbolcppapi Defines CPP API for managing symbols. \n\n\nsystemapi Defines API for interacting with system level intrinsics. \nprivilegedapi Defines an API for accessing configuration of the chain that can only be done by privileged accounts. \nprivilegedcapi Defines C Privileged API. \nprivilegedcppapi Defines C++ Privileged API. \n\n\nsystemcapi Defines API for interacting with system level intrinsics. \n\n\ntransactionapi Defines API for sending transactions and inline actions. \ntransactioncapi Defines API for sending transactions. \ntransactioncppapi Type-safe C++ wrappers for transaction C API. \n\n\ntypes Specifies builtin types, typedefs and aliases. \ncontracttype Defines contract type which is base class for every EOSIO contract. \nfixed_key Fixed size key sorted lexicographically for Multi Index Table. \noptionaltype Defines otional type which is similar to boost::optional. \nproducertype Defines producer type. \npublickeytype Specifies public key type. \nvarint Defines variable length integer type which provides more efficient serialization/. \n\n\n\n\neosiorpc Describes how to interface with eosd over HTTP RPC. \nfixedpoint 32,64,128,256 bits version of fixed point variables \n\n"},"group__compilerbuiltinsapi.html":{"url":"group__compilerbuiltinsapi.html","title":"Compilerbuiltinsapi","keywords":"compilerbuiltinsapi __multi3 __divti3 __udivti3 __modti3 __umodti3 __lshlti3 __lshrti3 __ashlti3 __ashrti3 __addtf3 __subtf3 __multf3 __divtf3 __eqtf2 __netf2 __getf2 __gttf2 __letf2 __lttf2 __cmptf2 __unordtf2 __extendsftf2 __extenddftf2 __fixtfdi __fixtfsi __fixunstfdi __fixunstfsi __trunctfdf2 __trunctfsf2 __break_point","body":"group compilerbuiltinsapi\nDeclares int128 helper builtins generated by the toolchain. \nfunction __multi3\nvoid compilerbuiltinsapi::__multi3 (\n    __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nMultiply two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers. \nMultiply two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of multiplication Example: \n__int128 res = 0;\n__int128 a = 100;\n__int128 b = 100;\n__multi3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 10000\n\nfunction __divti3\nvoid compilerbuiltinsapi::__divti3 (\n    __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nDivide two 128 bit integers (which are represented as two 64 bit unsigned integers) \nDivide two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of division Example: \n__int128 res = 0;\n__int128 a = 100;\n__int128 b = 100;\n__divti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\nfunction __udivti3\nvoid compilerbuiltinsapi::__udivti3 (\n    unsigned __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nDivide two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) \nDivide two 128 bit unsigned integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. Example: unsigned __int128 res = 0;\nunsigned __int128 a = 100;\nunsigned __int128 b = 100;\n__udivti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\n\n\nfunction __modti3\nvoid compilerbuiltinsapi::__modti3 (\n    __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nPerform modular arithmetic on two 128 bit integers (which are represented as two 64 bit unsigned integers) \nPerform modular arithmetic on two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of modulus Example: \n__int128 res = 0;\n__int128 a = 100;\n__int128 b = 3;\n__modti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\nfunction __umodti3\nvoid compilerbuiltinsapi::__umodti3 (\n    unsigned __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nPerform modular arithmetic on two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) \nPerform modular arithmetic on two 128 unsigned bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of modulus Example: \nunsigned __int128 res = 0;\nunsigned __int128 a = 100;\nunsigned __int128 b = 3;\n__umodti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\nfunction __lshlti3\nvoid compilerbuiltinsapi::__lshlti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform logical shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform logical shift left on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = 8;\n__lshlti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: 16\n\nfunction __lshrti3\nvoid compilerbuiltinsapi::__lshrti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform logical shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform logical shift right on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = 8;\n__lshrti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: 4\n\nfunction __ashlti3\nvoid compilerbuiltinsapi::__ashlti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform arithmetic shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform arithmetic shift left on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = 8;\n__ashlti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: 16\n\nfunction __ashrti3\nvoid compilerbuiltinsapi::__ashrti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform arithmetic shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform arithmetic shift right on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = -8;\n__ashrti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: -4\n\nfunction __addtf3\nvoid compilerbuiltinsapi::__addtf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nAdd two long doubles (which are represented as two 64 bit unsigned integers) \nAdd two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __subtf3\nvoid compilerbuiltinsapi::__subtf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nSubtract two long doubles (which are represented as two 64 bit unsigned integers) \nSubtract two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __multf3\nvoid compilerbuiltinsapi::__multf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nMultiply two long doubles (which are represented as two 64 bit unsigned integers) \nMultiply two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __divtf3\nvoid compilerbuiltinsapi::__divtf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nDivide two long doubles (which are represented as two 64 bit unsigned integers) \nDivide two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __eqtf2\nint compilerbuiltinsapi::__eqtf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck equality between two doubles (which are represented as two 64 bit unsigned integers) \nCheck equality between two doubles split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n1 if either a or b is NaN \nfunction __netf2\nint compilerbuiltinsapi::__netf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck inequality between two doubles (which are represented as two 64 bit unsigned integers) \nCheck inequality between two doubles split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b  if either a or b is NaN \nfunction __getf2\nint compilerbuiltinsapi::__getf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is greater or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is greater or equal to the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n-1 if either a or b is NaN \nfunction __gttf2\nint compilerbuiltinsapi::__gttf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is greater than the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is greater than the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n0 if either a or b is NaN \nfunction __letf2\nint compilerbuiltinsapi::__letf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is less or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is less or equal to the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n1 if either a or b is NaN \nfunction __lttf2\nint compilerbuiltinsapi::__lttf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is less than the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is less than the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n0 if either a or b is NaN \nfunction __cmptf2\nint compilerbuiltinsapi::__cmptf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCompare two doubles (the doubles are represented as two 64 bit unsigned integers) \nCompare two doubles which are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n1 if either a or b is NaN \nfunction __unordtf2\nint compilerbuiltinsapi::__unordtf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if either of the doubles is NaN, (the doubles are represented as two 64 bit unsigned integers) \nCheck if either of the doubles is NaN, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if either a or b is NaN \nReturns:\n0 if either a or b is not NaN \nfunction __extendsftf2\nvoid compilerbuiltinsapi::__extendsftf2 (\n    long double & ret,\n    float f\n)\n\nExtend float to long double. \nExtend float to long double \nParameters:\n\nret It will be replaced with the result product. \nf Input float to be extended \n\nPost\nret is replaced with the extended float \nfunction __extenddftf2\nvoid compilerbuiltinsapi::__extenddftf2 (\n    long double & ret,\n    double f\n)\n\nExtend float to long double. \nExtend double to long double \nParameters:\n\nret It will be replaced with the result product. \nf Input float to be extended \n\nPost\nret is replaced with the extended float \nfunction __fixtfdi\nint64_t compilerbuiltinsapi::__fixtfdi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 64 bit integer. \nfunction __fixtfsi\nint32_t compilerbuiltinsapi::__fixtfsi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 32 bit integer. \nfunction __fixunstfdi\nuint64_t compilerbuiltinsapi::__fixunstfdi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit unsigned integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit unsigned integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 64 bit unsigned integer. \nfunction __fixunstfsi\nuint32_t compilerbuiltinsapi::__fixunstfsi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit unsigned integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit unsigned integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 32 bit unsigned integer. \nfunction __trunctfdf2\ndouble compilerbuiltinsapi::__trunctfdf2 (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into double. \nTruncate long double (which are split as two 64 bit unsigned integers) into double \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted double \nfunction __trunctfsf2\nfloat compilerbuiltinsapi::__trunctfsf2 (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into float. \nTruncate long double (which are split as two 64 bit unsigned integers) into float \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted float \nfunction __break_point\nvoid compilerbuiltinsapi::__break_point ()\n\n"},"group__contractdev.html":{"url":"group__contractdev.html","title":"Contractdev","keywords":"contractdev eosio::fixed_key public_key signature account_permission eosio::name account_name permission_name table_name time scope_name action_name weight_type transaction_id_type block_id_type ALIGNED ALIGNED ALIGNED char_to_symbol string_to_name ALIGNED N","body":"group contractdev\nIntroduction to writing contracts for EOS.IO. \nModules\n\nAction API Defines API for for querying action and sending action. \nAsset API Defines API for managing assets. \nChain API Defines API for querying internal chain state. \nChain API Defines API for calculating and checking hash. \nDatabase API Defines APIs that store and retrieve data on the blockchain. \nDispatcher API Defines functions to dispatch action to proper action handler inside a contract. \nMemory API Defines common memory functions. \nConsole API Defines APIs to log/print text messages. \nSerialize API Defines functions to serialize and deserialize object. \nSymbol API Defines API for managing symbols. \nSystem API Defines API for interacting with system level intrinsics. \nTransaction API Defines API for sending transactions and inline actions. \nBuiltin Types Specifies builtin types, typedefs and aliases. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::fixed_key\n\n\nstruct\npublic_key\n\n\nstruct\nsignature\n\n\nstruct\naccount_permission\n\n\nstruct\neosio::name\n\n\n\n\n\n\nType\nName\n\n\n\n\nstatic constexpr char\nchar_to_symbol (char c) Converts a base32 symbol into its binary representation, used by string_to_name()\n\n\nstatic constexpr uint64_t\nstring_to_name (const char * str) Converts a base32 string to a uint64_t.\n\n\n\nDefines\ntypedef account_name\ntypedef uint64_t account_name;\n\nName of an account. \nName of an account \ntypedef permission_name\ntypedef uint64_t permission_name;\n\nName of a permission. \nName of an account \ntypedef table_name\ntypedef uint64_t table_name;\n\nName of a table. \nName of atable \ntypedef time\ntypedef uint32_t time;\n\nTime. \nTime \ntypedef scope_name\ntypedef uint64_t scope_name;\n\nName of a scope. \nName of a scope \ntypedef action_name\ntypedef uint64_t action_name;\n\nName of an action. \nName of an action \ntypedef weight_type\ntypedef uint16_t weight_type;\n\nMacro to align/overalign a type to ensure calls to intrinsics with pointers/references are properly aligned. \nMacro to align/overalign a type to ensure calls to intrinsics with pointers/references are properly aligned \ntypedef transaction_id_type\ntypedef struct checksum256 transaction_id_type;\n\nType of EOSIO Transaction Id. \nType of EOSIO Transaction Id. It is 256-bit hash \ntypedef block_id_type\ntypedef struct checksum256 block_id_type;\n\nfunction ALIGNED\nstruct contractdev::ALIGNED (\n    checksum256 \n)\n\n256-bit hash \n256-bit hash \nfunction ALIGNED\nstruct contractdev::ALIGNED (\n    checksum160 \n)\n\n160-bit hash \n160-bit hash \nfunction ALIGNED\nstruct contractdev::ALIGNED (\n    checksum512 \n)\n\n512-bit hash \n512-bit hash \nfunction char_to_symbol\nstatic constexpr char contractdev::char_to_symbol (\n    char c\n)\n\nConverts a base32 symbol into its binary representation, used by string_to_name() \nConverts a base32 symbol into its binary representation, used by string_to_name()\nParameters:\n\nc - Character to be converted \n\nReturns:\nconstexpr char - Converted character \nfunction string_to_name\nstatic constexpr uint64_t contractdev::string_to_name (\n    const char * str\n)\n\nConverts a base32 string to a uint64_t. \nConverts a base32 string to a uint64_t. This is a constexpr so that this method can be used in template arguments as well.\nParameters:\n\nstr - String representation of the name \n\nReturns:\nconstexpr uint64_t - 64-bit unsigned integer representation of the name \ndefine ALIGNED\ndefine ALIGNED;\n\ndefine N\ndefine N;\n\nUsed to generate a compile time uint64_t from the base32 encoded string interpretation of X. \nUsed to generate a compile time uint64_t from the base32 encoded string interpretation of X\nParameters:\n\nX - String representation of the name \n\nReturns:\nconstexpr uint64_t - 64-bit unsigned integer representation of the name \n"},"group__actionapi.html":{"url":"group__actionapi.html","title":"Actionapi","keywords":"actionapi eosio::permission_level eosio::action eosio::action_meta unpack_action_data require_recipient require_auth SEND_INLINE_ACTION ACTION","body":"group actionapi\nDefines API for for querying action and sending action. \nModules\n\nAction C API Defines API for querying action and sending action. \nAction C++ API Defines type-safe C++ wrapers for querying action and sending action. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::permission_level\n\n\nstruct\neosio::action\n\n\nstruct\neosio::action_meta\n\n\n\nDefines\nfunction unpack_action_data\nT actionapi::unpack_action_data ()\n\nInterpret the action body as type T. \nThis method unpacks the current action at type T.\nReturns:\nUnpacked action data casted as T.\nExample:\nstruct dummy_action {\n  char a; //1\n  unsigned long long b; //8\n  int  c; //4\n\n  EOSLIB_SERIALIZE( dummy_action, (a)(b)(c) )\n};\ndummy_action msg = unpack_action_data();\n\nfunction require_recipient\nvoid actionapi::require_recipient (\n    account_name name,\n    accounts... remaining_accounts\n)\n\nNotify an account for this action. \nAll of the listed accounts will be added to the set of accounts to be notified\nThis helper method enables you to add multiple accounts to accounts to be notified list with a single call rather than having to call the similar C API multiple times.\nNote:\naction.code is also considered as part of the set of notified accounts\nParameters:\n\nname account to be notified \nremaining_accounts accounts to be notified\n\nExample:\nrequire_recipient(N(Account1), N(Account2), N(Account3)); // throws exception if any of them not in set.\n\nfunction require_auth\nvoid actionapi::require_auth (\n    const permission_level & level\n)\n\nRequire the specified authorization for this action. \nRequire the specified authorization for this action. If this action doesn't contain the specified auth, it will fail.\nParameters:\n\nlevel - Authorization to be required \n\ndefine SEND_INLINE_ACTION\ndefine SEND_INLINE_ACTION;\n\nSend inline action. \nSend inline action\nParameters:\n\nCONTRACT - The account this action is intended for \nNAME - The name of the action \n... - The member of the action specified as (\"action_member1_name\", action_member1_value)(\"action_member2_name\", action_member2_value) \n\ndefine ACTION\ndefine ACTION;\n\nExtend a new defined action with the action meta. \nExtend a new defined action with theaction meta, so it can work with the dispatcher\nParameters:\n\nCODE - The account this action is intended for \nNAME - The name of the action \n\n"},"group__actioncapi.html":{"url":"group__actioncapi.html","title":"Actioncapi","keywords":"actioncapi read_action_data action_data_size require_recipient require_auth has_auth require_auth2 is_account send_inline send_context_free_inline require_write_lock require_read_lock publication_time current_receiver","body":"group actioncapi\nDefines API for querying action and sending action. More...\nDetailed Description\nA EOS.IO action has the following abstract structure:\nstruct action {\n  scope_name scope; // the contract defining the primary code to execute for code/type\n  action_name name; // the action to be taken\n  permission_level[] authorization; // the accounts and permission levels provided\n  bytes data; // opaque data processed by code\n};\n\nThis API enables your contract to inspect the fields on the current action and act accordingly.\nExample: \n// Assume this action is used for the following examples:\n// {\n//  \"code\": \"eos\",\n//  \"type\": \"transfer\",\n//  \"authorization\": [{ \"account\": \"inita\", \"permission\": \"active\" }],\n//  \"data\": {\n//    \"from\": \"inita\",\n//    \"to\": \"initb\",\n//    \"amount\": 1000\n//  }\n// }\n\nchar buffer[128];\nuint32_t total = read_action(buffer, 5); // buffer contains the content of the action up to 5 bytes\nprint(total); // Output: 5\n\nuint32_t msgsize = action_size();\nprint(msgsize); // Output: size of the above action's data field\n\nrequire_recipient(N(initc)); // initc account will be notified for this action\n\nrequire_auth(N(inita)); // Do nothing since inita exists in the auth list\nrequire_auth(N(initb)); // Throws an exception\n\nprint(current_time()); // Output: timestamp (in microseconds since 1970) of current block\n\nfunction read_action_data\nuint32_t actioncapi::read_action_data (\n    void * msg,\n    uint32_t len\n)\n\nCopy current action data to the specified location. \nCopy up to len bytes of current action data to the specified location\nParameters:\n\nmsg - a pointer where up to len bytes of the current action data will be copied \nlen - len of the current action data to be copied, 0 to report required size \n\nReturns:\nthe number of bytes copied to msg, or number of bytes that can be copied if len==0 passed \nPrecondition:\nmsg is a valid pointer to a range of memory at least len bytes long \nPost\nmsg is filled with packed action data \nfunction action_data_size\nuint32_t actioncapi::action_data_size ()\n\nGet the length of current action's data field. \nGet the length of the current action's data field. This method is useful for dynamically sized actions\nReturns:\nthe length of the current action's data field \nfunction require_recipient\nvoid actioncapi::require_recipient (\n    account_name name\n)\n\nAdd the specified account to set of accounts to be notified. \nAdd the specified account to set of accounts to be notified\nParameters:\n\nname - name of the account to be verified \n\nfunction require_auth\nvoid actioncapi::require_auth (\n    account_name name\n)\n\nVerify specified account exists in the set of provided auths. \nVerifies that name exists in the set of provided auths on a action. Throws if not found.\nParameters:\n\nname - name of the account to be verified \n\nfunction has_auth\nbool actioncapi::has_auth (\n    account_name name\n)\n\nVerifies that name has auth. \nVerifies that name has auth.\nParameters:\n\nname - name of the account to be verified \n\nfunction require_auth2\nvoid actioncapi::require_auth2 (\n    account_name name,\n    permission_name permission\n)\n\nVerify specified account exists in the set of provided auths. \nVerifies that name exists in the set of provided auths on a action. Throws if not found.\nParameters:\n\nname - name of the account to be verified \npermission - permission level to be verified \n\nfunction is_account\nbool actioncapi::is_account (\n    account_name name\n)\n\nfunction send_inline\nvoid actioncapi::send_inline (\n    char * serialized_action,\n    size_t size\n)\n\nSend an inline action in the context of this action's parent transaction\nParameters:\n\nserialized_action - serialized action \nsize - size of serialized action in bytes \n\nPrecondition:\nserialized\\_action is a valid pointer to an array at least size bytes long \nfunction send_context_free_inline\nvoid actioncapi::send_context_free_inline (\n    char * serialized_action,\n    size_t size\n)\n\nSend an inline context free action in the context of this action's parent transaction\nParameters:\n\nserialized_action - serialized action \nsize - size of serialized action in bytes \n\nPrecondition:\nserialized\\_action is a valid pointer to an array at least size bytes long \nfunction require_write_lock\nvoid actioncapi::require_write_lock (\n    account_name name\n)\n\nVerifies that name exists in the set of write locks held. \nVerifies that name exists in the set of write locks held on a action. Throws if not found \nParameters:\n\nname - name of the account to be verified \n\nfunction require_read_lock\nvoid actioncapi::require_read_lock (\n    account_name name\n)\n\nVerifies that name exists in the set of read locks held. \nVerifies that name exists in the set of read locks held on a action. Throws if not found \nParameters:\n\nname - name of the account to be verified \n\nfunction publication_time\nuint64_t actioncapi::publication_time ()\n\nGet the publication time. \nReturns the time in microseconds from 1970 of the publication_time \nReturns:\nthe time in microseconds from 1970 of the publication_time \nfunction current_receiver\naccount_name actioncapi::current_receiver ()\n\nGet the current receiver of the action. \nGet the current receiver of the action \nReturns:\nthe account which specifies the current receiver of the action \n"},"group__actioncppapi.html":{"url":"group__actioncppapi.html","title":"Actioncppapi","keywords":"actioncppapi eosio::permission_level eosio::action eosio::action_meta unpack_action_data require_recipient require_auth SEND_INLINE_ACTION ACTION","body":"group actioncppapi\nDefines type-safe C++ wrapers for querying action and sending action. More...\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::permission_level\n\n\nstruct\neosio::action\n\n\nstruct\neosio::action_meta\n\n\n\nDefines\nDetailed Description\nNote:\nThere are some methods from the Action C API that can be used directly from C++\nAdditional documentation for group \nfunction unpack_action_data\nT actioncppapi::unpack_action_data ()\n\nInterpret the action body as type T. \nThis method unpacks the current action at type T.\nReturns:\nUnpacked action data casted as T.\nExample:\nstruct dummy_action {\n  char a; //1\n  unsigned long long b; //8\n  int  c; //4\n\n  EOSLIB_SERIALIZE( dummy_action, (a)(b)(c) )\n};\ndummy_action msg = unpack_action_data();\n\nfunction require_recipient\nvoid actioncppapi::require_recipient (\n    account_name name,\n    accounts... remaining_accounts\n)\n\nNotify an account for this action. \nAll of the listed accounts will be added to the set of accounts to be notified\nThis helper method enables you to add multiple accounts to accounts to be notified list with a single call rather than having to call the similar C API multiple times.\nNote:\naction.code is also considered as part of the set of notified accounts\nParameters:\n\nname account to be notified \nremaining_accounts accounts to be notified\n\nExample:\nrequire_recipient(N(Account1), N(Account2), N(Account3)); // throws exception if any of them not in set.\n\nfunction require_auth\nvoid actioncppapi::require_auth (\n    const permission_level & level\n)\n\nRequire the specified authorization for this action. \nRequire the specified authorization for this action. If this action doesn't contain the specified auth, it will fail.\nParameters:\n\nlevel - Authorization to be required \n\ndefine SEND_INLINE_ACTION\ndefine SEND_INLINE_ACTION;\n\nSend inline action. \nSend inline action\nParameters:\n\nCONTRACT - The account this action is intended for \nNAME - The name of the action \n... - The member of the action specified as (\"action_member1_name\", action_member1_value)(\"action_member2_name\", action_member2_value) \n\ndefine ACTION\ndefine ACTION;\n\nExtend a new defined action with the action meta. \nExtend a new defined action with theaction meta, so it can work with the dispatcher\nParameters:\n\nCODE - The account this action is intended for \nNAME - The name of the action \n\n"},"group__assetapi.html":{"url":"group__assetapi.html","title":"Assetapi","keywords":"assetapi eosio::asset eosio::extended_asset Stores Extended","body":"group assetapi\nDefines API for managing assets. \nModules\n\nAsset CPP API Defines CPP API for managing assets. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::asset\n\n\nstruct\neosio::extended_asset\n\n\nstruct\nStores\n\n\nstruct\nExtended\n\n\n\n"},"group__assetcppapi.html":{"url":"group__assetcppapi.html","title":"Assetcppapi","keywords":"assetcppapi eosio::asset eosio::extended_asset Stores Extended","body":"group assetcppapi\nDefines CPP API for managing assets. \nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::asset\n\n\nstruct\neosio::extended_asset\n\n\nstruct\nStores\n\n\nstruct\nExtended\n\n\n\n"},"group__chainapi.html":{"url":"group__chainapi.html","title":"Chainapi","keywords":"chainapi assert_sha256 assert_sha1 assert_sha512 assert_ripemd160 sha256 sha1 sha512 ripemd160 recover_key assert_recover_key","body":"group chainapi\nDefines API for querying internal chain state. \nModules\n\nChain C API Defines C API for querying internal chain state. \nChain C API Defines C API for calculating and checking hash. \n\nfunction assert_sha256\nvoid chainapi::assert_sha256 (\n    char * data,\n    uint32_t length,\n    const checksum256 * hash\n)\n\nTests if the sha256 hash generated from data matches the provided checksum. \nTests if the sha256 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - checksum256\\* hash to compare to\n\nPrecondition:\nassert256 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha256( data, length, hash )\n//If the sha256 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha256 hash generated from data equals provided hash\");\n\nfunction assert_sha1\nvoid chainapi::assert_sha1 (\n    char * data,\n    uint32_t length,\n    const checksum160 * hash\n)\n\nTests if the sha1 hash generated from data matches the provided checksum. \nTests if the sha1 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - checksum160\\* hash to compare to\n\nPrecondition:\nsha1 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha1( data, length, hash )\n//If the sha1 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha1 hash generated from data equals provided hash\");\n\nfunction assert_sha512\nvoid chainapi::assert_sha512 (\n    char * data,\n    uint32_t length,\n    const checksum512 * hash\n)\n\nTests if the sha512 hash generated from data matches the provided checksum. \nTests if the sha512 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - checksum512\\* hash to compare to\n\nPrecondition:\nassert512 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha512( data, length, hash )\n//If the sha512 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha512 hash generated from data equals provided hash\");\n\nfunction assert_ripemd160\nvoid chainapi::assert_ripemd160 (\n    char * data,\n    uint32_t length,\n    const checksum160 * hash\n)\n\nTests if the ripemod160 hash generated from data matches the provided checksum. \nTests if the ripemod160 hash generated from data matches the provided checksum. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - checksum160\\* hash to compare to\n\nPrecondition:\nassert160 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_ripemod160( data, length, hash )\n//If the ripemod160 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"ripemod160 hash generated from data equals provided hash\");\n\nfunction sha256\nvoid chainapi::sha256 (\n    char * data,\n    uint32_t length,\n    checksum256 * hash\n)\n\nHashes data using sha256 and stores result in memory pointed to by hash. \nHashes data using sha256 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha256( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction sha1\nvoid chainapi::sha1 (\n    char * data,\n    uint32_t length,\n    checksum160 * hash\n)\n\nHashes data using sha1 and stores result in memory pointed to by hash. \nHashes data using sha1 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha1( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction sha512\nvoid chainapi::sha512 (\n    char * data,\n    uint32_t length,\n    checksum512 * hash\n)\n\nHashes data using sha512 and stores result in memory pointed to by hash. \nHashes data using sha512 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha512( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction ripemd160\nvoid chainapi::ripemd160 (\n    char * data,\n    uint32_t length,\n    checksum160 * hash\n)\n\nHashes data using ripemod160 and stores result in memory pointed to by hash. \nHashes data using ripemod160 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nripemod160( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction recover_key\nint chainapi::recover_key (\n    const checksum256 * digest,\n    const char * sig,\n    size_t siglen,\n    char * pub,\n    size_t publen\n)\n\nCalculates the public key used for a given signature and hash used to create a message. \nCalculates the public key used for a given signature and hash used to create a message. \nParameters:\n\ndigest - Hash used to create a message \nsig - Signature \nsiglen - Signature length \npub - Public key \npublen - Public key length\n\nExample:\n```\n\n\n\n### function assert\\_recover\\_key\n\n```cpp\nvoid chainapi::assert_recover_key (\n    const checksum256 * digest,\n    const char * sig,\n    size_t siglen,\n    const char * pub,\n    size_t publen\n)\n\nTests a given public key with the generated key from digest and the signature. \nTests a given public key with the generated key from digest and the signature. \nParameters:\n\ndigest - What the key will be generated from \nsig - Signature \nsiglen - Signature length \npub - Public key \npublen - Public key length\n\nPrecondition:\nassert recovery key of pub equals the key generated from the digest parameter \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum digest;\nchar sig;\nsize_t siglen;\nchar pub;\nsize_t publen;\nassert_recover_key( digest, sig, siglen, pub, publen )\n// If the given public key does not match with the generated key from digest and the signature, anything below will never fire.\neosio::print(\"pub key matches the pub key generated from digest\");\n\n"},"group__chaincapi.html":{"url":"group__chaincapi.html","title":"Chaincapi","keywords":"chaincapi get_active_producers","body":"group chaincapi\nDefines C API for querying internal chain state. \nfunction get_active_producers\nuint32_t chaincapi::get_active_producers (\n    account_name * producers,\n    uint32_t datalen\n)\n\nGets the set of active producers. \nGets the set of active producers. \nParameters:\n\nproducers - Pointer to a buffer of account names \ndatalen - Byte length of buffer, when passed 0 will return the size required to store full output.\n\nReturns:\nuint32_t - Number of bytes actually populated \nPrecondition:\nproducers is a pointer to a range of memory at least datalen bytes long \nPost\nthe passed in producers pointer gets the array of active producers.\nExample:\naccount_name producers[21];\nuint32_t bytes_populated = get_active_producers(producers, sizeof(account_name)*21);\n\n"},"group__cryptocapi.html":{"url":"group__cryptocapi.html","title":"Cryptocapi","keywords":"cryptocapi assert_sha256 assert_sha1 assert_sha512 assert_ripemd160 sha256 sha1 sha512 ripemd160 recover_key assert_recover_key","body":"group cryptocapi\nDefines C API for calculating and checking hash. \nfunction assert_sha256\nvoid cryptocapi::assert_sha256 (\n    char * data,\n    uint32_t length,\n    const checksum256 * hash\n)\n\nTests if the sha256 hash generated from data matches the provided checksum. \nTests if the sha256 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - checksum256\\* hash to compare to\n\nPrecondition:\nassert256 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha256( data, length, hash )\n//If the sha256 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha256 hash generated from data equals provided hash\");\n\nfunction assert_sha1\nvoid cryptocapi::assert_sha1 (\n    char * data,\n    uint32_t length,\n    const checksum160 * hash\n)\n\nTests if the sha1 hash generated from data matches the provided checksum. \nTests if the sha1 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - checksum160\\* hash to compare to\n\nPrecondition:\nsha1 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha1( data, length, hash )\n//If the sha1 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha1 hash generated from data equals provided hash\");\n\nfunction assert_sha512\nvoid cryptocapi::assert_sha512 (\n    char * data,\n    uint32_t length,\n    const checksum512 * hash\n)\n\nTests if the sha512 hash generated from data matches the provided checksum. \nTests if the sha512 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - checksum512\\* hash to compare to\n\nPrecondition:\nassert512 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha512( data, length, hash )\n//If the sha512 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha512 hash generated from data equals provided hash\");\n\nfunction assert_ripemd160\nvoid cryptocapi::assert_ripemd160 (\n    char * data,\n    uint32_t length,\n    const checksum160 * hash\n)\n\nTests if the ripemod160 hash generated from data matches the provided checksum. \nTests if the ripemod160 hash generated from data matches the provided checksum. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - checksum160\\* hash to compare to\n\nPrecondition:\nassert160 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_ripemod160( data, length, hash )\n//If the ripemod160 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"ripemod160 hash generated from data equals provided hash\");\n\nfunction sha256\nvoid cryptocapi::sha256 (\n    char * data,\n    uint32_t length,\n    checksum256 * hash\n)\n\nHashes data using sha256 and stores result in memory pointed to by hash. \nHashes data using sha256 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha256( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction sha1\nvoid cryptocapi::sha1 (\n    char * data,\n    uint32_t length,\n    checksum160 * hash\n)\n\nHashes data using sha1 and stores result in memory pointed to by hash. \nHashes data using sha1 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha1( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction sha512\nvoid cryptocapi::sha512 (\n    char * data,\n    uint32_t length,\n    checksum512 * hash\n)\n\nHashes data using sha512 and stores result in memory pointed to by hash. \nHashes data using sha512 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha512( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction ripemd160\nvoid cryptocapi::ripemd160 (\n    char * data,\n    uint32_t length,\n    checksum160 * hash\n)\n\nHashes data using ripemod160 and stores result in memory pointed to by hash. \nHashes data using ripemod160 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nripemod160( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction recover_key\nint cryptocapi::recover_key (\n    const checksum256 * digest,\n    const char * sig,\n    size_t siglen,\n    char * pub,\n    size_t publen\n)\n\nCalculates the public key used for a given signature and hash used to create a message. \nCalculates the public key used for a given signature and hash used to create a message. \nParameters:\n\ndigest - Hash used to create a message \nsig - Signature \nsiglen - Signature length \npub - Public key \npublen - Public key length\n\nExample:\n```\n\n\n\n### function assert\\_recover\\_key\n\n```cpp\nvoid cryptocapi::assert_recover_key (\n    const checksum256 * digest,\n    const char * sig,\n    size_t siglen,\n    const char * pub,\n    size_t publen\n)\n\nTests a given public key with the generated key from digest and the signature. \nTests a given public key with the generated key from digest and the signature. \nParameters:\n\ndigest - What the key will be generated from \nsig - Signature \nsiglen - Signature length \npub - Public key \npublen - Public key length\n\nPrecondition:\nassert recovery key of pub equals the key generated from the digest parameter \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum digest;\nchar sig;\nsize_t siglen;\nchar pub;\nsize_t publen;\nassert_recover_key( digest, sig, siglen, pub, publen )\n// If the given public key does not match with the generated key from digest and the signature, anything below will never fire.\neosio::print(\"pub key matches the pub key generated from digest\");\n\n"},"group__consoleapi.html":{"url":"group__consoleapi.html","title":"Consoleapi","keywords":"consoleapi eosio::iostream cout print_f print operator<<","body":"group consoleapi\nDefines APIs to log/print text messages. \nModules\n\nConsole C API Defnes C API to log/print text messages. \nConsole C++ API Defines C++ wrapper to log/print text messages. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::iostream\n\n\n\nVariables\n\n\n\nType\nName\n\n\n\n\nstatic iostream\ncout\n\n\n\nvariable cout\niostream eosio::cout;\n\nfunction print_f\nvoid consoleapi::print_f (\n    const char * s,\n    Arg val,\n    Args... rest\n)\n\nPrints formatted string. \nPrints formatted string. It behaves similar to C printf/\nTemplate parameters:\n\nArg - Type of the value used to replace the format specifier \nArgs - Type of the value used to replace the format specifier \n\nParameters:\n\ns - Null terminated string with to be printed (it can contains format specifier) \nval - The value used to replace the format specifier \nrest - The values used to replace the format specifier\n\nExample: \nprint_f(\"Number of apples: %\", 10);\n\nfunction print\nvoid consoleapi::print (\n    Arg && a,\n    Args &&... args\n)\n\nPrint out value / list of values. \nPrint out value / list of values \nParameters:\n\na - The value to be printed \nargs - The other values to be printed\n\nExample:\nconst char *s = \"Hello World!\";\nuint64_t unsigned_64_bit_int = 1e+18;\nuint128_t unsigned_128_bit_int (87654323456);\nuint64_t string_as_unsigned_64_bit = N(abcde);\nprint(s , unsigned_64_bit_int, unsigned_128_bit_int, string_as_unsigned_64_bit);\n// Ouput: Hello World!100000000000000000087654323456abcde\n\nfunction operator\niostream & consoleapi::operator\nOverload c++ iostream. \nOverload c++ iostream \nParameters:\n\nout - Output strem \nv - The value to be printed \n\nReturns:\niostream& - Reference to the input output stream\nExample:\nconst char *s = \"Hello World!\";\nuint64_t unsigned_64_bit_int = 1e+18;\nuint128_t unsigned_128_bit_int (87654323456);\nuint64_t string_as_unsigned_64_bit = N(abcde);\nstd::out \n"},"group__consolecapi.html":{"url":"group__consolecapi.html","title":"Consolecapi","keywords":"consolecapi prints prints_l printi printui printi128 printui128 printsf printdf printqf printn printhex","body":"group consolecapi\nDefnes C API to log/print text messages. \nfunction prints\nvoid consolecapi::prints (\n    const char * cstr\n)\n\nPrints string. \nPrints string \nParameters:\n\ncstr - a null terminated string\n\nExample:\nprints(\"Hello World!\"); // Output: Hello World!\n\nfunction prints_l\nvoid consolecapi::prints_l (\n    const char * cstr,\n    uint32_t len\n)\n\nPrints string. \nPrints string up to given length \nParameters:\n\ncstr - pointer to string \nlen - len of string to be printed\n\nExample:\nprints_l(\"Hello World!\", 5); // Output: Hello\n\nfunction printi\nvoid consolecapi::printi (\n    int64_t value\n)\n\nPrints value as a 64 bit signed integer. \nPrints value as a 64 bit signed integer \nParameters:\n\nvalue of 64 bit signed integer to be printed\n\nExample:\nprinti(-1e+18); // Output: -1000000000000000000\n\nfunction printui\nvoid consolecapi::printui (\n    uint64_t value\n)\n\nPrints value as a 64 bit unsigned integer. \nPrints value as a 64 bit unsigned integer \nParameters:\n\nvalue of 64 bit unsigned integer to be printed\n\nExample:\nprintui(1e+18); // Output: 1000000000000000000\n\nfunction printi128\nvoid consolecapi::printi128 (\n    const int128_t * value\n)\n\nPrints value as a 128 bit signed integer. \nPrints value as a 128 bit signed integer \nParameters:\n\nvalue is a pointer to the 128 bit signed integer to be printed\n\nExample:\nint128_t large_int(-87654323456);\nprinti128(&large_int); // Output: -87654323456\n\nfunction printui128\nvoid consolecapi::printui128 (\n    const uint128_t * value\n)\n\nPrints value as a 128 bit unsigned integer. \nPrints value as a 128 bit unsigned integer \nParameters:\n\nvalue is a pointer to the 128 bit unsigned integer to be printed\n\nExample:\nuint128_t large_int(87654323456);\nprintui128(&large_int); // Output: 87654323456\n\nfunction printsf\nvoid consolecapi::printsf (\n    float value\n)\n\nPrints value as single-precision floating point number (i.e. float) \nPrints value as single-precision floating point number \nParameters:\n\nvalue of float to be printed\n\nExample:\nfloat value = 5.0 / 10.0;\nprintsf(value); // Output: 0.5\n\nfunction printdf\nvoid consolecapi::printdf (\n    double value\n)\n\nPrints value as double-precision floating point number (i.e. double) \nPrints value as double-precision floating point number \nParameters:\n\nvalue of double to be printed\n\nExample:\ndouble value = 5.0 / 10.0;\nprintdf(value); // Output: 0.5\n\nfunction printqf\nvoid consolecapi::printqf (\n    const long double * value\n)\n\nPrints value as quadruple-precision floating point number (i.e. long double) \nPrints value as quadruple-precision floating point number \nParameters:\n\nvalue is a pointer to the long double to be printed\n\nExample:\nlong double value = 5.0 / 10.0;\nprintqf(value); // Output: 0.5\n\nfunction printn\nvoid consolecapi::printn (\n    uint64_t name\n)\n\nPrints a 64 bit names as base32 encoded string. \nPrints a 64 bit names as base32 encoded string \nParameters:\n\nname - 64 bit name to be printed\n\nExample: \nprintn(N(abcde)); // Output: abcde\n\nfunction printhex\nvoid consolecapi::printhex (\n    const void * data,\n    uint32_t datalen\n)\n\n"},"group__consolecppapi.html":{"url":"group__consolecppapi.html","title":"Consolecppapi","keywords":"consolecppapi eosio::iostream cout print_f print operator<<","body":"group consolecppapi\nDefines C++ wrapper to log/print text messages. More...\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::iostream\n\n\n\nVariables\n\n\n\nType\nName\n\n\n\n\nstatic iostream\ncout\n\n\n\nDetailed Description\nThis API uses C++ variadic templates and type detection to make it easy to print any native type. You can even overload the `` method for your own custom types.\nExample: \nprint( \"hello world, this is a number: \", 5 );\n\nvariable cout\niostream eosio::cout;\n\nfunction print_f\nvoid consolecppapi::print_f (\n    const char * s,\n    Arg val,\n    Args... rest\n)\n\nPrints formatted string. \nPrints formatted string. It behaves similar to C printf/\nTemplate parameters:\n\nArg - Type of the value used to replace the format specifier \nArgs - Type of the value used to replace the format specifier \n\nParameters:\n\ns - Null terminated string with to be printed (it can contains format specifier) \nval - The value used to replace the format specifier \nrest - The values used to replace the format specifier\n\nExample: \nprint_f(\"Number of apples: %\", 10);\n\nfunction print\nvoid consolecppapi::print (\n    Arg && a,\n    Args &&... args\n)\n\nPrint out value / list of values. \nPrint out value / list of values \nParameters:\n\na - The value to be printed \nargs - The other values to be printed\n\nExample:\nconst char *s = \"Hello World!\";\nuint64_t unsigned_64_bit_int = 1e+18;\nuint128_t unsigned_128_bit_int (87654323456);\nuint64_t string_as_unsigned_64_bit = N(abcde);\nprint(s , unsigned_64_bit_int, unsigned_128_bit_int, string_as_unsigned_64_bit);\n// Ouput: Hello World!100000000000000000087654323456abcde\n\nfunction operator\niostream & consolecppapi::operator\nOverload c++ iostream. \nOverload c++ iostream \nParameters:\n\nout - Output strem \nv - The value to be printed \n\nReturns:\niostream& - Reference to the input output stream\nExample:\nconst char *s = \"Hello World!\";\nuint64_t unsigned_64_bit_int = 1e+18;\nuint128_t unsigned_128_bit_int (87654323456);\nuint64_t string_as_unsigned_64_bit = N(abcde);\nstd::out \n"},"group__cryptoapi.html":{"url":"group__cryptoapi.html","title":"Cryptoapi","keywords":"cryptoapi","body":"group cryptoapi\nDefines API for calculating and checking hash. \n"},"group__database.html":{"url":"group__database.html","title":"Database","keywords":"database db_store_i64 db_update_i64 db_remove_i64 db_get_i64 db_next_i64 db_previous_i64 db_find_i64 db_lowerbound_i64 db_upperbound_i64 db_end_i64 db_idx64_store db_idx64_update db_idx64_remove db_idx64_next db_idx64_previous db_idx64_find_primary db_idx64_find_secondary db_idx64_lowerbound db_idx64_upperbound db_idx64_end db_idx128_store db_idx128_update db_idx128_remove db_idx128_next db_idx128_previous db_idx128_find_primary db_idx128_find_secondary db_idx128_lowerbound db_idx128_upperbound db_idx128_end db_idx256_store db_idx256_update db_idx256_remove db_idx256_next db_idx256_previous db_idx256_find_primary db_idx256_find_secondary db_idx256_lowerbound db_idx256_upperbound db_idx256_end db_idx_double_store db_idx_double_update db_idx_double_remove db_idx_double_next db_idx_double_previous db_idx_double_find_primary db_idx_double_find_secondary db_idx_double_lowerbound db_idx_double_upperbound db_idx_double_end db_idx_long_double_store db_idx_long_double_update db_idx_long_double_remove db_idx_long_double_next db_idx_long_double_previous db_idx_long_double_find_primary db_idx_long_double_find_secondary db_idx_long_double_lowerbound db_idx_long_double_upperbound db_idx_long_double_end","body":"group database\nDefines APIs that store and retrieve data on the blockchain. \nModules\n\nDatabase C++ API Defines an interface to EOSIO database. \nDatabase C API Defines C APIs for interfacing with the database. \n\nfunction db_store_i64\nint32_t database::db_store_i64 (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const void * data,\n    uint32_t len\n)\n\nStore a record in a primary 64-bit integer index table. \nStore a record in a primary 64-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - ID of the entry \ndata - Record to store \nlen - Size of data \n\nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPrecondition:\n\\*((uint64\\_t\\*)data) stores the primary key \nReturns:\niterator to the newly created table row \nPost\na new entry is created in the table \nfunction db_update_i64\nvoid database::db_update_i64 (\n    int32_t iterator,\n    account_name payer,\n    const void * data,\n    uint32_t len\n)\n\nUpdate a record in a primary 64-bit integer index table. \nUpdate a record in a primary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row containing the record to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \ndata - New updated record \nlen - Size of data \n\nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPrecondition:\n\\*((uint64\\_t\\*)data) stores the primary key \nPrecondition:\niterator points to an existing table row in the table \nPost\nthe record contained in the table row pointed to by iterator is replaced with the new updated record \nfunction db_remove_i64\nvoid database::db_remove_i64 (\n    int32_t iterator\n)\n\nRemove a record from a primary 64-bit integer index table. \nRemove a record from a primary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer\nExample:\nint32_t itr = db_find_i64(receiver, receiver, table1, N(alice));\neosio_assert(itr >= 0, \"Alice cannot be removed since she was already not found in the table\");\ndb_remove_i64(itr);\n\nfunction db_get_i64\nint32_t database::db_get_i64 (\n    int32_t iterator,\n    const void * data,\n    uint32_t len\n)\n\nGet a record in a primary 64-bit integer index table. \nGet a record in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the record to retrieve \ndata - Pointer to the buffer which will be filled with the retrieved record \nlen - Size of the buffer \n\nReturns:\nsize of the data copied into the buffer if len > 0, or size of the retrieved record if len == 0. \nPrecondition:\niterator points to an existing table row in the table \nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPost\ndata will be filled with the retrieved record (truncated to the first len bytes if necessary)\nExample:\nchar value[50];\nauto len = db_get_i64(itr, value, 0);\neosio_assert(len \nfunction db_next_i64\nint32_t database::db_next_i64 (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a primary 64-bit integer index table. \nFind the table row following the referenced table row in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched\nExample:\nint32_t charlie_itr = db_find_i64(receiver, receiver, table1, N(charlie));\n// expect nothing after charlie\nuint64_t prim = 0\nint32_t  end_itr = db_next_i64(charlie_itr, &prim);\neosio_assert(end_itr \nfunction db_previous_i64\nint32_t database::db_previous_i64 (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a primary 64-bit integer index table. \nFind the table row preceding the referenced table row in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched\nExample:\nuint64_t prim = 0;\nint32_t  itr_prev = db_previous_i64(itr, &prim);\n\nfunction db_find_i64\nint32_t database::db_find_i64 (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t id\n)\n\nFind a table row in a primary 64-bit integer index table by primary key. \nFind a table row in a primary 64-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key of the table row to look up \n\nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found\nExample:\nint itr = db_find_i64(receiver, receiver, table1, N(charlie));\n\nfunction db_lowerbound_i64\nint32_t database::db_lowerbound_i64 (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t id\n)\n\nFind the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key. \nFind the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key The table row that matches the lowerbound condition is the first table row in the table with the lowest primary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key used to determine the lowerbound \n\nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_upperbound_i64\nint32_t database::db_upperbound_i64 (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t id\n)\n\nFind the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key. \nFind the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key The table row that matches the upperbound condition is the first table row in the table with the lowest primary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key used to determine the upperbound \n\nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_end_i64\nint32_t database::db_end_i64 (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table. \nGet an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx64_store\nint32_t database::db_idx64_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const uint64_t * secondary\n)\n\nStore an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. \nStore an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary 64-bit integer index table \nfunction db_idx64_update\nvoid database::db_idx64_update (\n    int32_t iterator,\n    account_name payer,\n    const uint64_t * secondary\n)\n\nUpdate an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. \nUpdate an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx64_remove\nvoid database::db_idx64_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 64-bit integer index table. \nRemove a table row from a secondary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx64_next\nint32_t database::db_idx64_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 64-bit integer index table. \nFind the table row following the referenced table row in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx64_previous\nint32_t database::db_idx64_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 64-bit integer index table. \nFind the table row preceding the referenced table row in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx64_find_primary\nint32_t database::db_idx64_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary 64-bit integer index table by primary key. \nFind a table row in a secondary 64-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a uint64\\_t variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx64_find_secondary\nint32_t database::db_idx64_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 64-bit integer index table by secondary key. \nFind a table row in a secondary 64-bit integer index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx64_lowerbound\nint32_t database::db_idx64_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx64_upperbound\nint32_t database::db_idx64_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx64_end\nint32_t database::db_idx64_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx128_store\nint32_t database::db_idx128_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const uint128_t * secondary\n)\n\nStore an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. \nStore an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary 128-bit integer index table \nfunction db_idx128_update\nvoid database::db_idx128_update (\n    int32_t iterator,\n    account_name payer,\n    const uint128_t * secondary\n)\n\nUpdate an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. \nUpdate an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx128_remove\nvoid database::db_idx128_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 128-bit integer index table. \nRemove a table row from a secondary 128-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx128_next\nint32_t database::db_idx128_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 128-bit integer index table. \nFind the table row following the referenced table row in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx128_previous\nint32_t database::db_idx128_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 128-bit integer index table. \nFind the table row preceding the referenced table row in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx128_find_primary\nint32_t database::db_idx128_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary 128-bit integer index table by primary key. \nFind a table row in a secondary 128-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a uint128\\_t variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx128_find_secondary\nint32_t database::db_idx128_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 128-bit integer index table by secondary key. \nFind a table row in a secondary 128-bit integer index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx128_lowerbound\nint32_t database::db_idx128_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx128_upperbound\nint32_t database::db_idx128_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx128_end\nint32_t database::db_idx128_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx256_store\nint32_t database::db_idx256_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const uint128_t * data,\n    uint32_t data_len\n)\n\nStore an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table. \nStore an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \ndata - Pointer to the secondary key data stored as an array of 2 uint128\\_t integers \ndata_len - Must be set to 2 \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and the specified secondary key is created in the secondary 256-bit index table \nfunction db_idx256_update\nvoid database::db_idx256_update (\n    int32_t iterator,\n    account_name payer,\n    const uint128_t * data,\n    uint32_t data_len\n)\n\nUpdate an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table. \nUpdate an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \ndata - Pointer to the new secondary key data (which is stored as an array of 2 uint128\\_t integers) that will replace the existing one of the association \ndata_len - Must be set to 2 \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by the specified secondary key \nfunction db_idx256_remove\nvoid database::db_idx256_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 256-bit index table. \nRemove a table row from a secondary 256-bit index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx256_next\nint32_t database::db_idx256_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 256-bit index table. \nFind the table row following the referenced table row in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx256_previous\nint32_t database::db_idx256_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 256-bit index table. \nFind the table row preceding the referenced table row in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx256_find_primary\nint32_t database::db_idx256_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t primary\n)\n\nFind a table row in a secondary 128-bit integer index table by primary key. \nFind a table row in a secondary 256-bit index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the an array of 2 uint128\\_t integers which will act as the buffer to hold the retrieved secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx256_find_secondary\nint32_t database::db_idx256_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 256-bit index table by secondary key. \nFind a table row in a secondary 256-bit index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) used to lookup the table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to the specified secondary key or the end iterator of the table if the table row could not be found \nfunction db_idx256_lowerbound\nint32_t database::db_idx256_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key (uses lexicographical ordering on the 256-bit keys)\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx256_upperbound\nint32_t database::db_idx256_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key (uses lexicographical ordering on the 256-bit keys)\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) first used to determine the upperbound and which is then replaced with the secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx256_end\nint32_t database::db_idx256_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx_double_store\nint32_t database::db_idx_double_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const double * secondary\n)\n\nStore an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. \nStore an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary double-precision floating-point index table \nfunction db_idx_double_update\nvoid database::db_idx_double_update (\n    int32_t iterator,\n    account_name payer,\n    const double * secondary\n)\n\nUpdate an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. \nUpdate an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx_double_remove\nvoid database::db_idx_double_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary double-precision floating-point index table. \nRemove a table row from a secondary double-precision floating-point index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx_double_next\nint32_t database::db_idx_double_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary double-precision floating-point index table. \nFind the table row following the referenced table row in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_double_previous\nint32_t database::db_idx_double_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary double-precision floating-point index table. \nFind the table row preceding the referenced table row in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_double_find_primary\nint32_t database::db_idx_double_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    double * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary double-precision floating-point index table by primary key. \nFind a table row in a secondary double-precision floating-point index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a double variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx_double_find_secondary\nint32_t database::db_idx_double_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const double * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary double-precision floating-point index table by secondary key. \nFind a table row in a secondary double-precision floating-point index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a double variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx_double_lowerbound\nint32_t database::db_idx_double_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_double_upperbound\nint32_t database::db_idx_double_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_double_end\nint32_t database::db_idx_double_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx_long_double_store\nint32_t database::db_idx_long_double_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const long double * secondary\n)\n\nStore an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. \nStore an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary quadruple-precision floating-point index table \nfunction db_idx_long_double_update\nvoid database::db_idx_long_double_update (\n    int32_t iterator,\n    account_name payer,\n    const long double * secondary\n)\n\nUpdate an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. \nUpdate an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx_long_double_remove\nvoid database::db_idx_long_double_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary quadruple-precision floating-point index table. \nRemove a table row from a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx_long_double_next\nint32_t database::db_idx_long_double_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary quadruple-precision floating-point index table. \nFind the table row following the referenced table row in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_long_double_previous\nint32_t database::db_idx_long_double_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table. \nFind the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_long_double_find_primary\nint32_t database::db_idx_long_double_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    long double * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary quadruple-precision floating-point index table by primary key. \nFind a table row in a secondary quadruple-precision floating-point index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a long double variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_find_secondary\nint32_t database::db_idx_long_double_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const long double * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary quadruple-precision floating-point index table by secondary key. \nFind a table row in a secondary quadruple-precision floating-point index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a long double variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_lowerbound\nint32_t database::db_idx_long_double_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    long double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_upperbound\nint32_t database::db_idx_long_double_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    long double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_end\nint32_t database::db_idx_long_double_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \n"},"group__databasec.html":{"url":"group__databasec.html","title":"Databasec","keywords":"databasec db_store_i64 db_update_i64 db_remove_i64 db_get_i64 db_next_i64 db_previous_i64 db_find_i64 db_lowerbound_i64 db_upperbound_i64 db_end_i64 db_idx64_store db_idx64_update db_idx64_remove db_idx64_next db_idx64_previous db_idx64_find_primary db_idx64_find_secondary db_idx64_lowerbound db_idx64_upperbound db_idx64_end db_idx128_store db_idx128_update db_idx128_remove db_idx128_next db_idx128_previous db_idx128_find_primary db_idx128_find_secondary db_idx128_lowerbound db_idx128_upperbound db_idx128_end db_idx256_store db_idx256_update db_idx256_remove db_idx256_next db_idx256_previous db_idx256_find_primary db_idx256_find_secondary db_idx256_lowerbound db_idx256_upperbound db_idx256_end db_idx_double_store db_idx_double_update db_idx_double_remove db_idx_double_next db_idx_double_previous db_idx_double_find_primary db_idx_double_find_secondary db_idx_double_lowerbound db_idx_double_upperbound db_idx_double_end db_idx_long_double_store db_idx_long_double_update db_idx_long_double_remove db_idx_long_double_next db_idx_long_double_previous db_idx_long_double_find_primary db_idx_long_double_find_secondary db_idx_long_double_lowerbound db_idx_long_double_upperbound db_idx_long_double_end","body":"group databasec\nDefines C APIs for interfacing with the database. More...\nDetailed Description\nDatabase C API provides low level interface to EOSIO database.\nfunction db_store_i64\nint32_t databasec::db_store_i64 (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const void * data,\n    uint32_t len\n)\n\nStore a record in a primary 64-bit integer index table. \nStore a record in a primary 64-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - ID of the entry \ndata - Record to store \nlen - Size of data \n\nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPrecondition:\n\\*((uint64\\_t\\*)data) stores the primary key \nReturns:\niterator to the newly created table row \nPost\na new entry is created in the table \nfunction db_update_i64\nvoid databasec::db_update_i64 (\n    int32_t iterator,\n    account_name payer,\n    const void * data,\n    uint32_t len\n)\n\nUpdate a record in a primary 64-bit integer index table. \nUpdate a record in a primary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row containing the record to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \ndata - New updated record \nlen - Size of data \n\nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPrecondition:\n\\*((uint64\\_t\\*)data) stores the primary key \nPrecondition:\niterator points to an existing table row in the table \nPost\nthe record contained in the table row pointed to by iterator is replaced with the new updated record \nfunction db_remove_i64\nvoid databasec::db_remove_i64 (\n    int32_t iterator\n)\n\nRemove a record from a primary 64-bit integer index table. \nRemove a record from a primary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer\nExample:\nint32_t itr = db_find_i64(receiver, receiver, table1, N(alice));\neosio_assert(itr >= 0, \"Alice cannot be removed since she was already not found in the table\");\ndb_remove_i64(itr);\n\nfunction db_get_i64\nint32_t databasec::db_get_i64 (\n    int32_t iterator,\n    const void * data,\n    uint32_t len\n)\n\nGet a record in a primary 64-bit integer index table. \nGet a record in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the record to retrieve \ndata - Pointer to the buffer which will be filled with the retrieved record \nlen - Size of the buffer \n\nReturns:\nsize of the data copied into the buffer if len > 0, or size of the retrieved record if len == 0. \nPrecondition:\niterator points to an existing table row in the table \nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPost\ndata will be filled with the retrieved record (truncated to the first len bytes if necessary)\nExample:\nchar value[50];\nauto len = db_get_i64(itr, value, 0);\neosio_assert(len \nfunction db_next_i64\nint32_t databasec::db_next_i64 (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a primary 64-bit integer index table. \nFind the table row following the referenced table row in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched\nExample:\nint32_t charlie_itr = db_find_i64(receiver, receiver, table1, N(charlie));\n// expect nothing after charlie\nuint64_t prim = 0\nint32_t  end_itr = db_next_i64(charlie_itr, &prim);\neosio_assert(end_itr \nfunction db_previous_i64\nint32_t databasec::db_previous_i64 (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a primary 64-bit integer index table. \nFind the table row preceding the referenced table row in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched\nExample:\nuint64_t prim = 0;\nint32_t  itr_prev = db_previous_i64(itr, &prim);\n\nfunction db_find_i64\nint32_t databasec::db_find_i64 (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t id\n)\n\nFind a table row in a primary 64-bit integer index table by primary key. \nFind a table row in a primary 64-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key of the table row to look up \n\nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found\nExample:\nint itr = db_find_i64(receiver, receiver, table1, N(charlie));\n\nfunction db_lowerbound_i64\nint32_t databasec::db_lowerbound_i64 (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t id\n)\n\nFind the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key. \nFind the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key The table row that matches the lowerbound condition is the first table row in the table with the lowest primary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key used to determine the lowerbound \n\nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_upperbound_i64\nint32_t databasec::db_upperbound_i64 (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t id\n)\n\nFind the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key. \nFind the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key The table row that matches the upperbound condition is the first table row in the table with the lowest primary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key used to determine the upperbound \n\nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_end_i64\nint32_t databasec::db_end_i64 (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table. \nGet an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx64_store\nint32_t databasec::db_idx64_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const uint64_t * secondary\n)\n\nStore an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. \nStore an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary 64-bit integer index table \nfunction db_idx64_update\nvoid databasec::db_idx64_update (\n    int32_t iterator,\n    account_name payer,\n    const uint64_t * secondary\n)\n\nUpdate an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. \nUpdate an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx64_remove\nvoid databasec::db_idx64_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 64-bit integer index table. \nRemove a table row from a secondary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx64_next\nint32_t databasec::db_idx64_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 64-bit integer index table. \nFind the table row following the referenced table row in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx64_previous\nint32_t databasec::db_idx64_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 64-bit integer index table. \nFind the table row preceding the referenced table row in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx64_find_primary\nint32_t databasec::db_idx64_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary 64-bit integer index table by primary key. \nFind a table row in a secondary 64-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a uint64\\_t variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx64_find_secondary\nint32_t databasec::db_idx64_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 64-bit integer index table by secondary key. \nFind a table row in a secondary 64-bit integer index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx64_lowerbound\nint32_t databasec::db_idx64_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx64_upperbound\nint32_t databasec::db_idx64_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx64_end\nint32_t databasec::db_idx64_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx128_store\nint32_t databasec::db_idx128_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const uint128_t * secondary\n)\n\nStore an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. \nStore an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary 128-bit integer index table \nfunction db_idx128_update\nvoid databasec::db_idx128_update (\n    int32_t iterator,\n    account_name payer,\n    const uint128_t * secondary\n)\n\nUpdate an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. \nUpdate an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx128_remove\nvoid databasec::db_idx128_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 128-bit integer index table. \nRemove a table row from a secondary 128-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx128_next\nint32_t databasec::db_idx128_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 128-bit integer index table. \nFind the table row following the referenced table row in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx128_previous\nint32_t databasec::db_idx128_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 128-bit integer index table. \nFind the table row preceding the referenced table row in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx128_find_primary\nint32_t databasec::db_idx128_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary 128-bit integer index table by primary key. \nFind a table row in a secondary 128-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a uint128\\_t variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx128_find_secondary\nint32_t databasec::db_idx128_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 128-bit integer index table by secondary key. \nFind a table row in a secondary 128-bit integer index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx128_lowerbound\nint32_t databasec::db_idx128_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx128_upperbound\nint32_t databasec::db_idx128_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx128_end\nint32_t databasec::db_idx128_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx256_store\nint32_t databasec::db_idx256_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const uint128_t * data,\n    uint32_t data_len\n)\n\nStore an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table. \nStore an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \ndata - Pointer to the secondary key data stored as an array of 2 uint128\\_t integers \ndata_len - Must be set to 2 \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and the specified secondary key is created in the secondary 256-bit index table \nfunction db_idx256_update\nvoid databasec::db_idx256_update (\n    int32_t iterator,\n    account_name payer,\n    const uint128_t * data,\n    uint32_t data_len\n)\n\nUpdate an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table. \nUpdate an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \ndata - Pointer to the new secondary key data (which is stored as an array of 2 uint128\\_t integers) that will replace the existing one of the association \ndata_len - Must be set to 2 \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by the specified secondary key \nfunction db_idx256_remove\nvoid databasec::db_idx256_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 256-bit index table. \nRemove a table row from a secondary 256-bit index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx256_next\nint32_t databasec::db_idx256_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 256-bit index table. \nFind the table row following the referenced table row in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx256_previous\nint32_t databasec::db_idx256_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 256-bit index table. \nFind the table row preceding the referenced table row in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx256_find_primary\nint32_t databasec::db_idx256_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t primary\n)\n\nFind a table row in a secondary 128-bit integer index table by primary key. \nFind a table row in a secondary 256-bit index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the an array of 2 uint128\\_t integers which will act as the buffer to hold the retrieved secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx256_find_secondary\nint32_t databasec::db_idx256_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 256-bit index table by secondary key. \nFind a table row in a secondary 256-bit index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) used to lookup the table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to the specified secondary key or the end iterator of the table if the table row could not be found \nfunction db_idx256_lowerbound\nint32_t databasec::db_idx256_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key (uses lexicographical ordering on the 256-bit keys)\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx256_upperbound\nint32_t databasec::db_idx256_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key (uses lexicographical ordering on the 256-bit keys)\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) first used to determine the upperbound and which is then replaced with the secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx256_end\nint32_t databasec::db_idx256_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx_double_store\nint32_t databasec::db_idx_double_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const double * secondary\n)\n\nStore an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. \nStore an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary double-precision floating-point index table \nfunction db_idx_double_update\nvoid databasec::db_idx_double_update (\n    int32_t iterator,\n    account_name payer,\n    const double * secondary\n)\n\nUpdate an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. \nUpdate an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx_double_remove\nvoid databasec::db_idx_double_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary double-precision floating-point index table. \nRemove a table row from a secondary double-precision floating-point index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx_double_next\nint32_t databasec::db_idx_double_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary double-precision floating-point index table. \nFind the table row following the referenced table row in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_double_previous\nint32_t databasec::db_idx_double_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary double-precision floating-point index table. \nFind the table row preceding the referenced table row in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_double_find_primary\nint32_t databasec::db_idx_double_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    double * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary double-precision floating-point index table by primary key. \nFind a table row in a secondary double-precision floating-point index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a double variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx_double_find_secondary\nint32_t databasec::db_idx_double_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const double * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary double-precision floating-point index table by secondary key. \nFind a table row in a secondary double-precision floating-point index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a double variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx_double_lowerbound\nint32_t databasec::db_idx_double_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_double_upperbound\nint32_t databasec::db_idx_double_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_double_end\nint32_t databasec::db_idx_double_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx_long_double_store\nint32_t databasec::db_idx_long_double_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const long double * secondary\n)\n\nStore an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. \nStore an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary quadruple-precision floating-point index table \nfunction db_idx_long_double_update\nvoid databasec::db_idx_long_double_update (\n    int32_t iterator,\n    account_name payer,\n    const long double * secondary\n)\n\nUpdate an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. \nUpdate an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx_long_double_remove\nvoid databasec::db_idx_long_double_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary quadruple-precision floating-point index table. \nRemove a table row from a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx_long_double_next\nint32_t databasec::db_idx_long_double_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary quadruple-precision floating-point index table. \nFind the table row following the referenced table row in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_long_double_previous\nint32_t databasec::db_idx_long_double_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table. \nFind the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_long_double_find_primary\nint32_t databasec::db_idx_long_double_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    long double * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary quadruple-precision floating-point index table by primary key. \nFind a table row in a secondary quadruple-precision floating-point index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a long double variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_find_secondary\nint32_t databasec::db_idx_long_double_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const long double * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary quadruple-precision floating-point index table by secondary key. \nFind a table row in a secondary quadruple-precision floating-point index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a long double variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_lowerbound\nint32_t databasec::db_idx_long_double_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    long double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_upperbound\nint32_t databasec::db_idx_long_double_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    long double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_end\nint32_t databasec::db_idx_long_double_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \n"},"group__databasecpp.html":{"url":"group__databasecpp.html","title":"Databasecpp","keywords":"databasecpp eosio::singleton","body":"group databasecpp\nDefines an interface to EOSIO database. More...\nModules\n\nMulti Index Table Defines EOSIO Multi Index Table. \nSingleton Table Defines EOSIO Singleton Table. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::singleton\n\n\n\nDetailed Description\n"},"group__multiindex.html":{"url":"group__multiindex.html","title":"Multiindex","keywords":"multiindex eosio::multi_index","body":"group multiindex\nDefines EOSIO Multi Index Table. More...\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::multi_index\n\n\n\nDetailed Description\nEOSIO Multi-Index API provides a C++ interface to the EOSIO database. It is patterned after Boost Multi Index Container. EOSIO Multi-Index table requires exactly a uint64_t primary key. For the table to be able to retrieve the primary key, the object stored inside the table is required to have a const member function called primary_key() that returns uint64_t. EOSIO Multi-Index table also supports up to 16 secondary indices. The type of the secondary indices could be any of:\n\nuint64_t\nuint128_t\nuint256_t\ndouble\nlong double\n\nTemplate parameters:\n\nTableName - name of the table \nT - type of the data stored inside the table \nIndices - secondary indices for the table, up to 16 indices is supported here\n\nExample:\n#include \nusing namespace eosio;\nclass mycontract: contract {\n  struct record {\n    uint64_t    primary;\n    uint64_t    secondary_1;\n    uint128_t   secondary_2;\n    uint256_t   secondary_3;\n    double      secondary_4;\n    long double secondary_5;\n    uint64_t primary_key() const { return primary; }\n    uint64_t get_secondary_1() const { return secondary_1; }\n    uint128_t get_secondary_2() const { return secondary_2; }\n    uint256_t get_secondary_3() const { return secondary_3; }\n    double get_secondary_4() const { return secondary_4; }\n    long double get_secondary_5() const { return secondary_5; }\n    EOSLIB_SERIALIZE( record, (primary)(secondary_1)(secondary_2)(secondary_3)(secondary_4)(secondary_5) )\n  };\n  public:\n    mycontract( account_name self ):contract(self){}\n    void myaction() {\n      auto code = _self;\n      auto scope = _self;\n      multi_index >,\n        indexed_by >,\n        indexed_by >,\n        indexed_by >,\n        indexed_by >\n      > table( code, scope);\n    }\n}\nEOSIO_ABI( mycontract, (myaction) )\n\n"},"group__singleton.html":{"url":"group__singleton.html","title":"Singleton","keywords":"singleton eosio::singleton","body":"group singleton\nDefines EOSIO Singleton Table. \nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::singleton\n\n\n\n"},"group__dispatcher.html":{"url":"group__dispatcher.html","title":"Dispatcher","keywords":"dispatcher execute_action","body":"group dispatcher\nDefines functions to dispatch action to proper action handler inside a contract. \nModules\n\nDispatcher C++ API Defines C++ functions to dispatch action to proper action handler inside a contract. \n\nfunction execute_action\nbool dispatcher::execute_action (\n    T * obj,\n    void(Q::*)(Args...) func\n)\n\nUnpack the received action and execute the correponding action handler. \nUnpack the received action and execute the correponding action handler\nTemplate parameters:\n\nT - The contract class that has the correponding action handler, this contract should be derived from eosio::contract \nQ - The namespace of the action handler function \nArgs - The arguments that the action handler accepts, i.e. members of the action \n\nParameters:\n\nobj - The contract object that has the correponding action handler \nfunc - The action handler \n\nReturns:\ntrue \n"},"group__dispatchercpp.html":{"url":"group__dispatchercpp.html","title":"Dispatchercpp","keywords":"dispatchercpp execute_action","body":"group dispatchercpp\nDefines C++ functions to dispatch action to proper action handler inside a contract. \nfunction execute_action\nbool dispatchercpp::execute_action (\n    T * obj,\n    void(Q::*)(Args...) func\n)\n\nUnpack the received action and execute the correponding action handler. \nUnpack the received action and execute the correponding action handler\nTemplate parameters:\n\nT - The contract class that has the correponding action handler, this contract should be derived from eosio::contract \nQ - The namespace of the action handler function \nArgs - The arguments that the action handler accepts, i.e. members of the action \n\nParameters:\n\nobj - The contract object that has the correponding action handler \nfunc - The action handler \n\nReturns:\ntrue \n"},"group__memoryapi.html":{"url":"group__memoryapi.html","title":"Memoryapi","keywords":"memoryapi malloc calloc realloc free","body":"group memoryapi\nDefines common memory functions. \nModules\n\nMemory C++ API Defines common memory functions. \n\nfunction malloc\nvoid * memoryapi::malloc (\n    size_t size\n)\n\nAllocate additional memory. \nnamespace eosio\nAllocate additional memory\nParameters:\n\nsize - Number of additional bytes to be allocated \n\nReturns:\nvoid* - Pointer to start of the new allocated memory\nAllocate additional memory. \nfunction calloc\nvoid * memoryapi::calloc (\n    size_t count,\n    size_t size\n)\n\nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0. \nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0\nParameters:\n\ncount - Number of elements to allocate \nsize - Size of each element \n\nReturns:\nvoid* - Pointer to start of the new allocated memory \nfunction realloc\nvoid * memoryapi::realloc (\n    void * ptr,\n    size_t size\n)\n\nReallocate the given area of memory. \nReallocate the given area of memory, which is allocated by malloc(), calloc(), or realloc() previously\nParameters:\n\nptr - Pointer to the memory area to be reallocated \nsize - New size of the memory \n\nReturns:\nvoid* - Pointer to the new reallocated memory \nfunction free\nvoid memoryapi::free (\n    void * ptr\n)\n\nDeallocates the given area of memory. \nDeallocates the given area of memory which is previously allocated by malloc(), calloc(), or realloc() \nParameters:\n\nptr - Pointer to the memory to be deallocated \n\n"},"group__memorycppapi.html":{"url":"group__memorycppapi.html","title":"Memorycppapi","keywords":"memorycppapi malloc calloc realloc free","body":"group memorycppapi\nDefines common memory functions. \nfunction malloc\nvoid * memorycppapi::malloc (\n    size_t size\n)\n\nAllocate additional memory. \nnamespace eosio\nAllocate additional memory\nParameters:\n\nsize - Number of additional bytes to be allocated \n\nReturns:\nvoid* - Pointer to start of the new allocated memory\nAllocate additional memory. \nfunction calloc\nvoid * memorycppapi::calloc (\n    size_t count,\n    size_t size\n)\n\nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0. \nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0\nParameters:\n\ncount - Number of elements to allocate \nsize - Size of each element \n\nReturns:\nvoid* - Pointer to start of the new allocated memory \nfunction realloc\nvoid * memorycppapi::realloc (\n    void * ptr,\n    size_t size\n)\n\nReallocate the given area of memory. \nReallocate the given area of memory, which is allocated by malloc(), calloc(), or realloc() previously\nParameters:\n\nptr - Pointer to the memory area to be reallocated \nsize - New size of the memory \n\nReturns:\nvoid* - Pointer to the new reallocated memory \nfunction free\nvoid memorycppapi::free (\n    void * ptr\n)\n\nDeallocates the given area of memory. \nDeallocates the given area of memory which is previously allocated by malloc(), calloc(), or realloc() \nParameters:\n\nptr - Pointer to the memory to be deallocated \n\n"},"group__serialize.html":{"url":"group__serialize.html","title":"Serialize","keywords":"serialize EOSLIB_REFLECT EOSLIB_REFLECT_TEMPLATE EOSLIB_REFLECT_EMPTY EOSLIB_REFLECT_FWD EOSLIB_REFLECT_DERIVED EOSLIB_REFLECT_DERIVED_TEMPLATE EOSLIB_SERIALIZE EOSLIB_SERIALIZE_DERIVED","body":"group serialize\nDefines functions to serialize and deserialize object. \nModules\n\nData Stream Defines data stream for reading and writing data in the form of bytes. \nSerialize C++ API Defines C++ API to serialize and deserialize object. \n\nDefines\ndefine EOSLIB_REFLECT\ndefine EOSLIB_REFLECT;\n\nSpecializes eosio::reflector for TYPE. \nPerform class reflection\nParameters:\n\nTYPE - the class template to be reflected \nMEMBERS - a sequence of member names. (field1)(field2)(field3)\n\nSee also: EOSLIB_REFLECT_DERIVED \ndefine EOSLIB_REFLECT_TEMPLATE\ndefine EOSLIB_REFLECT_TEMPLATE;\n\nPerform class template reflection. \nPerform class template reflection\nParameters:\n\nTEMPLATE_ARGS - a sequence of template args. (args1)(args2)(args3) \nTYPE - the class template to be reflected \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_REFLECT_EMPTY\ndefine EOSLIB_REFLECT_EMPTY;\n\nPerform class reflection on empty class. \nPerform class reflection on empty class\nParameters:\n\nTYPE - the class to be reflected \n\ndefine EOSLIB_REFLECT_FWD\ndefine EOSLIB_REFLECT_FWD;\n\nPerform forward declaration of class reflection. \nPerform forward declaration of class reflection\nParameters:\n\nTYPE - the class to be reflected \n\ndefine EOSLIB_REFLECT_DERIVED\ndefine EOSLIB_REFLECT_DERIVED;\n\nSpecializes eosio::reflector for TYPE where type inherits other reflected classes. \nPerform class reflection where TYPE inherits other reflected classes\nParameters:\n\nTYPE - the class to be reflected \nINHERITS - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_REFLECT_DERIVED_TEMPLATE\ndefine EOSLIB_REFLECT_DERIVED_TEMPLATE;\n\nPerform class template reflection where TYPE inherits other reflected classes. \nPerform class template reflection where TYPE inherits other reflected classes\nParameters:\n\nTEMPLATE_ARGS - a sequence of template args. (args1)(args2)(args3) \nTYPE - the class to be reflected \nINHERITS - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_SERIALIZE\ndefine EOSLIB_SERIALIZE;\n\nDefines serialization and deserialization for a class. \nDefines serialization and deserialization for a class\nParameters:\n\nTYPE - the class to have its serialization and deserialization defined \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_SERIALIZE_DERIVED\ndefine EOSLIB_SERIALIZE_DERIVED;\n\nDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined. \nDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined\nParameters:\n\nTYPE - the class to have its serialization and deserialization defined \nBASE - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\n"},"group__datastream.html":{"url":"group__datastream.html","title":"Datastream","keywords":"datastream eosio::datastream eosio::datastream< size_t > operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator>> operator<< operator>> operator<< operator<< operator>> operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> unpack unpack pack_size pack operator<< operator>> operator<< operator>>","body":"group datastream\nDefines data stream for reading and writing data in the form of bytes. \nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::datastream\n\n\nclass\neosio::datastream\n\n\n\nfunction operator\ndatastream & datastream::operator & ds,\n    const public_key pubkey\n)\n\nSerialize a public_key. \nSerialize a public_key into a stream\nParameters:\n\nds - The stream to write \npubkey - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    public_key & pubkey\n)\n\nDeserialize a public_key. \nDeserialize a public_key from a stream\nParameters:\n\nds - The stream to read \npubkey - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const key256 & d\n)\n\nSerialize a key256. \nSerialize a key256 into a stream\nParameters:\n\nds - The stream to write \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    key256 & d\n)\n\nDeserialize a key256. \nDeserialize a key256 from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const bool & d\n)\n\nSerialize a bool into a stream. \nSerialize a bool into a stream\nParameters:\n\nds - The stream to read \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    bool & d\n)\n\nDeserialize a bool. \nDeserialize a bool from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const checksum256 & d\n)\n\nSerialize a checksum256. \nSerialize a checksum256 into a stream\nParameters:\n\nds - The stream to write \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    checksum256 & d\n)\n\nDeserialize a checksum256. \nDeserialize a checksum256 from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator\nSerialize a string. \nSerialize a string into a stream\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    std::string & v\n)\n\nDeserialize a string. \nDeserialize a string from a stream\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & v\n)\n\nSerialize a fixed size array. \nSerialize a fixed size array into a stream\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the array \nN - Size of the array \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    std::array & v\n)\n\nDeserialize a fixed size array. \nDeserialize a fixed size array from a stream\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the array \nN - Size of the array \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    T \n)\n\nDeserialize a a pointer. \nPointer should not be serialized, so this function will always throws an error\nParameters:\n\nds - The stream to read \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the pointer \n\nReturns:\nDataStream& - Reference to the datastream \nPost\nThrow an exception if it is a pointer \nfunction operator\nDataStream & datastream::operator\nSerialize a fixed size array of non-primitive and non-pointer type. \nSerialize a fixed size array of non-primitive type.\nSerialize a fixed size array of non-primitive and non-pointer type\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the pointer \n\nReturns:\nDataStream& - Reference to the datastream\nSerialize a fixed size array of non-primitive type\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the pointer \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    T(&) v\n)\n\nDeserialize a fixed size array of non-primitive and non-pointer type. \nDeserialize a fixed size array of non-primitive type.\nDeserialize a fixed size array of non-primitive and non-pointer type\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nT - Type of the object contained in the array \nN - Size of the array \nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream\nDeserialize a fixed size array of non-primitive type\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nT - Type of the object contained in the array \nN - Size of the array \nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & v\n)\n\nSerialize a vector of char. \nSerialize a vector of char\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & v\n)\n\nSerialize a vector. \nSerialize a vector\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the vector \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    vector & v\n)\n\nDeserialize a vector of char. \nDeserialize a vector of char\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    vector & v\n)\n\nDeserialize a vector. \nDeserialize a vector\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the vector \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & s\n)\n\nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    std::set & s\n)\n\nfunction operator\nDataStream & datastream::operator & m\n)\n\nSerialize a map. \nSerialize a map\nParameters:\n\nds - The stream to write \nm - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the map \nV - Type of the value contained in the map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    std::map & m\n)\n\nDeserialize a map. \nDeserialize a map\nParameters:\n\nds - The stream to read \nm - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the map \nV - Type of the value contained in the map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & s\n)\n\nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    boost::container::flat_set & s\n)\n\nfunction operator\nDataStream & datastream::operator & m\n)\n\nSerialize a flat map. \nSerialize a flat map\nParameters:\n\nds - The stream to write \nm - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the flat map \nV - Type of the value contained in the flat map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    boost::container::flat_map & m\n)\n\nDeserialize a flat map. \nDeserialize a flat map\nParameters:\n\nds - The stream to read \nm - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the flat map \nV - Type of the value contained in the flat map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & t\n)\n\nSerialize a tuple. \nSerialize a tuple\nParameters:\n\nds - The stream to write \nt - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nArgs - Type of the objects contained in the tuple \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    std::tuple & t\n)\n\nDeserialize a tuple. \nDeserialize a tuple\nParameters:\n\nds - The stream to read \nt - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nArgs - Type of the objects contained in the tuple \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator\nSerialize a class. \nSerialize a primitive type.\nSerialize a class\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of class \n\nReturns:\nDataStream& - Reference to the datastream\nSerialize a primitive type\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the primitive type \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    T & v\n)\n\nDeserialize a class. \nDeserialize a primitive type.\nDeserialize a class\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of class \n\nReturns:\nDataStream& - Reference to the datastream\nDeserialize a primitive type\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the primitive type \n\nReturns:\nDataStream& - Reference to the datastream \nfunction unpack\nT datastream::unpack (\n    const char * buffer,\n    size_t len\n)\n\nUnpack data inside a fixed size buffer as T. \nUnpack data inside a fixed size buffer as T\nTemplate parameters:\n\nT - Type of the unpacked data \n\nParameters:\n\nbuffer - Pointer to the buffer \nlen - Length of the buffer \n\nReturns:\nT - The unpacked data \nfunction unpack\nT datastream::unpack (\n    const vector & bytes\n)\n\nUnpack data inside a variable size buffer as T. \nUnpack data inside a variable size buffer as T\nTemplate parameters:\n\nT - Type of the unpacked data \n\nParameters:\n\nbytes - Buffer \n\nReturns:\nT - The unpacked data \nfunction pack_size\nsize_t datastream::pack_size (\n    const T & value\n)\n\nGet the size of the packed data. \nGet the size of the packed data\nTemplate parameters:\n\nT - Type of the data to be packed \n\nParameters:\n\nvalue - Data to be packed \n\nReturns:\nsize_t - Size of the packed data \nfunction pack\nbytes datastream::pack (\n    const T & value\n)\n\nGet packed data. \nGet packed data\nTemplate parameters:\n\nT - Type of the data to be packed \n\nParameters:\n\nvalue - Data to be packed \n\nReturns:\nbytes - The packed data \nfunction operator\ndatastream & datastream::operator & ds,\n    const checksum160 & cs\n)\n\nSerialize a checksum160 type. \nSerialize a checksum160 type\nParameters:\n\nds - The stream to write \ncs - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    checksum160 & cs\n)\n\nDeserialize a checksum160 type. \nDeserialize a checksum160 type\nParameters:\n\nds - The stream to read \ncs - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const checksum512 & cs\n)\n\nSerialize a checksum512 type. \nSerialize a checksum512 type\nParameters:\n\nds - The stream to write \ncs - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    checksum512 & cs\n)\n\nDeserialize a checksum512 type. \nDeserialize a checksum512 type\nParameters:\n\nds - The stream to read \ncs - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \n"},"group__serializecpp.html":{"url":"group__serializecpp.html","title":"Serializecpp","keywords":"serializecpp EOSLIB_REFLECT EOSLIB_REFLECT_TEMPLATE EOSLIB_REFLECT_EMPTY EOSLIB_REFLECT_FWD EOSLIB_REFLECT_DERIVED EOSLIB_REFLECT_DERIVED_TEMPLATE EOSLIB_SERIALIZE EOSLIB_SERIALIZE_DERIVED","body":"group serializecpp\nDefines C++ API to serialize and deserialize object. \nDefines\ndefine EOSLIB_REFLECT\ndefine EOSLIB_REFLECT;\n\nSpecializes eosio::reflector for TYPE. \nPerform class reflection\nParameters:\n\nTYPE - the class template to be reflected \nMEMBERS - a sequence of member names. (field1)(field2)(field3)\n\nSee also: EOSLIB_REFLECT_DERIVED \ndefine EOSLIB_REFLECT_TEMPLATE\ndefine EOSLIB_REFLECT_TEMPLATE;\n\nPerform class template reflection. \nPerform class template reflection\nParameters:\n\nTEMPLATE_ARGS - a sequence of template args. (args1)(args2)(args3) \nTYPE - the class template to be reflected \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_REFLECT_EMPTY\ndefine EOSLIB_REFLECT_EMPTY;\n\nPerform class reflection on empty class. \nPerform class reflection on empty class\nParameters:\n\nTYPE - the class to be reflected \n\ndefine EOSLIB_REFLECT_FWD\ndefine EOSLIB_REFLECT_FWD;\n\nPerform forward declaration of class reflection. \nPerform forward declaration of class reflection\nParameters:\n\nTYPE - the class to be reflected \n\ndefine EOSLIB_REFLECT_DERIVED\ndefine EOSLIB_REFLECT_DERIVED;\n\nSpecializes eosio::reflector for TYPE where type inherits other reflected classes. \nPerform class reflection where TYPE inherits other reflected classes\nParameters:\n\nTYPE - the class to be reflected \nINHERITS - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_REFLECT_DERIVED_TEMPLATE\ndefine EOSLIB_REFLECT_DERIVED_TEMPLATE;\n\nPerform class template reflection where TYPE inherits other reflected classes. \nPerform class template reflection where TYPE inherits other reflected classes\nParameters:\n\nTEMPLATE_ARGS - a sequence of template args. (args1)(args2)(args3) \nTYPE - the class to be reflected \nINHERITS - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_SERIALIZE\ndefine EOSLIB_SERIALIZE;\n\nDefines serialization and deserialization for a class. \nDefines serialization and deserialization for a class\nParameters:\n\nTYPE - the class to have its serialization and deserialization defined \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_SERIALIZE_DERIVED\ndefine EOSLIB_SERIALIZE_DERIVED;\n\nDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined. \nDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined\nParameters:\n\nTYPE - the class to have its serialization and deserialization defined \nBASE - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\n"},"group__symbolapi.html":{"url":"group__symbolapi.html","title":"Symbolapi","keywords":"symbolapi eosio::symbol_type eosio::extended_symbol Stores Extended symbol_name value contract string_to_symbol is_valid_symbol symbol_name_length symbol_type symbol_type is_valid precision name name_length operator symbol_name print extended_symbol print operator== operator!= operator< S","body":"group symbolapi\nDefines API for managing symbols. \nModules\n\nSymbol CPP API Defines CPP API for managing symbols. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::symbol_type\n\n\nstruct\neosio::extended_symbol\n\n\nstruct\nStores\n\n\nstruct\nExtended\n\n\n\nVariables\n\n\n\nType\nName\n\n\n\n\nstatic constexpr uint64_t\nstring_to_symbol (uint8_t precision, const char * str)\n\n\nstatic constexpr bool\nis_valid_symbol (symbol_name sym)\n\n\nstatic constexpr uint32_t\nsymbol_name_length (symbol_name sym)\n\n\n\nDefines\ntypedef symbol_name\ntypedef uint64_t eosio::symbol_name;\n\nuint64_t representation of a symbol name \nvariable value\nsymbol_name eosio::symbol_type::value;\n\nThe symbol name \nvariable contract\naccount_name eosio::extended_symbol::contract;\n\nThe owner of the symbol. \nThe owner of the symbol \nfunction string_to_symbol\nstatic constexpr uint64_t symbolapi::string_to_symbol (\n    uint8_t precision,\n    const char * str\n)\n\nConverts string to uint64_t representation of symbol\nParameters:\n\nprecision - precision of symbol \nstr - the string representation of the symbol \n\nfunction is_valid_symbol\nstatic constexpr bool symbolapi::is_valid_symbol (\n    symbol_name sym\n)\n\nChecks if provided symbol name is valid.\nParameters:\n\nsym - symbol name of type symbol_name \n\nReturns:\ntrue - if symbol is valid \nfunction symbol_name_length\nstatic constexpr uint32_t symbolapi::symbol_name_length (\n    symbol_name sym\n)\n\nReturns the character length of the provided symbol\nParameters:\n\nsym - symbol to retrieve length for (uint64_t) \n\nReturns:\nlength - character length of the provided symbol \nfunction symbol_type\nsymbolapi::symbol_type ()\n\nfunction symbol_type\nsymbolapi::symbol_type (\n    symbol_name s\n)\n\nWhat is the type of the symbol \nfunction is_valid\nbool symbolapi::is_valid () const\n\nIs this symbol valid \nfunction precision\nuint64_t symbolapi::precision () const\n\nThis symbol's precision \nfunction name\nuint64_t symbolapi::name () const\n\nReturns uint64_t representation of symbol name \nfunction name_length\nuint32_t symbolapi::name_length () const\n\nThe length of this symbol \nfunction operator symbol_name\nsymbolapi::operator symbol_name () const\n\nfunction print\nvoid symbolapi::print (\n    bool show_precision = true\n) const\n\nPrint the symbol \nPrint the symbol \nfunction extended_symbol\nsymbolapi::extended_symbol (\n    symbol_name sym = 0,\n    account_name acc = 0\n)\n\nfunction print\nvoid symbolapi::print () const\n\nPrint the extended symbol \nPrint the extended symbol \nfriend operator==\nfriend bool symbolapi::operator== (\n    const extended_symbol & a,\n    const extended_symbol & b\n)\n\nSubtraction operator. \nEquivalency operator. Returns true if a == b (are the same)\nParameters:\n\na - The extended asset to be subtracted \nb - The extended asset used to subtract \n\nReturns:\nboolean - true if both provided symbols are the same \nfriend operator!=\nfriend bool symbolapi::operator!= (\n    const extended_symbol & a,\n    const extended_symbol & b\n)\n\nSubtraction operator. \nInverted equivalency operator. Returns true if a != b (are different)\nParameters:\n\na - The extended asset to be subtracted \nb - The extended asset used to subtract \n\nReturns:\nboolean - true if both provided symbols are the same \nfriend operator\nfriend bool symbolapi::operator\ndefine S\ndefine S;\n\nMacro for converting string to char representation of symbol\nParameters:\n\nprecision - precision of symbol \nstr - the string representation of the symbol \n\n"},"group__symbolcppapi.html":{"url":"group__symbolcppapi.html","title":"Symbolcppapi","keywords":"symbolcppapi eosio::symbol_type eosio::extended_symbol Stores Extended symbol_name value contract string_to_symbol is_valid_symbol symbol_name_length symbol_type symbol_type is_valid precision name name_length operator symbol_name print extended_symbol print operator== operator!= operator< S","body":"group symbolcppapi\nDefines CPP API for managing symbols. \nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::symbol_type\n\n\nstruct\neosio::extended_symbol\n\n\nstruct\nStores\n\n\nstruct\nExtended\n\n\n\nVariables\n\n\n\nType\nName\n\n\n\n\nstatic constexpr uint64_t\nstring_to_symbol (uint8_t precision, const char * str)\n\n\nstatic constexpr bool\nis_valid_symbol (symbol_name sym)\n\n\nstatic constexpr uint32_t\nsymbol_name_length (symbol_name sym)\n\n\n\nDefines\ntypedef symbol_name\ntypedef uint64_t eosio::symbol_name;\n\nuint64_t representation of a symbol name \nvariable value\nsymbol_name eosio::symbol_type::value;\n\nThe symbol name \nvariable contract\naccount_name eosio::extended_symbol::contract;\n\nThe owner of the symbol. \nThe owner of the symbol \nfunction string_to_symbol\nstatic constexpr uint64_t symbolcppapi::string_to_symbol (\n    uint8_t precision,\n    const char * str\n)\n\nConverts string to uint64_t representation of symbol\nParameters:\n\nprecision - precision of symbol \nstr - the string representation of the symbol \n\nfunction is_valid_symbol\nstatic constexpr bool symbolcppapi::is_valid_symbol (\n    symbol_name sym\n)\n\nChecks if provided symbol name is valid.\nParameters:\n\nsym - symbol name of type symbol_name \n\nReturns:\ntrue - if symbol is valid \nfunction symbol_name_length\nstatic constexpr uint32_t symbolcppapi::symbol_name_length (\n    symbol_name sym\n)\n\nReturns the character length of the provided symbol\nParameters:\n\nsym - symbol to retrieve length for (uint64_t) \n\nReturns:\nlength - character length of the provided symbol \nfunction symbol_type\nsymbolcppapi::symbol_type ()\n\nfunction symbol_type\nsymbolcppapi::symbol_type (\n    symbol_name s\n)\n\nWhat is the type of the symbol \nfunction is_valid\nbool symbolcppapi::is_valid () const\n\nIs this symbol valid \nfunction precision\nuint64_t symbolcppapi::precision () const\n\nThis symbol's precision \nfunction name\nuint64_t symbolcppapi::name () const\n\nReturns uint64_t representation of symbol name \nfunction name_length\nuint32_t symbolcppapi::name_length () const\n\nThe length of this symbol \nfunction operator symbol_name\nsymbolcppapi::operator symbol_name () const\n\nfunction print\nvoid symbolcppapi::print (\n    bool show_precision = true\n) const\n\nPrint the symbol \nPrint the symbol \nfunction extended_symbol\nsymbolcppapi::extended_symbol (\n    symbol_name sym = 0,\n    account_name acc = 0\n)\n\nfunction print\nvoid symbolcppapi::print () const\n\nPrint the extended symbol \nPrint the extended symbol \nfriend operator==\nfriend bool symbolcppapi::operator== (\n    const extended_symbol & a,\n    const extended_symbol & b\n)\n\nSubtraction operator. \nEquivalency operator. Returns true if a == b (are the same)\nParameters:\n\na - The extended asset to be subtracted \nb - The extended asset used to subtract \n\nReturns:\nboolean - true if both provided symbols are the same \nfriend operator!=\nfriend bool symbolcppapi::operator!= (\n    const extended_symbol & a,\n    const extended_symbol & b\n)\n\nSubtraction operator. \nInverted equivalency operator. Returns true if a != b (are different)\nParameters:\n\na - The extended asset to be subtracted \nb - The extended asset used to subtract \n\nReturns:\nboolean - true if both provided symbols are the same \nfriend operator\nfriend bool symbolcppapi::operator\ndefine S\ndefine S;\n\nMacro for converting string to char representation of symbol\nParameters:\n\nprecision - precision of symbol \nstr - the string representation of the symbol \n\n"},"group__systemapi.html":{"url":"group__systemapi.html","title":"Systemapi","keywords":"systemapi eosio_assert eosio_assert_message eosio_assert_code eosio_exit current_time now","body":"group systemapi\nDefines API for interacting with system level intrinsics. \nModules\n\nPrivileged API Defines an API for accessing configuration of the chain that can only be done by privileged accounts. \nSystem C API Defines API for interacting with system level intrinsics. \n\nfunction eosio_assert\nvoid systemapi::eosio_assert (\n    uint32_t test,\n    const char * msg\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore\n\nExample:\neosio_assert(1 == 2, \"One is not equal to two.\");\neosio_assert(1 == 1, \"One is not equal to one.\");\n\nParameters:\n\nmsg - a null terminated string explaining the reason for failure \n\nfunction eosio_assert_message\nvoid systemapi::eosio_assert_message (\n    uint32_t test,\n    const char * msg,\n    uint32_t msg_len\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore \nmsg - a pointer to the start of string explaining the reason for failure \nmsg_len - length of the string \n\nfunction eosio_assert_code\nvoid systemapi::eosio_assert_code (\n    uint32_t test,\n    uint64_t code\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore \ncode - the error code \n\nfunction eosio_exit\nvoid systemapi::eosio_exit (\n    int32_t code\n)\n\nAborts execution of wasm without failing the contract. \nThis method will abort execution of wasm without failing the contract. This is used to bypass all cleanup / destructors that would normally be called. \nParameters:\n\ncode - the exit code Example:\n\neosio_exit(0);\neosio_exit(1);\neosio_exit(2);\neosio_exit(3);\n\nfunction current_time\nuint64_t systemapi::current_time ()\n\nGet time of the current block (i.e. the block including this action) \nReturns the time in microseconds from 1970 of the current block \nReturns:\ntime in microseconds from 1970 of the current block \nfunction now\nuint32_t systemapi::now ()\n\nGet time (rounded down to the nearest second) of the current block (i.e. the block including this action) \nReturns the time in seconds from 1970 of the block including this action \nReturns:\ntime in seconds from 1970 of the current block \n"},"group__privilegedapi.html":{"url":"group__privilegedapi.html","title":"Privilegedapi","keywords":"privilegedapi eosio::blockchain_parameters set_blockchain_parameters get_blockchain_parameters","body":"group privilegedapi\nDefines an API for accessing configuration of the chain that can only be done by privileged accounts. \nModules\n\nPrivileged C API Defines C Privileged API. \nPrivileged C++ API Defines C++ Privileged API. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::blockchain_parameters\n\n\n\nfunction set_blockchain_parameters\nvoid privilegedapi::set_blockchain_parameters (\n    const eosio::blockchain_parameters & params\n)\n\nSet the blockchain parameters Set the blockchain parameters. \nParameters:\n\nparams - New blockchain parameters to set \n\nfunction get_blockchain_parameters\nvoid privilegedapi::get_blockchain_parameters (\n    eosio::blockchain_parameters & params\n)\n\nRetrieve the blolckchain parameters Retrieve the blolckchain parameters. \nParameters:\n\nparams - It will be replaced with the retrieved blockchain params \n\n"},"group__privilegedcapi.html":{"url":"group__privilegedcapi.html","title":"Privilegedcapi","keywords":"privilegedcapi get_resource_limits set_resource_limits set_proposed_producers set_active_producers is_privileged set_privileged set_blockchain_parameters_packed get_blockchain_parameters_packed activate_feature","body":"group privilegedcapi\nDefines C Privileged API. \nfunction get_resource_limits\nvoid privilegedcapi::get_resource_limits (\n    account_name account,\n    int64_t * ram_bytes,\n    int64_t * net_weight,\n    int64_t * cpu_weight\n)\n\nGet the resource limits of an account Get the resource limits of an account. \nParameters:\n\naccount - name of the account whose resource limit to get \nram_bytes - pointer to int64\\_t to hold retrieved ram limit in absolute bytes \nnet_weight - pointer to int64\\_t to hold net limit \ncpu_weight - pointer to int64\\_t to hold cpu limit \n\nfunction set_resource_limits\nvoid privilegedcapi::set_resource_limits (\n    account_name account,\n    int64_t ram_bytes,\n    int64_t net_weight,\n    int64_t cpu_weight\n)\n\nSet the resource limits of an account Set the resource limits of an account. \nParameters:\n\naccount - name of the account whose resource limit to be set \nram_bytes - ram limit in absolute bytes \nnet_weight - fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts) \ncpu_weight - fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts) \n\nfunction set_proposed_producers\nint64_t privilegedcapi::set_proposed_producers (\n    char * producer_data,\n    uint32_t producer_data_size\n)\n\nProposes a schedule change, once the block that contains the proposal becomes irreversible, the schedule is promoted to \"pending\" automatically. Once the block that promotes the schedule is irreversible, the schedule will become \"active\" \nParameters:\n\nproducer_data - packed data of produce_keys in the appropriate producer schedule order \nproducer_data_size - size of the data buffer\n\nReturns:\n-1 if proposing a new producer schedule was unsuccessful, otherwise returns the version of the new proposed schedule \nfunction set_active_producers\nvoid privilegedcapi::set_active_producers (\n    char * producer_data,\n    uint32_t producer_data_size\n)\n\nSet new active producers Set new active producers. Producers will only be activated once the block which starts the next round is irrreversible. \nParameters:\n\nproducer_data - pointer to producer schedule packed as bytes \nproducer_data_size - size of the packed producer schedule \n\nPrecondition:\nproducer\\_data is a valid pointer to a range of memory at least producer\\_data\\_size bytes long that contains serialized produced schedule data \nfunction is_privileged\nbool privilegedcapi::is_privileged (\n    account_name account\n)\n\nCheck if an account is privileged Check if an account is privileged. \nParameters:\n\naccount - name of the account to be checked \n\nReturns:\ntrue if the account is privileged \nReturns:\nfalse if the account is not privileged \nfunction set_privileged\nvoid privilegedcapi::set_privileged (\n    account_name account,\n    bool is_priv\n)\n\nSet the privileged status of an account Set the privileged status of an account. \nParameters:\n\naccount - name of the account whose privileged account to be set \nis_priv - privileged status \n\nfunction set_blockchain_parameters_packed\nvoid privilegedcapi::set_blockchain_parameters_packed (\n    char * data,\n    uint32_t datalen\n)\n\nSet the blockchain parameters Set the blockchain parameters. \nParameters:\n\ndata - pointer to blockchain parameters packed as bytes \ndatalen - size of the packed blockchain parameters \n\nPrecondition:\ndata is a valid pointer to a range of memory at least datalen bytes long that contains packed blockchain params data \nfunction get_blockchain_parameters_packed\nuint32_t privilegedcapi::get_blockchain_parameters_packed (\n    char * data,\n    uint32_t datalen\n)\n\nRetrieve the blolckchain parameters Retrieve the blolckchain parameters. \nParameters:\n\ndata - output buffer of the blockchain parameters, only retrieved if sufficent size to hold packed data. \ndatalen - size of the data buffer, 0 to report required size. \n\nReturns:\nsize of the blockchain parameters \nPrecondition:\ndata is a valid pointer to a range of memory at least datalen bytes long \nPost\ndata is filled with packed blockchain parameters \nfunction activate_feature\nvoid privilegedcapi::activate_feature (\n    int64_t f\n)\n\nActivate new feature Activate new feature. \nParameters:\n\nf - name (identifier) of the feature to be activated \n\n"},"group__privilegedcppapi.html":{"url":"group__privilegedcppapi.html","title":"Privilegedcppapi","keywords":"privilegedcppapi eosio::blockchain_parameters set_blockchain_parameters get_blockchain_parameters","body":"group privilegedcppapi\nDefines C++ Privileged API. \nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::blockchain_parameters\n\n\n\nfunction set_blockchain_parameters\nvoid privilegedcppapi::set_blockchain_parameters (\n    const eosio::blockchain_parameters & params\n)\n\nSet the blockchain parameters Set the blockchain parameters. \nParameters:\n\nparams - New blockchain parameters to set \n\nfunction get_blockchain_parameters\nvoid privilegedcppapi::get_blockchain_parameters (\n    eosio::blockchain_parameters & params\n)\n\nRetrieve the blolckchain parameters Retrieve the blolckchain parameters. \nParameters:\n\nparams - It will be replaced with the retrieved blockchain params \n\n"},"group__systemcapi.html":{"url":"group__systemcapi.html","title":"Systemcapi","keywords":"systemcapi eosio_assert eosio_assert_message eosio_assert_code eosio_exit current_time now","body":"group systemcapi\nDefines API for interacting with system level intrinsics. \nfunction eosio_assert\nvoid systemcapi::eosio_assert (\n    uint32_t test,\n    const char * msg\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore\n\nExample:\neosio_assert(1 == 2, \"One is not equal to two.\");\neosio_assert(1 == 1, \"One is not equal to one.\");\n\nParameters:\n\nmsg - a null terminated string explaining the reason for failure \n\nfunction eosio_assert_message\nvoid systemcapi::eosio_assert_message (\n    uint32_t test,\n    const char * msg,\n    uint32_t msg_len\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore \nmsg - a pointer to the start of string explaining the reason for failure \nmsg_len - length of the string \n\nfunction eosio_assert_code\nvoid systemcapi::eosio_assert_code (\n    uint32_t test,\n    uint64_t code\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore \ncode - the error code \n\nfunction eosio_exit\nvoid systemcapi::eosio_exit (\n    int32_t code\n)\n\nAborts execution of wasm without failing the contract. \nThis method will abort execution of wasm without failing the contract. This is used to bypass all cleanup / destructors that would normally be called. \nParameters:\n\ncode - the exit code Example:\n\neosio_exit(0);\neosio_exit(1);\neosio_exit(2);\neosio_exit(3);\n\nfunction current_time\nuint64_t systemcapi::current_time ()\n\nGet time of the current block (i.e. the block including this action) \nReturns the time in microseconds from 1970 of the current block \nReturns:\ntime in microseconds from 1970 of the current block \nfunction now\nuint32_t systemcapi::now ()\n\nGet time (rounded down to the nearest second) of the current block (i.e. the block including this action) \nReturns the time in seconds from 1970 of the block including this action \nReturns:\ntime in seconds from 1970 of the current block \n"},"group__transactionapi.html":{"url":"group__transactionapi.html","title":"Transactionapi","keywords":"transactionapi eosio::transaction_header eosio::transaction eosio::onerror get_action","body":"group transactionapi\nDefines API for sending transactions and inline actions. More...\nModules\n\nTransaction C API Defines API for sending transactions. \nTransaction C++ API Type-safe C++ wrappers for transaction C API. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::transaction_header\n\n\nclass\neosio::transaction\n\n\nstruct\neosio::onerror\n\n\n\nDetailed Description\nNote:\nThere are some methods from the Transaction C API that can be used directly from C++ \nfunction get_action\naction transactionapi::get_action (\n    uint32_t type,\n    uint32_t index\n)\n\nRetrieve the indicated action from the active transaction. \nParameters:\n\ntype - 0 for context free action, 1 for action \nindex - the index of the requested action \n\nReturns:\nthe indicated action \n"},"group__transactioncapi.html":{"url":"group__transactioncapi.html","title":"Transactioncapi","keywords":"transactioncapi send_deferred cancel_deferred read_transaction transaction_size tapos_block_num tapos_block_prefix expiration get_action get_context_free_data","body":"group transactioncapi\nDefines API for sending transactions. \nfunction send_deferred\nvoid transactioncapi::send_deferred (\n    const uint128_t & sender_id,\n    account_name payer,\n    const char * serialized_transaction,\n    size_t size,\n    uint32_t replace_existing = 0\n)\n\nSends a deferred transaction. \nSends a deferred transaction.\nParameters:\n\nsender_id - ID of sender \npayer - Account paying for RAM \nserialized_transaction - Pointer of serialized transaction to be deferred \nsize - Size to reserve \nreplace_existing - f this is 0 then if the provided sender_id is already in use by an in-flight transaction from this contract, which will be a failing assert. If 1 then transaction will atomically cancel/replace the inflight transaction \n\nfunction cancel_deferred\nint transactioncapi::cancel_deferred (\n    const uint128_t & sender_id\n)\n\nCancels a deferred transaction. \nCancels a deferred transaction.\nParameters:\n\nsender_id - The id of the sender\n\nPrecondition:\nThe deferred transaction ID exists. \nPrecondition:\nThe deferred transaction ID has not yet been published. \nPost\nDeferred transaction canceled.\nReturns:\n1 if transaction was canceled, 0 if transaction was not found\nExample:\nid = 0xffffffffffffffff\ncancel_deferred( id );\n\nfunction read_transaction\nsize_t transactioncapi::read_transaction (\n    char * buffer,\n    size_t size\n)\n\nAccess a copy of the currently executing transaction. \nAccess a copy of the currently executing transaction.\nParameters:\n\nbuffer - a buffer to write the current transaction to \nsize - the size of the buffer, 0 to return required size \n\nReturns:\nthe size of the transaction written to the buffer, or number of bytes that can be copied if size==0 passed \nfunction transaction_size\nsize_t transactioncapi::transaction_size ()\n\nGets the size of the currently executing transaction. \nGets the size of the currently executing transaction.\nReturns:\nsize of the currently executing transaction \nfunction tapos_block_num\nint transactioncapi::tapos_block_num ()\n\nGets the block number used for TAPOS on the currently executing transaction. \nGets the block number used for TAPOS on the currently executing transaction.\nReturns:\nblock number used for TAPOS on the currently executing transaction Example: \nint tbn = tapos_block_num();\n\nfunction tapos_block_prefix\nint transactioncapi::tapos_block_prefix ()\n\nGets the block prefix used for TAPOS on the currently executing transaction. \nGets the block prefix used for TAPOS on the currently executing transaction.\nReturns:\nblock prefix used for TAPOS on the currently executing transaction Example: \nint tbp = tapos_block_prefix();\n\nfunction expiration\ntime transactioncapi::expiration ()\n\nGets the expiration of the currently executing transaction. \nGets the expiration of the currently executing transaction.\nReturns:\nexpiration of the currently executing transaction Example: \ntime tm = expiration();\neosio_print(tm);\n\nfunction get_action\nint transactioncapi::get_action (\n    uint32_t type,\n    uint32_t index,\n    char * buff,\n    size_t size\n)\n\nRetrieves the indicated action from the active transaction. \nRetrieves the indicated action from the active transaction.\nParameters:\n\ntype - 0 for context free action, 1 for action \nindex - the index of the requested action \nbuff - output packed buff of the action \nsize - amount of buff read, pass 0 to have size returned \n\nReturns:\nthe size of the action, -1 on failure \nfunction get_context_free_data\nint transactioncapi::get_context_free_data (\n    uint32_t index,\n    char * buff,\n    size_t size\n)\n\nRetrieve the signed_transaction.context_free_data[index]. \nRetrieve the signed_transaction.context_free_data[index].\nParameters:\n\nindex - the index of the context_free_data entry to retrieve \nbuff - output buff of the context_free_data entry \nsize - amount of context_free_data[index] to retrieve into buff, 0 to report required size \n\nReturns:\nsize copied, or context_free_data[index].size() if 0 passed for size, or -1 if index not valid \n"},"group__transactioncppapi.html":{"url":"group__transactioncppapi.html","title":"Transactioncppapi","keywords":"transactioncppapi eosio::transaction_header eosio::transaction eosio::onerror get_action","body":"group transactioncppapi\nType-safe C++ wrappers for transaction C API. More...\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::transaction_header\n\n\nclass\neosio::transaction\n\n\nstruct\neosio::onerror\n\n\n\nDetailed Description\nNote:\nThere are some methods from the Transaction C API that can be used directly from C++ \nfunction get_action\naction transactioncppapi::get_action (\n    uint32_t type,\n    uint32_t index\n)\n\nRetrieve the indicated action from the active transaction. \nParameters:\n\ntype - 0 for context free action, 1 for action \nindex - the index of the requested action \n\nReturns:\nthe indicated action \n"},"group__types.html":{"url":"group__types.html","title":"Types","keywords":"types unsigned_int signed_int","body":"group types\nSpecifies builtin types, typedefs and aliases. \nModules\n\nContract Type Defines contract type which is base class for every EOSIO contract. \nFixed Size Key Fixed size key sorted lexicographically for Multi Index Table. \nOptional Type Defines otional type which is similar to boost::optional. \nProducer Type Defines producer type. \nPublic Key Type Specifies public key type. \nVariable Length Integer Type Defines variable length integer type which provides more efficient serialization\n/. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nunsigned_int\n\n\nstruct\nsigned_int\n\n\n\n"},"group__contracttype.html":{"url":"group__contracttype.html","title":"Contracttype","keywords":"contracttype eosio::contract","body":"group contracttype\nDefines contract type which is base class for every EOSIO contract. \nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::contract\n\n\n\n"},"group__fixed__key.html":{"url":"group__fixed__key.html","title":"Fixed key","keywords":"fixed_key eosio::fixed_key operator== operator!= operator> operator<","body":"group fixed_key\nFixed size key sorted lexicographically for Multi Index Table. \nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::fixed_key\n\n\n\nfunction operator==\nbool fixed_key::operator== (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 == c2, return true, otherwise false \nfunction operator!=\nbool fixed_key::operator!= (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 != c2, return true, otherwise false \nfunction operator>\nbool fixed_key::operator> (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 > c2, return true, otherwise false \nfunction operator\nbool fixed_key::operator & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 \n"},"group__optionaltype.html":{"url":"group__optionaltype.html","title":"Optionaltype","keywords":"optionaltype eosio::optional operator== operator== operator!= operator!=","body":"group optionaltype\nDefines otional type which is similar to boost::optional. \nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::optional\n\n\n\nfunction operator==\nbool optionaltype::operator== (\n    const optional & left,\n    const optional & right\n)\n\nEquality Operator. \nCheck equality between two optional object that shares same type of contained value\nTemplate parameters:\n\nT - Type of contained value of the optional objects \n\nParameters:\n\nleft - First object to be compared \nright - Second object to be compared \n\nReturns:\ntrue - if both optional objects are equal \nReturns:\nfalse \nfunction operator==\nbool optionaltype::operator== (\n    const optional & left,\n    const U & u\n)\n\nEquality Operator. \nCheck equality between an optional object with another object\nTemplate parameters:\n\nT - Type of contained value of the optional object \nU - Type of the other object to be compared \n\nParameters:\n\nleft - First object to be compared \nu - Second object to be compared \n\nReturns:\ntrue - if the optional objects contained value is equal with the compared object \nReturns:\nfalse \nfunction operator!=\nbool optionaltype::operator!= (\n    const optional & left,\n    const optional & right\n)\n\nInquality Operator. \nCheck inequality between two optional object that shares same type of contained value\nTemplate parameters:\n\nT - Type of contained value of the optional objects \n\nParameters:\n\nleft - First object to be compared \nright - Second object to be compared \n\nReturns:\ntrue - if both optional objects are unequal \nReturns:\nfalse \nfunction operator!=\nbool optionaltype::operator!= (\n    const optional & left,\n    const U & u\n)\n\nInqquality Operator. \nCheck inequality between an optional object with another object\nTemplate parameters:\n\nT - Type of contained value of the optional object \nU - Type of the other object to be compared \n\nParameters:\n\nleft - First object to be compared \nu - Second object to be compared \n\nReturns:\ntrue - if the optional objects contained value is unequal with the compared object \nReturns:\nfalse \n"},"group__producertype.html":{"url":"group__producertype.html","title":"Producertype","keywords":"producertype eosio::producer_key max_block_net_usage target_block_net_usage_pct max_transaction_net_usage base_per_transaction_net_usage net_usage_leeway context_free_discount_net_usage_num context_free_discount_net_usage_den max_block_cpu_usage target_block_cpu_usage_pct max_transaction_cpu_usage min_transaction_cpu_usage context_free_discount_cpu_usage_num context_free_discount_cpu_usage_den max_transaction_lifetime deferred_trx_expiration_window max_transaction_delay max_inline_action_size max_inline_action_depth max_authority_depth producer_name block_signing_key operator<","body":"group producertype\nDefines producer type. \nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::producer_key\n\n\n\nVariables\nvariable max_block_net_usage\nuint64_t eosio::blockchain_parameters::max_block_net_usage;\n\nvariable target_block_net_usage_pct\nuint32_t eosio::blockchain_parameters::target_block_net_usage_pct;\n\nvariable max_transaction_net_usage\nuint32_t eosio::blockchain_parameters::max_transaction_net_usage;\n\nvariable base_per_transaction_net_usage\nuint32_t eosio::blockchain_parameters::base_per_transaction_net_usage;\n\nThe base amount of net usage billed for a transaction to cover incidentals. \nThe base amount of net usage billed for a transaction to cover incidentals \nvariable net_usage_leeway\nuint32_t eosio::blockchain_parameters::net_usage_leeway;\n\nvariable context_free_discount_net_usage_num\nuint32_t eosio::blockchain_parameters::context_free_discount_net_usage_num;\n\nvariable context_free_discount_net_usage_den\nuint32_t eosio::blockchain_parameters::context_free_discount_net_usage_den;\n\nvariable max_block_cpu_usage\nuint32_t eosio::blockchain_parameters::max_block_cpu_usage;\n\nvariable target_block_cpu_usage_pct\nuint32_t eosio::blockchain_parameters::target_block_cpu_usage_pct;\n\nvariable max_transaction_cpu_usage\nuint32_t eosio::blockchain_parameters::max_transaction_cpu_usage;\n\nvariable min_transaction_cpu_usage\nuint32_t eosio::blockchain_parameters::min_transaction_cpu_usage;\n\nvariable context_free_discount_cpu_usage_num\nuint64_t eosio::blockchain_parameters::context_free_discount_cpu_usage_num;\n\nThe numerator for the discount on cpu usage for CFA's. \nThe numerator for the discount on cpu usage for CFA's \nvariable context_free_discount_cpu_usage_den\nuint64_t eosio::blockchain_parameters::context_free_discount_cpu_usage_den;\n\nThe denominator for the discount on cpu usage for CFA's. \nThe denominator for the discount on cpu usage for CFA's \nvariable max_transaction_lifetime\nuint32_t eosio::blockchain_parameters::max_transaction_lifetime;\n\nMaximum lifetime of a transacton. \nMaximum lifetime of a transacton \nvariable deferred_trx_expiration_window\nuint32_t eosio::blockchain_parameters::deferred_trx_expiration_window;\n\nvariable max_transaction_delay\nuint32_t eosio::blockchain_parameters::max_transaction_delay;\n\nvariable max_inline_action_size\nuint32_t eosio::blockchain_parameters::max_inline_action_size;\n\nMaximum size of inline action. \nMaximum size of inline action \nvariable max_inline_action_depth\nuint16_t eosio::blockchain_parameters::max_inline_action_depth;\n\nMaximum depth of inline action. \nMaximum depth of inline action \nvariable max_authority_depth\nuint16_t eosio::blockchain_parameters::max_authority_depth;\n\nMaximum authority depth. \nMaximum authority depth \nvariable producer_name\naccount_name eosio::producer_key::producer_name;\n\nName of the producer. \nName of the producer \nvariable block_signing_key\npublic_key eosio::producer_key::block_signing_key;\n\nBlock signing key used by this producer. \nBlock signing key used by this producer \nfriend operator\nfriend bool producertype::operator\n"},"group__publickeytype.html":{"url":"group__publickeytype.html","title":"Publickeytype","keywords":"publickeytype eosio::public_key type data operator== operator!=","body":"group publickeytype\nSpecifies public key type. \nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::public_key\n\n\n\nVariables\nvariable type\nunsigned_int eosio::public_key::type;\n\nType of the public key. \nType of the public key, could be either K1 or R1 \nvariable data\nstd::array eosio::public_key::data;\n\nBytes of the public key. \nBytes of the public key \nfriend operator==\nfriend bool publickeytype::operator== (\n    const public_key & a,\n    const public_key & b\n)\n\nfriend operator!=\nfriend bool publickeytype::operator!= (\n    const public_key & a,\n    const public_key & b\n)\n\n"},"group__varint.html":{"url":"group__varint.html","title":"Varint","keywords":"varint unsigned_int signed_int","body":"group varint\nDefines variable length integer type which provides more efficient serialization/. \nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nunsigned_int\n\n\nstruct\nsigned_int\n\n\n\n"},"group__eosiorpc.html":{"url":"group__eosiorpc.html","title":"Eosiorpc","keywords":"eosiorpc","body":"group eosiorpc\nDescribes how to interface with eosd over HTTP RPC. \n"},"group__fixedpoint.html":{"url":"group__fixedpoint.html","title":"Fixedpoint","keywords":"fixedpoint eosio::fixed_point32 eosio::fixed_point64 eosio::fixed_point128","body":"group fixedpoint\n32,64,128,256 bits version of fixed point variables More...\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::fixed_point32\n\n\nstruct\neosio::fixed_point64\n\n\nstruct\neosio::fixed_point128\n\n\n\nDetailed Description\nFloating point operations are indeterministic, hence is prevented in smart contract. The smart contract developers should use the appropriate Fixed_Point template class by passing the number to be represented in integer format and the number of decimals required. These template classes also support the arithmetic operations and basic comparison operators \n"},"classes.html":{"url":"classes.html","title":"Browse","keywords":"account_permission action action_meta asset currency::account block_timestamp blockchain_parameters fixed_key::bool_pack memory_manager::memory::buffer_ptr contract currency currency::create currency::currency_stats multi_index::const_iterator multi_index::index::const_iterator datastream datastream< size_t > Extended extended_asset extended_symbol currency::fee_schedule fixed_key fixed_point128 fixed_point32 fixed_point64 currency::issue indexed_by inline_dispatcher inline_dispatcher< void(T::*)(Args...), Name > iostream multi_index::index multi_index::intc multi_index::item multi_index::item_ptr less< checksum256 > memory_manager memory_manager::memory microseconds multi_index name onerror optional permission_level producer_key producer_schedule public_key public_key reflector singleton::row Stores secondary_index_db_functions secondary_key_traits secondary_key_traits< key256 > singleton symbol_type signature signed_int currency::transfer time_point time_point_sec transaction transaction_header unsigned_int","body":"Class Index\nA\n\naccount_permission\naction (eosio)\naction_meta (eosio)\nasset (eosio)\ncurrency::account (eosio)\n\nB\n\nblock_timestamp (eosio)\nblockchain_parameters (eosio)\nfixed_key::bool_pack (eosio)\nmemory_manager::memory::buffer_ptr (eosio)\n\nC\n\ncontract (eosio)\ncurrency (eosio)\ncurrency::create (eosio)\ncurrency::currency_stats (eosio)\nmulti_index::const_iterator (eosio)\nmulti_index::index::const_iterator (eosio)\n\nD\n\ndatastream (eosio)\ndatastream (eosio)\n\nE\n\nExtended\nextended_asset (eosio)\nextended_symbol (eosio)\n\nF\n\ncurrency::fee_schedule (eosio)\nfixed_key (eosio)\nfixed_point128 (eosio)\nfixed_point32 (eosio)\nfixed_point64 (eosio)\n\nI\n\ncurrency::issue (eosio)\nindexed_by (eosio)\ninline_dispatcher (eosio)\ninline_dispatcher (eosio)\niostream (eosio)\nmulti_index::index (eosio)\nmulti_index::intc (eosio)\nmulti_index::item (eosio)\nmulti_index::item_ptr (eosio)\n\nL\n\nless (std)\n\nM\n\nmemory_manager (eosio)\nmemory_manager::memory (eosio)\nmicroseconds (eosio)\nmulti_index (eosio)\n\nN\n\nname (eosio)\n\nO\n\nonerror (eosio)\noptional (eosio)\n\nP\n\npermission_level (eosio)\nproducer_key (eosio)\nproducer_schedule (eosio)\npublic_key (eosio)\npublic_key\n\nR\n\nreflector (eosio)\nsingleton::row (eosio)\n\nS\n\nStores\nsecondary_index_db_functions (_multi_index_detail)\nsecondary_key_traits (_multi_index_detail)\nsecondary_key_traits (_multi_index_detail)\nsingleton (eosio)\nsymbol_type (eosio)\nsignature\nsigned_int\n\nT\n\ncurrency::transfer (eosio)\ntime_point (eosio)\ntime_point_sec (eosio)\ntransaction (eosio)\ntransaction_header (eosio)\n\nU\n\nunsigned_int\n\n"},"functions.html":{"url":"functions.html","title":"Function Index","keywords":"action::action currency::add_balance memory_manager::adjust_to_mem_block currency::apply asset::asset multi_index::available_primary_key multi_index::index::begin block_timestamp::block_timestamp memory_manager::memory::buffer_ptr::buffer_ptr inline_dispatcher< void(T::*)(Args...), Name >::call multi_index::index::cbegin multi_index::index::cend memory_manager::memory::cleanup_remaining multi_index::index::const_iterator::const_iterator contract::contract microseconds::count multi_index::index::crbegin currency::create_currency multi_index::index::crend currency::currency action::data_as datastream< size_t >::datastream action::EOSLIB_SERIALIZE optional::emplace multi_index::index::end multi_index::index::erase singleton::exists memory_manager::memory::expand_memory extended_asset::extended_asset extended_symbol::extended_symbol multi_index::index::extract_secondary_key multi_index::index::find fixed_key::fixed_key fixed_point128::fixed_point128 fixed_point32::fixed_point32 fixed_point64::fixed_point64 fixed_point64::frac_part memory_manager::memory::free onerror::from_current_action time_point::from_iso_string singleton::get action_meta::get_account currency::get_balance multi_index::index::get_code extended_asset::get_extended_symbol multi_index::get_index action_meta::get_name singleton::get_or_create singleton::get_or_default multi_index::index::get_scope contract::get_self currency::get_supply multi_index::index::index memory_manager::memory::init currency::inline_transfer fixed_point64::int_part memory_manager::memory::buffer_ptr::is_alloc asset::is_amount_within_range memory_manager::memory::is_capacity_remaining memory_manager::memory::is_in_heap memory_manager::memory::is_init symbol_type::is_valid currency::issue_currency multi_index::item::item multi_index::item_ptr::item_ptr multi_index::iterator_to multi_index::load_object_by_primary_iterator multi_index::lower_bound secondary_key_traits< key256 >::lowest memory_manager::memory::malloc memory_manager::memory::malloc_from_freed memory_manager::memory::buffer_ptr::mark_alloc memory_manager::memory::buffer_ptr::mark_free time_point_sec::maximum memory_manager::memory::memory memory_manager::memory_manager memory_manager::memory::buffer_ptr::merge_contiguous memory_manager::memory::buffer_ptr::merge_contiguous_if_available microseconds::microseconds time_point_sec::min multi_index::modify multi_index::multi_index symbol_type::name symbol_type::name_length block_timestamp::next memory_manager::next_active_heap memory_manager::memory::buffer_ptr::next_ptr fixed_key::num_words multi_index::index::number currency::on unsigned_int::operator T optional::operator bool signed_int::operator int32_t time_point::operator std::string symbol_type::operator symbol_name time_point_sec::operator time_point name::operator uint64_t optional::operator! time_point::operator!= less< checksum256 >::operator() optional::operator* asset::operator*= time_point_sec::operator+ signed_int::operator++ time_point_sec::operator+= time_point_sec::operator- multi_index::index::const_iterator::operator-- time_point_sec::operator-= optional::operator-> fixed_point64::operator/ asset::operator/= time_point::operator< time_point::operator<= unsigned_int::operator= time_point::operator== time_point::operator> time_point::operator>= optional::optional fixed_key::padded_bytes permission_level::permission_level datastream::pos symbol_type::precision singleton::row::primary_key symbol_type::print optional::ptr datastream< size_t >::put multi_index::rbegin datastream::read memory_manager::realloc memory_manager::memory::realloc_in_place optional::ref datastream< size_t >::remaining singleton::remove multi_index::rend multi_index::require_find optional::reset time_point_sec::sec_since_epoch datastream< size_t >::seekp transaction::send action::send_context_free singleton::set asset::set_amount fixed_key::set_from_word_sequence block_timestamp::set_time_point signed_int::signed_int singleton::singleton memory_manager::memory::buffer_ptr::size datastream< size_t >::skip currency::sub_balance symbol_type::symbol_type datastream< size_t >::tellp time_point::time_point time_point_sec::time_point_sec time_point::time_since_epoch microseconds::to_seconds name::to_string block_timestamp::to_time_point transaction::transaction transaction_header::transaction_header multi_index::transform_indices name::trim_right_dots onerror::unpack_sent_trx unsigned_int::unsigned_int multi_index::upper_bound optional::valid multi_index::index::validate_index_name multi_index::validate_table_name memory_manager::void ::free datastream< size_t >::write optional::~optional","body":"Function Index\nHere is a list of all functions with links to the class documentation for each member:\nA\n\naction (eosio::action)\nadd_balance (eosio::currency)\nadjust_to_mem_block (eosio::memory_manager)\napply (eosio::currency)\nasset (eosio::asset)\navailable_primary_key (eosio::multi_index)\n\nB\n\nbegin (eosio::multi_index, eosio::multi_index::index)\nblock_timestamp (eosio::block_timestamp)\nbuffer_ptr (eosio::memory_manager::memory::buffer_ptr)\n\nC\n\ncall (eosio::inline_dispatcher)\ncbegin (eosio::multi_index, eosio::multi_index::index)\ncend (eosio::multi_index, eosio::multi_index::index)\ncleanup_remaining (eosio::memory_manager::memory)\nconst_iterator (eosio::multi_index::const_iterator, eosio::multi_index::index::const_iterator)\ncontract (eosio::contract)\ncount (eosio::microseconds)\ncrbegin (eosio::multi_index, eosio::multi_index::index)\ncreate_currency (eosio::currency)\ncrend (eosio::multi_index, eosio::multi_index::index)\ncurrency (eosio::currency)\n\nD\n\ndata_as (eosio::action)\ndatastream (eosio::datastream, eosio::datastream)\n\nE\n\nEOSLIB_SERIALIZE (eosio::action)\nemplace (eosio::multi_index, eosio::optional)\nend (eosio::memory_manager::memory::buffer_ptr, eosio::multi_index, eosio::multi_index::index)\nerase (eosio::multi_index, eosio::multi_index::index)\nexists (eosio::singleton)\nexpand_memory (eosio::memory_manager::memory)\nextended_asset (eosio::extended_asset)\nextended_symbol (eosio::extended_symbol)\nextract_secondary_key (eosio::multi_index::index)\n\nF\n\nfind (eosio::multi_index, eosio::multi_index::index)\nfixed_key (eosio::fixed_key)\nfixed_point128 (eosio::fixed_point128)\nfixed_point32 (eosio::fixed_point32)\nfixed_point64 (eosio::fixed_point64)\nfrac_part (eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64)\nfree (eosio::memory_manager, eosio::memory_manager::memory)\nfrom_current_action (eosio::onerror)\nfrom_iso_string (eosio::time_point)\n\nG\n\nget (eosio::datastream, eosio::multi_index, eosio::multi_index::index, eosio::singleton)\nget_account (eosio::action_meta)\nget_balance (eosio::currency)\nget_code (eosio::multi_index, eosio::multi_index::index)\nget_extended_symbol (eosio::extended_asset)\nget_index (eosio::multi_index)\nget_name (eosio::action_meta)\nget_or_create (eosio::singleton)\nget_or_default (eosio::singleton)\nget_scope (eosio::multi_index, eosio::multi_index::index)\nget_self (eosio::contract)\nget_supply (eosio::currency)\n\nH\nI\n\nindex (eosio::multi_index::index)\ninit (eosio::memory_manager::memory)\ninline_transfer (eosio::currency)\nint_part (eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64)\nis_alloc (eosio::memory_manager::memory::buffer_ptr)\nis_amount_within_range (eosio::asset)\nis_capacity_remaining (eosio::memory_manager::memory)\nis_in_heap (eosio::memory_manager::memory)\nis_init (eosio::memory_manager::memory)\nis_valid (eosio::asset, eosio::symbol_type)\nissue_currency (eosio::currency)\nitem (eosio::multi_index::item)\nitem_ptr (eosio::multi_index::item_ptr)\niterator_to (eosio::multi_index::index, eosio::multi_index)\n\nL\n\nload_object_by_primary_iterator (eosio::multi_index)\nlower_bound (eosio::multi_index::index, eosio::multi_index)\nlowest (eosio::_multi_index_detail::secondary_key_traits)\n\nM\n\nmalloc (eosio::memory_manager, eosio::memory_manager::memory)\nmalloc_from_freed (eosio::memory_manager::memory)\nmark_alloc (eosio::memory_manager::memory::buffer_ptr)\nmark_free (eosio::memory_manager::memory::buffer_ptr)\nmaximum (eosio::block_timestamp, eosio::microseconds, eosio::time_point_sec)\nmemory (eosio::memory_manager::memory)\nmemory_manager (eosio::memory_manager)\nmerge_contiguous (eosio::memory_manager::memory::buffer_ptr)\nmerge_contiguous_if_available (eosio::memory_manager::memory::buffer_ptr)\nmicroseconds (eosio::microseconds)\nmin (eosio::block_timestamp, eosio::time_point_sec)\nmodify (eosio::multi_index::index, eosio::multi_index)\nmulti_index (eosio::multi_index)\n\nN\n\nname (eosio::multi_index::index, eosio::symbol_type)\nname_length (eosio::symbol_type)\nnext (eosio::block_timestamp)\nnext_active_heap (eosio::memory_manager)\nnext_ptr (eosio::memory_manager::memory::buffer_ptr)\nnum_words (eosio::fixed_key)\nnumber (eosio::multi_index::index)\n\nO\n\non (eosio::currency)\noperator T (unsigned_int)\noperator bool (eosio::optional)\noperator int32_t (signed_int)\noperator std::string (eosio::time_point)\noperator symbol_name (eosio::symbol_type)\noperator time_point (eosio::block_timestamp, eosio::time_point_sec)\noperator uint64_t (eosio::multi_index::intc, eosio::name)\noperator! (eosio::optional)\noperator!= (eosio::block_timestamp, eosio::microseconds, eosio::time_point)\noperator() (std::less)\noperator* (eosio::fixed_point32, eosio::fixed_point64, eosio::multi_index::const_iterator, eosio::multi_index::index::const_iterator, eosio::optional)\noperator*= (eosio::asset)\noperator+ (eosio::fixed_point32, eosio::fixed_point64, eosio::time_point, eosio::time_point_sec)\noperator++ (eosio::multi_index::const_iterator, eosio::multi_index::index::const_iterator, signed_int)\noperator+= (eosio::asset, eosio::microseconds, eosio::time_point, eosio::time_point_sec)\noperator- (eosio::asset, eosio::extended_asset, eosio::fixed_point32, eosio::fixed_point64, eosio::time_point, eosio::time_point_sec)\noperator-- (eosio::multi_index::const_iterator, eosio::multi_index::index::const_iterator)\noperator-= (eosio::asset, eosio::microseconds, eosio::time_point, eosio::time_point_sec)\noperator-> (eosio::multi_index::const_iterator, eosio::multi_index::index::const_iterator, eosio::optional)\noperator/ (eosio::fixed_point32, eosio::fixed_point64)\noperator/= (eosio::asset)\noperator (eosio::block_timestamp, eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64, eosio::time_point)\noperator (eosio::block_timestamp, eosio::time_point)\noperator= (eosio::block_timestamp, eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64, eosio::optional, eosio::time_point_sec, signed_int, unsigned_int)\noperator== (eosio::block_timestamp, eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64, eosio::microseconds, eosio::time_point)\noperator> (eosio::block_timestamp, eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64, eosio::time_point)\noperator>= (eosio::block_timestamp, eosio::time_point)\noptional (eosio::optional)\n\nP\n\npadded_bytes (eosio::fixed_key)\npermission_level (eosio::permission_level)\npos (eosio::datastream)\nprecision (eosio::symbol_type)\nprimary_key (eosio::currency::account, eosio::currency::currency_stats, eosio::currency::fee_schedule, eosio::singleton::row)\nprint (eosio::asset, eosio::extended_asset, eosio::extended_symbol, eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64, eosio::symbol_type)\nptr (eosio::memory_manager::memory::buffer_ptr, eosio::optional)\nput (eosio::datastream, eosio::datastream)\n\nR\n\nrbegin (eosio::multi_index::index, eosio::multi_index)\nread (eosio::datastream)\nrealloc (eosio::memory_manager)\nrealloc_in_place (eosio::memory_manager::memory)\nref (eosio::optional)\nremaining (eosio::datastream, eosio::datastream)\nremove (eosio::singleton)\nrend (eosio::multi_index::index, eosio::multi_index)\nrequire_find (eosio::multi_index::index, eosio::multi_index)\nreset (eosio::optional)\n\nS\n\nsec_since_epoch (eosio::time_point, eosio::time_point_sec)\nseekp (eosio::datastream, eosio::datastream)\nsend (eosio::transaction)\nsend_context_free (eosio::action)\nset (eosio::singleton)\nset_amount (eosio::asset)\nset_from_word_sequence (eosio::fixed_key)\nset_time_point (eosio::block_timestamp)\nsigned_int (signed_int)\nsingleton (eosio::singleton)\nsize (eosio::memory_manager::memory::buffer_ptr)\nskip (eosio::datastream, eosio::datastream)\nsub_balance (eosio::currency)\nsymbol_type (eosio::symbol_type)\n\nT\n\ntellp (eosio::datastream, eosio::datastream)\ntime_point (eosio::time_point)\ntime_point_sec (eosio::time_point_sec)\ntime_since_epoch (eosio::time_point)\nto_seconds (eosio::microseconds)\nto_string (eosio::name)\nto_time_point (eosio::block_timestamp)\ntransaction (eosio::transaction)\ntransaction_header (eosio::transaction_header)\ntransform_indices (eosio::multi_index)\ntrim_right_dots (eosio::name)\n\nU\n\nunpack_sent_trx (eosio::onerror)\nunsigned_int (unsigned_int)\nupper_bound (eosio::multi_index::index, eosio::multi_index)\n\nV\n\nvalid (eosio::datastream, eosio::datastream, eosio::optional)\nvalidate_index_name (eosio::multi_index::index)\nvalidate_table_name (eosio::multi_index)\nvoid ::free (eosio::memory_manager)\n\nW\n\nwrite (eosio::datastream, eosio::datastream)\n\n_\n~\n\n~optional (eosio::optional)\n\n"},"variables.html":{"url":"variables.html","title":"Variable Index","keywords":"action::account transaction::actions permission_level::actor asset::amount fixed_key::arr fixed_key::arr_itr action::authorization currency::account::balance blockchain_parameters::base_per_transaction_net_usage block_timestamp::block_interval_ms producer_key::block_signing_key block_timestamp::block_timestamp_epoch currency::currency_stats::can_freeze currency::currency_stats::can_recall currency::currency_stats::can_whitelist transaction::context_free_actions blockchain_parameters::context_free_discount_cpu_usage_den blockchain_parameters::context_free_discount_cpu_usage_num blockchain_parameters::context_free_discount_net_usage_den blockchain_parameters::context_free_discount_net_usage_num extended_symbol::contract signature::data blockchain_parameters::deferred_trx_expiration_window transaction_header::delay_sec time_point::elapsed currency::currency_stats::enforce_whitelist transaction_header::expiration currency::fee_schedule::fee_per_length currency::transfer::from currency::account::frozen multi_index::indices_type currency::currency_stats::is_frozen currency::currency_stats::issuer currency::create::issuer_can_freeze currency::create::issuer_can_recall currency::create::issuer_can_whitelist asset::max_amount blockchain_parameters::max_authority_depth blockchain_parameters::max_block_cpu_usage blockchain_parameters::max_block_net_usage transaction_header::max_cpu_usage_ms blockchain_parameters::max_inline_action_depth blockchain_parameters::max_inline_action_size multi_index::max_stack_buffer_size currency::currency_stats::max_supply blockchain_parameters::max_transaction_cpu_usage blockchain_parameters::max_transaction_delay blockchain_parameters::max_transaction_lifetime blockchain_parameters::max_transaction_net_usage currency::create::maximum_supply currency::transfer::memo blockchain_parameters::min_transaction_cpu_usage action::name blockchain_parameters::net_usage_leeway transaction_header::net_usage_words permission_level::permission singleton::pk_value producer_key::producer_name producer_schedule::producers currency::transfer::quantity transaction_header::ref_block_num transaction_header::ref_block_prefix onerror::sender_id onerror::sent_trx block_timestamp::slot currency::currency_stats::supply asset::symbol blockchain_parameters::target_block_cpu_usage_pct blockchain_parameters::target_block_net_usage_pct currency::transfer::to transaction::transaction_extensions public_key::type time_point_sec::utc_seconds fixed_point64::val unsigned_int::value producer_schedule::version currency::account::whitelist multi_index::item::__idx multi_index::item::__iters multi_index::item::__primary_itr memory_manager::_active_free_heap memory_manager::_active_heap memory_manager::_alloc_memory_mask memory_manager::_available_heaps multi_index::_code currency::_contract microseconds::_count fixed_key::_data datastream::_end memory_manager::memory::_heap memory_manager::memory::buffer_ptr::_heap_end memory_manager::memory::_heap_size memory_manager::_heaps_actual_size memory_manager::_heaps_size multi_index::index::const_iterator::_idx multi_index::_indices memory_manager::_initial_heap memory_manager::_initial_heap_size multi_index::item_ptr::_item multi_index::_items_vector memory_manager::_mem_block multi_index::index::_multidx multi_index::_next_primary_key memory_manager::memory::_offset datastream::_pos multi_index::item_ptr::_primary_itr multi_index::item_ptr::_primary_key memory_manager::memory::buffer_ptr::_ptr memory_manager::_rem_mem_block_mask multi_index::_scope contract::_self memory_manager::memory::buffer_ptr::_size memory_manager::_size_marker datastream::_start singleton::_t optional::_valid optional::_value","body":"Variable Index\nHere is a list of all variables with links to the class documentation for each member:\nA\n\naccount (account_permission, eosio::action)\nactions (eosio::transaction)\nactor (eosio::permission_level)\namount (eosio::asset)\narr (eosio::fixed_key)\narr_itr (eosio::fixed_key)\nauthorization (eosio::action)\n\nB\n\nbalance (eosio::currency::account)\nbase_per_transaction_net_usage (eosio::blockchain_parameters)\nblock_interval_ms (eosio::block_timestamp)\nblock_signing_key (eosio::producer_key)\nblock_timestamp_epoch (eosio::block_timestamp)\n\nC\n\ncan_freeze (eosio::currency::currency_stats)\ncan_recall (eosio::currency::currency_stats)\ncan_whitelist (eosio::currency::currency_stats)\ncontext_free_actions (eosio::transaction)\ncontext_free_discount_cpu_usage_den (eosio::blockchain_parameters)\ncontext_free_discount_cpu_usage_num (eosio::blockchain_parameters)\ncontext_free_discount_net_usage_den (eosio::blockchain_parameters)\ncontext_free_discount_net_usage_num (eosio::blockchain_parameters)\ncontract (eosio::extended_asset, eosio::extended_symbol)\n\nD\n\ndata (eosio::action, eosio::public_key, public_key, signature)\ndeferred_trx_expiration_window (eosio::blockchain_parameters)\ndelay_sec (eosio::transaction_header)\n\nE\n\nelapsed (eosio::time_point)\nenforce_whitelist (eosio::currency::currency_stats)\nexpiration (eosio::transaction_header)\n\nF\n\nfee_per_length (eosio::currency::fee_schedule)\nfrom (eosio::currency::transfer)\nfrozen (eosio::currency::account)\n\nI\n\nindices_type (eosio::multi_index)\nis_frozen (eosio::currency::currency_stats)\nissuer (eosio::currency::create, eosio::currency::currency_stats)\nissuer_can_freeze (eosio::currency::create)\nissuer_can_recall (eosio::currency::create)\nissuer_can_whitelist (eosio::currency::create)\n\nM\n\nmax_amount (eosio::asset)\nmax_authority_depth (eosio::blockchain_parameters)\nmax_block_cpu_usage (eosio::blockchain_parameters)\nmax_block_net_usage (eosio::blockchain_parameters)\nmax_cpu_usage_ms (eosio::transaction_header)\nmax_inline_action_depth (eosio::blockchain_parameters)\nmax_inline_action_size (eosio::blockchain_parameters)\nmax_stack_buffer_size (eosio::multi_index)\nmax_supply (eosio::currency::currency_stats)\nmax_transaction_cpu_usage (eosio::blockchain_parameters)\nmax_transaction_delay (eosio::blockchain_parameters)\nmax_transaction_lifetime (eosio::blockchain_parameters)\nmax_transaction_net_usage (eosio::blockchain_parameters)\nmaximum_supply (eosio::currency::create)\nmemo (eosio::currency::issue, eosio::currency::transfer)\nmin_transaction_cpu_usage (eosio::blockchain_parameters)\n\nN\n\nname (eosio::action)\nnet_usage_leeway (eosio::blockchain_parameters)\nnet_usage_words (eosio::transaction_header)\n\nP\n\npermission (account_permission, eosio::permission_level)\npk_value (eosio::singleton)\nproducer_name (eosio::producer_key)\nproducers (eosio::producer_schedule)\n\nQ\n\nquantity (eosio::currency::issue, eosio::currency::transfer)\n\nR\n\nref_block_num (eosio::transaction_header)\nref_block_prefix (eosio::transaction_header)\n\nS\n\nsender_id (eosio::onerror)\nsent_trx (eosio::onerror)\nslot (eosio::block_timestamp)\nsupply (eosio::currency::currency_stats)\nsymbol (eosio::asset)\n\nT\n\ntarget_block_cpu_usage_pct (eosio::blockchain_parameters)\ntarget_block_net_usage_pct (eosio::blockchain_parameters)\nto (eosio::currency::issue, eosio::currency::transfer)\ntransaction_extensions (eosio::transaction)\ntype (eosio::public_key)\n\nU\n\nutc_seconds (eosio::time_point_sec)\n\nV\n\nval (eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64)\nvalue (eosio::name, eosio::singleton::row, eosio::symbol_type, signed_int, unsigned_int)\nversion (eosio::producer_schedule)\n\nW\n\nwhitelist (eosio::currency::account)\n\n_\n\n__idx (eosio::multi_index::item)\n__iters (eosio::multi_index::item)\n__primary_itr (eosio::multi_index::item)\n_active_free_heap (eosio::memory_manager)\n_active_heap (eosio::memory_manager)\n_alloc_memory_mask (eosio::memory_manager)\n_available_heaps (eosio::memory_manager)\n_code (eosio::multi_index)\n_contract (eosio::currency)\n_count (eosio::microseconds)\n_data (eosio::fixed_key)\n_end (eosio::datastream)\n_heap (eosio::memory_manager::memory)\n_heap_end (eosio::memory_manager::memory::buffer_ptr)\n_heap_size (eosio::memory_manager::memory)\n_heaps_actual_size (eosio::memory_manager)\n_heaps_size (eosio::memory_manager)\n_idx (eosio::multi_index::index::const_iterator)\n_indices (eosio::multi_index)\n_initial_heap (eosio::memory_manager)\n_initial_heap_size (eosio::memory_manager)\n_item (eosio::multi_index::const_iterator, eosio::multi_index::index::const_iterator, eosio::multi_index::item_ptr)\n_items_vector (eosio::multi_index)\n_mem_block (eosio::memory_manager)\n_multidx (eosio::multi_index::const_iterator, eosio::multi_index::index)\n_next_primary_key (eosio::multi_index)\n_offset (eosio::memory_manager::memory)\n_pos (eosio::datastream)\n_primary_itr (eosio::multi_index::item_ptr)\n_primary_key (eosio::multi_index::item_ptr)\n_ptr (eosio::memory_manager::memory::buffer_ptr)\n_rem_mem_block_mask (eosio::memory_manager)\n_scope (eosio::multi_index)\n_self (eosio::contract)\n_size (eosio::datastream, eosio::memory_manager::memory::buffer_ptr)\n_size_marker (eosio::memory_manager)\n_start (eosio::datastream)\n_t (eosio::singleton)\n_valid (eosio::optional)\n_value (eosio::optional)\n\n"},"enumerations.html":{"url":"enumerations.html","title":"Enumeration Index","keywords":"multi_index::index::constants multi_index::intc::e multi_index::next_primary_key_tags","body":"Enumeration Index\nHere is a list of all enumerations with links to the class documentation for each member:\nC\n\nconstants (eosio::indexed_by, eosio::multi_index::index)\n\nE\n\ne (eosio::multi_index::intc)\n\nN\n\nnext_primary_key_tags (eosio::multi_index)\n\n"},"annotated.html":{"url":"annotated.html","title":"Class List","keywords":"Extended Stores account_permission eosio _datastream_detail _multi_index_detail secondary_index_db_functions secondary_key_traits secondary_key_traits< key256 > action action_meta asset block_timestamp blockchain_parameters contract currency account create currency_stats fee_schedule issue transfer datastream datastream< size_t > extended_asset extended_symbol fixed_key bool_pack fixed_point128 fixed_point32 fixed_point64 indexed_by inline_dispatcher inline_dispatcher< void(T::*)(Args...), Name > iostream memory_manager memory buffer_ptr microseconds multi_index const_iterator index const_iterator intc item item_ptr name onerror optional permission_level producer_key producer_schedule public_key reflector singleton row symbol_type time_point time_point_sec transaction transaction_header public_key signature signed_int std less< checksum256 > unsigned_int","body":"Class List\nHere are the classes, structs, unions and interfaces with brief descriptions:\n\nstruct Extended\nstruct Stores\nstruct account_permission\nnamespace eosio\nnamespace _datastream_detail\nnamespace _multi_index_detail\nstruct secondary_index_db_functions\nstruct secondary_key_traits\nstruct secondary_key_traits\n\n\nstruct action\nstruct action_meta\nstruct asset\nclass block_timestamp\nstruct blockchain_parameters\nclass contract\nclass currency\nstruct account\nstruct create\nstruct currency_stats\nstruct fee_schedule\nstruct issue\nstruct transfer\n\n\nclass datastream\nclass datastream\nstruct extended_asset\nstruct extended_symbol\nclass fixed_key\nstruct bool_pack\n\n\nstruct fixed_point128\nstruct fixed_point32\nstruct fixed_point64\nstruct indexed_by\nstruct inline_dispatcher\nstruct inline_dispatcher\nclass iostream\nclass memory_manager\nclass memory\nclass buffer_ptr\n\n\n\n\nclass microseconds\nclass multi_index\nstruct const_iterator\nstruct index\nstruct const_iterator\n\n\nstruct intc\nstruct item\nstruct item_ptr\n\n\nstruct name\nstruct onerror\nclass optional\nstruct permission_level\nstruct producer_key\nstruct producer_schedule\nstruct public_key\nstruct reflector\nclass singleton\nstruct row\n\n\nstruct symbol_type\nclass time_point\nclass time_point_sec\nclass transaction\nclass transaction_header\n\n\nstruct public_key\nstruct signature\nstruct signed_int\nnamespace std\nstruct less\n\n\nstruct unsigned_int\n\n"},"struct_extended.html":{"url":"struct_extended.html","title":"struct Extended","keywords":"Extended","body":"struct Extended\nClass List > Extended\nExtended asset which stores the information of the owner of the asset. More...\nDetailed Description\nstores the information of the owner of the asset \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/asset.hpp\n"},"struct_stores.html":{"url":"struct_stores.html","title":"struct Stores","keywords":"Stores","body":"struct Stores\nClass List > Stores\nStores information about a symbol. More...\nDetailed Description\na symbol \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/symbol.hpp\n"},"structaccount__permission.html":{"url":"structaccount__permission.html","title":"struct account_permission","keywords":"account_permission account permission","body":"struct account_permission\nClass List > account_permission\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\naccount_name\naccount\n\n\npermission_name\npermission\n\n\n\nvariable account\naccount_name account_permission::account;\n\nvariable permission\npermission_name account_permission::permission;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/types.h\n"},"namespaceeosio.html":{"url":"namespaceeosio.html","title":"namespace eosio","keywords":"eosio action action_meta asset block_timestamp blockchain_parameters contract currency datastream datastream< size_t > extended_asset extended_symbol fixed_key fixed_point128 fixed_point32 fixed_point64 indexed_by inline_dispatcher inline_dispatcher< void(T::*)(Args...), Name > iostream memory_manager microseconds multi_index name onerror optional permission_level producer_key producer_schedule public_key reflector singleton symbol_type time_point time_point_sec transaction transaction_header key256 symbol_name block_timestamp_type extensions_type bytes memory_heap cout unpack_action_data require_recipient require_auth dispatch_inline operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator>> operator<< operator>> operator<< operator<< operator>> operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> unpack unpack pack_size pack operator<< operator>> operator<< operator>> dispatch dispatch execute_action set_blockchain_parameters get_blockchain_parameters operator== operator!= operator> operator< assignHelper fixed_divide fixed_divide operator== operator== operator!= operator!= check_transaction_authorization check_permission_authorization print print print print print print print print print print print print print print print print print print print print print_f print_f print operator<< string_to_symbol is_valid_symbol symbol_name_length seconds milliseconds minutes hours days get_action char_to_symbol string_to_name name_suffix","body":"namespace eosio\nClass List > eosio\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\naction\n\n\nstruct\naction_meta\n\n\nstruct\nasset\n\n\nclass\nblock_timestamp\n\n\nstruct\nblockchain_parameters\n\n\nclass\ncontract\n\n\nclass\ncurrency\n\n\nclass\ndatastream\n\n\nclass\ndatastream\n\n\nstruct\nextended_asset\n\n\nstruct\nextended_symbol\n\n\nclass\nfixed_key\n\n\nstruct\nfixed_point128\n\n\nstruct\nfixed_point32\n\n\nstruct\nfixed_point64\n\n\nstruct\nindexed_by\n\n\nstruct\ninline_dispatcher\n\n\nstruct\ninline_dispatcher\n\n\nclass\niostream\n\n\nclass\nmemory_manager\n\n\nclass\nmicroseconds\n\n\nclass\nmulti_index\n\n\nstruct\nname\n\n\nstruct\nonerror\n\n\nclass\noptional\n\n\nstruct\npermission_level\n\n\nstruct\nproducer_key\n\n\nstruct\nproducer_schedule\n\n\nstruct\npublic_key\n\n\nstruct\nreflector\n\n\nclass\nsingleton\n\n\nstruct\nsymbol_type\n\n\nclass\ntime_point\n\n\nclass\ntime_point_sec\n\n\nclass\ntransaction\n\n\nclass\ntransaction_header\n\n\n\n\n\n\nType\nName\n\n\n\n\ntypedef fixed_key\nkey256\n\n\ntypedef uint64_t\nsymbol_name\n\n\ntypedef block_timestamp\nblock_timestamp_type\n\n\ntypedef std::vector > >\nextensions_type\n\n\ntypedef std::vector\nbytes\n\n\n\nVariables\n\n\n\nType\nName\n\n\n\n\nmemory_manager\nmemory_heap\n\n\nstatic iostream\ncout\n\n\n\n\n\n\nType\nName\n\n\n\n\nT\nunpack_action_data () Interpret the action body as type T.\n\n\nvoid\nrequire_recipient (account_name name, accounts... remaining_accounts) Notify an account for this action.\n\n\nvoid\nrequire_auth (const permission_level & level) Require the specified authorization for this action.\n\n\nvoid\ndispatch_inline (account_name code, action_name act, vectorpermission_level > perms, std::tuple args)\n\n\ndatastream &\noperator (datastream & ds, const public_key pubkey) Serialize a public_key.\n\n\ndatastream &\noperator>> (datastream & ds, public_key & pubkey) Deserialize a public_key.\n\n\ndatastream &\noperator (datastream & ds, const key256 & d) Serialize a key256.\n\n\ndatastream &\noperator>> (datastream & ds, key256 & d) Deserialize a key256.\n\n\ndatastream &\noperator (datastream & ds, const bool & d) Serialize a bool into a stream.\n\n\ndatastream &\noperator>> (datastream & ds, bool & d) Deserialize a bool.\n\n\ndatastream &\noperator (datastream & ds, const checksum256 & d) Serialize a checksum256.\n\n\ndatastream &\noperator>> (datastream & ds, checksum256 & d) Deserialize a checksum256.\n\n\nDataStream &\noperator (DataStream & ds, const std::string & v) Serialize a string.\n\n\nDataStream &\noperator>> (DataStream & ds, std::string & v) Deserialize a string.\n\n\nDataStream &\noperator (DataStream & ds, const std::arrayN > & v) Serialize a fixed size array.\n\n\nDataStream &\noperator>> (DataStream & ds, std::arrayN > & v) Deserialize a fixed size array.\n\n\nDataStream &\noperator>> (DataStream & ds, T) Deserialize a a pointer.\n\n\nDataStream &\noperator (DataStream & ds, const T(&) v) Serialize a fixed size array of non-primitive and non-pointer type.\n\n\nDataStream &\noperator>> (DataStream & ds, T(&) v) Deserialize a fixed size array of non-primitive and non-pointer type.\n\n\nDataStream &\noperator (DataStream & ds, const vector & v) Serialize a vector of char.\n\n\nDataStream &\noperator (DataStream & ds, const vector & v) Serialize a vector.\n\n\nDataStream &\noperator>> (DataStream & ds, vector & v) Deserialize a vector of char.\n\n\nDataStream &\noperator>> (DataStream & ds, vector & v) Deserialize a vector.\n\n\nDataStream &\noperator (DataStream & ds, const std::set & s)\n\n\nDataStream &\noperator>> (DataStream & ds, std::set & s)\n\n\nDataStream &\noperator (DataStream & ds, const std::map & m) Serialize a map.\n\n\nDataStream &\noperator>> (DataStream & ds, std::map & m) Deserialize a map.\n\n\nDataStream &\noperator (DataStream & ds, const boost::container::flat_set & s)\n\n\nDataStream &\noperator>> (DataStream & ds, boost::container::flat_set & s)\n\n\nDataStream &\noperator (DataStream & ds, const boost::container::flat_map & m) Serialize a flat map.\n\n\nDataStream &\noperator>> (DataStream & ds, boost::container::flat_map & m) Deserialize a flat map.\n\n\nDataStream &\noperator (DataStream & ds, const std::tuple & t) Serialize a tuple.\n\n\nDataStream &\noperator>> (DataStream & ds, std::tuple & t) Deserialize a tuple.\n\n\nDataStream &\noperator (DataStream & ds, const T & v) Serialize a class.\n\n\nDataStream &\noperator>> (DataStream & ds, T & v) Deserialize a class.\n\n\nT\nunpack (const char * buffer, size_t len) Unpack data inside a fixed size buffer as T.\n\n\nT\nunpack (const vector & bytes) Unpack data inside a variable size buffer as T.\n\n\nsize_t\npack_size (const T & value) Get the size of the packed data.\n\n\nbytes\npack (const T & value) Get packed data.\n\n\ndatastream &\noperator (datastream & ds, const checksum160 & cs) Serialize a checksum160 type.\n\n\ndatastream &\noperator>> (datastream & ds, checksum160 & cs) Deserialize a checksum160 type.\n\n\ndatastream &\noperator (datastream & ds, const checksum512 & cs) Serialize a checksum512 type.\n\n\ndatastream &\noperator>> (datastream & ds, checksum512 & cs) Deserialize a checksum512 type.\n\n\nbool\ndispatch (uint64_t code, uint64_t act)\n\n\nbool\ndispatch (uint64_t code, uint64_t act)\n\n\nbool\nexecute_action (T * obj, void(Q::*)(Args...) func) Unpack the received action and execute the correponding action handler.\n\n\nvoid\nset_blockchain_parameters (const eosio::blockchain_parameters & params) Set the blockchain parameters Set the blockchain parameters.\n\n\nvoid\nget_blockchain_parameters (eosio::blockchain_parameters & params) Retrieve the blolckchain parameters Retrieve the blolckchain parameters.\n\n\nbool\noperator== (const fixed_key & c1, const fixed_key & c2) Compares two fixed_key variables c1 and c2.\n\n\nbool\noperator!= (const fixed_key & c1, const fixed_key & c2) Compares two fixed_key variables c1 and c2.\n\n\nbool\noperator> (const fixed_key & c1, const fixed_key & c2) Compares two fixed_key variables c1 and c2.\n\n\nbool\noperator (const fixed_key & c1, const fixed_key & c2) Compares two fixed_key variables c1 and c2.\n\n\nT\nassignHelper (T rhs_val, uint8_t q, uint8_t qr)\n\n\nfixed_point64\nfixed_divide (uint32_t lhs, uint32_t rhs) Wrapper function for dividing two unit64 variable and stores result in fixed_point64.\n\n\nfixed_point128\nfixed_divide (uint64_t lhs, uint64_t rhs) Wrapper function for dividing two unit64 variable and stores result in fixed_point128 Wrapper function for dividing two unit64 variable and stores result in fixed_point128.\n\n\nbool\noperator== (const optional & left, const optional & right) Equality Operator.\n\n\nbool\noperator== (const optional & left, const U & u) Equality Operator.\n\n\nbool\noperator!= (const optional & left, const optional & right) Inquality Operator.\n\n\nbool\noperator!= (const optional & left, const U & u) Inqquality Operator.\n\n\nbool\ncheck_transaction_authorization (const transaction & trx, const std::setpermission_level > & provided_permissions, const std::setpublic_key > & provided_keys = std::setpublic_key >()) Checks if a transaction is authorized by a provided set of keys and permissions.\n\n\nbool\ncheck_permission_authorization (account_name account, permission_name permission, const std::setpublic_key > & provided_keys, const std::setpermission_level > & provided_permissions = std::setpermission_level >(), uint64_t provided_delay_us = static_cast(std::numeric_limits::max())) Checks if a permission is authorized by a provided delay and a provided set of keys and permissions.\n\n\nvoid\nprint (const char * ptr) Prints string.\n\n\nvoid\nprint (const std::string & s)\n\n\nvoid\nprint (std::string & s)\n\n\nvoid\nprint (const char c)\n\n\nvoid\nprint (int num) Prints signed integer as a 64 bit signed integer.\n\n\nvoid\nprint (int32_t num) Prints 32 bit signed integer as a 64 bit signed integer.\n\n\nvoid\nprint (int64_t num) Prints 64 bit signed integer as a 64 bit signed integer.\n\n\nvoid\nprint (unsigned int num) Prints unsigned integer as a 64 bit unsigned integer.\n\n\nvoid\nprint (uint32_t num) Prints 32 bit unsigned integer as a 64 bit unsigned integer.\n\n\nvoid\nprint (uint64_t num) Prints 64 bit unsigned integer as a 64 bit unsigned integer.\n\n\nvoid\nprint (int128_t num) Prints 128 bit signed integer.\n\n\nvoid\nprint (uint128_t num) Prints 128 bit unsigned integer.\n\n\nvoid\nprint (float num) Prints single-precision floating point number (i.e. float)\n\n\nvoid\nprint (double num) Prints double-precision floating point number (i.e. double)\n\n\nvoid\nprint (long double num) Prints quadruple-precision floating point number (i.e. long double)\n\n\nvoid\nprint (const fixed_key & val) Prints fixed_key as a hexidecimal string.\n\n\nvoid\nprint (fixed_key & val) Prints fixed_key as a hexidecimal string.\n\n\nvoid\nprint (name name) Prints a 64 bit names as base32 encoded string.\n\n\nvoid\nprint (bool val) Prints bool.\n\n\nvoid\nprint (T && t) Prints class object.\n\n\nvoid\nprint_f (const char * s) Prints null terminated string.\n\n\nvoid\nprint_f (const char * s, Arg val, Args... rest) Prints formatted string.\n\n\nvoid\nprint (Arg && a, Args &&... args) Print out value / list of values.\n\n\niostream &\noperator (iostream & out, const T & v) Overload c++ iostream.\n\n\nstatic constexpr uint64_t\nstring_to_symbol (uint8_t precision, const char * str)\n\n\nstatic constexpr bool\nis_valid_symbol (symbol_name sym)\n\n\nstatic constexpr uint32_t\nsymbol_name_length (symbol_name sym)\n\n\nmicroseconds\nseconds (int64_t s)\n\n\nmicroseconds\nmilliseconds (int64_t s)\n\n\nmicroseconds\nminutes (int64_t m)\n\n\nmicroseconds\nhours (int64_t h)\n\n\nmicroseconds\ndays (int64_t d)\n\n\naction\nget_action (uint32_t type, uint32_t index)\n\n\nstatic constexpr char\nchar_to_symbol (char c) Converts a base32 symbol into its binary representation, used by string_to_name()\n\n\nstatic constexpr uint64_t\nstring_to_name (const char * str) Converts a base32 string to a uint64_t.\n\n\nstatic constexpr uint64_t\nname_suffix (uint64_t n)\n\n\n\ntypedef key256\ntypedef fixed_key eosio::key256;\n\ntypedef symbol_name\ntypedef uint64_t eosio::symbol_name;\n\nuint64_t representation of a symbol name \ntypedef block_timestamp_type\ntypedef block_timestamp eosio::block_timestamp_type;\n\ntypedef extensions_type\ntypedef std::vector > > eosio::extensions_type;\n\ntypedef bytes\ntypedef std::vector eosio::bytes;\n\nvariable memory_heap\nmemory_manager eosio::memory_heap;\n\nvariable cout\niostream eosio::cout;\n\nfunction unpack_action_data\nT eosio::unpack_action_data ()\n\nInterpret the action body as type T. \nThis method unpacks the current action at type T.\nReturns:\nUnpacked action data casted as T.\nExample:\nstruct dummy_action {\n  char a; //1\n  unsigned long long b; //8\n  int  c; //4\n\n  EOSLIB_SERIALIZE( dummy_action, (a)(b)(c) )\n};\ndummy_action msg = unpack_action_data();\n\nfunction require_recipient\nvoid eosio::require_recipient (\n    account_name name,\n    accounts... remaining_accounts\n)\n\nNotify an account for this action. \nAll of the listed accounts will be added to the set of accounts to be notified\nThis helper method enables you to add multiple accounts to accounts to be notified list with a single call rather than having to call the similar C API multiple times.\nNote:\naction.code is also considered as part of the set of notified accounts\nParameters:\n\nname account to be notified \nremaining_accounts accounts to be notified\n\nExample:\nrequire_recipient(N(Account1), N(Account2), N(Account3)); // throws exception if any of them not in set.\n\nfunction require_auth\nvoid eosio::require_auth (\n    const permission_level & level\n)\n\nRequire the specified authorization for this action. \nRequire the specified authorization for this action. If this action doesn't contain the specified auth, it will fail.\nParameters:\n\nlevel - Authorization to be required \n\nfunction dispatch_inline\nvoid eosio::dispatch_inline (\n    account_name code,\n    action_name act,\n    vector perms,\n    std::tuple args\n)\n\nfunction operator\ndatastream & eosio::operator & ds,\n    const public_key pubkey\n)\n\nSerialize a public_key. \nSerialize a public_key into a stream\nParameters:\n\nds - The stream to write \npubkey - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>> (1/18)\ndatastream & eosio::operator>> (\n    datastream & ds,\n    public_key & pubkey\n)\n\nDeserialize a public_key. \nDeserialize a public_key from a stream\nParameters:\n\nds - The stream to read \npubkey - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const key256 & d\n)\n\nSerialize a key256. \nSerialize a key256 into a stream\nParameters:\n\nds - The stream to write \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>> (2/18)\ndatastream & eosio::operator>> (\n    datastream & ds,\n    key256 & d\n)\n\nDeserialize a key256. \nDeserialize a key256 from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const bool & d\n)\n\nSerialize a bool into a stream. \nSerialize a bool into a stream\nParameters:\n\nds - The stream to read \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>> (3/18)\ndatastream & eosio::operator>> (\n    datastream & ds,\n    bool & d\n)\n\nDeserialize a bool. \nDeserialize a bool from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const checksum256 & d\n)\n\nSerialize a checksum256. \nSerialize a checksum256 into a stream\nParameters:\n\nds - The stream to write \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>> (4/18)\ndatastream & eosio::operator>> (\n    datastream & ds,\n    checksum256 & d\n)\n\nDeserialize a checksum256. \nDeserialize a checksum256 from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator\nSerialize a string. \nSerialize a string into a stream\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>> (5/18)\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    std::string & v\n)\n\nDeserialize a string. \nDeserialize a string from a stream\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & v\n)\n\nSerialize a fixed size array. \nSerialize a fixed size array into a stream\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the array \nN - Size of the array \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>> (6/18)\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    std::array & v\n)\n\nDeserialize a fixed size array. \nDeserialize a fixed size array from a stream\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the array \nN - Size of the array \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>> (7/18)\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    T \n)\n\nDeserialize a a pointer. \nPointer should not be serialized, so this function will always throws an error\nParameters:\n\nds - The stream to read \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the pointer \n\nReturns:\nDataStream& - Reference to the datastream \nPost\nThrow an exception if it is a pointer \nfunction operator\nDataStream & eosio::operator\nSerialize a fixed size array of non-primitive and non-pointer type. \nSerialize a fixed size array of non-primitive type.\nSerialize a fixed size array of non-primitive and non-pointer type\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the pointer \n\nReturns:\nDataStream& - Reference to the datastream\nSerialize a fixed size array of non-primitive type\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the pointer \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>> (8/18)\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    T(&) v\n)\n\nDeserialize a fixed size array of non-primitive and non-pointer type. \nDeserialize a fixed size array of non-primitive type.\nDeserialize a fixed size array of non-primitive and non-pointer type\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nT - Type of the object contained in the array \nN - Size of the array \nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream\nDeserialize a fixed size array of non-primitive type\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nT - Type of the object contained in the array \nN - Size of the array \nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & v\n)\n\nSerialize a vector of char. \nSerialize a vector of char\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & v\n)\n\nSerialize a vector. \nSerialize a vector\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the vector \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>> (9/18)\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    vector & v\n)\n\nDeserialize a vector of char. \nDeserialize a vector of char\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>> (10/18)\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    vector & v\n)\n\nDeserialize a vector. \nDeserialize a vector\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the vector \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & s\n)\n\nfunction operator>> (11/18)\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    std::set & s\n)\n\nfunction operator\nDataStream & eosio::operator & m\n)\n\nSerialize a map. \nSerialize a map\nParameters:\n\nds - The stream to write \nm - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the map \nV - Type of the value contained in the map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>> (12/18)\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    std::map & m\n)\n\nDeserialize a map. \nDeserialize a map\nParameters:\n\nds - The stream to read \nm - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the map \nV - Type of the value contained in the map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & s\n)\n\nfunction operator>> (13/18)\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    boost::container::flat_set & s\n)\n\nfunction operator\nDataStream & eosio::operator & m\n)\n\nSerialize a flat map. \nSerialize a flat map\nParameters:\n\nds - The stream to write \nm - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the flat map \nV - Type of the value contained in the flat map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>> (14/18)\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    boost::container::flat_map & m\n)\n\nDeserialize a flat map. \nDeserialize a flat map\nParameters:\n\nds - The stream to read \nm - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the flat map \nV - Type of the value contained in the flat map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & t\n)\n\nSerialize a tuple. \nSerialize a tuple\nParameters:\n\nds - The stream to write \nt - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nArgs - Type of the objects contained in the tuple \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>> (15/18)\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    std::tuple & t\n)\n\nDeserialize a tuple. \nDeserialize a tuple\nParameters:\n\nds - The stream to read \nt - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nArgs - Type of the objects contained in the tuple \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator\nSerialize a class. \nSerialize a primitive type.\nSerialize a class\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of class \n\nReturns:\nDataStream& - Reference to the datastream\nSerialize a primitive type\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the primitive type \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>> (16/18)\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    T & v\n)\n\nDeserialize a class. \nDeserialize a primitive type.\nDeserialize a class\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of class \n\nReturns:\nDataStream& - Reference to the datastream\nDeserialize a primitive type\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the primitive type \n\nReturns:\nDataStream& - Reference to the datastream \nfunction unpack (1/2)\nT eosio::unpack (\n    const char * buffer,\n    size_t len\n)\n\nUnpack data inside a fixed size buffer as T. \nUnpack data inside a fixed size buffer as T\nTemplate parameters:\n\nT - Type of the unpacked data \n\nParameters:\n\nbuffer - Pointer to the buffer \nlen - Length of the buffer \n\nReturns:\nT - The unpacked data \nfunction unpack (2/2)\nT eosio::unpack (\n    const vector & bytes\n)\n\nUnpack data inside a variable size buffer as T. \nUnpack data inside a variable size buffer as T\nTemplate parameters:\n\nT - Type of the unpacked data \n\nParameters:\n\nbytes - Buffer \n\nReturns:\nT - The unpacked data \nfunction pack_size\nsize_t eosio::pack_size (\n    const T & value\n)\n\nGet the size of the packed data. \nGet the size of the packed data\nTemplate parameters:\n\nT - Type of the data to be packed \n\nParameters:\n\nvalue - Data to be packed \n\nReturns:\nsize_t - Size of the packed data \nfunction pack\nbytes eosio::pack (\n    const T & value\n)\n\nGet packed data. \nGet packed data\nTemplate parameters:\n\nT - Type of the data to be packed \n\nParameters:\n\nvalue - Data to be packed \n\nReturns:\nbytes - The packed data \nfunction operator\ndatastream & eosio::operator & ds,\n    const checksum160 & cs\n)\n\nSerialize a checksum160 type. \nSerialize a checksum160 type\nParameters:\n\nds - The stream to write \ncs - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>> (17/18)\ndatastream & eosio::operator>> (\n    datastream & ds,\n    checksum160 & cs\n)\n\nDeserialize a checksum160 type. \nDeserialize a checksum160 type\nParameters:\n\nds - The stream to read \ncs - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const checksum512 & cs\n)\n\nSerialize a checksum512 type. \nSerialize a checksum512 type\nParameters:\n\nds - The stream to write \ncs - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>> (18/18)\ndatastream & eosio::operator>> (\n    datastream & ds,\n    checksum512 & cs\n)\n\nDeserialize a checksum512 type. \nDeserialize a checksum512 type\nParameters:\n\nds - The stream to read \ncs - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction dispatch (1/2)\nbool eosio::dispatch (\n    uint64_t code,\n    uint64_t act\n)\n\nfunction dispatch (2/2)\nbool eosio::dispatch (\n    uint64_t code,\n    uint64_t act\n)\n\nThis method will dynamically dispatch an incoming set of actions to\nstatic Contract::on( ActionType )\n\nFor this to work the Actions must be derived from eosio::contract \nfunction execute_action\nbool eosio::execute_action (\n    T * obj,\n    void(Q::*)(Args...) func\n)\n\nUnpack the received action and execute the correponding action handler. \nUnpack the received action and execute the correponding action handler\nTemplate parameters:\n\nT - The contract class that has the correponding action handler, this contract should be derived from eosio::contract \nQ - The namespace of the action handler function \nArgs - The arguments that the action handler accepts, i.e. members of the action \n\nParameters:\n\nobj - The contract object that has the correponding action handler \nfunc - The action handler \n\nReturns:\ntrue \nfunction set_blockchain_parameters\nvoid eosio::set_blockchain_parameters (\n    const eosio::blockchain_parameters & params\n)\n\nSet the blockchain parameters Set the blockchain parameters. \nParameters:\n\nparams - New blockchain parameters to set \n\nfunction get_blockchain_parameters\nvoid eosio::get_blockchain_parameters (\n    eosio::blockchain_parameters & params\n)\n\nRetrieve the blolckchain parameters Retrieve the blolckchain parameters. \nParameters:\n\nparams - It will be replaced with the retrieved blockchain params \n\nfunction operator== (1/3)\nbool eosio::operator== (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 == c2, return true, otherwise false \nfunction operator!= (1/3)\nbool eosio::operator!= (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 != c2, return true, otherwise false \nfunction operator>\nbool eosio::operator> (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 > c2, return true, otherwise false \nfunction operator\nbool eosio::operator & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 \nfunction assignHelper\nT eosio::assignHelper (\n    T rhs_val,\n    uint8_t q,\n    uint8_t qr\n)\n\nfunction fixed_divide (1/2)\nfixed_point64 eosio::fixed_divide (\n    uint32_t lhs,\n    uint32_t rhs\n)\n\nWrapper function for dividing two unit64 variable and stores result in fixed_point64. \nWrapper function for dividing two unit32 variable and stores result in fixed_point64\nExample: \nfixed_point64 result = fixed_divide(131313, 2323)\n\nfunction fixed_divide (2/2)\nfixed_point128 eosio::fixed_divide (\n    uint64_t lhs,\n    uint64_t rhs\n)\n\nWrapper function for dividing two unit64 variable and stores result in fixed_point128 Wrapper function for dividing two unit64 variable and stores result in fixed_point128. \nExample: \nfixed_point128 result = fixed_divide(131313, 2323)\n\nfunction operator== (2/3)\nbool eosio::operator== (\n    const optional & left,\n    const optional & right\n)\n\nEquality Operator. \nCheck equality between two optional object that shares same type of contained value\nTemplate parameters:\n\nT - Type of contained value of the optional objects \n\nParameters:\n\nleft - First object to be compared \nright - Second object to be compared \n\nReturns:\ntrue - if both optional objects are equal \nReturns:\nfalse \nfunction operator== (3/3)\nbool eosio::operator== (\n    const optional & left,\n    const U & u\n)\n\nEquality Operator. \nCheck equality between an optional object with another object\nTemplate parameters:\n\nT - Type of contained value of the optional object \nU - Type of the other object to be compared \n\nParameters:\n\nleft - First object to be compared \nu - Second object to be compared \n\nReturns:\ntrue - if the optional objects contained value is equal with the compared object \nReturns:\nfalse \nfunction operator!= (2/3)\nbool eosio::operator!= (\n    const optional & left,\n    const optional & right\n)\n\nInquality Operator. \nCheck inequality between two optional object that shares same type of contained value\nTemplate parameters:\n\nT - Type of contained value of the optional objects \n\nParameters:\n\nleft - First object to be compared \nright - Second object to be compared \n\nReturns:\ntrue - if both optional objects are unequal \nReturns:\nfalse \nfunction operator!= (3/3)\nbool eosio::operator!= (\n    const optional & left,\n    const U & u\n)\n\nInqquality Operator. \nCheck inequality between an optional object with another object\nTemplate parameters:\n\nT - Type of contained value of the optional object \nU - Type of the other object to be compared \n\nParameters:\n\nleft - First object to be compared \nu - Second object to be compared \n\nReturns:\ntrue - if the optional objects contained value is unequal with the compared object \nReturns:\nfalse \nfunction check_transaction_authorization\nbool eosio::check_transaction_authorization (\n    const transaction & trx,\n    const std::set & provided_permissions,\n    const std::set & provided_keys = std::set()\n)\n\nChecks if a transaction is authorized by a provided set of keys and permissions. \nParameters:\n\ntrx - the transaction for which to check authorizations \nprovided_permissions - the set of permissions which have authorized the transaction (empty permission name acts as wildcard) \nprovided_keys - the set of public keys which have authorized the transaction\n\nReturns:\nwhether the transaction was authorized by provided keys and permissions \nfunction check_permission_authorization\nbool eosio::check_permission_authorization (\n    account_name account,\n    permission_name permission,\n    const std::set & provided_keys,\n    const std::set & provided_permissions = std::set(),\n    uint64_t provided_delay_us = static_cast(std::numeric_limits::max())\n)\n\nChecks if a permission is authorized by a provided delay and a provided set of keys and permissions. \nParameters:\n\naccount - the account owner of the permission \npermission - the permission name to check for authorization \nprovided_keys - the set of public keys which have authorized the transaction \nprovided_permissions - the set of permissions which have authorized the transaction (empty permission name acts as wildcard) \nprovided_delay_us - the provided delay in microseconds (cannot exceed INT64_MAX)\n\nReturns:\nwhether the permission was authorized by provided delay, keys, and permissions \nfunction print (1/21)\nvoid eosio::print (\n    const char * ptr\n)\n\nPrints string. \nPrints string\nParameters:\n\nptr - a null terminated string \n\nfunction print (2/21)\nvoid eosio::print (\n    const std::string & s\n)\n\nfunction print (3/21)\nvoid eosio::print (\n    std::string & s\n)\n\nfunction print (4/21)\nvoid eosio::print (\n    const char c\n)\n\nfunction print (5/21)\nvoid eosio::print (\n    int num\n)\n\nPrints signed integer as a 64 bit signed integer. \nPrints signed integer\nParameters:\n\nnum to be printed \n\nfunction print (6/21)\nvoid eosio::print (\n    int32_t num\n)\n\nPrints 32 bit signed integer as a 64 bit signed integer. \nPrints 32 bit signed integer\nParameters:\n\nnum to be printed \n\nfunction print (7/21)\nvoid eosio::print (\n    int64_t num\n)\n\nPrints 64 bit signed integer as a 64 bit signed integer. \nPrints 64 bit signed integer\nParameters:\n\nnum to be printed \n\nfunction print (8/21)\nvoid eosio::print (\n    unsigned int num\n)\n\nPrints unsigned integer as a 64 bit unsigned integer. \nPrints unsigned integer\nParameters:\n\nnum to be printed \n\nfunction print (9/21)\nvoid eosio::print (\n    uint32_t num\n)\n\nPrints 32 bit unsigned integer as a 64 bit unsigned integer. \nPrints 32 bit unsigned integer\nParameters:\n\nnum to be printed \n\nfunction print (10/21)\nvoid eosio::print (\n    uint64_t num\n)\n\nPrints 64 bit unsigned integer as a 64 bit unsigned integer. \nPrints 64 bit unsigned integer\nParameters:\n\nnum to be printed \n\nfunction print (11/21)\nvoid eosio::print (\n    int128_t num\n)\n\nPrints 128 bit signed integer. \nPrints 128 bit signed integer\nParameters:\n\nnum to be printed \n\nfunction print (12/21)\nvoid eosio::print (\n    uint128_t num\n)\n\nPrints 128 bit unsigned integer. \nPrints 128 bit unsigned integer\nParameters:\n\nnum to be printed \n\nfunction print (13/21)\nvoid eosio::print (\n    float num\n)\n\nPrints single-precision floating point number (i.e. float) \nPrints single-precision floating point number\nParameters:\n\nnum to be printed \n\nfunction print (14/21)\nvoid eosio::print (\n    double num\n)\n\nPrints double-precision floating point number (i.e. double) \nPrints double-precision floating point number\nParameters:\n\nnum to be printed \n\nfunction print (15/21)\nvoid eosio::print (\n    long double num\n)\n\nPrints quadruple-precision floating point number (i.e. long double) \nPrints quadruple-precision floating point number\nParameters:\n\nnum to be printed \n\nfunction print (16/21)\nvoid eosio::print (\n    const fixed_key & val\n)\n\nPrints fixed_key as a hexidecimal string. \nPrints fixed_key as a hexidecimal string\nParameters:\n\nval to be printed \n\nfunction print (17/21)\nvoid eosio::print (\n    fixed_key & val\n)\n\nPrints fixed_key as a hexidecimal string. \nPrints fixed_key as a hexidecimal string\nParameters:\n\nval to be printed \n\nfunction print (18/21)\nvoid eosio::print (\n    name name\n)\n\nPrints a 64 bit names as base32 encoded string. \nPrints a 64 bit names as base32 encoded string\nParameters:\n\nname 64 bit name to be printed \n\nfunction print (19/21)\nvoid eosio::print (\n    bool val\n)\n\nPrints bool. \nPrints bool\nParameters:\n\nval to be printed \n\nfunction print (20/21)\nvoid eosio::print (\n    T && t\n)\n\nPrints class object. \nPrints class object\nParameters:\n\nt to be printed \n\nPrecondition:\nT must implements print() function \nfunction print_f (1/2)\nvoid eosio::print_f (\n    const char * s\n)\n\nPrints null terminated string. \nPrints null terminated string\nParameters:\n\ns null terminated string to be printed \n\nfunction print_f (2/2)\nvoid eosio::print_f (\n    const char * s,\n    Arg val,\n    Args... rest\n)\n\nPrints formatted string. \nPrints formatted string. It behaves similar to C printf/\nTemplate parameters:\n\nArg - Type of the value used to replace the format specifier \nArgs - Type of the value used to replace the format specifier \n\nParameters:\n\ns - Null terminated string with to be printed (it can contains format specifier) \nval - The value used to replace the format specifier \nrest - The values used to replace the format specifier\n\nExample: \nprint_f(\"Number of apples: %\", 10);\n\nfunction print (21/21)\nvoid eosio::print (\n    Arg && a,\n    Args &&... args\n)\n\nPrint out value / list of values. \nPrint out value / list of values \nParameters:\n\na - The value to be printed \nargs - The other values to be printed\n\nExample:\nconst char *s = \"Hello World!\";\nuint64_t unsigned_64_bit_int = 1e+18;\nuint128_t unsigned_128_bit_int (87654323456);\nuint64_t string_as_unsigned_64_bit = N(abcde);\nprint(s , unsigned_64_bit_int, unsigned_128_bit_int, string_as_unsigned_64_bit);\n// Ouput: Hello World!100000000000000000087654323456abcde\n\nfunction operator\niostream & eosio::operator\nOverload c++ iostream. \nOverload c++ iostream \nParameters:\n\nout - Output strem \nv - The value to be printed \n\nReturns:\niostream& - Reference to the input output stream\nExample:\nconst char *s = \"Hello World!\";\nuint64_t unsigned_64_bit_int = 1e+18;\nuint128_t unsigned_128_bit_int (87654323456);\nuint64_t string_as_unsigned_64_bit = N(abcde);\nstd::out \nfunction string_to_symbol\nstatic constexpr uint64_t eosio::string_to_symbol (\n    uint8_t precision,\n    const char * str\n)\n\nConverts string to uint64_t representation of symbol\nParameters:\n\nprecision - precision of symbol \nstr - the string representation of the symbol \n\nfunction is_valid_symbol\nstatic constexpr bool eosio::is_valid_symbol (\n    symbol_name sym\n)\n\nChecks if provided symbol name is valid.\nParameters:\n\nsym - symbol name of type symbol_name \n\nReturns:\ntrue - if symbol is valid \nfunction symbol_name_length\nstatic constexpr uint32_t eosio::symbol_name_length (\n    symbol_name sym\n)\n\nReturns the character length of the provided symbol\nParameters:\n\nsym - symbol to retrieve length for (uint64_t) \n\nReturns:\nlength - character length of the provided symbol \nfunction seconds\nmicroseconds eosio::seconds (\n    int64_t s\n)\n\nfunction milliseconds\nmicroseconds eosio::milliseconds (\n    int64_t s\n)\n\nfunction minutes\nmicroseconds eosio::minutes (\n    int64_t m\n)\n\nfunction hours\nmicroseconds eosio::hours (\n    int64_t h\n)\n\nfunction days\nmicroseconds eosio::days (\n    int64_t d\n)\n\nfunction get_action\naction eosio::get_action (\n    uint32_t type,\n    uint32_t index\n)\n\nRetrieve the indicated action from the active transaction. \nParameters:\n\ntype - 0 for context free action, 1 for action \nindex - the index of the requested action \n\nReturns:\nthe indicated action \nfunction char_to_symbol\nstatic constexpr char eosio::char_to_symbol (\n    char c\n)\n\nConverts a base32 symbol into its binary representation, used by string_to_name() \nConverts a base32 symbol into its binary representation, used by string_to_name()\nParameters:\n\nc - Character to be converted \n\nReturns:\nconstexpr char - Converted character \nfunction string_to_name\nstatic constexpr uint64_t eosio::string_to_name (\n    const char * str\n)\n\nConverts a base32 string to a uint64_t. \nConverts a base32 string to a uint64_t. This is a constexpr so that this method can be used in template arguments as well.\nParameters:\n\nstr - String representation of the name \n\nReturns:\nconstexpr uint64_t - 64-bit unsigned integer representation of the name \nfunction name_suffix\nstatic constexpr uint64_t eosio::name_suffix (\n    uint64_t n\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"namespaceeosio_1_1__datastream__detail.html":{"url":"namespaceeosio_1_1__datastream__detail.html","title":"namespace _datastream_detail","keywords":"eosio::_datastream_detail is_pointer is_primitive","body":"namespace eosio::_datastream_detail\nClass List > eosio :: _datastream_detail\n\n\n\nType\nName\n\n\n\n\nconstexpr bool\nis_pointer () Check if type T is a pointer.\n\n\nconstexpr bool\nis_primitive () Check if type T is a primitive type.\n\n\n\nfunction is_pointer\nconstexpr bool eosio::_datastream_detail::is_pointer ()\n\nCheck if type T is a pointer. \nCheck if type T is a pointer\nTemplate parameters:\n\nT - The type to be checked \n\nReturns:\ntrue if T is a pointer \nReturns:\nfalse otherwise \nfunction is_primitive\nconstexpr bool eosio::_datastream_detail::is_primitive ()\n\nCheck if type T is a primitive type. \nCheck if type T is a primitive type\nTemplate parameters:\n\nT - The type to be checked \n\nReturns:\ntrue if T is a primitive type \nReturns:\nfalse otherwise \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/datastream.hpp\n"},"namespaceeosio_1_1__multi__index__detail.html":{"url":"namespaceeosio_1_1__multi__index__detail.html","title":"namespace _multi_index_detail","keywords":"eosio::_multi_index_detail secondary_index_db_functions secondary_key_traits secondary_key_traits< key256 >","body":"namespace eosio::_multi_index_detail\nClass List > eosio :: _multi_index_detail\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nsecondary_index_db_functions\n\n\nstruct\nsecondary_key_traits\n\n\nstruct\nsecondary_key_traits\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"url":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","title":"struct secondary_index_db_functions","keywords":"eosio::_multi_index_detail::secondary_index_db_functions","body":"struct eosio::_multi_index_detail::secondary_index_db_functions\nClass List > eosio :: _multi_index_detail :: secondary_index_db_functions\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"url":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","title":"struct secondary_key_traits","keywords":"eosio::_multi_index_detail::secondary_key_traits","body":"struct eosio::_multi_index_detail::secondary_key_traits\nClass List > eosio :: _multi_index_detail :: secondary_key_traits\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html":{"url":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01key256_01_4.html","title":"struct secondary_key_traits< key256 >","keywords":"eosio::_multi_index_detail::secondary_key_traits< key256 > lowest","body":"struct eosio::_multi_index_detail::secondary_key_traits\nClass List > eosio :: _multi_index_detail :: secondary_key_traits\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic constexpr key256\nlowest ()\n\n\n\nfunction lowest\nstatic constexpr key256 eosio::_multi_index_detail::secondary_key_traits::lowest ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1action.html":{"url":"structeosio_1_1action.html","title":"struct action","keywords":"eosio::action account name authorization data action action action action action action EOSLIB_SERIALIZE send_context_free data_as","body":"struct eosio::action\nClass List > eosio :: action\nPacked representation of an action. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\naccount_name\naccountName of the account the action is intended for.\n\n\naction_name\nnameName of the action.\n\n\nvectorpermission_level >\nauthorizationList of permissions that authorize this action.\n\n\nbytes\ndataPayload data.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\naction () = default Construct a new action object.\n\n\n\naction (vectorpermission_level > && auth, const Action & value) Construct a new action object with the given permission and action struct.\n\n\n\naction (const permission_level & auth, const Action & value) Construct a new action object with the given list of permissions and action struct.\n\n\n\naction (const Action & value) Construct a new action object with the given action struct.\n\n\n\naction (const permission_level & auth, account_name a, action_name n, T && value) Construct a new action object with the given permission, action receiver, action name, action struct.\n\n\n\naction (vectorpermission_level > auths, account_name a, action_name n, T && value) Construct a new action object with the given list of permissions, action receiver, action name, action struct.\n\n\n\nEOSLIB_SERIALIZE (action, (account)(name)(authorization)(data)) const Send the action as inline action.\n\n\nvoid\nsend_context_free () const Send the action as inline context free action.\n\n\nT\ndata_as () Retrieve the unpacked data as T.\n\n\n\nDetailed Description\nThis is the packed representation of an action along with meta-data about the authorization levels. \nvariable account\naccount_name eosio::action::account;\n\nName of the account the action is intended for. \nName of the account the action is intended for \nvariable name\naction_name eosio::action::name;\n\nName of the action. \nName of the action \nvariable authorization\nvector eosio::action::authorization;\n\nList of permissions that authorize this action. \nList of permissions that authorize this action \nvariable data\nbytes eosio::action::data;\n\nPayload data. \nPayload data \nfunction action (1/6)\neosio::action::action () = default\n\nConstruct a new action object. \nDefault Constructor \nfunction action (2/6)\neosio::action::action (\n    vector && auth,\n    const Action & value\n)\n\nConstruct a new action object with the given permission and action struct. \nConstruct a new action object with the given permission and action struct\nTemplate parameters:\n\nAction - Type of action struct \n\nParameters:\n\nauth - The permission that authorizes this action \nvalue - The action struct that will be serialized via pack into data \n\nfunction action (3/6)\neosio::action::action (\n    const permission_level & auth,\n    const Action & value\n)\n\nConstruct a new action object with the given list of permissions and action struct. \nConstruct a new action object with the given list of permissions and action struct\nTemplate parameters:\n\nAction - Type of action struct \n\nParameters:\n\nauth - The list of permissions that authorizes this action \nvalue - The action struct that will be serialized via pack into data \n\nfunction action (4/6)\neosio::action::action (\n    const Action & value\n)\n\nConstruct a new action object with the given action struct. \nConstruct a new action object with the given action struct\nTemplate parameters:\n\nAction - Type of action struct \n\nParameters:\n\nvalue - The action struct that will be serialized via pack into data \n\nfunction action (5/6)\neosio::action::action (\n    const permission_level & auth,\n    account_name a,\n    action_name n,\n    T && value\n)\n\nConstruct a new action object with the given permission, action receiver, action name, action struct. \nConstruct a new action object with the given action struct\nTemplate parameters:\n\nT - Type of action struct, must be serializable by pack(...) \n\nParameters:\n\nauth - The permissions that authorizes this action \na - The name of the account this action is intended for (action receiver) \nn - The name of the action \nvalue - The action struct that will be serialized via pack into data \n\nfunction action (6/6)\neosio::action::action (\n    vector auths,\n    account_name a,\n    action_name n,\n    T && value\n)\n\nConstruct a new action object with the given list of permissions, action receiver, action name, action struct. \nConstruct a new action object with the given action struct\nTemplate parameters:\n\nT - Type of action struct, must be serializable by pack(...) \n\nParameters:\n\nauths - The list of permissions that authorize this action \na - The name of the account this action is intended for (action receiver) \nn - The name of the action \nvalue - The action struct that will be serialized via pack into data \n\nfunction EOSLIB_SERIALIZE\neosio::action::EOSLIB_SERIALIZE (\n    action ,\n    (account)(name)(authorization)(data) \n) const\n\nSend the action as inline action. \nSend the action as inline action \nfunction send_context_free\nvoid eosio::action::send_context_free () const\n\nSend the action as inline context free action. \nSend the action as inline context free action\nPrecondition:\nThis action should not contain any authorizations \nfunction data_as\nT eosio::action::data_as ()\n\nRetrieve the unpacked data as T. \nRetrieve the unpacked data as T\nTemplate parameters:\n\nT expected type of data \n\nReturns:\nthe action data \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1action__meta.html":{"url":"structeosio_1_1action__meta.html","title":"struct action_meta","keywords":"eosio::action_meta get_account get_name","body":"struct eosio::action_meta\nClass List > eosio :: action_meta\nBase class to derive a new defined action from. More...\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic uint64_t\nget_account () Get the account this action is intended for.\n\n\nstatic uint64_t\nget_name () Get the name of this action.\n\n\n\nDetailed Description\nBase class to derive a new defined action from so it can take advantage of the dispatcher\nTemplate parameters:\n\nAccount - The account this action is intended for \nName - The name of the action \n\nfunction get_account\nstatic uint64_t eosio::action_meta::get_account ()\n\nGet the account this action is intended for. \nGet the account this action is intended for\nReturns:\nuint64_t The account this action is intended for \nfunction get_name\nstatic uint64_t eosio::action_meta::get_name ()\n\nGet the name of this action. \nGet the name of this action\nReturns:\nuint64_t Name of the action \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1asset.html":{"url":"structeosio_1_1asset.html","title":"struct asset","keywords":"eosio::asset amount symbol max_amount asset is_amount_within_range is_valid set_amount operator- operator-= operator+= operator*= operator/= print operator+ operator- operator* operator* operator/ operator/ operator== operator!= operator< operator<= operator> operator>=","body":"struct eosio::asset\nClass List > eosio :: asset\nInherited by the following classes: eosio::extended_asset\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nint64_t\namountThe amount of the asset.\n\n\nsymbol_type\nsymbolThe symbol name of the asset.\n\n\n\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr int64_t\nmax_amountMaximum amount possible for this asset.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nasset (int64_t a = 0, symbol_type s = CORE_SYMBOL) Construct a new asset object.\n\n\nbool\nis_amount_within_range () const Check if the amount doesn't exceed the max amount.\n\n\nbool\nis_valid () const Check if the asset is valid.\n\n\nvoid\nset_amount (int64_t a) Set the amount of the asset.\n\n\nasset\noperator- () const Unary minus operator.\n\n\nasset &\noperator-= (const asset & a) Subtraction assignment operator.\n\n\nasset &\noperator+= (const asset & a) Addition Assignment operator.\n\n\nasset &\noperator*= (int64_t a) Multiplication assignment operator, with a number.\n\n\nasset &\noperator/= (int64_t a) Division assignment operator, with a number.\n\n\nvoid\nprint () const Print the asset\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend asset\noperator+Addition operator.\n\n\nfriend asset\noperator-Subtraction operator.\n\n\nfriend asset\noperator*Multiplication operator, with a number proceeding.\n\n\nfriend asset\noperator*Multiplication operator, with a number preceeding.\n\n\nfriend asset\noperator/Division operator, with a number proceeding.\n\n\nfriend int64_t\noperator/Division operator, with another asset.\n\n\nfriend bool\noperator==Equality operator.\n\n\nfriend bool\noperator!=Inequality operator.\n\n\nfriend bool\noperatorLess than operator.\n\n\nfriend bool\noperatorLess or equal to operator.\n\n\nfriend bool\noperator>Greater than operator.\n\n\nfriend bool\noperator>=Greater or equal to operator.\n\n\n\nvariable amount\nint64_t eosio::asset::amount;\n\nThe amount of the asset. \nThe amount of the asset \nvariable symbol\nsymbol_type eosio::asset::symbol;\n\nThe symbol name of the asset. \nThe symbol name of the asset \nvariable max_amount\nconstexpr int64_t eosio::asset::max_amount;\n\nMaximum amount possible for this asset. \nMaximum amount possible for this asset. It's capped to 2^62 - 1 \nfunction asset\nexplicit eosio::asset::asset (\n    int64_t a = 0,\n    symbol_type s = CORE_SYMBOL\n)\n\nConstruct a new asset object. \nConstruct a new asset given the symbol name and the amount\nParameters:\n\na - The amount of the asset \ns - THe name of the symbol, default to CORE_SYMBOL \n\nfunction is_amount_within_range\nbool eosio::asset::is_amount_within_range () const\n\nCheck if the amount doesn't exceed the max amount. \nCheck if the amount doesn't exceed the max amount\nReturns:\ntrue - if the amount doesn't exceed the max amount \nReturns:\nfalse - otherwise \nfunction is_valid\nbool eosio::asset::is_valid () const\n\nCheck if the asset is valid. \nCheck if the asset is valid. A valid asset has its amount \nReturns:\ntrue - if the asset is valid \nReturns:\nfalse - otherwise \nfunction set_amount\nvoid eosio::asset::set_amount (\n    int64_t a\n)\n\nSet the amount of the asset. \nSet the amount of the asset\nParameters:\n\na - New amount for the asset \n\nfunction operator- (1/2)\nasset eosio::asset::operator- () const\n\nUnary minus operator. \nUnary minus operator\nReturns:\nasset - New asset with its amount is the negative amount of this asset \nfunction operator-=\nasset & eosio::asset::operator-= (\n    const asset & a\n)\n\nSubtraction assignment operator. \nSubtraction assignment operator\nParameters:\n\na - Another asset to subtract this asset with \n\nReturns:\nasset& - Reference to this asset \nPost\nThe amount of this asset is subtracted by the amount of asset a \nfunction operator+=\nasset & eosio::asset::operator+= (\n    const asset & a\n)\n\nAddition Assignment operator. \nAddition Assignment operator\nParameters:\n\na - Another asset to subtract this asset with \n\nReturns:\nasset& - Reference to this asset \nPost\nThe amount of this asset is added with the amount of asset a \nfunction operator*=\nasset & eosio::asset::operator*= (\n    int64_t a\n)\n\nMultiplication assignment operator, with a number. \nMultiplication assignment operator. Multiply the amount of this asset with a number and then assign the value to itself.\nParameters:\n\na - The multiplier for the asset's amount \n\nReturns:\nasset - Reference to this asset \nPost\nThe amount of this asset is multiplied by a \nfunction operator/=\nasset & eosio::asset::operator/= (\n    int64_t a\n)\n\nDivision assignment operator, with a number. \nDivision assignment operator. Divide the amount of this asset with a number and then assign the value to itself.\nParameters:\n\na - The divisor for the asset's amount \n\nReturns:\nasset - Reference to this asset \nPost\nThe amount of this asset is divided by a \nfunction print\nvoid eosio::asset::print () const\n\nPrint the asset \nPrint the asset \nfriend operator+\nfriend asset eosio::asset::operator+ (\n    const asset & a,\n    const asset & b\n)\n\nAddition operator. \nAddition operator\nParameters:\n\na - The first asset to be added \nb - The second asset to be added \n\nReturns:\nasset - New asset as the result of addition \nfriend operator- (2/2)\nfriend asset eosio::asset::operator- (\n    const asset & a,\n    const asset & b\n)\n\nSubtraction operator. \nSubtraction operator\nParameters:\n\na - The asset to be subtracted \nb - The asset used to subtract \n\nReturns:\nasset - New asset as the result of subtraction of a with b \nfriend operator* (1/2)\nfriend asset eosio::asset::operator* (\n    const asset & a,\n    int64_t b\n)\n\nMultiplication operator, with a number proceeding. \nMultiplication operator, with a number proceeding\nParameters:\n\na - The asset to be multiplied \nb - The multiplier for the asset's amount \n\nReturns:\nasset - New asset as the result of multiplication \nfriend operator* (2/2)\nfriend asset eosio::asset::operator* (\n    int64_t b,\n    const asset & a\n)\n\nMultiplication operator, with a number preceeding. \nMultiplication operator, with a number preceeding\nParameters:\n\na - The multiplier for the asset's amount \nb - The asset to be multiplied \n\nReturns:\nasset - New asset as the result of multiplication \nfriend operator/ (1/2)\nfriend asset eosio::asset::operator/ (\n    const asset & a,\n    int64_t b\n)\n\nDivision operator, with a number proceeding. \nDivision operator, with a number proceeding\nParameters:\n\na - The asset to be divided \nb - The divisor for the asset's amount \n\nReturns:\nasset - New asset as the result of division \nfriend operator/ (2/2)\nfriend int64_t eosio::asset::operator/ (\n    const asset & a,\n    const asset & b\n)\n\nDivision operator, with another asset. \nDivision operator, with another asset\nParameters:\n\na - The asset which amount acts as the dividend \nb - The asset which amount acts as the divisor \n\nReturns:\nint64_t - the resulted amount after the division \nPrecondition:\nBoth asset must have the same symbol \nfriend operator==\nfriend bool eosio::asset::operator== (\n    const asset & a,\n    const asset & b\n)\n\nEquality operator. \nEquality operator\nParameters:\n\na - The first asset to be compared \nb - The second asset to be compared \n\nReturns:\ntrue - if both asset has the same amount \nReturns:\nfalse - otherwise \nPrecondition:\nBoth asset must have the same symbol \nfriend operator!=\nfriend bool eosio::asset::operator!= (\n    const asset & a,\n    const asset & b\n)\n\nInequality operator. \nInequality operator\nParameters:\n\na - The first asset to be compared \nb - The second asset to be compared \n\nReturns:\ntrue - if both asset doesn't have the same amount \nReturns:\nfalse - otherwise \nPrecondition:\nBoth asset must have the same symbol \nfriend operator\nfriend bool eosio::asset::operator\nLess than operator. \nLess than operator\nParameters:\n\na - The first asset to be compared \nb - The second asset to be compared \n\nReturns:\ntrue - if the first asset's amount is less than the second asset amount \nReturns:\nfalse - otherwise \nPrecondition:\nBoth asset must have the same symbol \nfriend operator\nfriend bool eosio::asset::operator\nLess or equal to operator. \nLess or equal to operator\nParameters:\n\na - The first asset to be compared \nb - The second asset to be compared \n\nReturns:\ntrue - if the first asset's amount is less or equal to the second asset amount \nReturns:\nfalse - otherwise \nPrecondition:\nBoth asset must have the same symbol \nfriend operator>\nfriend bool eosio::asset::operator> (\n    const asset & a,\n    const asset & b\n)\n\nGreater than operator. \nGreater than operator\nParameters:\n\na - The first asset to be compared \nb - The second asset to be compared \n\nReturns:\ntrue - if the first asset's amount is greater than the second asset amount \nReturns:\nfalse - otherwise \nPrecondition:\nBoth asset must have the same symbol \nfriend operator>=\nfriend bool eosio::asset::operator>= (\n    const asset & a,\n    const asset & b\n)\n\nGreater or equal to operator. \nGreater or equal to operator\nParameters:\n\na - The first asset to be compared \nb - The second asset to be compared \n\nReturns:\ntrue - if the first asset's amount is greater or equal to the second asset amount \nReturns:\nfalse - otherwise \nPrecondition:\nBoth asset must have the same symbol \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/asset.hpp\n"},"classeosio_1_1block__timestamp.html":{"url":"classeosio_1_1block__timestamp.html","title":"class block_timestamp","keywords":"eosio::block_timestamp slot block_interval_ms block_timestamp_epoch block_timestamp block_timestamp block_timestamp next to_time_point operator time_point operator= operator> operator>= operator< operator<= operator== operator!= maximum min","body":"class eosio::block_timestamp\nClass List > eosio :: block_timestamp\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint32_t\nslot\n\n\n\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr int32_t\nblock_interval_ms\n\n\nstatic constexpr int64_t\nblock_timestamp_epoch\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nblock_timestamp (uint32_t s = 0)\n\n\n\nblock_timestamp (const time_point & t)\n\n\n\nblock_timestamp (const time_point_sec & t)\n\n\nblock_timestamp\nnext () const\n\n\ntime_point\nto_time_point () const\n\n\n\noperator time_point () const\n\n\nvoid\noperator= (const time_point & t)\n\n\nbool\noperator> (const block_timestamp & t) const\n\n\nbool\noperator>= (const block_timestamp & t) const\n\n\nbool\noperator (const block_timestamp & t) const\n\n\nbool\noperator (const block_timestamp & t) const\n\n\nbool\noperator== (const block_timestamp & t) const\n\n\nbool\noperator!= (const block_timestamp & t) const\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic block_timestamp\nmaximum ()\n\n\nstatic block_timestamp\nmin ()\n\n\n\nDetailed Description\nThis class is used in the block headers to represent the block time It is a parameterised class that takes an Epoch in milliseconds and and an interval in milliseconds and computes the number of slots. \nvariable slot\nuint32_t eosio::block_timestamp::slot;\n\nvariable block_interval_ms\nconstexpr int32_t eosio::block_timestamp::block_interval_ms;\n\nvariable block_timestamp_epoch\nconstexpr int64_t eosio::block_timestamp::block_timestamp_epoch;\n\nfunction block_timestamp (1/3)\nexplicit eosio::block_timestamp::block_timestamp (\n    uint32_t s = 0\n)\n\nfunction block_timestamp (2/3)\neosio::block_timestamp::block_timestamp (\n    const time_point & t\n)\n\nfunction block_timestamp (3/3)\neosio::block_timestamp::block_timestamp (\n    const time_point_sec & t\n)\n\nfunction next\nblock_timestamp eosio::block_timestamp::next () const\n\nfunction to_time_point\ntime_point eosio::block_timestamp::to_time_point () const\n\nfunction operator time_point\neosio::block_timestamp::operator time_point () const\n\nfunction operator=\nvoid eosio::block_timestamp::operator= (\n    const time_point & t\n)\n\nfunction operator>\nbool eosio::block_timestamp::operator> (\n    const block_timestamp & t\n) const\n\nfunction operator>=\nbool eosio::block_timestamp::operator>= (\n    const block_timestamp & t\n) const\n\nfunction operator\nbool eosio::block_timestamp::operator\nfunction operator\nbool eosio::block_timestamp::operator\nfunction operator==\nbool eosio::block_timestamp::operator== (\n    const block_timestamp & t\n) const\n\nfunction operator!=\nbool eosio::block_timestamp::operator!= (\n    const block_timestamp & t\n) const\n\nfunction maximum\nstatic block_timestamp eosio::block_timestamp::maximum ()\n\nfunction min\nstatic block_timestamp eosio::block_timestamp::min ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/time.hpp\n"},"structeosio_1_1blockchain__parameters.html":{"url":"structeosio_1_1blockchain__parameters.html","title":"struct blockchain_parameters","keywords":"eosio::blockchain_parameters max_block_net_usage target_block_net_usage_pct max_transaction_net_usage base_per_transaction_net_usage net_usage_leeway context_free_discount_net_usage_num context_free_discount_net_usage_den max_block_cpu_usage target_block_cpu_usage_pct max_transaction_cpu_usage min_transaction_cpu_usage context_free_discount_cpu_usage_num context_free_discount_cpu_usage_den max_transaction_lifetime deferred_trx_expiration_window max_transaction_delay max_inline_action_size max_inline_action_depth max_authority_depth","body":"struct eosio::blockchain_parameters\nClass List > eosio :: blockchain_parameters\nTunable blockchain configuration that can be changed via consensus. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint64_t\nmax_block_net_usage\n\n\nuint32_t\ntarget_block_net_usage_pct\n\n\nuint32_t\nmax_transaction_net_usage\n\n\nuint32_t\nbase_per_transaction_net_usageThe base amount of net usage billed for a transaction to cover incidentals.\n\n\nuint32_t\nnet_usage_leeway\n\n\nuint32_t\ncontext_free_discount_net_usage_num\n\n\nuint32_t\ncontext_free_discount_net_usage_den\n\n\nuint32_t\nmax_block_cpu_usage\n\n\nuint32_t\ntarget_block_cpu_usage_pct\n\n\nuint32_t\nmax_transaction_cpu_usage\n\n\nuint32_t\nmin_transaction_cpu_usage\n\n\nuint64_t\ncontext_free_discount_cpu_usage_numThe numerator for the discount on cpu usage for CFA's.\n\n\nuint64_t\ncontext_free_discount_cpu_usage_denThe denominator for the discount on cpu usage for CFA's.\n\n\nuint32_t\nmax_transaction_lifetimeMaximum lifetime of a transacton.\n\n\nuint32_t\ndeferred_trx_expiration_window\n\n\nuint32_t\nmax_transaction_delay\n\n\nuint32_t\nmax_inline_action_sizeMaximum size of inline action.\n\n\nuint16_t\nmax_inline_action_depthMaximum depth of inline action.\n\n\nuint16_t\nmax_authority_depthMaximum authority depth.\n\n\n\nDetailed Description\nTunable blockchain configuration that can be changed via consensus \nvariable max_block_net_usage\nuint64_t eosio::blockchain_parameters::max_block_net_usage;\n\nvariable target_block_net_usage_pct\nuint32_t eosio::blockchain_parameters::target_block_net_usage_pct;\n\nvariable max_transaction_net_usage\nuint32_t eosio::blockchain_parameters::max_transaction_net_usage;\n\nvariable base_per_transaction_net_usage\nuint32_t eosio::blockchain_parameters::base_per_transaction_net_usage;\n\nThe base amount of net usage billed for a transaction to cover incidentals. \nThe base amount of net usage billed for a transaction to cover incidentals \nvariable net_usage_leeway\nuint32_t eosio::blockchain_parameters::net_usage_leeway;\n\nvariable context_free_discount_net_usage_num\nuint32_t eosio::blockchain_parameters::context_free_discount_net_usage_num;\n\nvariable context_free_discount_net_usage_den\nuint32_t eosio::blockchain_parameters::context_free_discount_net_usage_den;\n\nvariable max_block_cpu_usage\nuint32_t eosio::blockchain_parameters::max_block_cpu_usage;\n\nvariable target_block_cpu_usage_pct\nuint32_t eosio::blockchain_parameters::target_block_cpu_usage_pct;\n\nvariable max_transaction_cpu_usage\nuint32_t eosio::blockchain_parameters::max_transaction_cpu_usage;\n\nvariable min_transaction_cpu_usage\nuint32_t eosio::blockchain_parameters::min_transaction_cpu_usage;\n\nvariable context_free_discount_cpu_usage_num\nuint64_t eosio::blockchain_parameters::context_free_discount_cpu_usage_num;\n\nThe numerator for the discount on cpu usage for CFA's. \nThe numerator for the discount on cpu usage for CFA's \nvariable context_free_discount_cpu_usage_den\nuint64_t eosio::blockchain_parameters::context_free_discount_cpu_usage_den;\n\nThe denominator for the discount on cpu usage for CFA's. \nThe denominator for the discount on cpu usage for CFA's \nvariable max_transaction_lifetime\nuint32_t eosio::blockchain_parameters::max_transaction_lifetime;\n\nMaximum lifetime of a transacton. \nMaximum lifetime of a transacton \nvariable deferred_trx_expiration_window\nuint32_t eosio::blockchain_parameters::deferred_trx_expiration_window;\n\nvariable max_transaction_delay\nuint32_t eosio::blockchain_parameters::max_transaction_delay;\n\nvariable max_inline_action_size\nuint32_t eosio::blockchain_parameters::max_inline_action_size;\n\nMaximum size of inline action. \nMaximum size of inline action \nvariable max_inline_action_depth\nuint16_t eosio::blockchain_parameters::max_inline_action_depth;\n\nMaximum depth of inline action. \nMaximum depth of inline action \nvariable max_authority_depth\nuint16_t eosio::blockchain_parameters::max_authority_depth;\n\nMaximum authority depth. \nMaximum authority depth \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/privileged.hpp\n"},"classeosio_1_1contract.html":{"url":"classeosio_1_1contract.html","title":"class contract","keywords":"eosio::contract _self contract get_self","body":"class eosio::contract\nClass List > eosio :: contract\nBase class for EOSIO contract. More...\nProtected Attributes\n\n\n\nType\nName\n\n\n\n\naccount_name\n_selfThe name of this contract.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ncontract (account_name n) Construct a new contract object.\n\n\naccount_name\nget_self () const Get this contract name.\n\n\n\nDetailed Description\nBase class for EOSIO contract. A new contract should derive from this class, so it can make use of EOSIO_ABI macro. \nvariable _self\naccount_name eosio::contract::_self;\n\nThe name of this contract. \nThe name of this contract \nfunction contract\neosio::contract::contract (\n    account_name n\n)\n\nConstruct a new contract object. \nConstruct a new contract given the contract name\nParameters:\n\nn - The name of this contract \n\nfunction get_self\naccount_name eosio::contract::get_self () const\n\nGet this contract name. \nGet this contract name\nReturns:\naccount_name - The name of this contract \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/contract.hpp\n"},"classeosio_1_1currency.html":{"url":"classeosio_1_1currency.html","title":"class currency","keywords":"eosio::currency account create currency_stats fee_schedule issue transfer accounts stats currency get_balance get_supply inline_transfer apply create_currency issue_currency on on on inline_transfer","body":"class eosio::currency\nClass List > eosio :: currency\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\naccount\n\n\nstruct\ncreate\n\n\nstruct\ncurrency_stats\n\n\nstruct\nfee_schedule\n\n\nstruct\nissue\n\n\nstruct\ntransfer\n\n\n\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef eosio::multi_indexN(accounts), account >\naccounts\n\n\ntypedef eosio::multi_indexN(stat), currency_stats >\nstats\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ncurrency (account_name contract)\n\n\nasset\nget_balance (account_name owner, symbol_name symbol) const\n\n\nasset\nget_supply (symbol_name symbol) const\n\n\nvoid\ninline_transfer (account_name from, account_name to, asset amount, string memo = string(), permission_name perm = N(active))\n\n\nbool\napply (account_name contract, action_name act)\n\n\nvoid\ncreate_currency (const create & c)\n\n\nvoid\nissue_currency (const issue & i)\n\n\nvoid\non (const create & c)\n\n\nvoid\non (const issue & i)\n\n\nvoid\non (const transfer & t)\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic void\ninline_transfer (account_name from, account_name to, extended_asset amount, string memo = string(), permission_name perm = N(active))\n\n\n\nDetailed Description\nThis contract enables the creation, issuance, and transfering of many different tokens. \nDeprecated\nThis class is deprecated in favor of eosio.token in Dawn 3.0 \ntypedef accounts\ntypedef eosio::multi_index eosio::currency::accounts;\n\ntypedef stats\ntypedef eosio::multi_index eosio::currency::stats;\n\nfunction currency\neosio::currency::currency (\n    account_name contract\n)\n\nfunction get_balance\nasset eosio::currency::get_balance (\n    account_name owner,\n    symbol_name symbol\n) const\n\nfunction get_supply\nasset eosio::currency::get_supply (\n    symbol_name symbol\n) const\n\nfunction inline_transfer (1/2)\nvoid eosio::currency::inline_transfer (\n    account_name from,\n    account_name to,\n    asset amount,\n    string memo = string(),\n    permission_name perm = N(active)\n)\n\nfunction apply\nbool eosio::currency::apply (\n    account_name contract,\n    action_name act\n)\n\nfunction create_currency\nvoid eosio::currency::create_currency (\n    const create & c\n)\n\nThis is factored out so it can be used as a building block \nfunction issue_currency\nvoid eosio::currency::issue_currency (\n    const issue & i\n)\n\nfunction on (1/3)\nvoid eosio::currency::on (\n    const create & c\n)\n\nfunction on (2/3)\nvoid eosio::currency::on (\n    const issue & i\n)\n\nfunction on (3/3)\nvoid eosio::currency::on (\n    const transfer & t\n)\n\nfunction inline_transfer (2/2)\nstatic void eosio::currency::inline_transfer (\n    account_name from,\n    account_name to,\n    extended_asset amount,\n    string memo = string(),\n    permission_name perm = N(active)\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/currency.hpp\n"},"structeosio_1_1currency_1_1account.html":{"url":"structeosio_1_1currency_1_1account.html","title":"struct account","keywords":"eosio::currency::account balance frozen whitelist primary_key","body":"struct eosio::currency::account\nClass List > eosio :: currency :: account\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nasset\nbalance\n\n\nbool\nfrozen\n\n\nbool\nwhitelist\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nuint64_t\nprimary_key () const\n\n\n\nvariable balance\nasset eosio::currency::account::balance;\n\nvariable frozen\nbool eosio::currency::account::frozen;\n\nvariable whitelist\nbool eosio::currency::account::whitelist;\n\nfunction primary_key\nuint64_t eosio::currency::account::primary_key () const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/currency.hpp\n"},"structeosio_1_1currency_1_1create.html":{"url":"structeosio_1_1currency_1_1create.html","title":"struct create","keywords":"eosio::currency::create issuer maximum_supply issuer_can_freeze issuer_can_recall issuer_can_whitelist","body":"struct eosio::currency::create\nClass List > eosio :: currency :: create\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\naccount_name\nissuer\n\n\nasset\nmaximum_supply\n\n\nuint8_t\nissuer_can_freeze\n\n\nuint8_t\nissuer_can_recall\n\n\nuint8_t\nissuer_can_whitelist\n\n\n\nvariable issuer\naccount_name eosio::currency::create::issuer;\n\nvariable maximum_supply\nasset eosio::currency::create::maximum_supply;\n\nvariable issuer_can_freeze\nuint8_t eosio::currency::create::issuer_can_freeze;\n\nvariable issuer_can_recall\nuint8_t eosio::currency::create::issuer_can_recall;\n\nvariable issuer_can_whitelist\nuint8_t eosio::currency::create::issuer_can_whitelist;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/currency.hpp\n"},"structeosio_1_1currency_1_1currency__stats.html":{"url":"structeosio_1_1currency_1_1currency__stats.html","title":"struct currency_stats","keywords":"eosio::currency::currency_stats supply max_supply issuer can_freeze can_recall can_whitelist is_frozen enforce_whitelist primary_key","body":"struct eosio::currency::currency_stats\nClass List > eosio :: currency :: currency_stats\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nasset\nsupply\n\n\nasset\nmax_supply\n\n\naccount_name\nissuer\n\n\nbool\ncan_freeze\n\n\nbool\ncan_recall\n\n\nbool\ncan_whitelist\n\n\nbool\nis_frozen\n\n\nbool\nenforce_whitelist\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nuint64_t\nprimary_key () const\n\n\n\nvariable supply\nasset eosio::currency::currency_stats::supply;\n\nvariable max_supply\nasset eosio::currency::currency_stats::max_supply;\n\nvariable issuer\naccount_name eosio::currency::currency_stats::issuer;\n\nvariable can_freeze\nbool eosio::currency::currency_stats::can_freeze;\n\nvariable can_recall\nbool eosio::currency::currency_stats::can_recall;\n\nvariable can_whitelist\nbool eosio::currency::currency_stats::can_whitelist;\n\nvariable is_frozen\nbool eosio::currency::currency_stats::is_frozen;\n\nvariable enforce_whitelist\nbool eosio::currency::currency_stats::enforce_whitelist;\n\nfunction primary_key\nuint64_t eosio::currency::currency_stats::primary_key () const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/currency.hpp\n"},"structeosio_1_1currency_1_1fee__schedule.html":{"url":"structeosio_1_1currency_1_1fee__schedule.html","title":"struct fee_schedule","keywords":"eosio::currency::fee_schedule fee_per_length primary_key","body":"struct eosio::currency::fee_schedule\nClass List > eosio :: currency :: fee_schedule\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\narrayextended_asset, 7 >\nfee_per_length\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nuint64_t\nprimary_key () const\n\n\n\nvariable fee_per_length\narray eosio::currency::fee_schedule::fee_per_length;\n\nfunction primary_key\nuint64_t eosio::currency::fee_schedule::primary_key () const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/currency.hpp\n"},"structeosio_1_1currency_1_1issue.html":{"url":"structeosio_1_1currency_1_1issue.html","title":"struct issue","keywords":"eosio::currency::issue to quantity memo","body":"struct eosio::currency::issue\nClass List > eosio :: currency :: issue\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\naccount_name\nto\n\n\nasset\nquantity\n\n\nstring\nmemo\n\n\n\nvariable to\naccount_name eosio::currency::issue::to;\n\nvariable quantity\nasset eosio::currency::issue::quantity;\n\nvariable memo\nstring eosio::currency::issue::memo;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/currency.hpp\n"},"structeosio_1_1currency_1_1transfer.html":{"url":"structeosio_1_1currency_1_1transfer.html","title":"struct transfer","keywords":"eosio::currency::transfer from to quantity memo","body":"struct eosio::currency::transfer\nClass List > eosio :: currency :: transfer\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\naccount_name\nfrom\n\n\naccount_name\nto\n\n\nasset\nquantity\n\n\nstring\nmemo\n\n\n\nvariable from\naccount_name eosio::currency::transfer::from;\n\nvariable to\naccount_name eosio::currency::transfer::to;\n\nvariable quantity\nasset eosio::currency::transfer::quantity;\n\nvariable memo\nstring eosio::currency::transfer::memo;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/currency.hpp\n"},"classeosio_1_1datastream.html":{"url":"classeosio_1_1datastream.html","title":"class datastream","keywords":"eosio::datastream datastream skip read write put get get pos valid seekp tellp remaining","body":"class eosio::datastream\nClass List > eosio :: datastream\nA data stream for reading and writing data in the form of bytes. More...\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ndatastream (T start, size_t s) Construct a new datastream object.\n\n\nvoid\nskip (size_t s) Skips a specific number of bytes from this stream.\n\n\nbool\nread (char * d, size_t s) Reads a specified number of bytes from this stream into a buffer.\n\n\nbool\nwrite (const char * d, size_t s) Writes a specified number of bytes into the stream from a buffer.\n\n\nbool\nput (char c) Writes a byte into the stream.\n\n\nbool\nget (unsigned char & c) Reads a byte from the stream.\n\n\nbool\nget (char & c) Reads a byte from the stream.\n\n\nT\npos () const Retrieves the current position of the stream.\n\n\nbool\nvalid () const\n\n\nbool\nseekp (size_t p) Sets the position within the current stream.\n\n\nsize_t\ntellp () const Gets the position within the current stream.\n\n\nsize_t\nremaining () const Returns the number of remaining bytes that can be read/skipped.\n\n\n\nDetailed Description\nA data stream for reading and writing data in the form of bytes\nTemplate parameters:\n\nT - Type of the datastream buffer \n\nfunction datastream\neosio::datastream::datastream (\n    T start,\n    size_t s\n)\n\nConstruct a new datastream object. \nConstruct a new datastream object given the size of the buffer and start position of the buffer\nParameters:\n\nstart - The start position of the buffer \ns - The size of the buffer \n\nfunction skip\nvoid eosio::datastream::skip (\n    size_t s\n)\n\nSkips a specific number of bytes from this stream. \nSkips a specified number of bytes from this stream\nParameters:\n\ns - The number of bytes to skip \n\nfunction read\nbool eosio::datastream::read (\n    char * d,\n    size_t s\n)\n\nReads a specified number of bytes from this stream into a buffer. \nReads a specified number of bytes from the stream into a buffer\nParameters:\n\nd - The pointer to the destination buffer \ns - the number of bytes to read \n\nReturns:\ntrue \nfunction write\nbool eosio::datastream::write (\n    const char * d,\n    size_t s\n)\n\nWrites a specified number of bytes into the stream from a buffer. \nWrites a specified number of bytes into the stream from a buffer\nParameters:\n\nd - The pointer to the source buffer \ns - The number of bytes to write \n\nReturns:\ntrue \nfunction put\nbool eosio::datastream::put (\n    char c\n)\n\nWrites a byte into the stream. \nWrites a byte into the stream\nParameters:\n\nc byte to write \n\nReturns:\ntrue \nfunction get (1/2)\nbool eosio::datastream::get (\n    unsigned char & c\n)\n\nReads a byte from the stream. \nReads a byte from the stream\nParameters:\n\nc - The reference to destination byte \n\nReturns:\ntrue \nfunction get (2/2)\nbool eosio::datastream::get (\n    char & c\n)\n\nReads a byte from the stream. \nReads a byte from the stream\nParameters:\n\nc - The reference to destination byte \n\nReturns:\ntrue \nfunction pos\nT eosio::datastream::pos () const\n\nRetrieves the current position of the stream. \nRetrieves the current position of the stream\nReturns:\nT - The current position of the stream \nfunction valid\nbool eosio::datastream::valid () const\n\nfunction seekp\nbool eosio::datastream::seekp (\n    size_t p\n)\n\nSets the position within the current stream. \nSets the position within the current stream\nParameters:\n\np - The offset relative to the origin \n\nReturns:\ntrue if p is within the range \nReturns:\nfalse if p is not within the rawnge \nfunction tellp\nsize_t eosio::datastream::tellp () const\n\nGets the position within the current stream. \nGets the position within the current stream\nReturns:\np - The position within the current stream \nfunction remaining\nsize_t eosio::datastream::remaining () const\n\nReturns the number of remaining bytes that can be read/skipped. \nReturns the number of remaining bytes that can be read/skipped\nReturns:\nsize_t - The number of remaining bytes \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/datastream.hpp\n"},"classeosio_1_1datastream_3_01size__t_01_4.html":{"url":"classeosio_1_1datastream_3_01size__t_01_4.html","title":"class datastream< size_t >","keywords":"eosio::datastream< size_t > datastream skip write put valid seekp tellp remaining","body":"class eosio::datastream\nClass List > eosio :: datastream\nSpecialization of datastream used to help determine the final size of a serialized value. Specialization of datastream used to help determine the final size of a serialized value. \nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ndatastream (size_t init_size = 0) Construct a new specialized datastream object.\n\n\nbool\nskip (size_t s) Increase the size by s.\n\n\nbool\nwrite (const char *, size_t s) Increase the size by s.\n\n\nbool\nput (char) Increase the size by one.\n\n\nbool\nvalid () const Check validity.\n\n\nbool\nseekp (size_t p) Set new size.\n\n\nsize_t\ntellp () const Get the size.\n\n\nsize_t\nremaining () const Always returns 0.\n\n\n\nfunction datastream\neosio::datastream::datastream (\n    size_t init_size = 0\n)\n\nConstruct a new specialized datastream object. \nConstruct a new specialized datastream object given the initial size\nParameters:\n\ninit_size - The initial size \n\nfunction skip\nbool eosio::datastream::skip (\n    size_t s\n)\n\nIncrease the size by s. \nIncrement the size by s. This behaves the same as write( const char* ,size_t s ).\nParameters:\n\ns - The amount of size to increase \n\nReturns:\ntrue \nfunction write\nbool eosio::datastream::write (\n    const char * ,\n    size_t s\n)\n\nIncrease the size by s. \nIncrement the size by s. This behaves the same as skip( size_t s )\nParameters:\n\ns - The amount of size to increase \n\nReturns:\ntrue \nfunction put\nbool eosio::datastream::put (\n    char \n)\n\nIncrease the size by one. \nIncrement the size by one\nReturns:\ntrue \nfunction valid\nbool eosio::datastream::valid () const\n\nCheck validity. \nCheck validity. It's always valid\nReturns:\ntrue \nfunction seekp\nbool eosio::datastream::seekp (\n    size_t p\n)\n\nSet new size. \nSet new size\nParameters:\n\np - The new size \n\nReturns:\ntrue \nfunction tellp\nsize_t eosio::datastream::tellp () const\n\nGet the size. \nGet the size\nReturns:\nsize_t - The size \nfunction remaining\nsize_t eosio::datastream::remaining () const\n\nAlways returns 0. \nAlways returns 0\nReturns:\nsize_t - 0 \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/datastream.hpp\n"},"structeosio_1_1extended__asset.html":{"url":"structeosio_1_1extended__asset.html","title":"struct extended_asset","keywords":"eosio::extended_asset contract get_extended_symbol extended_asset extended_asset extended_asset print operator- operator- operator+","body":"struct eosio::extended_asset\nClass List > eosio :: extended_asset\nInherits the following classes: eosio::asset\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\naccount_name\ncontractThe owner of the asset.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nextended_symbol\nget_extended_symbol () const Get the extended symbol of the asset.\n\n\n\nextended_asset () = default Construct a new extended asset object.\n\n\n\nextended_asset (int64_t v, extended_symbol s) Construct a new extended asset object.\n\n\n\nextended_asset (asset a, account_name c) Construct a new extended asset object.\n\n\nvoid\nprint () const Print the extended asset\n\n\nextended_asset\noperator- () const Unary minus operator.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend extended_asset\noperator-Subtraction operator.\n\n\nfriend extended_asset\noperator+Addition operator.\n\n\n\nvariable contract\naccount_name eosio::extended_asset::contract;\n\nThe owner of the asset. \nThe owner of the asset \nfunction get_extended_symbol\nextended_symbol eosio::extended_asset::get_extended_symbol () const\n\nGet the extended symbol of the asset. \nGet the extended symbol of the asset\nReturns:\nextended_symbol - The extended symbol of the asset \nfunction extended_asset (1/3)\neosio::extended_asset::extended_asset () = default\n\nConstruct a new extended asset object. \nDefault constructor \nfunction extended_asset (2/3)\neosio::extended_asset::extended_asset (\n    int64_t v,\n    extended_symbol s\n)\n\nConstruct a new extended asset object. \nConstruct a new extended asset given the amount and extended symbol \nfunction extended_asset (3/3)\neosio::extended_asset::extended_asset (\n    asset a,\n    account_name c\n)\n\nConstruct a new extended asset object. \nConstruct a new extended asset given the asset and owner name \nfunction print\nvoid eosio::extended_asset::print () const\n\nPrint the extended asset \nPrint the extended asset \nfunction operator- (1/2)\nextended_asset eosio::extended_asset::operator- () const\n\nUnary minus operator. \nUnary minus operator\nReturns:\nextended_asset - New extended asset with its amount is the negative amount of this extended asset \nfriend operator- (2/2)\nfriend extended_asset eosio::extended_asset::operator- (\n    const extended_asset & a,\n    const extended_asset & b\n)\n\nSubtraction operator. \nSubtraction operator. This subtracts the amount of the extended asset.\nParameters:\n\na - The extended asset to be subtracted \nb - The extended asset used to subtract \n\nReturns:\nextended_asset - New extended asset as the result of subtraction \nPrecondition:\nThe owner of both extended asset need to be the same \nfriend operator+\nfriend extended_asset eosio::extended_asset::operator+ (\n    const extended_asset & a,\n    const extended_asset & b\n)\n\nAddition operator. \nAddition operator. This adds the amount of the extended asset.\nParameters:\n\na - The extended asset to be added \nb - The extended asset to be added \n\nReturns:\nextended_asset - New extended asset as the result of addition \nPrecondition:\nThe owner of both extended asset need to be the same \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/asset.hpp\n"},"structeosio_1_1extended__symbol.html":{"url":"structeosio_1_1extended__symbol.html","title":"struct extended_symbol","keywords":"eosio::extended_symbol contract extended_symbol print operator== operator!= operator<","body":"struct eosio::extended_symbol\nClass List > eosio :: extended_symbol\nInherits the following classes: eosio::symbol_type\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\naccount_name\ncontractThe owner of the symbol.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nextended_symbol (symbol_name sym = 0, account_name acc = 0)\n\n\nvoid\nprint () const Print the extended symbol\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==Subtraction operator.\n\n\nfriend bool\noperator!=Subtraction operator.\n\n\nfriend bool\noperator\n\n\n\nvariable contract\naccount_name eosio::extended_symbol::contract;\n\nThe owner of the symbol. \nThe owner of the symbol \nfunction extended_symbol\neosio::extended_symbol::extended_symbol (\n    symbol_name sym = 0,\n    account_name acc = 0\n)\n\nfunction print\nvoid eosio::extended_symbol::print () const\n\nPrint the extended symbol \nPrint the extended symbol \nfriend operator==\nfriend bool eosio::extended_symbol::operator== (\n    const extended_symbol & a,\n    const extended_symbol & b\n)\n\nSubtraction operator. \nEquivalency operator. Returns true if a == b (are the same)\nParameters:\n\na - The extended asset to be subtracted \nb - The extended asset used to subtract \n\nReturns:\nboolean - true if both provided symbols are the same \nfriend operator!=\nfriend bool eosio::extended_symbol::operator!= (\n    const extended_symbol & a,\n    const extended_symbol & b\n)\n\nSubtraction operator. \nInverted equivalency operator. Returns true if a != b (are different)\nParameters:\n\na - The extended asset to be subtracted \nb - The extended asset used to subtract \n\nReturns:\nboolean - true if both provided symbols are the same \nfriend operator\nfriend bool eosio::extended_symbol::operator\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/symbol.hpp\n"},"classeosio_1_1fixed__key.html":{"url":"classeosio_1_1fixed__key.html","title":"class fixed_key","keywords":"eosio::fixed_key bool_pack word_t arr_itr arr num_words padded_bytes fixed_key fixed_key operator== operator!= operator> operator<","body":"class eosio::fixed_key\nClass List > eosio :: fixed_key\nFixed size key sorted lexicographically for Multi Index Table. More...\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nbool_pack\n\n\n\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef uint128_t\nword_t\n\n\n\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\n\narr_itrConstructor to fixed_key object from std::array of num_words() words.\n\n\nreturn\narr\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic constexpr size_t\nnum_words () Get number of words contained in this fixed_key object.\n\n\nstatic constexpr size_t\npadded_bytes () Get number of padded bytes contained in this fixed_key object.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconstexpr\nfixed_key () Default constructor to fixed_key object.\n\n\n\nfixed_key (const std::arrayword_t, num_words()> & arr) Constructor to fixed_key object from std::array of num_words() words.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==Compares two fixed_key variables c1 and c2.\n\n\nfriend bool\noperator!=Compares two fixed_key variables c1 and c2.\n\n\nfriend bool\noperator>Compares two fixed_key variables c1 and c2.\n\n\nfriend bool\noperatorCompares two fixed_key variables c1 and c2.\n\n\n\nDetailed Description\nFixed size key sorted lexicographically for Multi Index Table\nTemplate parameters:\n\nSize - Size of the fixed_key object \n\ntypedef word_t\ntypedef uint128_t eosio::fixed_key::word_t;\n\nvariable arr_itr\neosio::fixed_key::arr_itr;\n\nConstructor to fixed_key object from std::array of num_words() words. \nConstructor to fixed_key object from std::array of num_words() words \nParameters:\n\narr - Source data \n\nvariable arr\nreturn eosio::fixed_key::arr;\n\nfunction num_words\nstatic constexpr size_t eosio::fixed_key::num_words ()\n\nGet number of words contained in this fixed_key object. \nGet number of words contained in this fixed_key object. A word is defined to be 16 bytes in size \nfunction padded_bytes\nstatic constexpr size_t eosio::fixed_key::padded_bytes ()\n\nGet number of padded bytes contained in this fixed_key object. \nGet number of padded bytes contained in this fixed_key object. Padded bytes are the remaining bytes inside the fixed_key object after all the words are allocated \nfunction fixed_key (1/2)\nconstexpr eosio::fixed_key::fixed_key ()\n\nDefault constructor to fixed_key object. \nDefault constructor to fixed_key object which initializes all bytes to zero \nfunction fixed_key (2/2)\neosio::fixed_key::fixed_key (\n    const std::array & arr\n)\n\nConstructor to fixed_key object from std::array of num_words() words. \nConstructor to fixed_key object from std::array of num_words() words \nParameters:\n\narr data \n\nfriend operator==\nfriend bool eosio::fixed_key::operator== (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 == c2, return true, otherwise false \nfriend operator!=\nfriend bool eosio::fixed_key::operator!= (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 != c2, return true, otherwise false \nfriend operator>\nfriend bool eosio::fixed_key::operator> (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 > c2, return true, otherwise false \nfriend operator\nfriend bool eosio::fixed_key::operator & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp\n"},"structeosio_1_1fixed__key_1_1bool__pack.html":{"url":"structeosio_1_1fixed__key_1_1bool__pack.html","title":"struct bool_pack","keywords":"eosio::fixed_key::bool_pack","body":"struct eosio::fixed_key::bool_pack\nClass List > eosio :: fixed_key :: bool_pack\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp\n"},"structeosio_1_1fixed__point128.html":{"url":"structeosio_1_1fixed__point128.html","title":"struct fixed_point128","keywords":"eosio::fixed_point128 val fixed_point128 fixed_point128 fixed_point128 fixed_point128 int_part frac_part print operator= operator= operator= operator== operator> operator<","body":"struct eosio::fixed_point128\nClass List > eosio :: fixed_point128\n128 bits representation of Fixed Point class. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nint128_t\nvalValue of the fixed point represented as int128_t.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nfixed_point128 (int128_t v = 0) Various constructors for fixed_point128.\n\n\n\nfixed_point128 (const fixed_point128 & r) Construct a new fixed point128 object from another fixed_point128.\n\n\n\nfixed_point128 (const fixed_point64 & r) Construct a new fixed point128 object from another fixed_point64.\n\n\n\nfixed_point128 (const fixed_point32 & r) Construct a new fixed point128 object from another fixed_point32.\n\n\nint128_t\nint_part () const To get the integer part of the fixed number.\n\n\nuint128_t\nfrac_part () const To get the decimal part of the fixed number.\n\n\nvoid\nprint () const Prints the fixed point value.\n\n\nfixed_point128 &\noperator= (const fixed_point32 & r) Assignment operator.\n\n\nfixed_point128 &\noperator= (const fixed_point64 & r) Assignment operator.\n\n\nfixed_point128 &\noperator= (const fixed_point128 & r) Assignment operator.\n\n\nbool\noperator== (const fixed_point128 & r) Equality operator.\n\n\nbool\noperator> (const fixed_point128 & r) Greater than operator.\n\n\nbool\noperator (const fixed_point128 & r) Less than operator.\n\n\n\nDetailed Description\nThe template param Q represents the Q Factor i.e number of decimals\nExample: \nfixed_point128 a(123232.455667233)\nfixed_point128 a(123424)\nfixed_point128 c = a*b;\nfixed_point128 d = a+b+c;\nfixed_point128 e = b/a;\n\nvariable val\nint128_t eosio::fixed_point128::val;\n\nValue of the fixed point represented as int128_t. \nValue of the fixed point represented as int128_t \nfunction fixed_point128 (1/4)\neosio::fixed_point128::fixed_point128 (\n    int128_t v = 0\n)\n\nVarious constructors for fixed_point128. \nVarious constructors for fixed_point128. Can create fixed_point128 instance from an int128_t, fixed_point128,64,32 instance\nExample: \nfixed_point64 a(1234.455667);\nfixed_point128 b(a);\nfixed_point32 b(13324.32323);\nfixed_point128 c(a);\n\n Construct a new fixed point128 object from int128_t\nConstruct a new fixed point128 object \nParameters:\n\nv - int128_t representation of the fixed point value \n\nfunction fixed_point128 (2/4)\neosio::fixed_point128::fixed_point128 (\n    const fixed_point128 & r\n)\n\nConstruct a new fixed point128 object from another fixed_point128. \nConstruct a new fixed point128 object from another fixed_point128\nParameters:\n\nr - Another fixed_point128 as source \n\nfunction fixed_point128 (3/4)\neosio::fixed_point128::fixed_point128 (\n    const fixed_point64 & r\n)\n\nConstruct a new fixed point128 object from another fixed_point64. \nConstruct a new fixed point128 object from another fixed_point64\nParameters:\n\nr -fixed_point64 as source \n\nfunction fixed_point128 (4/4)\neosio::fixed_point128::fixed_point128 (\n    const fixed_point32 & r\n)\n\nConstruct a new fixed point128 object from another fixed_point32. \nConstruct a new fixed point128 object from another fixed_point32\nParameters:\n\nr -fixed_point32 as source \n\nfunction int_part\nint128_t eosio::fixed_point128::int_part () const\n\nTo get the integer part of the fixed number. \nGet the integer part of the 64 bit fixed number\nReturns:\nReturns integer part of the fixed number\nExample: \nfixed_point64 a(1234.455667)\nstd::cout \nfunction frac_part\nuint128_t eosio::fixed_point128::frac_part () const\n\nTo get the decimal part of the fixed number. \nGet the decimal part of the 64 bit fixed number\nReturns:\nReturns decimal part of the fixed number\nExample: \nfixed_point128 a(1234.455667)\nstd::cout \nfunction print\nvoid eosio::fixed_point128::print () const\n\nPrints the fixed point value. \nPrints the fixed point value \nfunction operator= (1/3)\nfixed_point128 & eosio::fixed_point128::operator= (\n    const fixed_point32 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point32 to fixed_point128\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point128& - Reference to this object \nfunction operator= (2/3)\nfixed_point128 & eosio::fixed_point128::operator= (\n    const fixed_point64 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point32 to fixed_point64\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point128& - Reference to this object \nfunction operator= (3/3)\nfixed_point128 & eosio::fixed_point128::operator= (\n    const fixed_point128 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point32 to fixed_point32\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point128& - Reference to this object \nfunction operator==\nbool eosio::fixed_point128::operator== (\n    const fixed_point128 & r\n)\n\nEquality operator. \nEquality operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator>\nbool eosio::fixed_point128::operator> (\n    const fixed_point128 & r\n)\n\nGreater than operator. \nGreater than operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator\nbool eosio::fixed_point128::operator & r\n)\n\nLess than operator. \nLess than operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp\n"},"structeosio_1_1fixed__point32.html":{"url":"structeosio_1_1fixed__point32.html","title":"struct fixed_point32","keywords":"eosio::fixed_point32 val fixed_point32 fixed_point32 fixed_point32 int_part frac_part print operator= operator= operator+ operator- operator* operator/ operator== operator> operator< operator= operator= operator+ operator-","body":"struct eosio::fixed_point32\nClass List > eosio :: fixed_point32\n32 bits representation of Fixed Point class. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nint32_t\nvalValue of the fixed point represented as int32_t.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nfixed_point32 (const fixed_point32 & r) Construct a new fixed point32 object from another fixed_point32.\n\n\n\nfixed_point32 (const fixed_point64 & r) Construct a new fixed point32 object from another fixed_point64.\n\n\n\nfixed_point32 (int32_t param = 0) Construct a new fixed point32 object.\n\n\nint32_t\nint_part () const To get the integer part of the fixed number.\n\n\nuint32_t\nfrac_part () const\n\n\nvoid\nprint () const Prints the fixed point value.\n\n\nfixed_point32 &\noperator= (const fixed_point32 & r) Assignment operator.\n\n\nfixed_point32 &\noperator= (const fixed_point64 & r) Assignment operator.\n\n\nfixed_point32QR)?Q:QR >\noperator+ (const fixed_point32 & r) const Addition operator.\n\n\nfixed_point32QR)?Q:QR >\noperator- (const fixed_point32 & r) const Subtraction operator.\n\n\nfixed_point64\noperator* (const fixed_point32 & r) const Multiplication operator.\n\n\nfixed_point64\noperator/ (const fixed_point32 & r) const Division operator.\n\n\nbool\noperator== (const fixed_point32 & r) Equality operator.\n\n\nbool\noperator> (const fixed_point32 & r) Greater than operator.\n\n\nbool\noperator (const fixed_point32 & r) Less than operator.\n\n\nfixed_point32 &\noperator= (const fixed_point32 & r)\n\n\nfixed_point32 &\noperator= (const fixed_point64 & r)\n\n\nfixed_point32QR)?Q:QR >\noperator+ (const fixed_point32 & rhs) const Addition between two fixed_point32 variables and the result goes to fixed_point32.\n\n\nfixed_point32QR)?Q:QR >\noperator- (const fixed_point32 & rhs) const Subtraction between two fixed_point32 variables and the result goes to fixed_point32.\n\n\n\nDetailed Description\nThis class is implemented to to replace the floating point variables It can resolve floating point undetermenistic related issues\nExample: \nfixed_point32 b(9.654);\nfixed_point32 c = a*b;\nfixed_point32 d = a+b+c;\nfixed_point32 e = b/a;\n\nvariable val\nint32_t eosio::fixed_point32::val;\n\nValue of the fixed point represented as int32_t. \nValue of the fixed point represented as int32_t \nfunction fixed_point32 (1/3)\neosio::fixed_point32::fixed_point32 (\n    const fixed_point32 & r\n)\n\nConstruct a new fixed point32 object from another fixed_point32. \nConstruct a new fixed point32 object from another fixed_point32\nParameters:\n\nr - Another fixed_point32 as source \n\nfunction fixed_point32 (2/3)\neosio::fixed_point32::fixed_point32 (\n    const fixed_point64 & r\n)\n\nConstruct a new fixed point32 object from another fixed_point64. \nConstruct a new fixed point32 object from another fixed_point64. It will be truncated.\nParameters:\n\nr - Another fixed_point32 as source \n\nfunction fixed_point32 (3/3)\neosio::fixed_point32::fixed_point32 (\n    int32_t param = 0\n)\n\nConstruct a new fixed point32 object. \nConstruct a new fixed point32 object from int32_t\nParameters:\n\nv - int32_t representation of the fixed point value \n\nfunction int_part\nint32_t eosio::fixed_point32::int_part () const\n\nTo get the integer part of the fixed number. \nGet the integer part of the 64 bit fixed number \nReturns:\nReturns integer part of the fixed number\nExample: \nfixed_point32 a(1234.455667)\nstd::cout \nfunction frac_part\nuint32_t eosio::fixed_point32::frac_part () const\n\nfunction print\nvoid eosio::fixed_point32::print () const\n\nPrints the fixed point value. \nPrints the fixed point value \nfunction operator= (1/4)\nfixed_point32 & eosio::fixed_point32::operator= (\n    const fixed_point32 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point32 to fixed_point32\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point32& - Reference to this object \nfunction operator= (2/4)\nfixed_point32 & eosio::fixed_point32::operator= (\n    const fixed_point64 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point64 to fixed_point32\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point32& - Reference to this object \nfunction operator+ (1/2)\nfixed_point32QR)?Q:QR > eosio::fixed_point32::operator+ (\n    const fixed_point32 & r\n) const\n\nAddition operator. \nAddition operator\nTemplate parameters:\n\nQR - Precision of the second addend \n\nParameters:\n\nr - Second addend \n\nReturns:\n\nThe result of addition \n\nfunction operator- (1/2)\nfixed_point32QR)?Q:QR > eosio::fixed_point32::operator- (\n    const fixed_point32 & r\n) const\n\nSubtraction operator. \nSubtraction operator\nTemplate parameters:\n\nQR - Precision of the minuend \n\nParameters:\n\nr - Minuend \n\nReturns:\n\nThe result of subtraction \n\nfunction operator*\nfixed_point64 eosio::fixed_point32::operator* (\n    const fixed_point32 & r\n) const\n\nMultiplication operator. \nMultiplication operator for fixed_point32. The result goes to fixed_point64.\nMultiplication operator\nTemplate parameters:\n\nQR - Precision of the multiplier \n\nParameters:\n\nr - Multiplier \n\nReturns:\n\nThe result of multiplication\n\nMultiplication operator for fixed_point32. The result goes to fixed_point64 Number of decimal on result will be sum of number of decimals of lhs and rhs\nExample: \nfixed_point64 result = fixed_point32(131313) / fixed_point32(2323)\n\nfunction operator/\nfixed_point64 eosio::fixed_point32::operator/ (\n    const fixed_point32 & r\n) const\n\nDivision operator. \nDivision of two fixed_point32 result will be stored in fixed_point64.\nDivision operator\nTemplate parameters:\n\nQR - Precision of the divisor \n\nParameters:\n\nr - Divisor \n\nReturns:\n\nThe result of division\n\nDivision operator for fixed_point32\nExample: \nfixed_point64 result = fixed_point32(131313) / fixed_point32(2323)\n\nfunction operator==\nbool eosio::fixed_point32::operator== (\n    const fixed_point32 & r\n)\n\nEquality operator. \nEquality operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator>\nbool eosio::fixed_point32::operator> (\n    const fixed_point32 & r\n)\n\nGreater than operator. \nGreater than operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator\nbool eosio::fixed_point32::operator & r\n)\n\nLess than operator. \nLess than operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator= (3/4)\nfixed_point32 & eosio::fixed_point32::operator= (\n    const fixed_point32 & r\n)\n\nfunction operator= (4/4)\nfixed_point32 & eosio::fixed_point32::operator= (\n    const fixed_point64 & r\n)\n\nfunction operator+ (2/2)\nfixed_point32QR)?Q:QR > eosio::fixed_point32::operator+ (\n    const fixed_point32 & rhs\n) const\n\nAddition between two fixed_point32 variables and the result goes to fixed_point32. \nAddition between two fixed_point32 variables Number of decimal on result will be max of decimals of lhs and rhs \nfunction operator- (2/2)\nfixed_point32QR)?Q:QR > eosio::fixed_point32::operator- (\n    const fixed_point32 & rhs\n) const\n\nSubtraction between two fixed_point32 variables and the result goes to fixed_point32. \nSubtraction between two fixed_point32 variables Number of decimal on result will be max of decimals of lhs and rhs \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp\n"},"structeosio_1_1fixed__point64.html":{"url":"structeosio_1_1fixed__point64.html","title":"struct fixed_point64","keywords":"eosio::fixed_point64 val fixed_point64 fixed_point64 fixed_point64 int_part frac_part print operator= operator= operator+ operator- operator* operator/ operator== operator> operator< operator+ operator-","body":"struct eosio::fixed_point64\nClass List > eosio :: fixed_point64\n64 bits representation of Fixed Point class. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nint64_t\nvalValue of the fixed point represented as int64_t.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nfixed_point64 (int64_t v = 0) Construct a new fixed point64 object.\n\n\n\nfixed_point64 (const fixed_point64 & r) Construct a new fixed point64 object from another fixed_point64.\n\n\n\nfixed_point64 (const fixed_point32 & r) Construct a new fixed point64 object from another fixed_point32.\n\n\nint64_t\nint_part () const To get the integer part of the fixed number.\n\n\nuint64_t\nfrac_part () const To get the decimal part of the fixed number.\n\n\nvoid\nprint () const Prints the fixed point value.\n\n\nfixed_point64 &\noperator= (const fixed_point32 & r) Assignment operator.\n\n\nfixed_point64 &\noperator= (const fixed_point64 & r) Assignment operator.\n\n\nfixed_point64QR)?Q:QR >\noperator+ (const fixed_point64 & r) const Addition operator.\n\n\nfixed_point64QR)?Q:QR >\noperator- (const fixed_point64 & r) const Subtraction operator.\n\n\nfixed_point128\noperator* (const fixed_point64 & r) const Multiplication operator.\n\n\nfixed_point128\noperator/ (const fixed_point64 & r) const Division operator.\n\n\nbool\noperator== (const fixed_point64 & r) Equality operator.\n\n\nbool\noperator> (const fixed_point64 & r) Greater than operator.\n\n\nbool\noperator (const fixed_point64 & r) Less than operator.\n\n\nfixed_point64QR)?Q:QR >\noperator+ (const fixed_point64 & rhs) const Addition between two fixed_point64 variables and the result goes to fixed_point64.\n\n\nfixed_point64QR)?Q:QR >\noperator- (const fixed_point64 & rhs) const Subtraction between two fixed_point64 variables and the result goes to fixed_point64.\n\n\n\nDetailed Description\nExample: \nfixed_point64 a(123232.455667233)\nfixed_point64 a(123424)\nfixed_point64 c = a*b;\nfixed_point64 d = a+b+c;\nfixed_point64 e = b/a;\n\nvariable val\nint64_t eosio::fixed_point64::val;\n\nValue of the fixed point represented as int64_t. \nValue of the fixed point represented as int64_t \nfunction fixed_point64 (1/3)\neosio::fixed_point64::fixed_point64 (\n    int64_t v = 0\n)\n\nConstruct a new fixed point64 object. \nConstruct a new fixed point64 object from int64_t\nParameters:\n\nv - int64_t representation of the fixed point value \n\nfunction fixed_point64 (2/3)\neosio::fixed_point64::fixed_point64 (\n    const fixed_point64 & r\n)\n\nConstruct a new fixed point64 object from another fixed_point64. \nConstruct a new fixed point64 object from another fixed_point64\nParameters:\n\nr - Another fixed_point64 as source \n\nfunction fixed_point64 (3/3)\neosio::fixed_point64::fixed_point64 (\n    const fixed_point32 & r\n)\n\nConstruct a new fixed point64 object from another fixed_point32. \nConstruct a new fixed point64 object from another fixed_point32\nParameters:\n\nr - fixed_point64 as source \n\nfunction int_part\nint64_t eosio::fixed_point64::int_part () const\n\nTo get the integer part of the fixed number. \nGet the integer part of the 64 bit fixed number \nReturns:\nReturns integer part of the fixed number\nExample: \nfixed_point64 a(1234.455667)\nstd::cout \nfunction frac_part\nuint64_t eosio::fixed_point64::frac_part () const\n\nTo get the decimal part of the fixed number. \nGet the decimal part of the 64 bit fixed number \nReturns:\nReturns decimal part of the fixed number\nExample: \nfixed64 a(1234.455667)\nstd::cout \nfunction print\nvoid eosio::fixed_point64::print () const\n\nPrints the fixed point value. \nPrints the fixed point value \nfunction operator= (1/2)\nfixed_point64 & eosio::fixed_point64::operator= (\n    const fixed_point32 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point32 to fixed_point64\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point64& - Reference to this object \nfunction operator= (2/2)\nfixed_point64 & eosio::fixed_point64::operator= (\n    const fixed_point64 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point64 to fixed_point64\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point64& - Reference to this object \nfunction operator+ (1/2)\nfixed_point64QR)?Q:QR > eosio::fixed_point64::operator+ (\n    const fixed_point64 & r\n) const\n\nAddition operator. \nAddition operator\nTemplate parameters:\n\nQR - Precision of the second addend \n\nParameters:\n\nr - Second addend \n\nReturns:\n\nThe result of addition \n\nfunction operator- (1/2)\nfixed_point64QR)?Q:QR > eosio::fixed_point64::operator- (\n    const fixed_point64 & r\n) const\n\nSubtraction operator. \nSubtraction operator\nTemplate parameters:\n\nQR - Precision of the minuend \n\nParameters:\n\nr - Minuend \n\nReturns:\n\nThe result of subtraction \n\nfunction operator*\nfixed_point128 eosio::fixed_point64::operator* (\n    const fixed_point64 & r\n) const\n\nMultiplication operator. \nMultiplication operator for fixed_point64. The result goes to fixed_point64.\nMultiplication operator\nTemplate parameters:\n\nQR - Precision of the multiplier \n\nParameters:\n\nr - Multiplier \n\nReturns:\n\nThe result of multiplication\n\nMultiplication operator for fixed_point64. The result goes to fixed_point128 Number of decimal on result will be sum of number of decimals of lhs and rhs\nExample: \nfixed_point128 result = fixed_point64(131313) / fixed_point64(2323)\n\nfunction operator/\nfixed_point128 eosio::fixed_point64::operator/ (\n    const fixed_point64 & r\n) const\n\nDivision operator. \nDivision of two fixed_point64 result will be stored in fixed_point128.\nDivision operator\nTemplate parameters:\n\nQR - Precision of the divisor \n\nParameters:\n\nr - Divisor \n\nReturns:\n\nThe result of division\n\nDivision operator for fixed_point64\nExample: \nfixed_point128 result = fixed_point64(131313) / fixed_point64(2323)\n\nfunction operator==\nbool eosio::fixed_point64::operator== (\n    const fixed_point64 & r\n)\n\nEquality operator. \nEquality operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator>\nbool eosio::fixed_point64::operator> (\n    const fixed_point64 & r\n)\n\nGreater than operator. \nGreater than operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator\nbool eosio::fixed_point64::operator & r\n)\n\nLess than operator. \nLess than operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator+ (2/2)\nfixed_point64QR)?Q:QR > eosio::fixed_point64::operator+ (\n    const fixed_point64 & rhs\n) const\n\nAddition between two fixed_point64 variables and the result goes to fixed_point64. \nAddition between two fixed_point64 variables Number of decimal on result will be max of decimals of lhs and rhs \nfunction operator- (2/2)\nfixed_point64QR)?Q:QR > eosio::fixed_point64::operator- (\n    const fixed_point64 & rhs\n) const\n\nSubtraction between two fixed_point64 variables and the result goes to fixed_point64. \nSubtraction between two fixed_point64 variables Number of decimal on result will be max of decimals of lhs and rhs \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp\n"},"structeosio_1_1indexed__by.html":{"url":"structeosio_1_1indexed__by.html","title":"struct indexed_by","keywords":"eosio::indexed_by constants secondary_extractor_type","body":"struct eosio::indexed_by\nClass List > eosio :: indexed_by\nThe indexed_by struct is used to instantiate the indices for the Multi-Index table. In EOSIO, up to 16 secondary indices can be specified. More...\nPublic Types\n\n\n\nType\nName\n\n\n\n\nenum\nconstants { index_name = IndexName }\n\n\ntypedef Extractor\nsecondary_extractor_type\n\n\n\nDetailed Description\nThe indexed_by struct is used to instantiate the indices for the Multi-Index table. In EOSIO, up to 16 secondary indices can be specified. \nTemplate parameters:\n\nIndexName - is the name of the index. The name must be provided as an EOSIO base32 encoded 64-bit integer and must conform to the EOSIO naming requirements of a maximum of 13 characters, the first twelve from the lowercase characters a-z, digits 0-5, and \".\", and if there is a 13th character, it is restricted to lowercase characters a-p and \".\". \nExtractor - is a function call operator that takes a const reference to the table object type and returns either a secondary key type or a reference to a secondary key type. It is recommended to use the eosio::const\\_mem\\_fun template, which is a type alias to the boost::multi\\_index::const\\_mem\\_fun. See the documentation for the Boost const\\_mem\\_fun key extractor for more details.\n\nExample:\n#include \nusing namespace eosio;\nclass mycontract: eosio::contract {\n  struct record {\n     uint64_t    primary;\n     uint128_t   secondary;\n     uint64_t primary_key() const { return primary; }\n     uint64_t get_secondary() const { return secondary; }\n     EOSLIB_SERIALIZE( record, (primary)(secondary) )\n   };\n  public:\n    mycontract( account_name self ):contract(self){}\n    void myaction() {\n      auto code = _self;\n      auto scope = _self;\n      multi_index > > table( code, scope);\n    }\n}\nEOSIO_ABI( mycontract, (myaction) )\n\nenum constants\nenum eosio::indexed_by::constants {\n    index_name = IndexName,\n};\n\ntypedef secondary_extractor_type\ntypedef Extractor eosio::indexed_by::secondary_extractor_type;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1inline__dispatcher.html":{"url":"structeosio_1_1inline__dispatcher.html","title":"struct inline_dispatcher","keywords":"eosio::inline_dispatcher","body":"struct eosio::inline_dispatcher\nClass List > eosio :: inline_dispatcher\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"url":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","title":"struct inline_dispatcher< void(T::*)(Args...), Name >","keywords":"eosio::inline_dispatcher< void(T::*)(Args...), Name > call call","body":"struct eosio::inline_dispatcher\nClass List > eosio :: inline_dispatcher\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic void\ncall (account_name code, const permission_level & perm, std::tuple args)\n\n\nstatic void\ncall (account_name code, vectorpermission_level > perms, std::tuple args)\n\n\n\nfunction call (1/2)\nstatic void eosio::inline_dispatcher::call (\n    account_name code,\n    const permission_level & perm,\n    std::tuple args\n)\n\nfunction call (2/2)\nstatic void eosio::inline_dispatcher::call (\n    account_name code,\n    vector perms,\n    std::tuple args\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"classeosio_1_1iostream.html":{"url":"classeosio_1_1iostream.html","title":"class iostream","keywords":"eosio::iostream","body":"class eosio::iostream\nClass List > eosio :: iostream\nDetailed Description\nSimulate C++ style streams \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/print.hpp\n"},"classeosio_1_1memory__manager.html":{"url":"classeosio_1_1memory__manager.html","title":"class memory_manager","keywords":"eosio::memory_manager memory malloc calloc realloc memory_manager","body":"class eosio::memory_manager\nClass List > eosio :: memory_manager\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\nmemory\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend void *\nmallocnamespace eosio\n\n\nfriend void *\ncallocAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0.\n\n\nfriend void *\nreallocReallocate the given area of memory.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nmemory_manager ()\n\n\n\nfriend malloc (1/2)\nfriend void * eosio::memory_manager::malloc (\n    size_t size\n)\n\nnamespace eosio \nAllocate additional memory\nParameters:\n\nsize - Number of additional bytes to be allocated \n\nReturns:\nvoid* - Pointer to start of the new allocated memory \nfriend calloc\nfriend void * eosio::memory_manager::calloc (\n    size_t count,\n    size_t size\n)\n\nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0. \nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0\nParameters:\n\ncount - Number of elements to allocate \nsize - Size of each element \n\nReturns:\nvoid* - Pointer to start of the new allocated memory \nfriend realloc (1/2)\nfriend void * eosio::memory_manager::realloc (\n    void * ptr,\n    size_t size\n)\n\nReallocate the given area of memory. \nReallocate the given area of memory, which is allocated by malloc(), calloc(), or realloc() previously\nParameters:\n\nptr - Pointer to the memory area to be reallocated \nsize - New size of the memory \n\nReturns:\nvoid* - Pointer to the new reallocated memory \nfunction memory_manager\neosio::memory_manager::memory_manager ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/eosiolib.cpp\n"},"classeosio_1_1memory__manager_1_1memory.html":{"url":"classeosio_1_1memory__manager_1_1memory.html","title":"class memory","keywords":"eosio::memory_manager::memory buffer_ptr memory init is_init is_in_heap is_capacity_remaining malloc malloc_from_freed realloc_in_place free cleanup_remaining expand_memory","body":"class eosio::memory_manager::memory\nClass List > eosio :: memory_manager :: memory\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\nbuffer_ptr\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nmemory ()\n\n\nvoid\ninit (char *const mem_heap, uint32_t size)\n\n\nuint32_t\nis_init () const\n\n\nuint32_t\nis_in_heap (const char *const ptr) const\n\n\nuint32_t\nis_capacity_remaining () const\n\n\nchar *\nmalloc (uint32_t size)\n\n\nchar *\nmalloc_from_freed (uint32_t size)\n\n\nchar *\nrealloc_in_place (char *const ptr, uint32_t size, uint32_t * orig_ptr_size)\n\n\nvoid\nfree (char * ptr)\n\n\nvoid\ncleanup_remaining ()\n\n\nbool\nexpand_memory (char * exp_mem, uint32_t size)\n\n\n\nfunction memory\neosio::memory_manager::memory::memory ()\n\nfunction init\nvoid eosio::memory_manager::memory::init (\n    char *const mem_heap,\n    uint32_t size\n)\n\nfunction is_init\nuint32_t eosio::memory_manager::memory::is_init () const\n\nfunction is_in_heap\nuint32_t eosio::memory_manager::memory::is_in_heap (\n    const char *const ptr\n) const\n\nfunction is_capacity_remaining\nuint32_t eosio::memory_manager::memory::is_capacity_remaining () const\n\nfunction malloc\nchar * eosio::memory_manager::memory::malloc (\n    uint32_t size\n)\n\nfunction malloc_from_freed\nchar * eosio::memory_manager::memory::malloc_from_freed (\n    uint32_t size\n)\n\nfunction realloc_in_place\nchar * eosio::memory_manager::memory::realloc_in_place (\n    char *const ptr,\n    uint32_t size,\n    uint32_t * orig_ptr_size\n)\n\nfunction free\nvoid eosio::memory_manager::memory::free (\n    char * ptr\n)\n\nfunction cleanup_remaining\nvoid eosio::memory_manager::memory::cleanup_remaining ()\n\nfunction expand_memory\nbool eosio::memory_manager::memory::expand_memory (\n    char * exp_mem,\n    uint32_t size\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/eosiolib.cpp\n"},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"url":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","title":"class buffer_ptr","keywords":"eosio::memory_manager::memory::buffer_ptr buffer_ptr buffer_ptr size next_ptr size end ptr mark_alloc mark_free is_alloc merge_contiguous_if_available merge_contiguous","body":"class eosio::memory_manager::memory::buffer_ptr\nClass List > eosio :: memory_manager :: memory :: buffer_ptr\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nbuffer_ptr (void * ptr, const char *const heap_end)\n\n\n\nbuffer_ptr (void * ptr, uint32_t buff_size, const char *const heap_end)\n\n\nuint32_t\nsize () const\n\n\nchar *\nnext_ptr () const\n\n\nvoid\nsize (uint32_t val)\n\n\nchar *\nend () const\n\n\nchar *\nptr () const\n\n\nvoid\nmark_alloc ()\n\n\nvoid\nmark_free ()\n\n\nbool\nis_alloc () const\n\n\nbool\nmerge_contiguous_if_available (uint32_t needed_size)\n\n\nbool\nmerge_contiguous (uint32_t needed_size)\n\n\n\nfunction buffer_ptr (1/2)\neosio::memory_manager::memory::buffer_ptr::buffer_ptr (\n    void * ptr,\n    const char *const heap_end\n)\n\nfunction buffer_ptr (2/2)\neosio::memory_manager::memory::buffer_ptr::buffer_ptr (\n    void * ptr,\n    uint32_t buff_size,\n    const char *const heap_end\n)\n\nfunction size (1/2)\nuint32_t eosio::memory_manager::memory::buffer_ptr::size () const\n\nfunction next_ptr\nchar * eosio::memory_manager::memory::buffer_ptr::next_ptr () const\n\nfunction size (2/2)\nvoid eosio::memory_manager::memory::buffer_ptr::size (\n    uint32_t val\n)\n\nfunction end\nchar * eosio::memory_manager::memory::buffer_ptr::end () const\n\nfunction ptr\nchar * eosio::memory_manager::memory::buffer_ptr::ptr () const\n\nfunction mark_alloc\nvoid eosio::memory_manager::memory::buffer_ptr::mark_alloc ()\n\nfunction mark_free\nvoid eosio::memory_manager::memory::buffer_ptr::mark_free ()\n\nfunction is_alloc\nbool eosio::memory_manager::memory::buffer_ptr::is_alloc () const\n\nfunction merge_contiguous_if_available\nbool eosio::memory_manager::memory::buffer_ptr::merge_contiguous_if_available (\n    uint32_t needed_size\n)\n\nfunction merge_contiguous (1/2)\nbool eosio::memory_manager::memory::buffer_ptr::merge_contiguous (\n    uint32_t needed_size\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/eosiolib.cpp\n"},"classeosio_1_1microseconds.html":{"url":"classeosio_1_1microseconds.html","title":"class microseconds","keywords":"eosio::microseconds _count time_point operator+ operator- operator> operator>= operator< operator<= microseconds operator== operator!= operator+= operator-= count to_seconds maximum","body":"class eosio::microseconds\nClass List > eosio :: microseconds\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nint64_t\n_count\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend class\ntime_point\n\n\nfriend microseconds\noperator+\n\n\nfriend microseconds\noperator-\n\n\nfriend bool\noperator>\n\n\nfriend bool\noperator>=\n\n\nfriend bool\noperator\n\n\nfriend bool\noperator\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nmicroseconds (int64_t c = 0)\n\n\nbool\noperator== (const microseconds & c) const\n\n\nbool\noperator!= (const microseconds & c) const\n\n\nmicroseconds &\noperator+= (const microseconds & c)\n\n\nmicroseconds &\noperator-= (const microseconds & c)\n\n\nint64_t\ncount () const\n\n\nint64_t\nto_seconds () const\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic microseconds\nmaximum ()\n\n\n\nvariable _count\nint64_t eosio::microseconds::_count;\n\nfriend time_point\nfriend class time_point;\n\nfriend operator+\nfriend microseconds eosio::microseconds::operator+ (\n    const microseconds & l,\n    const microseconds & r\n)\n\nfriend operator-\nfriend microseconds eosio::microseconds::operator- (\n    const microseconds & l,\n    const microseconds & r\n)\n\nfriend operator>\nfriend bool eosio::microseconds::operator> (\n    const microseconds & a,\n    const microseconds & b\n)\n\nfriend operator>=\nfriend bool eosio::microseconds::operator>= (\n    const microseconds & a,\n    const microseconds & b\n)\n\nfriend operator\nfriend bool eosio::microseconds::operator\nfriend operator\nfriend bool eosio::microseconds::operator\nfunction microseconds\nexplicit eosio::microseconds::microseconds (\n    int64_t c = 0\n)\n\nfunction operator==\nbool eosio::microseconds::operator== (\n    const microseconds & c\n) const\n\nfunction operator!=\nbool eosio::microseconds::operator!= (\n    const microseconds & c\n) const\n\nfunction operator+=\nmicroseconds & eosio::microseconds::operator+= (\n    const microseconds & c\n)\n\nfunction operator-=\nmicroseconds & eosio::microseconds::operator-= (\n    const microseconds & c\n)\n\nfunction count\nint64_t eosio::microseconds::count () const\n\nfunction to_seconds\nint64_t eosio::microseconds::to_seconds () const\n\nfunction maximum\nstatic microseconds eosio::microseconds::maximum ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/time.hpp\n"},"classeosio_1_1multi__index.html":{"url":"classeosio_1_1multi__index.html","title":"class multi_index","keywords":"eosio::multi_index const_iterator index intc item item_ptr const_reverse_iterator multi_index get_code get_scope cbegin begin cend end crbegin rbegin crend rend lower_bound upper_bound available_primary_key get_index get_index iterator_to emplace modify modify get find require_find erase erase","body":"class eosio::multi_index\nClass List > eosio :: multi_index\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nconst_iterator\n\n\nstruct\nindex\n\n\nstruct\nintc\n\n\nstruct\nitem\n\n\nstruct\nitem_ptr\n\n\n\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef std::reverse_iteratorconst_iterator >\nconst_reverse_iteratorstruct multi_index::const_iterator\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nmulti_index (uint64_t code, uint64_t scope) load_object_by_primary_iterator\n\n\nuint64_t\nget_code () const Returns the code member property.\n\n\nuint64_t\nget_scope () const Returns the scope member property.\n\n\nconst_iterator\ncbegin () const Returns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table.\n\n\nconst_iterator\nbegin () const Returns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table.\n\n\nconst_iterator\ncend () const Returns an iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\n\n\nconst_iterator\nend () const Returns an iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\n\n\nconst_reverse_iterator\ncrbegin () const Returns a reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\n\n\nconst_reverse_iterator\nrbegin () const Returns a reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\n\n\nconst_reverse_iterator\ncrend () const Returns an iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table.\n\n\nconst_reverse_iterator\nrend () const Returns an iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table.\n\n\nconst_iterator\nlower_bound (uint64_t primary) const Searches for the object\\_type with the lowest primary key that is greater than or equal to a given primary key.\n\n\nconst_iterator\nupper_bound (uint64_t primary) const Searches for the object\\_type with the highest primary key that is less than or equal to a given primary key.\n\n\nuint64_t\navailable_primary_key () const Returns an available primary key.\n\n\nauto\nget_index () Returns an appropriately typed Secondary Index.\n\n\nauto\nget_index () const Returns an appropriately typed Secondary Index.\n\n\nconst_iterator\niterator_to (const T & obj) const Returns an iterator to the given object in a Multi-Index table.\n\n\nconst_iterator\nemplace (uint64_t payer, Lambda && constructor) Adds a new object (i.e., row) to the table.\n\n\nvoid\nmodify (const_iterator itr, uint64_t payer, Lambda && updater) Modifies an existing object in a table.\n\n\nvoid\nmodify (const T & obj, uint64_t payer, Lambda && updater) Modifies an existing object in a table.\n\n\nconst T &\nget (uint64_t primary, const char * error_msg = \"unable to find key\") const Retrieves an existing object from a table using its primary key.\n\n\nconst_iterator\nfind (uint64_t primary) const Search for an existing object in a table using its primary key.\n\n\nconst_iterator\nrequire_find (uint64_t primary, const char * error_msg = \"unable to find key\") const Search for an existing object in a table using its primary key.\n\n\nconst_iterator\nerase (const_iterator itr) Remove an existing object from a table using its primary key.\n\n\nvoid\nerase (const T & obj) Remove an existing object from a table using its primary key.\n\n\n\ntypedef const_reverse_iterator\ntypedef std::reverse_iterator eosio::multi_index::const_reverse_iterator;\n\nstruct multi_index::const_iterator \nfunction multi_index\neosio::multi_index::multi_index (\n    uint64_t code,\n    uint64_t scope\n)\n\nload_object_by_primary_iterator \nConstructs an instance of a Multi-Index table. Constructs an instance of a Multi-Index table.\nParameters:\n\ncode - Account that owns table \nscope - Scope identifier within the code hierarchy\n\nPrecondition:\ncode and scope member properties are initialized \nPost\neach secondary index table initialized \nPost\nSecondary indices are updated to refer to the newly added object. If the secondary index tables do not exist, they are created. \nPost\nThe payer is charged for the storage usage of the new object and, if the table (and secondary index tables) must be created, for the overhead of the table creation.\nNotes The ` template has template parameters`, where:\n\nTableName is the name of the table, maximum 12 characters long, characters in the name from the set of lowercase letters, digits 1 to 5, and the \".\" (period) character;\nT is the object type (i.e., row definition);\nIndices is a list of up to 16 secondary indices.\nEach must be a default constructable class or struct\nEach must have a function call operator that takes a const reference to the table object type and returns either a secondary key type or a reference to a secondary key type\nIt is recommended to use the eosio::const_mem_fun template, which is a type alias to the boost::multi_index::const_mem_fun. See the documentation for the Boost const_mem_fun key extractor for more details.\n\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self); // code, scope\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction get_code\nuint64_t eosio::multi_index::get_code () const\n\nReturns the code member property. \nReturns the code member property. \nReturns:\nAccount name of the Code that owns the Primary Table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(N(dan), N(dan)); // code, scope\n      eosio_assert(addresses.get_code() == N(dan), \"Codes don't match.\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction get_scope\nuint64_t eosio::multi_index::get_scope () const\n\nReturns the scope member property. \nReturns the scope member property. \nReturns:\nScope id of the Scope within the Code of the Current Receiver under which the desired Primary Table instance can be found.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(N(dan), N(dan)); // code, scope\n      eosio_assert(addresses.get_code() == N(dan), \"Scopes don't match\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction cbegin\nconst_iterator eosio::multi_index::cbegin () const\n\nReturns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table. \nReturns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table. \nReturns:\nAn iterator pointing to the object_type with the lowest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(N(dan));\n      eosio_assert(itr == addresses.cbegin(), \"Only address is not at front.\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction begin\nconst_iterator eosio::multi_index::begin () const\n\nReturns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table. \nReturns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table. \nReturns:\nAn iterator pointing to the object_type with the lowest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(N(dan));\n      eosio_assert(itr == addresses.begin(), \"Only address is not at front.\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction cend\nconst_iterator eosio::multi_index::cend () const\n\nReturns an iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns an iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns:\nAn iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(N(dan));\n      eosio_assert(itr != addresses.cend(), \"Address for account doesn't exist\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction end\nconst_iterator eosio::multi_index::end () const\n\nReturns an iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns an iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns:\nAn iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(N(dan));\n      eosio_assert(itr != addresses.end(), \"Address for account doesn't exist\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction crbegin\nconst_reverse_iterator eosio::multi_index::crbegin () const\n\nReturns a reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns a reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns:\nA reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(brendan);\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n      });\n      auto itr = addresses.crbegin();\n      eosio_assert(itr->account_name == N(dan), \"Incorrect Last Record \");\n      itr++;\n      eosio_assert(itr->account_name == N(brendan), \"Incorrect Second Last Record\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction rbegin\nconst_reverse_iterator eosio::multi_index::rbegin () const\n\nReturns a reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns a reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns:\nA reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(brendan);\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n      });\n      auto itr = addresses.rbegin();\n      eosio_assert(itr->account_name == N(dan), \"Incorrect Last Record \");\n      itr++;\n      eosio_assert(itr->account_name == N(brendan), \"Incorrect Second Last Record\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction crend\nconst_reverse_iterator eosio::multi_index::crend () const\n\nReturns an iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table. \nReturns an iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table. \nReturns:\nAn iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(brendan);\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n      });\n      auto itr = addresses.crend();\n      itr--;\n      eosio_assert(itr->account_name == N(brendan), \"Incorrect First Record \");\n      itr--;\n      eosio_assert(itr->account_name == N(dan), \"Incorrect Second Record\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction rend\nconst_reverse_iterator eosio::multi_index::rend () const\n\nReturns an iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table. \nReturns an iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table. \nReturns:\nAn iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(brendan);\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n      });\n      auto itr = addresses.rend();\n      itr--;\n      eosio_assert(itr->account_name == N(brendan), \"Incorrect First Record \");\n      itr--;\n      eosio_assert(itr->account_name == N(dan), \"Incorrect Second Record\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction lower_bound\nconst_iterator eosio::multi_index::lower_bound (\n    uint64_t primary\n) const\n\nSearches for the object\\_type with the lowest primary key that is greater than or equal to a given primary key. \nSearches for the object\\_type with the lowest primary key that is greater than or equal to a given primary key. \nParameters:\n\nprimary - Primary key that establishes the target value for the lower bound search.\n\nReturns:\nAn iterator pointing to the object\\_type that has the lowest primary key that is greater than or equal to primary. If an object could not be found, it will return the end iterator. If the table does not exist** it will return -1.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint32_t zip = 0;\n     uint64_t primary_key() const { return account_name; }\n     uint64_t by_zip() const { return zip; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state)(zip) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index > address_index;\n    void myaction() {\n      address_index addresses(_self, _self);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n        address.zip = 93446;\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(brendan);\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n        address.zip = 93445;\n      });\n      uint32_t zipnumb = 93445;\n      auto zip_index = addresses.get_index();\n      auto itr = zip_index.lower_bound(zipnumb);\n      eosio_assert(itr->account_name == N(brendan), \"Incorrect First Lower Bound Record \");\n      itr++;\n      eosio_assert(itr->account_name == N(dan), \"Incorrect Second Lower Bound Record\");\n      itr++;\n      eosio_assert(itr == zip_index.end(), \"Incorrect End of Iterator\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction upper_bound\nconst_iterator eosio::multi_index::upper_bound (\n    uint64_t primary\n) const\n\nSearches for the object\\_type with the highest primary key that is less than or equal to a given primary key. \nSearches for the object\\_type with the highest primary key that is less than or equal to a given primary key. \nParameters:\n\nprimary - Primary key that establishes the target value for the upper bound search\n\nReturns:\nAn iterator pointing to the object\\_type that has the highest primary key that is less than or equal to primary. If an object could not be found, it will return the end iterator. If the table does not exist** it will return -1.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint32_t zip = 0;\n     uint64_t liked = 0;\n     uint64_t primary_key() const { return account_name; }\n     uint64_t by_zip() const { return zip; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state)(zip) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index > address_index;\n    void myaction() {\n      address_index addresses(_self, _self);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n        address.zip = 93446;\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(brendan);\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n        address.zip = 93445;\n      });\n      uint32_t zipnumb = 93445;\n      auto zip_index = addresses.get_index();\n      auto itr = zip_index.upper_bound(zipnumb);\n      eosio_assert(itr->account_name == N(dan), \"Incorrect First Upper Bound Record \");\n      itr++;\n      eosio_assert(itr == zip_index.end(), \"Incorrect End of Iterator\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction available_primary_key\nuint64_t eosio::multi_index::available_primary_key () const\n\nReturns an available primary key. \nReturns an available primary key. \nReturns:\nAn available (unused) primary key value.\nNotes: Intended to be used in tables in which the primary keys of the table are strictly intended to be auto-incrementing, and thus will never be set to custom values by the contract. Violating this expectation could result in the table appearing to be full due to inability to allocate an available primary key. Ideally this method would only be used to determine the appropriate primary key to use within new objects added to a table in which the primary keys of the table are strictly intended from the beginning to be autoincrementing and thus will not ever be set to custom arbitrary values by the contract. Violating this agreement could result in the table appearing full when in reality there is plenty of space left.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t key;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return key; }\n     EOSLIB_SERIALIZE( address, (key)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.key = addresses.available_primary_key();\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction get_index (1/2)\nauto eosio::multi_index::get_index ()\n\nReturns an appropriately typed Secondary Index. \nReturns an appropriately typed Secondary Index. \nTemplate parameters:\n\nIndexName - the ID of the desired secondary index\n\nReturns:\nAn index of the appropriate type: Primitive 64-bit unsigned integer key (idx64), Primitive 128-bit unsigned integer key (idx128), 128-bit fixed-size lexicographical key (idx128), 256-bit fixed-size lexicographical key (idx256), Floating point key, Double precision floating point key, Long Double (quadruple) precision floating point key\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint32_t zip = 0;\n     uint64_t primary_key() const { return account_name; }\n     uint64_t by_zip() const { return zip; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state)(zip) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index > address_index;\n    void myaction() {\n      address_index addresses(_self, _self);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n        address.zip = 93446;\n      });\n      uint32_t zipnumb = 93446;\n      auto zip_index = addresses.get_index();\n      auto itr = zip_index.find(zipnumb);\n      eosio_assert(itr->account_name == N(dan), \"Incorrect Record \");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction get_index (2/2)\nauto eosio::multi_index::get_index () const\n\nReturns an appropriately typed Secondary Index. \nReturns an appropriately typed Secondary Index. \nTemplate parameters:\n\nIndexName - the ID of the desired secondary index\n\nReturns:\nAn index of the appropriate type: Primitive 64-bit unsigned integer key (idx64), Primitive 128-bit unsigned integer key (idx128), 128-bit fixed-size lexicographical key (idx128), 256-bit fixed-size lexicographical key (idx256), Floating point key, Double precision floating point key, Long Double (quadruple) precision floating point key\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint32_t zip = 0;\n     uint64_t primary_key() const { return account_name; }\n     uint64_t by_zip() const { return zip; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state)(zip) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index > address_index;\n    void myaction() {\n      address_index addresses(_self, _self); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n        address.zip = 93446;\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(brendan);\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n        address.zip = 93445;\n      });\n      uint32_t zipnumb = 93445;\n      auto zip_index = addresses.get_index();\n      auto itr = zip_index.upper_bound(zipnumb);\n      eosio_assert(itr->account_name == N(dan), \"Incorrect First Upper Bound Record \");\n      itr++;\n      eosio_assert(itr == zip_index.end(), \"Incorrect End of Iterator\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction iterator_to\nconst_iterator eosio::multi_index::iterator_to (\n    const T & obj\n) const\n\nReturns an iterator to the given object in a Multi-Index table. \nReturns an iterator to the given object in a Multi-Index table. \nParameters:\n\nobj - A reference to the desired object\n\nReturns:\nAn iterator to the given object\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint32_t zip = 0;\n     uint64_t primary_key() const { return account_name; }\n     uint64_t by_zip() const { return zip; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state)(zip) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index > address_index;\n    void myaction() {\n      address_index addresses(_self, _self); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n        address.zip = 93446;\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = N(brendan);\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n        address.zip = 93445;\n      });\n      auto user = addresses.get(N(dan));\n      auto itr = address.find(N(dan));\n      eosio_assert(iterator_to(user) == itr, \"Invalid iterator\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction emplace\nconst_iterator eosio::multi_index::emplace (\n    uint64_t payer,\n    Lambda && constructor\n)\n\nAdds a new object (i.e., row) to the table. \nAdds a new object (i.e., row) to the table. \nParameters:\n\npayer - Account name of the payer for the Storage usage of the new object \nconstructor - Lambda function that does an in-place initialization of the object to be created in the table\n\nPrecondition:\nA multi index table has been instantiated \nPost\nA new object is created in the Multi-Index table, with a unique primary key (as specified in the object). The object is serialized and written to the table. If the table does not exist, it is created. \nPost\nSecondary indices are updated to refer to the newly added object. If the secondary index tables do not exist, they are created. \nPost\nThe payer is charged for the storage usage of the new object and, if the table (and secondary index tables) must be created, for the overhead of the table creation.\nReturns:\nA primary key iterator to the newly created object\nException - The account is not authorized to write to the table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction modify (1/2)\nvoid eosio::multi_index::modify (\n    const_iterator itr,\n    uint64_t payer,\n    Lambda && updater\n)\n\nModifies an existing object in a table. \nModifies an existing object in a table. \nParameters:\n\nitr - an iterator pointing to the object to be updated \npayer - account name of the payer for the Storage usage of the updated row \nupdater - lambda function that updates the target object\n\nPrecondition:\nitr points to an existing element \nPrecondition:\npayer is a valid account that is authorized to execute the action and be billed for storage usage.\nPost\nThe modified object is serialized, then replaces the existing object in the table. \nPost\nSecondary indices are updated; the primary key of the updated object is not changed. \nPost\nThe payer is charged for the storage usage of the updated object. \nPost\nIf payer is the same as the existing payer, payer only pays for the usage difference between existing and updated object (and is refunded if this difference is negative). \nPost\nIf payer is different from the existing payer, the existing payer is refunded for the storage usage of the existing object.\nExceptions: If called with an invalid precondition, execution is aborted.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(N(dan));\n      eosio_assert(itr != addresses.end(), \"Address for account not found\");\n      addresses.modify( itr, account payer, [&]( auto& address ) {\n        address.city = \"San Luis Obispo\";\n        address.state = \"CA\";\n      });\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction modify (2/2)\nvoid eosio::multi_index::modify (\n    const T & obj,\n    uint64_t payer,\n    Lambda && updater\n)\n\nModifies an existing object in a table. \nModifies an existing object in a table. \nParameters:\n\nobj - a reference to the object to be updated \npayer - account name of the payer for the Storage usage of the updated row \nupdater - lambda function that updates the target object\n\nPrecondition:\nobj is an existing object in the table \nPrecondition:\npayer is a valid account that is authorized to execute the action and be billed for storage usage.\nPost\nThe modified object is serialized, then replaces the existing object in the table. \nPost\nSecondary indices are updated; the primary key of the updated object is not changed. \nPost\nThe payer is charged for the storage usage of the updated object. \nPost\nIf payer is the same as the existing payer, payer only pays for the usage difference between existing and updated object (and is refunded if this difference is negative). \nPost\nIf payer is different from the existing payer, the existing payer is refunded for the storage usage of the existing object.\nExceptions: If called with an invalid precondition, execution is aborted.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(N(dan));\n      eosio_assert(itr != addresses.end(), \"Address for account not found\");\n      addresses.modify( *itr, payer, [&]( auto& address ) {\n        address.city = \"San Luis Obispo\";\n        address.state = \"CA\";\n      });\n      eosio_assert(itr->city == \"San Luis Obispo\", \"Address not modified\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction get\nconst T & eosio::multi_index::get (\n    uint64_t primary,\n    const char * error_msg = \"unable to find key\"\n) const\n\nRetrieves an existing object from a table using its primary key. \nRetrieves an existing object from a table using its primary key. \nParameters:\n\nprimary - Primary key value of the object \n\nReturns:\nA constant reference to the object containing the specified primary key.\nException - No object matches the given key\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto user = addresses.get(N(dan));\n      eosio_assert(user.first_name == \"Daniel\", \"Couldn't get him.\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction find\nconst_iterator eosio::multi_index::find (\n    uint64_t primary\n) const\n\nSearch for an existing object in a table using its primary key. \nSearch for an existing object in a table using its primary key. \nParameters:\n\nprimary - Primary key value of the object \n\nReturns:\nAn iterator to the found object which has a primary key equal to primary OR the end iterator of the referenced table if an object with primary key primary is not found.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(N(dan));\n      eosio_assert(itr != addresses.end(), \"Couldn't get him.\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction require_find\nconst_iterator eosio::multi_index::require_find (\n    uint64_t primary,\n    const char * error_msg = \"unable to find key\"\n) const\n\nSearch for an existing object in a table using its primary key. \nSearch for an existing object in a table using its primary key. \nParameters:\n\nprimary - Primary key value of the object \nerror_msg - error message if an object with primary key primary is not found. \n\nReturns:\nAn iterator to the found object which has a primary key equal to primary OR throws an exception if an object with primary key primary is not found. \nfunction erase (1/2)\nconst_iterator eosio::multi_index::erase (\n    const_iterator itr\n)\n\nRemove an existing object from a table using its primary key. \nRemove an existing object from a table using its primary key. \nParameters:\n\nitr - An iterator pointing to the object to be removed\n\nPrecondition:\nitr points to an existing element \nPost\nThe object is removed from the table and all associated storage is reclaimed. \nPost\nSecondary indices associated with the table are updated. \nPost\nThe existing payer for storage usage of the object is refunded for the table and secondary indices usage of the removed object, and if the table and indices are removed, for the associated overhead.\nReturns:\nFor the signature with ``, returns a pointer to the object following the removed object.\nExceptions: The object to be removed is not in the table. The action is not authorized to modify the table. The given iterator is invalid.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(N(dan));\n      eosio_assert(itr != addresses.end(), \"Address for account not found\");\n      addresses.erase( itr );\n      eosio_assert(itr != addresses.end(), \"Address not erased properly\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction erase (2/2)\nvoid eosio::multi_index::erase (\n    const T & obj\n)\n\nRemove an existing object from a table using its primary key. \nRemove an existing object from a table using its primary key. \nParameters:\n\nobj - Object to be removed\n\nPrecondition:\nobj is an existing object in the table \nPost\nThe object is removed from the table and all associated storage is reclaimed. \nPost\nSecondary indices associated with the table are updated. \nPost\nThe existing payer for storage usage of the object is refunded for the table and secondary indices usage of the removed object, and if the table and indices are removed, for the associated overhead.\nExceptions: The object to be removed is not in the table. The action is not authorized to modify the table. The given iterator is invalid.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n     EOSLIB_SERIALIZE( address, (account_name)(first_name)(last_name)(street)(city)(state) )\n  };\n  public:\n    addressbook(account_name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = N(dan);\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(N(dan));\n      eosio_assert(itr != addresses.end(), \"Record is not found\");\n      addresses.erase(*itr);\n      itr = addresses.find(N(dan));\n      eosio_assert(itr == addresses.end(), \"Record is not deleted\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1multi__index_1_1const__iterator.html":{"url":"structeosio_1_1multi__index_1_1const__iterator.html","title":"struct const_iterator","keywords":"eosio::multi_index::const_iterator multi_index operator== operator!= operator* operator-> operator++ operator-- operator++ operator--","body":"struct eosio::multi_index::const_iterator\nClass List > eosio :: multi_index :: const_iterator\nInherits the following classes: std::iterator\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend class\nmulti_index\n\n\nfriend bool\noperator==\n\n\nfriend bool\noperator!=\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconst T &\noperator* () const\n\n\nconst T *\noperator-> () const\n\n\nconst_iterator\noperator++ (int)\n\n\nconst_iterator\noperator-- (int)\n\n\nconst_iterator &\noperator++ ()\n\n\nconst_iterator &\noperator-- ()\n\n\n\nfriend multi_index\nfriend class multi_index;\n\nfriend operator==\nfriend bool eosio::multi_index::const_iterator::operator== (\n    const const_iterator & a,\n    const const_iterator & b\n)\n\nfriend operator!=\nfriend bool eosio::multi_index::const_iterator::operator!= (\n    const const_iterator & a,\n    const const_iterator & b\n)\n\nfunction operator*\nconst T & eosio::multi_index::const_iterator::operator* () const\n\nfunction operator->\nconst T * eosio::multi_index::const_iterator::operator-> () const\n\nfunction operator++ (1/2)\nconst_iterator eosio::multi_index::const_iterator::operator++ (\n    int \n)\n\nfunction operator-- (1/2)\nconst_iterator eosio::multi_index::const_iterator::operator-- (\n    int \n)\n\nfunction operator++ (2/2)\nconst_iterator & eosio::multi_index::const_iterator::operator++ ()\n\nfunction operator-- (2/2)\nconst_iterator & eosio::multi_index::const_iterator::operator-- ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1multi__index_1_1index.html":{"url":"structeosio_1_1multi__index_1_1index.html","title":"struct index","keywords":"eosio::multi_index::index const_iterator constants secondary_extractor_type secondary_key_type const_reverse_iterator multi_index validate_index_name name number extract_secondary_key cbegin begin cend end crbegin rbegin crend rend find find require_find require_find get get lower_bound lower_bound upper_bound upper_bound iterator_to modify erase get_code get_scope","body":"struct eosio::multi_index::index\nClass List > eosio :: multi_index :: index\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nconst_iterator\n\n\n\nPublic Types\n\n\n\nType\nName\n\n\n\n\nenum\nconstants { table_name = TableName, index_name = IndexName, index_number = Number, index_table_name = (TableName & 0xFFFFFFFFFFFFFFF0ULL)\n(Number & 0x000000000000000FULL) }\n\n\ntypedef Extractor\nsecondary_extractor_type\n\n\ntypedef std::decay::type\nsecondary_key_type\n\n\ntypedef std::reverse_iteratorconst_iterator >\nconst_reverse_iteratorstruct multi_index::index::const_iterator\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend class\nmulti_index\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic constexpr bool\nvalidate_index_name (uint64_t n)\n\n\nstatic constexpr uint64_t\nname ()\n\n\nstatic constexpr uint64_t\nnumber ()\n\n\nstatic auto\nextract_secondary_key (const T & obj)\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconst_iterator\ncbegin () const\n\n\nconst_iterator\nbegin () const\n\n\nconst_iterator\ncend () const\n\n\nconst_iterator\nend () const\n\n\nconst_reverse_iterator\ncrbegin () const\n\n\nconst_reverse_iterator\nrbegin () const\n\n\nconst_reverse_iterator\ncrend () const\n\n\nconst_reverse_iterator\nrend () const\n\n\nconst_iterator\nfind (secondary_key_type && secondary) const\n\n\nconst_iterator\nfind (const secondary_key_type & secondary) const\n\n\nconst_iterator\nrequire_find (secondary_key_type && secondary, const char * error_msg = \"unable to find secondary key\") const\n\n\nconst_iterator\nrequire_find (const secondary_key_type & secondary, const char * error_msg = \"unable to find secondary key\") const\n\n\nconst T &\nget (secondary_key_type && secondary, const char * error_msg = \"unable to find secondary key\") const\n\n\nconst T &\nget (const secondary_key_type & secondary, const char * error_msg = \"unable to find secondary key\") const\n\n\nconst_iterator\nlower_bound (secondary_key_type && secondary) const\n\n\nconst_iterator\nlower_bound (const secondary_key_type & secondary) const\n\n\nconst_iterator\nupper_bound (secondary_key_type && secondary) const\n\n\nconst_iterator\nupper_bound (const secondary_key_type & secondary) const\n\n\nconst_iterator\niterator_to (const T & obj)\n\n\nvoid\nmodify (const_iterator itr, uint64_t payer, Lambda && updater)\n\n\nconst_iterator\nerase (const_iterator itr)\n\n\nuint64_t\nget_code () const\n\n\nuint64_t\nget_scope () const\n\n\n\nenum constants\nenum eosio::multi_index::index::constants {\n    table_name = TableName,\n    index_name = IndexName,\n    index_number = Number,\n    index_table_name = (TableName & 0xFFFFFFFFFFFFFFF0ULL) | (Number & 0x000000000000000FULL),\n};\n\ntypedef secondary_extractor_type\ntypedef Extractor eosio::multi_index::index::secondary_extractor_type;\n\ntypedef secondary_key_type\ntypedef std::decay::type eosio::multi_index::index::secondary_key_type;\n\ntypedef const_reverse_iterator\ntypedef std::reverse_iterator eosio::multi_index::index::const_reverse_iterator;\n\nstruct multi_index::index::const_iterator \nfriend multi_index\nfriend class multi_index;\n\nfunction validate_index_name\nstatic constexpr bool eosio::multi_index::index::validate_index_name (\n    uint64_t n\n)\n\nfunction name\nstatic constexpr uint64_t eosio::multi_index::index::name ()\n\nfunction number\nstatic constexpr uint64_t eosio::multi_index::index::number ()\n\nfunction extract_secondary_key\nstatic auto eosio::multi_index::index::extract_secondary_key (\n    const T & obj\n)\n\nfunction cbegin\nconst_iterator eosio::multi_index::index::cbegin () const\n\nfunction begin\nconst_iterator eosio::multi_index::index::begin () const\n\nfunction cend\nconst_iterator eosio::multi_index::index::cend () const\n\nfunction end\nconst_iterator eosio::multi_index::index::end () const\n\nfunction crbegin\nconst_reverse_iterator eosio::multi_index::index::crbegin () const\n\nfunction rbegin\nconst_reverse_iterator eosio::multi_index::index::rbegin () const\n\nfunction crend\nconst_reverse_iterator eosio::multi_index::index::crend () const\n\nfunction rend\nconst_reverse_iterator eosio::multi_index::index::rend () const\n\nfunction find (1/2)\nconst_iterator eosio::multi_index::index::find (\n    secondary_key_type && secondary\n) const\n\nfunction find (2/2)\nconst_iterator eosio::multi_index::index::find (\n    const secondary_key_type & secondary\n) const\n\nfunction require_find (1/2)\nconst_iterator eosio::multi_index::index::require_find (\n    secondary_key_type && secondary,\n    const char * error_msg = \"unable to find secondary key\"\n) const\n\nfunction require_find (2/2)\nconst_iterator eosio::multi_index::index::require_find (\n    const secondary_key_type & secondary,\n    const char * error_msg = \"unable to find secondary key\"\n) const\n\nfunction get (1/2)\nconst T & eosio::multi_index::index::get (\n    secondary_key_type && secondary,\n    const char * error_msg = \"unable to find secondary key\"\n) const\n\nfunction get (2/2)\nconst T & eosio::multi_index::index::get (\n    const secondary_key_type & secondary,\n    const char * error_msg = \"unable to find secondary key\"\n) const\n\nfunction lower_bound (1/2)\nconst_iterator eosio::multi_index::index::lower_bound (\n    secondary_key_type && secondary\n) const\n\nfunction lower_bound (2/2)\nconst_iterator eosio::multi_index::index::lower_bound (\n    const secondary_key_type & secondary\n) const\n\nfunction upper_bound (1/2)\nconst_iterator eosio::multi_index::index::upper_bound (\n    secondary_key_type && secondary\n) const\n\nfunction upper_bound (2/2)\nconst_iterator eosio::multi_index::index::upper_bound (\n    const secondary_key_type & secondary\n) const\n\nfunction iterator_to\nconst_iterator eosio::multi_index::index::iterator_to (\n    const T & obj\n)\n\nfunction modify\nvoid eosio::multi_index::index::modify (\n    const_iterator itr,\n    uint64_t payer,\n    Lambda && updater\n)\n\nfunction erase\nconst_iterator eosio::multi_index::index::erase (\n    const_iterator itr\n)\n\nfunction get_code\nuint64_t eosio::multi_index::index::get_code () const\n\nfunction get_scope\nuint64_t eosio::multi_index::index::get_scope () const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"url":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","title":"struct const_iterator","keywords":"eosio::multi_index::index::const_iterator index operator== operator!= operator* operator-> operator++ operator-- operator++ operator-- const_iterator","body":"struct eosio::multi_index::index::const_iterator\nClass List > eosio :: multi_index :: index :: const_iterator\nInherits the following classes: std::iterator\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend struct\nindex\n\n\nfriend bool\noperator==\n\n\nfriend bool\noperator!=\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconst T &\noperator* () const\n\n\nconst T *\noperator-> () const\n\n\nconst_iterator\noperator++ (int)\n\n\nconst_iterator\noperator-- (int)\n\n\nconst_iterator &\noperator++ ()\n\n\nconst_iterator &\noperator-- ()\n\n\n\nconst_iterator ()\n\n\n\nfriend index\nfriend struct index;\n\nfriend operator==\nfriend bool eosio::multi_index::index::const_iterator::operator== (\n    const const_iterator & a,\n    const const_iterator & b\n)\n\nfriend operator!=\nfriend bool eosio::multi_index::index::const_iterator::operator!= (\n    const const_iterator & a,\n    const const_iterator & b\n)\n\nfunction operator*\nconst T & eosio::multi_index::index::const_iterator::operator* () const\n\nfunction operator->\nconst T * eosio::multi_index::index::const_iterator::operator-> () const\n\nfunction operator++ (1/2)\nconst_iterator eosio::multi_index::index::const_iterator::operator++ (\n    int \n)\n\nfunction operator-- (1/2)\nconst_iterator eosio::multi_index::index::const_iterator::operator-- (\n    int \n)\n\nfunction operator++ (2/2)\nconst_iterator & eosio::multi_index::index::const_iterator::operator++ ()\n\nfunction operator-- (2/2)\nconst_iterator & eosio::multi_index::index::const_iterator::operator-- ()\n\nfunction const_iterator (1/2)\neosio::multi_index::index::const_iterator::const_iterator ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1multi__index_1_1intc.html":{"url":"structeosio_1_1multi__index_1_1intc.html","title":"struct intc","keywords":"eosio::multi_index::intc e operator uint64_t","body":"struct eosio::multi_index::intc\nClass List > eosio :: multi_index :: intc\nstruct multi_index::index \nPublic Types\n\n\n\nType\nName\n\n\n\n\nenum\ne { value = I }\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\noperator uint64_t () const\n\n\n\nenum e\nenum eosio::multi_index::intc::e {\n    value = I,\n};\n\nfunction operator uint64_t\neosio::multi_index::intc::operator uint64_t () const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1multi__index_1_1item.html":{"url":"structeosio_1_1multi__index_1_1item.html","title":"struct item","keywords":"eosio::multi_index::item __idx __primary_itr __iters item","body":"struct eosio::multi_index::item\nClass List > eosio :: multi_index :: item\nInherits the following classes: T\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nconst multi_index *\n__idx\n\n\nint32_t\n__primary_itr\n\n\nint32_t\n__iters\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nitem (const multi_index * idx, Constructor && c)\n\n\n\nvariable __idx\nconst multi_index* eosio::multi_index::item::__idx;\n\nvariable __primary_itr\nint32_t eosio::multi_index::item::__primary_itr;\n\nvariable __iters\nint32_t eosio::multi_index::item::__iters[sizeof...(Indices)+(sizeof...(Indices)==0)];\n\nfunction item\neosio::multi_index::item::item (\n    const multi_index * idx,\n    Constructor && c\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1multi__index_1_1item__ptr.html":{"url":"structeosio_1_1multi__index_1_1item__ptr.html","title":"struct item_ptr","keywords":"eosio::multi_index::item_ptr _item _primary_key _primary_itr item_ptr","body":"struct eosio::multi_index::item_ptr\nClass List > eosio :: multi_index :: item_ptr\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nstd::unique_ptr\n_item\n\n\nuint64_t\n_primary_key\n\n\nint32_t\n_primary_itr\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nitem_ptr (std::unique_ptr && i, uint64_t pk, int32_t pitr)\n\n\n\nvariable _item\nstd::unique_ptr eosio::multi_index::item_ptr::_item;\n\nvariable _primary_key\nuint64_t eosio::multi_index::item_ptr::_primary_key;\n\nvariable _primary_itr\nint32_t eosio::multi_index::item_ptr::_primary_itr;\n\nfunction item_ptr\neosio::multi_index::item_ptr::item_ptr (\n    std::unique_ptr && i,\n    uint64_t pk,\n    int32_t pitr\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1name.html":{"url":"structeosio_1_1name.html","title":"struct name","keywords":"eosio::name value operator uint64_t to_string operator==","body":"struct eosio::name\nClass List > eosio :: name\nwraps a uint64_t to ensure it is only passed to methods that expect a Name More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\naccount_name\nvalueInternal Representation of the account name.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\noperator uint64_t () const Conversion Operator.\n\n\nstd::string\nto_string () const\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==Equality Operator for name.\n\n\n\nDetailed Description\nWraps a uint64_t to ensure it is only passed to methods that expect a Name and that no mathematical operations occur. It also enables specialization of print so that it is printed as a base32 string. \nvariable value\naccount_name eosio::name::value;\n\nInternal Representation of the account name. \nInternal Representation of the account name \nfunction operator uint64_t\neosio::name::operator uint64_t () const\n\nConversion Operator. \nConversion Operator to convert name to uint64_t\nReturns:\nuint64_t - Converted result \nfunction to_string\nstd::string eosio::name::to_string () const\n\nfriend operator==\nfriend bool eosio::name::operator== (\n    const name & a,\n    const name & b\n)\n\nEquality Operator for name. \nEquality Operator for name\nParameters:\n\na - First data to be compared \nb - Second data to be compared \n\nReturns:\ntrue - if equal \nReturns:\nfalse - if unequal \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/types.hpp\n"},"structeosio_1_1onerror.html":{"url":"structeosio_1_1onerror.html","title":"struct onerror","keywords":"eosio::onerror sender_id sent_trx from_current_action unpack_sent_trx","body":"struct eosio::onerror\nClass List > eosio :: onerror\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint128_t\nsender_id\n\n\nbytes\nsent_trx\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic onerror\nfrom_current_action ()\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\ntransaction\nunpack_sent_trx () const\n\n\n\nvariable sender_id\nuint128_t eosio::onerror::sender_id;\n\nvariable sent_trx\nbytes eosio::onerror::sent_trx;\n\nfunction from_current_action\nstatic onerror eosio::onerror::from_current_action ()\n\nfunction unpack_sent_trx\ntransaction eosio::onerror::unpack_sent_trx () const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/transaction.hpp\n"},"classeosio_1_1optional.html":{"url":"classeosio_1_1optional.html","title":"class optional","keywords":"eosio::optional value_type storage_type optional operator< operator== operator>> operator<< optional ~optional optional optional optional optional optional optional optional operator= emplace operator= operator= operator= operator= operator= operator= valid operator! operator bool operator* operator* operator-> operator-> operator= reset","body":"class eosio::optional\nClass List > eosio :: optional\nProvides stack-based nullable value similar to boost::optional. More...\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef T\nvalue_type\n\n\ntypedef std::aligned_storage::type\nstorage_type\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend class\noptional\n\n\nfriend bool\noperatorLess than operator.\n\n\nfriend bool\noperator==Equality operator.\n\n\nfriend eosio::datastream &\noperator>>Serialize an optional object.\n\n\nfriend eosio::datastream &\noperatorDeserialize an optional object.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\noptional () Construct a new optional object.\n\n\n\n~optional () Destroy the optional object.\n\n\n\noptional (optional & o) Construct a new optional object.\n\n\n\noptional (const optional & o) Construct a new optional object.\n\n\n\noptional (optional && o) Construct a new optional object.\n\n\n\noptional (const optional & o) Construct a new optional object from another type of optional object.\n\n\n\noptional (optional & o) Construct a new optional object from another type of optional object.\n\n\n\noptional (optional && o) Construct a new optional object from another type of optional object.\n\n\n\noptional (U && u) Construct a new optional object from another object.\n\n\noptional &\noperator= (U && u) Construct a new optional object from another object.\n\n\nvoid\nemplace (Args &&... args) Construct the contained value in place.\n\n\noptional &\noperator= (optional & o) Assignment Operator.\n\n\noptional &\noperator= (const optional & o) Assignment Operator.\n\n\noptional &\noperator= (optional & o) Assignment Operator.\n\n\noptional &\noperator= (const optional & o) Assignment Operator.\n\n\noptional &\noperator= (optional && o) Assignment Operator.\n\n\noptional &\noperator= (optional && o) Assignment Operator.\n\n\nbool\nvalid () const Check if this optional has valid contained value.\n\n\nbool\noperator! () const Logical Negation Operator.\n\n\n\noperator bool () const Check if this optional has valid contained value.\n\n\nT &\noperator* () Pointer Dereference operator.\n\n\nconst T &\noperator* () const Pointer Dereference operator.\n\n\nT *\noperator-> () Member Access Through Pointer Operator.\n\n\nconst T *\noperator-> () const Member Access Through Pointer Operator.\n\n\noptional &\noperator= (std::nullptr_t) Assignment Operator with nullptr.\n\n\nvoid\nreset () Reset the optional object.\n\n\n\nDetailed Description\nProvides stack-based nullable value similar to boost::optional \ntypedef value_type\ntypedef T eosio::optional::value_type;\n\ntypedef storage_type\ntypedef std::aligned_storage::type eosio::optional::storage_type;\n\nfriend optional (1/9)\nfriend class optional;\n\nfriend operator\nfriend bool eosio::optional::operator\nLess than operator. \nCheck if a contained value is less than b contained value\nParameters:\n\na - First object to compare \nb - Second object to compare \n\nReturns:\ntrue - if a contained value is less than b contained value \nReturns:\nfalse - otherwise \nfriend operator==\nfriend bool eosio::optional::operator== (\n    const optional a,\n    optional b\n)\n\nEquality operator. \nCheck if a contained value is equal to b contained value\nParameters:\n\na - First object to compare \nb - Second object to compare \n\nReturns:\ntrue - if contained value is equal to b contained value \nReturns:\nfalse - otherwise \nfriend operator>>\nfriend eosio::datastream & eosio::optional::operator>> (\n    eosio::datastream & ds,\n    optional & op\n)\n\nSerialize an optional object. \nSerialize an optional object\nParameters:\n\nds - The stream to write \nop - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream \n\nReturns:\neosio::datastream& - Reference to the datastream \nfriend operator\nfriend eosio::datastream & eosio::optional::operator & ds,\n    const optional & op\n)\n\nDeserialize an optional object. \nDeserialize an optional object\nParameters:\n\nds - The stream to read \nop - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream \n\nReturns:\neosio::datastream& - Reference to the datastream \nfunction optional (2/9)\neosio::optional::optional ()\n\nConstruct a new optional object. \nDefault constructor \nfunction ~optional\neosio::optional::~optional ()\n\nDestroy the optional object. \nDestructor \nfunction optional (3/9)\neosio::optional::optional (\n    optional & o\n)\n\nConstruct a new optional object. \nConstruct a new optional object from another optional object \nfunction optional (4/9)\neosio::optional::optional (\n    const optional & o\n)\n\nConstruct a new optional object. \nCopy constructor \nfunction optional (5/9)\neosio::optional::optional (\n    optional && o\n)\n\nConstruct a new optional object. \nMove constructor \nfunction optional (6/9)\neosio::optional::optional (\n    const optional & o\n)\n\nConstruct a new optional object from another type of optional object. \nConstruct a new optional object from another type of optional object \nfunction optional (7/9)\neosio::optional::optional (\n    optional & o\n)\n\nConstruct a new optional object from another type of optional object. \nConstruct a new optional object from another type of optional object \nfunction optional (8/9)\neosio::optional::optional (\n    optional && o\n)\n\nConstruct a new optional object from another type of optional object. \nConstruct a new optional object from another type of optional object \nfunction optional (9/9)\neosio::optional::optional (\n    U && u\n)\n\nConstruct a new optional object from another object. \nConstruct a new optional object from another object \nfunction operator= (1/8)\noptional & eosio::optional::operator= (\n    U && u\n)\n\nConstruct a new optional object from another object. \nConstruct a new optional object from another object \nfunction emplace\nvoid eosio::optional::emplace (\n    Args &&... args\n)\n\nConstruct the contained value in place. \nConstruct the contained value in place\nTemplate parameters:\n\nArgs - Type of the contained value \n\nParameters:\n\nargs - The value to be assigned as contained value \n\nfunction operator= (2/8)\noptional & eosio::optional::operator= (\n    optional & o\n)\n\nAssignment Operator. \nAssignment Operator\nTemplate parameters:\n\nU - Type of the contained value of the optional object to be assigned from \n\nParameters:\n\no - The other optional object to be assigned from \n\nReturns:\noptional& - The reference to this object \nfunction operator= (3/8)\noptional & eosio::optional::operator= (\n    const optional & o\n)\n\nAssignment Operator. \nAssignment Operator\nTemplate parameters:\n\nU - Type of the contained value of the optional object to be assigned from \n\nParameters:\n\no - The other optional object to be assigned from \n\nReturns:\noptional& - The reference to this object \nfunction operator= (4/8)\noptional & eosio::optional::operator= (\n    optional & o\n)\n\nAssignment Operator. \nAssignment Operator\nParameters:\n\no - The other optional object to be assigned from \n\nReturns:\noptional& - The reference to this object \nfunction operator= (5/8)\noptional & eosio::optional::operator= (\n    const optional & o\n)\n\nAssignment Operator. \nAssignment Operator\nParameters:\n\no - The other optional object to be assigned from \n\nReturns:\noptional& - The reference to this object \nfunction operator= (6/8)\noptional & eosio::optional::operator= (\n    optional && o\n)\n\nAssignment Operator. \nAssignment Operator\nTemplate parameters:\n\nU - Type of the contained value of the optional object to be assigned from \n\nParameters:\n\no - The other optional object to be assigned from \n\nReturns:\noptional& - The reference to this object \nfunction operator= (7/8)\noptional & eosio::optional::operator= (\n    optional && o\n)\n\nAssignment Operator. \nAssignment Operator\nParameters:\n\no - The other optional object to be assigned from \n\nReturns:\noptional& - The reference to this object \nfunction valid\nbool eosio::optional::valid () const\n\nCheck if this optional has valid contained value. \nCheck if this optional has valid contained value\nReturns:\ntrue - if this optional has valid contained value \nReturns:\nfalse - otherwise \nfunction operator!\nbool eosio::optional::operator! () const\n\nLogical Negation Operator. \nLogical Negation operator\nReturns:\ntrue - if this optional has invalid contained value \nReturns:\nfalse - otherwise \nfunction operator bool\nexplicit eosio::optional::operator bool () const\n\nCheck if this optional has valid contained value. \nSimilar to valid(). However, this operation is not safe and can result in unintential casts and comparisons, use valid() or !!\nReturns:\ntrue - if this optional has valid contained value \nReturns:\nfalse - otherwise \nfunction operator* (1/2)\nT & eosio::optional::operator* ()\n\nPointer Dereference operator. \nGet contained value of this optional\nReturns:\nT& - Contained value \nfunction operator* (2/2)\nconst T & eosio::optional::operator* () const\n\nPointer Dereference operator. \nGet contained value of this optional\nReturns:\nT& - Contained value \nfunction operator-> (1/2)\nT * eosio::optional::operator-> ()\n\nMember Access Through Pointer Operator. \nGet pointer to the contained value\nReturns:\nT& - The pointer to the contained value \nfunction operator-> (2/2)\nconst T * eosio::optional::operator-> () const\n\nMember Access Through Pointer Operator. \nGet pointer to the contained value\nReturns:\nT& - The pointer to the contained value \nfunction operator= (8/8)\noptional & eosio::optional::operator= (\n    std::nullptr_t \n)\n\nAssignment Operator with nullptr. \nAssignment Operator with nullptr\nReturns:\noptional& - The reference to this object \nfunction reset\nvoid eosio::optional::reset ()\n\nReset the optional object. \nCall the destructor fot he contained value and mark this optional as valid \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/optional.hpp\n"},"structeosio_1_1permission__level.html":{"url":"structeosio_1_1permission__level.html","title":"struct permission_level","keywords":"eosio::permission_level actor permission permission_level permission_level operator==","body":"struct eosio::permission_level\nClass List > eosio :: permission_level\nPacked representation of a permission level (Authorization) More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\naccount_name\nactorName of the account who owns this permission.\n\n\npermission_name\npermissionName of the permission.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\npermission_level (account_name a, permission_name p) Construct a new permission level object.\n\n\n\npermission_level () Construct a new permission level object.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==Check equality of two permissions.\n\n\n\nDetailed Description\nPacked representation of a permission level (Authorization) \nvariable actor\naccount_name eosio::permission_level::actor;\n\nName of the account who owns this permission. \nName of the account who owns this permission \nvariable permission\npermission_name eosio::permission_level::permission;\n\nName of the permission. \nName of the permission \nfunction permission_level (1/2)\neosio::permission_level::permission_level (\n    account_name a,\n    permission_name p\n)\n\nConstruct a new permission level object. \nConstruct a new permission level object with actor name and permission name\nParameters:\n\na - Name of the account who owns this authorization \np - Name of the permission \n\nfunction permission_level (2/2)\neosio::permission_level::permission_level ()\n\nConstruct a new permission level object. \nDefault Constructor \nfriend operator==\nfriend bool eosio::permission_level::operator== (\n    const permission_level & a,\n    const permission_level & b\n)\n\nCheck equality of two permissions. \nCheck equality of two permissions\nParameters:\n\na - first permission to compare \nb - second permission to compare \n\nReturns:\ntrue if equal \nReturns:\nfalse if unequal \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1producer__key.html":{"url":"structeosio_1_1producer__key.html","title":"struct producer_key","keywords":"eosio::producer_key producer_name block_signing_key operator<","body":"struct eosio::producer_key\nClass List > eosio :: producer_key\nMaps producer with its signing key. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\naccount_name\nproducer_nameName of the producer.\n\n\npublic_key\nblock_signing_keyBlock signing key used by this producer.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator\n\n\n\nDetailed Description\nMaps producer with its signing key, used for producer schedule \nvariable producer_name\naccount_name eosio::producer_key::producer_name;\n\nName of the producer. \nName of the producer \nvariable block_signing_key\npublic_key eosio::producer_key::block_signing_key;\n\nBlock signing key used by this producer. \nBlock signing key used by this producer \nfriend operator\nfriend bool eosio::producer_key::operator\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/privileged.hpp\n"},"structeosio_1_1producer__schedule.html":{"url":"structeosio_1_1producer__schedule.html","title":"struct producer_schedule","keywords":"eosio::producer_schedule version producers","body":"struct eosio::producer_schedule\nClass List > eosio :: producer_schedule\nDefines both the order, account name, and signing keys of the active set of producers. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint32_t\nversionVersion number of the schedule.\n\n\nstd::vectorproducer_key >\nproducersList of producers for this schedule, including its signing key.\n\n\n\nDetailed Description\nDefines both the order, account name, and signing keys of the active set of producers. \nvariable version\nuint32_t eosio::producer_schedule::version;\n\nVersion number of the schedule. \nVersion number of the schedule. It is sequentially incrementing version number \nvariable producers\nstd::vector eosio::producer_schedule::producers;\n\nList of producers for this schedule, including its signing key. \nList of producers for this schedule, including its signing key \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/producer\\_schedule.hpp\n"},"structeosio_1_1public__key.html":{"url":"structeosio_1_1public__key.html","title":"struct public_key","keywords":"eosio::public_key type data operator== operator!=","body":"struct eosio::public_key\nClass List > eosio :: public_key\nEOSIO Public Key. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nunsigned_int\ntypeType of the public key.\n\n\nstd::array\ndataBytes of the public key.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==\n\n\nfriend bool\noperator!=\n\n\n\nDetailed Description\nEOSIO Public Key \nvariable type\nunsigned_int eosio::public_key::type;\n\nType of the public key. \nType of the public key, could be either K1 or R1 \nvariable data\nstd::array eosio::public_key::data;\n\nBytes of the public key. \nBytes of the public key \nfriend operator==\nfriend bool eosio::public_key::operator== (\n    const public_key & a,\n    const public_key & b\n)\n\nfriend operator!=\nfriend bool eosio::public_key::operator!= (\n    const public_key & a,\n    const public_key & b\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/public\\_key.hpp\n"},"structeosio_1_1reflector.html":{"url":"structeosio_1_1reflector.html","title":"struct reflector","keywords":"eosio::reflector is_reflected is_enum","body":"struct eosio::reflector\nClass List > eosio :: reflector\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef std::false_type\nis_reflected\n\n\ntypedef std::false_type\nis_enum\n\n\n\ntypedef is_reflected\ntypedef std::false_type eosio::reflector::is_reflected;\n\ntypedef is_enum\ntypedef std::false_type eosio::reflector::is_enum;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/reflect.hpp\n"},"classeosio_1_1singleton.html":{"url":"classeosio_1_1singleton.html","title":"class singleton","keywords":"eosio::singleton row singleton exists get get_or_default get_or_create set remove","body":"class eosio::singleton\nClass List > eosio :: singleton\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nrow\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nsingleton (account_name code, scope_name scope) Construct a new singleton object.\n\n\nbool\nexists () Check if the singleton table exists.\n\n\nT\nget () Get the value stored inside the singleton table.\n\n\nT\nget_or_default (const T & def = T()) Get the value stored inside the singleton table or return the specified default value if it doesn't exist.\n\n\nT\nget_or_create (account_name bill_to_account, const T & def = T()) Get the value stored inside the singleton table or create a new one with the specified default value if it doesn't exist.\n\n\nvoid\nset (const T & value, account_name bill_to_account) Set new value to the singleton table.\n\n\nvoid\nremove () Remove the only data inside singleton table.\n\n\n\nDetailed Description\nThis wrapper uses a single table to store named objects various types.\nTemplate parameters:\n\nSingletonName - the name of this singleton variable \nT - the type of the singleton \n\nfunction singleton\neosio::singleton::singleton (\n    account_name code,\n    scope_name scope\n)\n\nConstruct a new singleton object. \nConstruct a new singleton object given the table's owner and the scope\nParameters:\n\ncode - The table's owner \nscope - The scope of the table \n\nfunction exists\nbool eosio::singleton::exists ()\n\nCheck if the singleton table exists. \nCheck if the singleton table exists\nReturns:\ntrue - if exists \nReturns:\nfalse - otherwise \nfunction get\nT eosio::singleton::get ()\n\nGet the value stored inside the singleton table. \nGet the value stored inside the singleton table. Will throw an exception if it doesn't exist\nReturns:\nT - The value stored \nfunction get_or_default\nT eosio::singleton::get_or_default (\n    const T & def = T()\n)\n\nGet the value stored inside the singleton table or return the specified default value if it doesn't exist. \nGet the value stored inside the singleton table. If it doesn't exist, it will return the specified default value\nParameters:\n\ndef - The default value to be returned in case the data doesn't exist \n\nReturns:\nT - The value stored \nfunction get_or_create\nT eosio::singleton::get_or_create (\n    account_name bill_to_account,\n    const T & def = T()\n)\n\nGet the value stored inside the singleton table or create a new one with the specified default value if it doesn't exist. \nGet the value stored inside the singleton table. If it doesn't exist, it will create a new one with the specified default value\nParameters:\n\nbill_to_account - The account to bill for the newly created data if the data doesn't exist \ndef - The default value to be created in case the data doesn't exist \n\nReturns:\nT - The value stored \nfunction set\nvoid eosio::singleton::set (\n    const T & value,\n    account_name bill_to_account\n)\n\nSet new value to the singleton table. \nSet new value to the singleton table\nParameters:\n\nvalue - New value to be set \nbill_to_account - Account to pay for the new value \n\nfunction remove\nvoid eosio::singleton::remove ()\n\nRemove the only data inside singleton table. \nRemove the only data inside singleton table \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/singleton.hpp\n"},"structeosio_1_1singleton_1_1row.html":{"url":"structeosio_1_1singleton_1_1row.html","title":"struct row","keywords":"eosio::singleton::row value primary_key","body":"struct eosio::singleton::row\nClass List > eosio :: singleton :: row\nStructure of data inside the singleton table. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nT\nvalueValue to be stored inside the singleton table.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nuint64_t\nprimary_key () const Get primary key of the data.\n\n\n\nDetailed Description\nStructure of data inside the singleton table \nvariable value\nT eosio::singleton::row::value;\n\nValue to be stored inside the singleton table. \nValue to be stored inside the singleton table \nfunction primary_key\nuint64_t eosio::singleton::row::primary_key () const\n\nGet primary key of the data. \nGet primary key of the data\nReturns:\nuint64_t - Primary Key \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/singleton.hpp\n"},"structeosio_1_1symbol__type.html":{"url":"structeosio_1_1symbol__type.html","title":"struct symbol_type","keywords":"eosio::symbol_type value symbol_type symbol_type is_valid precision name name_length operator symbol_name print","body":"struct eosio::symbol_type\nClass List > eosio :: symbol_type\nInherited by the following classes: eosio::extended_symbol\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nsymbol_name\nvalue\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nsymbol_type ()\n\n\n\nsymbol_type (symbol_name s)\n\n\nbool\nis_valid () const\n\n\nuint64_t\nprecision () const\n\n\nuint64_t\nname () const\n\n\nuint32_t\nname_length () const\n\n\n\noperator symbol_name () const\n\n\nvoid\nprint (bool show_precision = true) const Print the symbol\n\n\n\nvariable value\nsymbol_name eosio::symbol_type::value;\n\nThe symbol name \nfunction symbol_type (1/2)\neosio::symbol_type::symbol_type ()\n\nfunction symbol_type (2/2)\neosio::symbol_type::symbol_type (\n    symbol_name s\n)\n\nWhat is the type of the symbol \nfunction is_valid\nbool eosio::symbol_type::is_valid () const\n\nIs this symbol valid \nfunction precision\nuint64_t eosio::symbol_type::precision () const\n\nThis symbol's precision \nfunction name\nuint64_t eosio::symbol_type::name () const\n\nReturns uint64_t representation of symbol name \nfunction name_length\nuint32_t eosio::symbol_type::name_length () const\n\nThe length of this symbol \nfunction operator symbol_name\neosio::symbol_type::operator symbol_name () const\n\nfunction print\nvoid eosio::symbol_type::print (\n    bool show_precision = true\n) const\n\nPrint the symbol \nPrint the symbol \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/symbol.hpp\n"},"classeosio_1_1time__point.html":{"url":"classeosio_1_1time__point.html","title":"class time_point","keywords":"eosio::time_point elapsed time_point operator std::string time_since_epoch sec_since_epoch operator> operator>= operator< operator<= operator== operator!= operator+= operator-= operator+ operator+ operator- operator- from_iso_string","body":"class eosio::time_point\nClass List > eosio :: time_point\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nmicroseconds\nelapsed\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ntime_point (microseconds e = microseconds())\n\n\n\noperator std::string () const\n\n\nconst microseconds &\ntime_since_epoch () const\n\n\nuint32_t\nsec_since_epoch () const\n\n\nbool\noperator> (const time_point & t) const\n\n\nbool\noperator>= (const time_point & t) const\n\n\nbool\noperator (const time_point & t) const\n\n\nbool\noperator (const time_point & t) const\n\n\nbool\noperator== (const time_point & t) const\n\n\nbool\noperator!= (const time_point & t) const\n\n\ntime_point &\noperator+= (const microseconds & m)\n\n\ntime_point &\noperator-= (const microseconds & m)\n\n\ntime_point\noperator+ (const microseconds & m) const\n\n\ntime_point\noperator+ (const time_point & m) const\n\n\ntime_point\noperator- (const microseconds & m) const\n\n\nmicroseconds\noperator- (const time_point & m) const\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic time_point\nfrom_iso_string (const std::string & s)\n\n\n\nvariable elapsed\nmicroseconds eosio::time_point::elapsed;\n\nfunction time_point\nexplicit eosio::time_point::time_point (\n    microseconds e = microseconds()\n)\n\nfunction operator std::string\neosio::time_point::operator std::string () const\n\nfunction time_since_epoch\nconst microseconds & eosio::time_point::time_since_epoch () const\n\nfunction sec_since_epoch\nuint32_t eosio::time_point::sec_since_epoch () const\n\nfunction operator>\nbool eosio::time_point::operator> (\n    const time_point & t\n) const\n\nfunction operator>=\nbool eosio::time_point::operator>= (\n    const time_point & t\n) const\n\nfunction operator\nbool eosio::time_point::operator\nfunction operator\nbool eosio::time_point::operator\nfunction operator==\nbool eosio::time_point::operator== (\n    const time_point & t\n) const\n\nfunction operator!=\nbool eosio::time_point::operator!= (\n    const time_point & t\n) const\n\nfunction operator+=\ntime_point & eosio::time_point::operator+= (\n    const microseconds & m\n)\n\nfunction operator-=\ntime_point & eosio::time_point::operator-= (\n    const microseconds & m\n)\n\nfunction operator+ (1/2)\ntime_point eosio::time_point::operator+ (\n    const microseconds & m\n) const\n\nfunction operator+ (2/2)\ntime_point eosio::time_point::operator+ (\n    const time_point & m\n) const\n\nfunction operator- (1/2)\ntime_point eosio::time_point::operator- (\n    const microseconds & m\n) const\n\nfunction operator- (2/2)\nmicroseconds eosio::time_point::operator- (\n    const time_point & m\n) const\n\nfunction from_iso_string\nstatic time_point eosio::time_point::from_iso_string (\n    const std::string & s\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/time.hpp\n"},"classeosio_1_1time__point__sec.html":{"url":"classeosio_1_1time__point__sec.html","title":"class time_point_sec","keywords":"eosio::time_point_sec utc_seconds time_point_sec time_point_sec time_point_sec operator time_point sec_since_epoch operator= operator+= operator+= operator+= operator-= operator-= operator-= operator+ operator- maximum min operator< operator> operator<= operator>= operator== operator!= operator+ operator- operator- operator-","body":"class eosio::time_point_sec\nClass List > eosio :: time_point_sec\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint32_t\nutc_seconds\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ntime_point_sec ()\n\n\n\ntime_point_sec (uint32_t seconds)\n\n\n\ntime_point_sec (const time_point & t)\n\n\n\noperator time_point () const\n\n\nuint32_t\nsec_since_epoch () const\n\n\ntime_point_sec\noperator= (const eosio::time_point & t)\n\n\ntime_point_sec &\noperator+= (uint32_t m)\n\n\ntime_point_sec &\noperator+= (microseconds m)\n\n\ntime_point_sec &\noperator+= (time_point_sec m)\n\n\ntime_point_sec &\noperator-= (uint32_t m)\n\n\ntime_point_sec &\noperator-= (microseconds m)\n\n\ntime_point_sec &\noperator-= (time_point_sec m)\n\n\ntime_point_sec\noperator+ (uint32_t offset) const\n\n\ntime_point_sec\noperator- (uint32_t offset) const\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic time_point_sec\nmaximum ()\n\n\nstatic time_point_sec\nmin ()\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator\n\n\nfriend bool\noperator>\n\n\nfriend bool\noperator\n\n\nfriend bool\noperator>=\n\n\nfriend bool\noperator==\n\n\nfriend bool\noperator!=\n\n\nfriend time_point\noperator+\n\n\nfriend time_point\noperator-\n\n\nfriend microseconds\noperator-\n\n\nfriend microseconds\noperator-\n\n\n\nDetailed Description\nA lower resolution time_point accurate only to seconds from 1970 \nvariable utc_seconds\nuint32_t eosio::time_point_sec::utc_seconds;\n\nfunction time_point_sec (1/3)\neosio::time_point_sec::time_point_sec ()\n\nfunction time_point_sec (2/3)\nexplicit eosio::time_point_sec::time_point_sec (\n    uint32_t seconds\n)\n\nfunction time_point_sec (3/3)\neosio::time_point_sec::time_point_sec (\n    const time_point & t\n)\n\nfunction operator time_point\neosio::time_point_sec::operator time_point () const\n\nfunction sec_since_epoch\nuint32_t eosio::time_point_sec::sec_since_epoch () const\n\nfunction operator=\ntime_point_sec eosio::time_point_sec::operator= (\n    const eosio::time_point & t\n)\n\nfunction operator+= (1/3)\ntime_point_sec & eosio::time_point_sec::operator+= (\n    uint32_t m\n)\n\nfunction operator+= (2/3)\ntime_point_sec & eosio::time_point_sec::operator+= (\n    microseconds m\n)\n\nfunction operator+= (3/3)\ntime_point_sec & eosio::time_point_sec::operator+= (\n    time_point_sec m\n)\n\nfunction operator-= (1/3)\ntime_point_sec & eosio::time_point_sec::operator-= (\n    uint32_t m\n)\n\nfunction operator-= (2/3)\ntime_point_sec & eosio::time_point_sec::operator-= (\n    microseconds m\n)\n\nfunction operator-= (3/3)\ntime_point_sec & eosio::time_point_sec::operator-= (\n    time_point_sec m\n)\n\nfunction operator+ (1/2)\ntime_point_sec eosio::time_point_sec::operator+ (\n    uint32_t offset\n) const\n\nfunction operator- (1/4)\ntime_point_sec eosio::time_point_sec::operator- (\n    uint32_t offset\n) const\n\nfunction maximum\nstatic time_point_sec eosio::time_point_sec::maximum ()\n\nfunction min\nstatic time_point_sec eosio::time_point_sec::min ()\n\nfriend operator\nfriend bool eosio::time_point_sec::operator\nfriend operator>\nfriend bool eosio::time_point_sec::operator> (\n    const time_point_sec & a,\n    const time_point_sec & b\n)\n\nfriend operator\nfriend bool eosio::time_point_sec::operator\nfriend operator>=\nfriend bool eosio::time_point_sec::operator>= (\n    const time_point_sec & a,\n    const time_point_sec & b\n)\n\nfriend operator==\nfriend bool eosio::time_point_sec::operator== (\n    const time_point_sec & a,\n    const time_point_sec & b\n)\n\nfriend operator!=\nfriend bool eosio::time_point_sec::operator!= (\n    const time_point_sec & a,\n    const time_point_sec & b\n)\n\nfriend operator+ (2/2)\nfriend time_point eosio::time_point_sec::operator+ (\n    const time_point_sec & t,\n    const microseconds & m\n)\n\nfriend operator- (2/4)\nfriend time_point eosio::time_point_sec::operator- (\n    const time_point_sec & t,\n    const microseconds & m\n)\n\nfriend operator- (3/4)\nfriend microseconds eosio::time_point_sec::operator- (\n    const time_point_sec & t,\n    const time_point_sec & m\n)\n\nfriend operator- (4/4)\nfriend microseconds eosio::time_point_sec::operator- (\n    const time_point & t,\n    const time_point_sec & m\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/time.hpp\n"},"classeosio_1_1transaction.html":{"url":"classeosio_1_1transaction.html","title":"class transaction","keywords":"eosio::transaction context_free_actions actions transaction_extensions transaction send","body":"class eosio::transaction\nClass List > eosio :: transaction\nInherits the following classes: eosio::transaction_header\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nvectoraction >\ncontext_free_actions\n\n\nvectoraction >\nactions\n\n\nextensions_type\ntransaction_extensions\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ntransaction (time_point_sec exp = time_point_sec(now()+60))\n\n\nvoid\nsend (const uint128_t & sender_id, account_name payer, bool replace_existing = false) const\n\n\n\nvariable context_free_actions\nvector eosio::transaction::context_free_actions;\n\nvariable actions\nvector eosio::transaction::actions;\n\nvariable transaction_extensions\nextensions_type eosio::transaction::transaction_extensions;\n\nfunction transaction\neosio::transaction::transaction (\n    time_point_sec exp = time_point_sec(now()+60)\n)\n\nfunction send\nvoid eosio::transaction::send (\n    const uint128_t & sender_id,\n    account_name payer,\n    bool replace_existing = false\n) const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/transaction.hpp\n"},"classeosio_1_1transaction__header.html":{"url":"classeosio_1_1transaction__header.html","title":"class transaction_header","keywords":"eosio::transaction_header expiration ref_block_num ref_block_prefix net_usage_words max_cpu_usage_ms delay_sec transaction_header","body":"class eosio::transaction_header\nClass List > eosio :: transaction_header\nInherited by the following classes: eosio::transaction\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\ntime_point_sec\nexpiration\n\n\nuint16_t\nref_block_num\n\n\nuint32_t\nref_block_prefix\n\n\nunsigned_int\nnet_usage_words\n\n\nuint8_t\nmax_cpu_usage_msnumber of 8 byte words this transaction can serialize into after compressions\n\n\nunsigned_int\ndelay_secnumber of CPU usage units to bill transaction for\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ntransaction_header (time_point_sec exp = time_point_sec(now()+60))\n\n\n\nvariable expiration\ntime_point_sec eosio::transaction_header::expiration;\n\nvariable ref_block_num\nuint16_t eosio::transaction_header::ref_block_num;\n\nvariable ref_block_prefix\nuint32_t eosio::transaction_header::ref_block_prefix;\n\nvariable net_usage_words\nunsigned_int eosio::transaction_header::net_usage_words;\n\nvariable max_cpu_usage_ms\nuint8_t eosio::transaction_header::max_cpu_usage_ms;\n\nnumber of 8 byte words this transaction can serialize into after compressions \nvariable delay_sec\nunsigned_int eosio::transaction_header::delay_sec;\n\nnumber of CPU usage units to bill transaction for \nfunction transaction_header\neosio::transaction_header::transaction_header (\n    time_point_sec exp = time_point_sec(now()+60)\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/transaction.hpp\n"},"structpublic__key.html":{"url":"structpublic__key.html","title":"struct public_key","keywords":"public_key data","body":"struct public_key\nClass List > public_key\nEOSIO Public Key. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nchar\ndata\n\n\n\nDetailed Description\nEOSIO Public Key. It is 34 bytes. \nvariable data\nchar public_key::data[34];\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/types.h\n"},"structsignature.html":{"url":"structsignature.html","title":"struct signature","keywords":"signature data","body":"struct signature\nClass List > signature\nEOSIO Signature. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint8_t\ndata\n\n\n\nDetailed Description\nEOSIO Signature. It is 66 bytes. \nvariable data\nuint8_t signature::data[66];\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/types.h\n"},"structsigned__int.html":{"url":"structsigned__int.html","title":"struct signed_int","keywords":"signed_int value signed_int operator int32_t operator= operator++ operator++ operator== operator== operator== operator!= operator!= operator!= operator< operator< operator< operator>= operator>= operator>= operator<< operator>>","body":"struct signed_int\nClass List > signed_int\nVariable Length Signed Integer. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nint32_t\nvalueContained value.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nsigned_int (int32_t v = 0) Construct a new signed int object.\n\n\n\noperator int32_t () const Conversion operator.\n\n\nsigned_int &\noperator= (const T & v) Assignment operator.\n\n\nsigned_int\noperator++ (int) Increment operator.\n\n\nsigned_int &\noperator++ () Increment operator.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==Equality Operator.\n\n\nfriend bool\noperator==Equality Operator.\n\n\nfriend bool\noperator==Equality Operator.\n\n\nfriend bool\noperator!=Inequality Operator.\n\n\nfriend bool\noperator!=Equality Operator.\n\n\nfriend bool\noperator!=Inequality Operator.\n\n\nfriend bool\noperatorLess than Operator.\n\n\nfriend bool\noperatorLess than Operator.\n\n\nfriend bool\noperatorLess than Operator.\n\n\nfriend bool\noperator>=Greater or Equal to Operator.\n\n\nfriend bool\noperator>=Greater or Equal to Operator.\n\n\nfriend bool\noperator>=Greater or Equal to Operator.\n\n\nfriend DataStream &\noperatorSerialize an signed_int object with as few bytes as possible.\n\n\nfriend DataStream &\noperator>>Deserialize an signed_int object.\n\n\n\nDetailed Description\nVariable Length Signed Integer. This provides more efficient serialization of 32-bit signed int. It serializes a 32-bit signed integer in as few bytes as possible. varint32 is signed and uses Zig-Zag encoding \nvariable value\nint32_t signed_int::value;\n\nContained value. \nContained value \nfunction signed_int\nsigned_int::signed_int (\n    int32_t v = 0\n)\n\nConstruct a new signed int object. \nConstruct a new signed int object\nParameters:\n\nv - Source \n\nfunction operator int32_t\nsigned_int::operator int32_t () const\n\nConversion operator. \nConvert signed_int to primitive 32-bit signed integer \nReturns:\nint32_t - The converted result \nfunction operator=\nsigned_int & signed_int::operator= (\n    const T & v\n)\n\nAssignment operator. \nAssign an object that is convertible to int32_t\nTemplate parameters:\n\nT - Type of the assignment object \n\nParameters:\n\nv - Source \n\nReturns:\nunsigned_int& - Reference to this object \nfunction operator++ (1/2)\nsigned_int signed_int::operator++ (\n    int \n)\n\nIncrement operator. \nIncrement operator\nReturns:\nsigned_int - New signed_int with value incremented from the current object's value \nfunction operator++ (2/2)\nsigned_int & signed_int::operator++ ()\n\nIncrement operator. \nIncrement operator\nReturns:\nsigned_int - Reference to current object \nfriend operator== (1/3)\nfriend bool signed_int::operator== (\n    const signed_int & i,\n    const int32_t & v\n)\n\nEquality Operator. \nCheck equality between a signed_int object and 32-bit integer\nParameters:\n\ni - signed_int object to compare \nv - 32-bit integer to compare \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfriend operator== (2/3)\nfriend bool signed_int::operator== (\n    const int32_t & i,\n    const signed_int & v\n)\n\nEquality Operator. \nCheck equality between 32-bit integer and a signed_int object\nParameters:\n\ni - 32-bit integer to compare \nv - signed_int object to compare \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfriend operator== (3/3)\nfriend bool signed_int::operator== (\n    const signed_int & i,\n    const signed_int & v\n)\n\nEquality Operator. \nCheck equality between two signed_int objects\nParameters:\n\ni - First signed_int object to compare \nv - Second signed_int object to compare \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfriend operator!= (1/3)\nfriend bool signed_int::operator!= (\n    const signed_int & i,\n    const int32_t & v\n)\n\nInequality Operator. \nCheck inequality between a signed_int object and 32-bit integer\nParameters:\n\ni - signed_int object to compare \nv - 32-bit integer to compare \n\nReturns:\ntrue - if inequal \nReturns:\nfalse - otherwise \nfriend operator!= (2/3)\nfriend bool signed_int::operator!= (\n    const int32_t & i,\n    const signed_int & v\n)\n\nEquality Operator. \nCheck inequality between 32-bit integer and a signed_int object\nParameters:\n\ni - 32-bit integer to compare \nv - signed_int object to compare \n\nReturns:\ntrue - if unequal \nReturns:\nfalse - otherwise \nfriend operator!= (3/3)\nfriend bool signed_int::operator!= (\n    const signed_int & i,\n    const signed_int & v\n)\n\nInequality Operator. \nCheck inequality between two signed_int objects\nParameters:\n\ni - First signed_int object to compare \nv - Second signed_int object to compare \n\nReturns:\ntrue - if inequal \nReturns:\nfalse - otherwise \nfriend operator\nfriend bool signed_int::operator\nLess than Operator. \nCheck if the given signed_int object is less than the given 32-bit integer\nParameters:\n\ni - signed_int object to compare \nv - 32-bit integer to compare \n\nReturns:\ntrue - if i less than v \nReturns:\nfalse - otherwise \nfriend operator\nfriend bool signed_int::operator\nLess than Operator. \nCheck if the given 32-bit integer is less than the given signed_int object\nParameters:\n\ni - 32-bit integer to compare \nv - signed_int object to compare \n\nReturns:\ntrue - if i less than v \nReturns:\nfalse - otherwise \nfriend operator\nfriend bool signed_int::operator\nLess than Operator. \nCheck if the first given signed_int is less than the second given signed_int object\nParameters:\n\ni - First signed_int object to compare \nv - Second signed_int object to compare \n\nReturns:\ntrue - if i less than v \nReturns:\nfalse - otherwise \nfriend operator>= (1/3)\nfriend bool signed_int::operator>= (\n    const signed_int & i,\n    const int32_t & v\n)\n\nGreater or Equal to Operator. \nCheck if the given signed_int object is greater or equal to the given 32-bit integer\nParameters:\n\ni - signed_int object to compare \nv - 32-bit integer to compare \n\nReturns:\ntrue - if i is greater or equal to v \nReturns:\nfalse - otherwise \nfriend operator>= (2/3)\nfriend bool signed_int::operator>= (\n    const int32_t & i,\n    const signed_int & v\n)\n\nGreater or Equal to Operator. \nCheck if the given 32-bit integer is greater or equal to the given signed_int object\nParameters:\n\ni - 32-bit integer to compare \nv - signed_int object to compare \n\nReturns:\ntrue - if i is greater or equal to v \nReturns:\nfalse - otherwise \nfriend operator>= (3/3)\nfriend bool signed_int::operator>= (\n    const signed_int & i,\n    const signed_int & v\n)\n\nGreater or Equal to Operator. \nCheck if the first given signed_int is greater or equal to the second given signed_int object\nParameters:\n\ni - First signed_int object to compare \nv - Second signed_int object to compare \n\nReturns:\ntrue - if i is greater or equal to v \nReturns:\nfalse - otherwise \nfriend operator\nfriend DataStream & signed_int::operator\nSerialize an signed_int object with as few bytes as possible. \nSerialize an signed_int object with as few bytes as possible\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfriend operator>>\nfriend DataStream & signed_int::operator>> (\n    DataStream & ds,\n    signed_int & vi\n)\n\nDeserialize an signed_int object. \nDeserialize an signed_int object\nParameters:\n\nds - The stream to read \nvi - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/varint.hpp\n"},"namespacestd.html":{"url":"namespacestd.html","title":"namespace std","keywords":"std less< checksum256 >","body":"namespace std\nClass List > std\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nless\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/types.hpp\n"},"structstd_1_1less_3_01checksum256_01_4.html":{"url":"structstd_1_1less_3_01checksum256_01_4.html","title":"struct less< checksum256 >","keywords":"std::less< checksum256 > operator()","body":"struct std::less\nClass List > std :: less\nProvide less for checksum256. More...\nInherits the following classes: binary_function\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nbool\noperator() (const checksum256 & lhs, const checksum256 & rhs) const\n\n\n\nDetailed Description\nProvide less for checksum256 \nfunction operator()\nbool std::less::operator() (\n    const checksum256 & lhs,\n    const checksum256 & rhs\n) const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/types.hpp\n"},"structunsigned__int.html":{"url":"structunsigned__int.html","title":"struct unsigned_int","keywords":"unsigned_int value unsigned_int unsigned_int operator T operator= operator== operator== operator== operator!= operator!= operator!= operator< operator< operator< operator>= operator>= operator>= operator<< operator>>","body":"struct unsigned_int\nClass List > unsigned_int\nVariable Length Unsigned Integer. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint32_t\nvalueContained value.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nunsigned_int (uint32_t v = 0) Construct a new unsigned int object.\n\n\n\nunsigned_int (T v) Construct a new unsigned int object.\n\n\n\noperator T () const Conversion Operator.\n\n\nunsigned_int &\noperator= (uint32_t v) Assignment operator.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==Equality Operator.\n\n\nfriend bool\noperator==Equality Operator.\n\n\nfriend bool\noperator==Equality Operator.\n\n\nfriend bool\noperator!=Inequality Operator.\n\n\nfriend bool\noperator!=Equality Operator.\n\n\nfriend bool\noperator!=Inequality Operator.\n\n\nfriend bool\noperatorLess than Operator.\n\n\nfriend bool\noperatorLess than Operator.\n\n\nfriend bool\noperatorLess than Operator.\n\n\nfriend bool\noperator>=Greater or Equal to Operator.\n\n\nfriend bool\noperator>=Greater or Equal to Operator.\n\n\nfriend bool\noperator>=Greater or Equal to Operator.\n\n\nfriend DataStream &\noperatorSerialize an unsigned_int object with as few bytes as possible.\n\n\nfriend DataStream &\noperator>>Deserialize an unsigned_int object.\n\n\n\nDetailed Description\nVariable Length Unsigned Integer. This provides more efficient serialization of 32-bit unsigned int. It serialuzes a 32-bit unsigned integer in as few bytes as possible varuint32 is unsigned and uses VLQ or Base-128 encoding \nvariable value\nuint32_t unsigned_int::value;\n\nContained value. \nContained value \nfunction unsigned_int (1/2)\nunsigned_int::unsigned_int (\n    uint32_t v = 0\n)\n\nConstruct a new unsigned int object. \nConstruct a new unsigned int object\nParameters:\n\nv - Source \n\nfunction unsigned_int (2/2)\nunsigned_int::unsigned_int (\n    T v\n)\n\nConstruct a new unsigned int object. \nConstruct a new unsigned int object from a type that is convertible to uint32_t\nTemplate parameters:\n\nT - Type of the source \n\nParameters:\n\nv - Source \n\nPrecondition:\nT must be convertible to uint32_t \nfunction operator T\nunsigned_int::operator T () const\n\nConversion Operator. \nConvert unsigned_int as T \nTemplate parameters:\n\nT - Target type of conversion \n\nReturns:\nT - Converted target \nfunction operator=\nunsigned_int & unsigned_int::operator= (\n    uint32_t v\n)\n\nAssignment operator. \nAssign 32-bit unsigned integer\nParameters:\n\nv - Soruce \n\nReturns:\nunsigned_int& - Reference to this object \nfriend operator== (1/3)\nfriend bool unsigned_int::operator== (\n    const unsigned_int & i,\n    const uint32_t & v\n)\n\nEquality Operator. \nCheck equality between a unsigned_int object and 32-bit unsigned integer\nParameters:\n\ni - unsigned_int object to compare \nv - 32-bit unsigned integer to compare \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfriend operator== (2/3)\nfriend bool unsigned_int::operator== (\n    const uint32_t & i,\n    const unsigned_int & v\n)\n\nEquality Operator. \nCheck equality between 32-bit unsigned integer and a unsigned_int object\nParameters:\n\ni - 32-bit unsigned integer to compare \nv - unsigned_int object to compare \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfriend operator== (3/3)\nfriend bool unsigned_int::operator== (\n    const unsigned_int & i,\n    const unsigned_int & v\n)\n\nEquality Operator. \nCheck equality between two unsigned_int objects\nParameters:\n\ni - First unsigned_int object to compare \nv - Second unsigned_int object to compare \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfriend operator!= (1/3)\nfriend bool unsigned_int::operator!= (\n    const unsigned_int & i,\n    const uint32_t & v\n)\n\nInequality Operator. \nCheck inequality between a unsigned_int object and 32-bit unsigned integer\nParameters:\n\ni - unsigned_int object to compare \nv - 32-bit unsigned integer to compare \n\nReturns:\ntrue - if inequal \nReturns:\nfalse - otherwise \nfriend operator!= (2/3)\nfriend bool unsigned_int::operator!= (\n    const uint32_t & i,\n    const unsigned_int & v\n)\n\nEquality Operator. \nCheck inequality between 32-bit unsigned integer and a unsigned_int object\nParameters:\n\ni - 32-bit unsigned integer to compare \nv - unsigned_int object to compare \n\nReturns:\ntrue - if unequal \nReturns:\nfalse - otherwise \nfriend operator!= (3/3)\nfriend bool unsigned_int::operator!= (\n    const unsigned_int & i,\n    const unsigned_int & v\n)\n\nInequality Operator. \nCheck inequality between two unsigned_int objects\nParameters:\n\ni - First unsigned_int object to compare \nv - Second unsigned_int object to compare \n\nReturns:\ntrue - if inequal \nReturns:\nfalse - otherwise \nfriend operator\nfriend bool unsigned_int::operator\nLess than Operator. \nCheck if the given unsigned_int object is less than the given 32-bit unsigned integer\nParameters:\n\ni - unsigned_int object to compare \nv - 32-bit unsigned integer to compare \n\nReturns:\ntrue - if i less than v \nReturns:\nfalse - otherwise \nfriend operator\nfriend bool unsigned_int::operator\nLess than Operator. \nCheck if the given 32-bit unsigned integer is less than the given unsigned_int object\nParameters:\n\ni - 32-bit unsigned integer to compare \nv - unsigned_int object to compare \n\nReturns:\ntrue - if i less than v \nReturns:\nfalse - otherwise \nfriend operator\nfriend bool unsigned_int::operator\nLess than Operator. \nCheck if the first given unsigned_int is less than the second given unsigned_int object\nParameters:\n\ni - First unsigned_int object to compare \nv - Second unsigned_int object to compare \n\nReturns:\ntrue - if i less than v \nReturns:\nfalse - otherwise \nfriend operator>= (1/3)\nfriend bool unsigned_int::operator>= (\n    const unsigned_int & i,\n    const uint32_t & v\n)\n\nGreater or Equal to Operator. \nCheck if the given unsigned_int object is greater or equal to the given 32-bit unsigned integer\nParameters:\n\ni - unsigned_int object to compare \nv - 32-bit unsigned integer to compare \n\nReturns:\ntrue - if i is greater or equal to v \nReturns:\nfalse - otherwise \nfriend operator>= (2/3)\nfriend bool unsigned_int::operator>= (\n    const uint32_t & i,\n    const unsigned_int & v\n)\n\nGreater or Equal to Operator. \nCheck if the given 32-bit unsigned integer is greater or equal to the given unsigned_int object\nParameters:\n\ni - 32-bit unsigned integer to compare \nv - unsigned_int object to compare \n\nReturns:\ntrue - if i is greater or equal to v \nReturns:\nfalse - otherwise \nfriend operator>= (3/3)\nfriend bool unsigned_int::operator>= (\n    const unsigned_int & i,\n    const unsigned_int & v\n)\n\nGreater or Equal to Operator. \nCheck if the first given unsigned_int is greater or equal to the second given unsigned_int object\nParameters:\n\ni - First unsigned_int object to compare \nv - Second unsigned_int object to compare \n\nReturns:\ntrue - if i is greater or equal to v \nReturns:\nfalse - otherwise \nfriend operator\nfriend DataStream & unsigned_int::operator\nSerialize an unsigned_int object with as few bytes as possible. \nSerialize an unsigned_int object with as few bytes as possible\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfriend operator>>\nfriend DataStream & unsigned_int::operator>> (\n    DataStream & ds,\n    unsigned_int & vi\n)\n\nDeserialize an unsigned_int object. \nDeserialize an unsigned_int object\nParameters:\n\nds - The stream to read \nvi - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/varint.hpp\n"},"files.html":{"url":"files.html","title":"Files","keywords":"action.h action.hpp asset.hpp chain.h compiler_builtins.h contract.hpp crypto.h currency.hpp datastream.hpp db.h dispatcher.hpp eosio.hpp eosiolib.cpp fixed_key.hpp fixedpoint.hpp memory.h memory.hpp multi_index.hpp optional.hpp permission.h permission.hpp print.h print.hpp privileged.h privileged.hpp producer_schedule.hpp public_key.hpp reflect.hpp serialize.hpp singleton.hpp stdlib.hpp symbol.hpp system.h time.hpp transaction.h transaction.hpp types.h types.hpp varint.hpp vector.hpp eosiolib libraries eosio.cdt in","body":"File List\nHere is a list of all documented files with brief descriptions:\n\nin/\neosio.cdt/\nlibraries/\neosiolib/\naction.h\naction.hpp\nasset.hpp\nchain.h\ncompiler_builtins.h\ncontract.hpp\ncrypto.h\ncurrency.hpp\ndatastream.hpp\ndb.h\ndispatcher.hpp\neosio.hpp\neosiolib.cpp\nfixed_key.hpp\nfixedpoint.hpp\nmemory.h\nmemory.hpp\nmulti_index.hpp\noptional.hpp\npermission.h\npermission.hpp\nprint.h\nprint.hpp\nprivileged.h\nprivileged.hpp\nproducer_schedule.hpp\npublic_key.hpp\nreflect.hpp\nserialize.hpp\nsingleton.hpp\nstdlib.hpp\nsymbol.hpp\nsystem.h\ntime.hpp\ntransaction.h\ntransaction.hpp\ntypes.h\ntypes.hpp\nvarint.hpp\nvector.hpp\n\n\n\n\n\n\n\n\n\n"},"dir_f4c96640472432942b3fc30ed441ca04.html":{"url":"dir_f4c96640472432942b3fc30ed441ca04.html","title":"in/","keywords":"in/eosio.cdt","body":"in Directory Reference\nFiles\n\nin/eosio.cdt/\n\n"},"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"url":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","title":"eosio.cdt/","keywords":"in/eosio.cdt/libraries","body":"in/eosio.cdt Directory Reference\nFiles\n\nin/eosio.cdt/libraries/\n\n"},"dir_aec5bb64676d64f4f6eae682e441225e.html":{"url":"dir_aec5bb64676d64f4f6eae682e441225e.html","title":"libraries/","keywords":"in/eosio.cdt/libraries/eosiolib","body":"in/eosio.cdt/libraries Directory Reference\nFiles\n\nin/eosio.cdt/libraries/eosiolib/\n\n"},"dir_1134efb280eb12b0569be244927e10ce.html":{"url":"dir_1134efb280eb12b0569be244927e10ce.html","title":"eosiolib/","keywords":"action.h action.hpp asset.hpp chain.h compiler_builtins.h contract.hpp crypto.h currency.hpp datastream.hpp db.h dispatcher.hpp eosio.hpp eosiolib.cpp fixed_key.hpp fixedpoint.hpp memory.h memory.hpp multi_index.hpp optional.hpp permission.h permission.hpp print.h print.hpp privileged.h privileged.hpp producer_schedule.hpp public_key.hpp reflect.hpp serialize.hpp singleton.hpp stdlib.hpp symbol.hpp system.h time.hpp transaction.h transaction.hpp types.h types.hpp varint.hpp vector.hpp","body":"in/eosio.cdt/libraries/eosiolib Directory Reference\nFiles\n\naction.h\naction.hpp\nasset.hpp\nchain.h\ncompiler_builtins.h\ncontract.hpp\ncrypto.h\ncurrency.hpp\ndatastream.hpp\ndb.h\ndispatcher.hpp\neosio.hpp\neosiolib.cpp\nfixed_key.hpp\nfixedpoint.hpp\nmemory.h\nmemory.hpp\nmulti_index.hpp\noptional.hpp\npermission.h\npermission.hpp\nprint.h\nprint.hpp\nprivileged.h\nprivileged.hpp\nproducer_schedule.hpp\npublic_key.hpp\nreflect.hpp\nserialize.hpp\nsingleton.hpp\nstdlib.hpp\nsymbol.hpp\nsystem.h\ntime.hpp\ntransaction.h\ntransaction.hpp\ntypes.h\ntypes.hpp\nvarint.hpp\nvector.hpp\n\n"},"action_8h.html":{"url":"action_8h.html","title":"action.h","keywords":"action.h read_action_data action_data_size require_recipient require_auth has_auth require_auth2 is_account send_inline send_context_free_inline require_write_lock require_read_lock publication_time current_receiver","body":"file action.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|uint32_t|read_action_data (void * msg, uint32_t len) Copy current action data to the specified location. |\n|uint32_t|action_data_size () Get the length of current action's data field. |\n|void|require_recipient (account_name name) Add the specified account to set of accounts to be notified. |\n|void|require_auth (account_name name) Verify specified account exists in the set of provided auths. |\n|bool|has_auth (account_name name) Verifies that name has auth. |\n|void|require_auth2 (account_name name, permission_name permission) Verify specified account exists in the set of provided auths. |\n|bool|is_account (account_name name) |\n|void|send_inline (char * serialized_action, size_t size) |\n|void|send_context_free_inline (char * serialized_action, size_t size) |\n|void|require_write_lock (account_name name) Verifies that name exists in the set of write locks held. |\n|void|require_read_lock (account_name name) Verifies that name exists in the set of read locks held. |\n|uint64_t|publication_time () Get the publication time. |\n|account_name|current_receiver () Get the current receiver of the action. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction read_action_data\nuint32_t action.h::read_action_data (\n    void * msg,\n    uint32_t len\n)\n\nCopy current action data to the specified location. \nCopy up to len bytes of current action data to the specified location\nParameters:\n\nmsg - a pointer where up to len bytes of the current action data will be copied \nlen - len of the current action data to be copied, 0 to report required size \n\nReturns:\nthe number of bytes copied to msg, or number of bytes that can be copied if len==0 passed \nPrecondition:\nmsg is a valid pointer to a range of memory at least len bytes long \nPost\nmsg is filled with packed action data \nfunction action_data_size\nuint32_t action.h::action_data_size ()\n\nGet the length of current action's data field. \nGet the length of the current action's data field. This method is useful for dynamically sized actions\nReturns:\nthe length of the current action's data field \nfunction require_recipient\nvoid action.h::require_recipient (\n    account_name name\n)\n\nAdd the specified account to set of accounts to be notified. \nAdd the specified account to set of accounts to be notified\nParameters:\n\nname - name of the account to be verified \n\nfunction require_auth\nvoid action.h::require_auth (\n    account_name name\n)\n\nVerify specified account exists in the set of provided auths. \nVerifies that name exists in the set of provided auths on a action. Throws if not found.\nParameters:\n\nname - name of the account to be verified \n\nfunction has_auth\nbool action.h::has_auth (\n    account_name name\n)\n\nVerifies that name has auth. \nVerifies that name has auth.\nParameters:\n\nname - name of the account to be verified \n\nfunction require_auth2\nvoid action.h::require_auth2 (\n    account_name name,\n    permission_name permission\n)\n\nVerify specified account exists in the set of provided auths. \nVerifies that name exists in the set of provided auths on a action. Throws if not found.\nParameters:\n\nname - name of the account to be verified \npermission - permission level to be verified \n\nfunction is_account\nbool action.h::is_account (\n    account_name name\n)\n\nfunction send_inline\nvoid action.h::send_inline (\n    char * serialized_action,\n    size_t size\n)\n\nSend an inline action in the context of this action's parent transaction\nParameters:\n\nserialized_action - serialized action \nsize - size of serialized action in bytes \n\nPrecondition:\nserialized\\_action is a valid pointer to an array at least size bytes long \nfunction send_context_free_inline\nvoid action.h::send_context_free_inline (\n    char * serialized_action,\n    size_t size\n)\n\nSend an inline context free action in the context of this action's parent transaction\nParameters:\n\nserialized_action - serialized action \nsize - size of serialized action in bytes \n\nPrecondition:\nserialized\\_action is a valid pointer to an array at least size bytes long \nfunction require_write_lock\nvoid action.h::require_write_lock (\n    account_name name\n)\n\nVerifies that name exists in the set of write locks held. \nVerifies that name exists in the set of write locks held on a action. Throws if not found \nParameters:\n\nname - name of the account to be verified \n\nfunction require_read_lock\nvoid action.h::require_read_lock (\n    account_name name\n)\n\nVerifies that name exists in the set of read locks held. \nVerifies that name exists in the set of read locks held on a action. Throws if not found \nParameters:\n\nname - name of the account to be verified \n\nfunction publication_time\nuint64_t action.h::publication_time ()\n\nGet the publication time. \nReturns the time in microseconds from 1970 of the publication_time \nReturns:\nthe time in microseconds from 1970 of the publication_time \nfunction current_receiver\naccount_name action.h::current_receiver ()\n\nGet the current receiver of the action. \nGet the current receiver of the action \nReturns:\nthe account which specifies the current receiver of the action \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.h\n"},"action_8hpp.html":{"url":"action_8hpp.html","title":"action.hpp","keywords":"action.hpp eosio::permission_level eosio::action eosio::action_meta eosio::inline_dispatcher eosio::inline_dispatcher< void(T::*)(Args...), Name > INLINE_ACTION_SENDER3 INLINE_ACTION_SENDER2 INLINE_ACTION_SENDER SEND_INLINE_ACTION ACTION","body":"file action.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::permission_level\n\n\nstruct\neosio::action\n\n\nstruct\neosio::action_meta\n\n\nstruct\neosio::inline_dispatcher\n\n\nstruct\neosio::inline_dispatcher\n\n\n\nDefines\n\n\n\nType\nName\n\n\n\n\n\nINLINE_ACTION_SENDER3\n\n\n\nINLINE_ACTION_SENDER2\n\n\n\nINLINE_ACTION_SENDER\n\n\n\nSEND_INLINE_ACTIONSend inline action.\n\n\n\nACTIONExtend a new defined action with the action meta.\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \ndefine INLINE_ACTION_SENDER3\ndefine INLINE_ACTION_SENDER3;\n\ndefine INLINE_ACTION_SENDER2\ndefine INLINE_ACTION_SENDER2;\n\ndefine INLINE_ACTION_SENDER\ndefine INLINE_ACTION_SENDER;\n\ndefine SEND_INLINE_ACTION\ndefine SEND_INLINE_ACTION;\n\nSend inline action. \nSend inline action\nParameters:\n\nCONTRACT - The account this action is intended for \nNAME - The name of the action \n... - The member of the action specified as (\"action_member1_name\", action_member1_value)(\"action_member2_name\", action_member2_value) \n\ndefine ACTION\ndefine ACTION;\n\nExtend a new defined action with the action meta. \nExtend a new defined action with theaction meta, so it can work with the dispatcher\nParameters:\n\nCODE - The account this action is intended for \nNAME - The name of the action \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"asset_8hpp.html":{"url":"asset_8hpp.html","title":"asset.hpp","keywords":"asset.hpp eosio::asset eosio::extended_asset","body":"file asset.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::asset\n\n\nstruct\neosio::extended_asset\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/asset.hpp\n"},"chain_8h.html":{"url":"chain_8h.html","title":"chain.h","keywords":"chain.h get_active_producers","body":"file chain.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|uint32_t|get_active_producers (account_name * producers, uint32_t datalen) Gets the set of active producers. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction get_active_producers\nuint32_t chain.h::get_active_producers (\n    account_name * producers,\n    uint32_t datalen\n)\n\nGets the set of active producers. \nGets the set of active producers. \nParameters:\n\nproducers - Pointer to a buffer of account names \ndatalen - Byte length of buffer, when passed 0 will return the size required to store full output.\n\nReturns:\nuint32_t - Number of bytes actually populated \nPrecondition:\nproducers is a pointer to a range of memory at least datalen bytes long \nPost\nthe passed in producers pointer gets the array of active producers.\nExample:\naccount_name producers[21];\nuint32_t bytes_populated = get_active_producers(producers, sizeof(account_name)*21);\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/chain.h\n"},"compiler__builtins_8h.html":{"url":"compiler__builtins_8h.html","title":"compiler_builtins.h","keywords":"compiler_builtins.h __multi3 __divti3 __udivti3 __modti3 __umodti3 __lshlti3 __lshrti3 __ashlti3 __ashrti3 __addtf3 __subtf3 __multf3 __divtf3 __eqtf2 __netf2 __getf2 __gttf2 __letf2 __lttf2 __cmptf2 __unordtf2 __extendsftf2 __extenddftf2 __fixtfdi __fixtfsi __fixunstfdi __fixunstfsi __trunctfdf2 __trunctfsf2 __break_point","body":"file compiler_builtins.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void|__multi3 (__int128 & res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Multiply two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers. |\n|void|__divti3 (__int128 & res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Divide two 128 bit integers (which are represented as two 64 bit unsigned integers) |\n|void|__udivti3 (unsigned __int128 & res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Divide two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) |\n|void|__modti3 (__int128 & res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Perform modular arithmetic on two 128 bit integers (which are represented as two 64 bit unsigned integers) |\n|void|__umodti3 (unsigned __int128 & res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Perform modular arithmetic on two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) |\n|void|__lshlti3 (__int128 & res, uint64_t lo, uint64_t hi, uint32_t shift) Perform logical shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) |\n|void|__lshrti3 (__int128 & res, uint64_t lo, uint64_t hi, uint32_t shift) Perform logical shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) |\n|void|__ashlti3 (__int128 & res, uint64_t lo, uint64_t hi, uint32_t shift) Perform arithmetic shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) |\n|void|__ashrti3 (__int128 & res, uint64_t lo, uint64_t hi, uint32_t shift) Perform arithmetic shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) |\n|void|__addtf3 (long double & ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Add two long doubles (which are represented as two 64 bit unsigned integers) |\n|void|__subtf3 (long double & ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Subtract two long doubles (which are represented as two 64 bit unsigned integers) |\n|void|__multf3 (long double & ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Multiply two long doubles (which are represented as two 64 bit unsigned integers) |\n|void|__divtf3 (long double & ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Divide two long doubles (which are represented as two 64 bit unsigned integers) |\n|int|__eqtf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check equality between two doubles (which are represented as two 64 bit unsigned integers) |\n|int|__netf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check inequality between two doubles (which are represented as two 64 bit unsigned integers) |\n|int|__getf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check if the first double is greater or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) |\n|int|__gttf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check if the first double is greater than the second double, (the doubles are represented as two 64 bit unsigned integers) |\n|int|__letf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check if the first double is less or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) |\n|int|__lttf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check if the first double is less than the second double, (the doubles are represented as two 64 bit unsigned integers) |\n|int|__cmptf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Compare two doubles (the doubles are represented as two 64 bit unsigned integers) |\n|int|__unordtf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check if either of the doubles is NaN, (the doubles are represented as two 64 bit unsigned integers) |\n|void|__extendsftf2 (long double & ret, float f) Extend float to long double. |\n|void|__extenddftf2 (long double & ret, double f) Extend float to long double. |\n|int64_t|__fixtfdi (uint64_t l, uint64_t h) Convert long double (which are split as two 64 bit unsigned integers) into 64 bit integer. |\n|int32_t|__fixtfsi (uint64_t l, uint64_t h) Convert long double (which are split as two 64 bit unsigned integers) into 32 bit integer. |\n|uint64_t|__fixunstfdi (uint64_t l, uint64_t h) Convert long double (which are split as two 64 bit unsigned integers) into 64 bit unsigned integer. |\n|uint32_t|__fixunstfsi (uint64_t l, uint64_t h) Convert long double (which are split as two 64 bit unsigned integers) into 32 bit unsigned integer. |\n|double|__trunctfdf2 (uint64_t l, uint64_t h) Convert long double (which are split as two 64 bit unsigned integers) into double. |\n|float|__trunctfsf2 (uint64_t l, uint64_t h) Convert long double (which are split as two 64 bit unsigned integers) into float. |\n|void|__break_point () |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction __multi3\nvoid compiler_builtins.h::__multi3 (\n    __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nMultiply two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers. \nMultiply two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of multiplication Example: \n__int128 res = 0;\n__int128 a = 100;\n__int128 b = 100;\n__multi3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 10000\n\nfunction __divti3\nvoid compiler_builtins.h::__divti3 (\n    __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nDivide two 128 bit integers (which are represented as two 64 bit unsigned integers) \nDivide two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of division Example: \n__int128 res = 0;\n__int128 a = 100;\n__int128 b = 100;\n__divti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\nfunction __udivti3\nvoid compiler_builtins.h::__udivti3 (\n    unsigned __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nDivide two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) \nDivide two 128 bit unsigned integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. Example: unsigned __int128 res = 0;\nunsigned __int128 a = 100;\nunsigned __int128 b = 100;\n__udivti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\n\n\nfunction __modti3\nvoid compiler_builtins.h::__modti3 (\n    __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nPerform modular arithmetic on two 128 bit integers (which are represented as two 64 bit unsigned integers) \nPerform modular arithmetic on two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of modulus Example: \n__int128 res = 0;\n__int128 a = 100;\n__int128 b = 3;\n__modti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\nfunction __umodti3\nvoid compiler_builtins.h::__umodti3 (\n    unsigned __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nPerform modular arithmetic on two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) \nPerform modular arithmetic on two 128 unsigned bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of modulus Example: \nunsigned __int128 res = 0;\nunsigned __int128 a = 100;\nunsigned __int128 b = 3;\n__umodti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\nfunction __lshlti3\nvoid compiler_builtins.h::__lshlti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform logical shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform logical shift left on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = 8;\n__lshlti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: 16\n\nfunction __lshrti3\nvoid compiler_builtins.h::__lshrti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform logical shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform logical shift right on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = 8;\n__lshrti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: 4\n\nfunction __ashlti3\nvoid compiler_builtins.h::__ashlti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform arithmetic shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform arithmetic shift left on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = 8;\n__ashlti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: 16\n\nfunction __ashrti3\nvoid compiler_builtins.h::__ashrti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform arithmetic shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform arithmetic shift right on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = -8;\n__ashrti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: -4\n\nfunction __addtf3\nvoid compiler_builtins.h::__addtf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nAdd two long doubles (which are represented as two 64 bit unsigned integers) \nAdd two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __subtf3\nvoid compiler_builtins.h::__subtf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nSubtract two long doubles (which are represented as two 64 bit unsigned integers) \nSubtract two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __multf3\nvoid compiler_builtins.h::__multf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nMultiply two long doubles (which are represented as two 64 bit unsigned integers) \nMultiply two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __divtf3\nvoid compiler_builtins.h::__divtf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nDivide two long doubles (which are represented as two 64 bit unsigned integers) \nDivide two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __eqtf2\nint compiler_builtins.h::__eqtf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck equality between two doubles (which are represented as two 64 bit unsigned integers) \nCheck equality between two doubles split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n1 if either a or b is NaN \nfunction __netf2\nint compiler_builtins.h::__netf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck inequality between two doubles (which are represented as two 64 bit unsigned integers) \nCheck inequality between two doubles split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b  if either a or b is NaN \nfunction __getf2\nint compiler_builtins.h::__getf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is greater or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is greater or equal to the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n-1 if either a or b is NaN \nfunction __gttf2\nint compiler_builtins.h::__gttf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is greater than the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is greater than the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n0 if either a or b is NaN \nfunction __letf2\nint compiler_builtins.h::__letf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is less or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is less or equal to the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n1 if either a or b is NaN \nfunction __lttf2\nint compiler_builtins.h::__lttf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is less than the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is less than the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n0 if either a or b is NaN \nfunction __cmptf2\nint compiler_builtins.h::__cmptf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCompare two doubles (the doubles are represented as two 64 bit unsigned integers) \nCompare two doubles which are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n1 if either a or b is NaN \nfunction __unordtf2\nint compiler_builtins.h::__unordtf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if either of the doubles is NaN, (the doubles are represented as two 64 bit unsigned integers) \nCheck if either of the doubles is NaN, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if either a or b is NaN \nReturns:\n0 if either a or b is not NaN \nfunction __extendsftf2\nvoid compiler_builtins.h::__extendsftf2 (\n    long double & ret,\n    float f\n)\n\nExtend float to long double. \nExtend float to long double \nParameters:\n\nret It will be replaced with the result product. \nf Input float to be extended \n\nPost\nret is replaced with the extended float \nfunction __extenddftf2\nvoid compiler_builtins.h::__extenddftf2 (\n    long double & ret,\n    double f\n)\n\nExtend float to long double. \nExtend double to long double \nParameters:\n\nret It will be replaced with the result product. \nf Input float to be extended \n\nPost\nret is replaced with the extended float \nfunction __fixtfdi\nint64_t compiler_builtins.h::__fixtfdi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 64 bit integer. \nfunction __fixtfsi\nint32_t compiler_builtins.h::__fixtfsi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 32 bit integer. \nfunction __fixunstfdi\nuint64_t compiler_builtins.h::__fixunstfdi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit unsigned integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit unsigned integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 64 bit unsigned integer. \nfunction __fixunstfsi\nuint32_t compiler_builtins.h::__fixunstfsi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit unsigned integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit unsigned integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 32 bit unsigned integer. \nfunction __trunctfdf2\ndouble compiler_builtins.h::__trunctfdf2 (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into double. \nTruncate long double (which are split as two 64 bit unsigned integers) into double \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted double \nfunction __trunctfsf2\nfloat compiler_builtins.h::__trunctfsf2 (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into float. \nTruncate long double (which are split as two 64 bit unsigned integers) into float \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted float \nfunction __break_point\nvoid compiler_builtins.h::__break_point ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/compiler\\_builtins.h\n"},"contract_8hpp.html":{"url":"contract_8hpp.html","title":"contract.hpp","keywords":"contract.hpp eosio::contract","body":"file contract.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::contract\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/contract.hpp\n"},"crypto_8h.html":{"url":"crypto_8h.html","title":"crypto.h","keywords":"crypto.h assert_sha256 assert_sha1 assert_sha512 assert_ripemd160 sha256 sha1 sha512 ripemd160 recover_key assert_recover_key","body":"file crypto.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void|assert_sha256 (char * data, uint32_t length, const checksum256 * hash) Tests if the sha256 hash generated from data matches the provided checksum. |\n|void|assert_sha1 (char * data, uint32_t length, const checksum160 * hash) Tests if the sha1 hash generated from data matches the provided checksum. |\n|void|assert_sha512 (char * data, uint32_t length, const checksum512 * hash) Tests if the sha512 hash generated from data matches the provided checksum. |\n|void|assert_ripemd160 (char * data, uint32_t length, const checksum160 * hash) Tests if the ripemod160 hash generated from data matches the provided checksum. |\n|void|sha256 (char * data, uint32_t length, checksum256 * hash) Hashes data using sha256 and stores result in memory pointed to by hash. |\n|void|sha1 (char * data, uint32_t length, checksum160 * hash) Hashes data using sha1 and stores result in memory pointed to by hash. |\n|void|sha512 (char * data, uint32_t length, checksum512 * hash) Hashes data using sha512 and stores result in memory pointed to by hash. |\n|void|ripemd160 (char * data, uint32_t length, checksum160 * hash) Hashes data using ripemod160 and stores result in memory pointed to by hash. |\n|int|recover_key (const checksum256 * digest, const char * sig, size_t siglen, char * pub, size_t publen) Calculates the public key used for a given signature and hash used to create a message. |\n|void|assert_recover_key (const checksum256 * digest, const char * sig, size_t siglen, const char * pub, size_t publen) Tests a given public key with the generated key from digest and the signature. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction assert_sha256\nvoid crypto.h::assert_sha256 (\n    char * data,\n    uint32_t length,\n    const checksum256 * hash\n)\n\nTests if the sha256 hash generated from data matches the provided checksum. \nTests if the sha256 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - checksum256\\* hash to compare to\n\nPrecondition:\nassert256 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha256( data, length, hash )\n//If the sha256 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha256 hash generated from data equals provided hash\");\n\nfunction assert_sha1\nvoid crypto.h::assert_sha1 (\n    char * data,\n    uint32_t length,\n    const checksum160 * hash\n)\n\nTests if the sha1 hash generated from data matches the provided checksum. \nTests if the sha1 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - checksum160\\* hash to compare to\n\nPrecondition:\nsha1 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha1( data, length, hash )\n//If the sha1 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha1 hash generated from data equals provided hash\");\n\nfunction assert_sha512\nvoid crypto.h::assert_sha512 (\n    char * data,\n    uint32_t length,\n    const checksum512 * hash\n)\n\nTests if the sha512 hash generated from data matches the provided checksum. \nTests if the sha512 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - checksum512\\* hash to compare to\n\nPrecondition:\nassert512 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha512( data, length, hash )\n//If the sha512 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha512 hash generated from data equals provided hash\");\n\nfunction assert_ripemd160\nvoid crypto.h::assert_ripemd160 (\n    char * data,\n    uint32_t length,\n    const checksum160 * hash\n)\n\nTests if the ripemod160 hash generated from data matches the provided checksum. \nTests if the ripemod160 hash generated from data matches the provided checksum. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - checksum160\\* hash to compare to\n\nPrecondition:\nassert160 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_ripemod160( data, length, hash )\n//If the ripemod160 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"ripemod160 hash generated from data equals provided hash\");\n\nfunction sha256\nvoid crypto.h::sha256 (\n    char * data,\n    uint32_t length,\n    checksum256 * hash\n)\n\nHashes data using sha256 and stores result in memory pointed to by hash. \nHashes data using sha256 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha256( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction sha1\nvoid crypto.h::sha1 (\n    char * data,\n    uint32_t length,\n    checksum160 * hash\n)\n\nHashes data using sha1 and stores result in memory pointed to by hash. \nHashes data using sha1 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha1( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction sha512\nvoid crypto.h::sha512 (\n    char * data,\n    uint32_t length,\n    checksum512 * hash\n)\n\nHashes data using sha512 and stores result in memory pointed to by hash. \nHashes data using sha512 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha512( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction ripemd160\nvoid crypto.h::ripemd160 (\n    char * data,\n    uint32_t length,\n    checksum160 * hash\n)\n\nHashes data using ripemod160 and stores result in memory pointed to by hash. \nHashes data using ripemod160 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nripemod160( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction recover_key\nint crypto.h::recover_key (\n    const checksum256 * digest,\n    const char * sig,\n    size_t siglen,\n    char * pub,\n    size_t publen\n)\n\nCalculates the public key used for a given signature and hash used to create a message. \nCalculates the public key used for a given signature and hash used to create a message. \nParameters:\n\ndigest - Hash used to create a message \nsig - Signature \nsiglen - Signature length \npub - Public key \npublen - Public key length\n\nExample:\n```\n\n\n\n### function assert\\_recover\\_key\n\n```cpp\nvoid crypto.h::assert_recover_key (\n    const checksum256 * digest,\n    const char * sig,\n    size_t siglen,\n    const char * pub,\n    size_t publen\n)\n\nTests a given public key with the generated key from digest and the signature. \nTests a given public key with the generated key from digest and the signature. \nParameters:\n\ndigest - What the key will be generated from \nsig - Signature \nsiglen - Signature length \npub - Public key \npublen - Public key length\n\nPrecondition:\nassert recovery key of pub equals the key generated from the digest parameter \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum digest;\nchar sig;\nsize_t siglen;\nchar pub;\nsize_t publen;\nassert_recover_key( digest, sig, siglen, pub, publen )\n// If the given public key does not match with the generated key from digest and the signature, anything below will never fire.\neosio::print(\"pub key matches the pub key generated from digest\");\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/crypto.h\n"},"currency_8hpp.html":{"url":"currency_8hpp.html","title":"currency.hpp","keywords":"currency.hpp eosio::currency eosio::currency::create eosio::currency::transfer eosio::currency::issue eosio::currency::fee_schedule eosio::currency::account eosio::currency::currency_stats","body":"file currency.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::currency\n\n\nstruct\neosio::currency::create\n\n\nstruct\neosio::currency::transfer\n\n\nstruct\neosio::currency::issue\n\n\nstruct\neosio::currency::fee_schedule\n\n\nstruct\neosio::currency::account\n\n\nstruct\neosio::currency::currency_stats\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/currency.hpp\n"},"datastream_8hpp.html":{"url":"datastream_8hpp.html","title":"datastream.hpp","keywords":"datastream.hpp eosio::datastream eosio::datastream< size_t >","body":"file datastream.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::datastream\n\n\nclass\neosio::datastream\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/datastream.hpp\n"},"db_8h.html":{"url":"db_8h.html","title":"db.h","keywords":"db.h db_store_i64 db_update_i64 db_remove_i64 db_get_i64 db_next_i64 db_previous_i64 db_find_i64 db_lowerbound_i64 db_upperbound_i64 db_end_i64 db_idx64_store db_idx64_update db_idx64_remove db_idx64_next db_idx64_previous db_idx64_find_primary db_idx64_find_secondary db_idx64_lowerbound db_idx64_upperbound db_idx64_end db_idx128_store db_idx128_update db_idx128_remove db_idx128_next db_idx128_previous db_idx128_find_primary db_idx128_find_secondary db_idx128_lowerbound db_idx128_upperbound db_idx128_end db_idx256_store db_idx256_update db_idx256_remove db_idx256_next db_idx256_previous db_idx256_find_primary db_idx256_find_secondary db_idx256_lowerbound db_idx256_upperbound db_idx256_end db_idx_double_store db_idx_double_update db_idx_double_remove db_idx_double_next db_idx_double_previous db_idx_double_find_primary db_idx_double_find_secondary db_idx_double_lowerbound db_idx_double_upperbound db_idx_double_end db_idx_long_double_store db_idx_long_double_update db_idx_long_double_remove db_idx_long_double_next db_idx_long_double_previous db_idx_long_double_find_primary db_idx_long_double_find_secondary db_idx_long_double_lowerbound db_idx_long_double_upperbound db_idx_long_double_end","body":"file db.h\nGo to the source code of this file.\nDefines C API for interfacing with blockchain database. More...\n|Type|Name|\n|-----|-----|\n|int32_t|db_store_i64 (account_name scope, table_name table, account_name payer, uint64_t id, const void * data, uint32_t len) Store a record in a primary 64-bit integer index table. |\n|void|db_update_i64 (int32_t iterator, account_name payer, const void * data, uint32_t len) Update a record in a primary 64-bit integer index table. |\n|void|db_remove_i64 (int32_t iterator) Remove a record from a primary 64-bit integer index table. |\n|int32_t|db_get_i64 (int32_t iterator, const void * data, uint32_t len) Get a record in a primary 64-bit integer index table. |\n|int32_t|db_next_i64 (int32_t iterator, uint64_t * primary) Find the table row following the referenced table row in a primary 64-bit integer index table. |\n|int32_t|db_previous_i64 (int32_t iterator, uint64_t * primary) Find the table row preceding the referenced table row in a primary 64-bit integer index table. |\n|int32_t|db_find_i64 (account_name code, account_name scope, table_name table, uint64_t id) Find a table row in a primary 64-bit integer index table by primary key. |\n|int32_t|db_lowerbound_i64 (account_name code, account_name scope, table_name table, uint64_t id) Find the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key. |\n|int32_t|db_upperbound_i64 (account_name code, account_name scope, table_name table, uint64_t id) Find the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key. |\n|int32_t|db_end_i64 (account_name code, account_name scope, table_name table) Get an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table. |\n|int32_t|db_idx64_store (account_name scope, table_name table, account_name payer, uint64_t id, const uint64_t * secondary) Store an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. |\n|void|db_idx64_update (int32_t iterator, account_name payer, const uint64_t * secondary) Update an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. |\n|void|db_idx64_remove (int32_t iterator) Remove a table row from a secondary 64-bit integer index table. |\n|int32_t|db_idx64_next (int32_t iterator, uint64_t * primary) Find the table row following the referenced table row in a secondary 64-bit integer index table. |\n|int32_t|db_idx64_previous (int32_t iterator, uint64_t * primary) Find the table row preceding the referenced table row in a secondary 64-bit integer index table. |\n|int32_t|db_idx64_find_primary (account_name code, account_name scope, table_name table, uint64_t * secondary, uint64_t primary) Find a table row in a secondary 64-bit integer index table by primary key. |\n|int32_t|db_idx64_find_secondary (account_name code, account_name scope, table_name table, const uint64_t * secondary, uint64_t * primary) Find a table row in a secondary 64-bit integer index table by secondary key. |\n|int32_t|db_idx64_lowerbound (account_name code, account_name scope, table_name table, uint64_t * secondary, uint64_t * primary) Find the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key. |\n|int32_t|db_idx64_upperbound (account_name code, account_name scope, table_name table, uint64_t * secondary, uint64_t * primary) Find the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key. |\n|int32_t|db_idx64_end (account_name code, account_name scope, table_name table) Get an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table. |\n|int32_t|db_idx128_store (account_name scope, table_name table, account_name payer, uint64_t id, const uint128_t * secondary) Store an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. |\n|void|db_idx128_update (int32_t iterator, account_name payer, const uint128_t * secondary) Update an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. |\n|void|db_idx128_remove (int32_t iterator) Remove a table row from a secondary 128-bit integer index table. |\n|int32_t|db_idx128_next (int32_t iterator, uint64_t * primary) Find the table row following the referenced table row in a secondary 128-bit integer index table. |\n|int32_t|db_idx128_previous (int32_t iterator, uint64_t * primary) Find the table row preceding the referenced table row in a secondary 128-bit integer index table. |\n|int32_t|db_idx128_find_primary (account_name code, account_name scope, table_name table, uint128_t * secondary, uint64_t primary) Find a table row in a secondary 128-bit integer index table by primary key. |\n|int32_t|db_idx128_find_secondary (account_name code, account_name scope, table_name table, const uint128_t * secondary, uint64_t * primary) Find a table row in a secondary 128-bit integer index table by secondary key. |\n|int32_t|db_idx128_lowerbound (account_name code, account_name scope, table_name table, uint128_t * secondary, uint64_t * primary) Find the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key. |\n|int32_t|db_idx128_upperbound (account_name code, account_name scope, table_name table, uint128_t * secondary, uint64_t * primary) Find the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key. |\n|int32_t|db_idx128_end (account_name code, account_name scope, table_name table) Get an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table. |\n|int32_t|db_idx256_store (account_name scope, table_name table, account_name payer, uint64_t id, const uint128_t * data, uint32_t data_len) Store an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table. |\n|void|db_idx256_update (int32_t iterator, account_name payer, const uint128_t * data, uint32_t data_len) Update an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table. |\n|void|db_idx256_remove (int32_t iterator) Remove a table row from a secondary 256-bit index table. |\n|int32_t|db_idx256_next (int32_t iterator, uint64_t * primary) Find the table row following the referenced table row in a secondary 256-bit index table. |\n|int32_t|db_idx256_previous (int32_t iterator, uint64_t * primary) Find the table row preceding the referenced table row in a secondary 256-bit index table. |\n|int32_t|db_idx256_find_primary (account_name code, account_name scope, table_name table, uint128_t * data, uint32_t data_len, uint64_t primary) Find a table row in a secondary 128-bit integer index table by primary key. |\n|int32_t|db_idx256_find_secondary (account_name code, account_name scope, table_name table, const uint128_t * data, uint32_t data_len, uint64_t * primary) Find a table row in a secondary 256-bit index table by secondary key. |\n|int32_t|db_idx256_lowerbound (account_name code, account_name scope, table_name table, uint128_t * data, uint32_t data_len, uint64_t * primary) Find the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key. |\n|int32_t|db_idx256_upperbound (account_name code, account_name scope, table_name table, uint128_t * data, uint32_t data_len, uint64_t * primary) Find the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key. |\n|int32_t|db_idx256_end (account_name code, account_name scope, table_name table) Get an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table. |\n|int32_t|db_idx_double_store (account_name scope, table_name table, account_name payer, uint64_t id, const double * secondary) Store an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. |\n|void|db_idx_double_update (int32_t iterator, account_name payer, const double * secondary) Update an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. |\n|void|db_idx_double_remove (int32_t iterator) Remove a table row from a secondary double-precision floating-point index table. |\n|int32_t|db_idx_double_next (int32_t iterator, uint64_t * primary) Find the table row following the referenced table row in a secondary double-precision floating-point index table. |\n|int32_t|db_idx_double_previous (int32_t iterator, uint64_t * primary) Find the table row preceding the referenced table row in a secondary double-precision floating-point index table. |\n|int32_t|db_idx_double_find_primary (account_name code, account_name scope, table_name table, double * secondary, uint64_t primary) Find a table row in a secondary double-precision floating-point index table by primary key. |\n|int32_t|db_idx_double_find_secondary (account_name code, account_name scope, table_name table, const double * secondary, uint64_t * primary) Find a table row in a secondary double-precision floating-point index table by secondary key. |\n|int32_t|db_idx_double_lowerbound (account_name code, account_name scope, table_name table, double * secondary, uint64_t * primary) Find the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key. |\n|int32_t|db_idx_double_upperbound (account_name code, account_name scope, table_name table, double * secondary, uint64_t * primary) Find the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key. |\n|int32_t|db_idx_double_end (account_name code, account_name scope, table_name table) Get an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table. |\n|int32_t|db_idx_long_double_store (account_name scope, table_name table, account_name payer, uint64_t id, const long double * secondary) Store an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. |\n|void|db_idx_long_double_update (int32_t iterator, account_name payer, const long double * secondary) Update an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. |\n|void|db_idx_long_double_remove (int32_t iterator) Remove a table row from a secondary quadruple-precision floating-point index table. |\n|int32_t|db_idx_long_double_next (int32_t iterator, uint64_t * primary) Find the table row following the referenced table row in a secondary quadruple-precision floating-point index table. |\n|int32_t|db_idx_long_double_previous (int32_t iterator, uint64_t * primary) Find the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table. |\n|int32_t|db_idx_long_double_find_primary (account_name code, account_name scope, table_name table, long double * secondary, uint64_t primary) Find a table row in a secondary quadruple-precision floating-point index table by primary key. |\n|int32_t|db_idx_long_double_find_secondary (account_name code, account_name scope, table_name table, const long double * secondary, uint64_t * primary) Find a table row in a secondary quadruple-precision floating-point index table by secondary key. |\n|int32_t|db_idx_long_double_lowerbound (account_name code, account_name scope, table_name table, long double * secondary, uint64_t * primary) Find the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key. |\n|int32_t|db_idx_long_double_upperbound (account_name code, account_name scope, table_name table, long double * secondary, uint64_t * primary) Find the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key. |\n|int32_t|db_idx_long_double_end (account_name code, account_name scope, table_name table) Get an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction db_store_i64\nint32_t db.h::db_store_i64 (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const void * data,\n    uint32_t len\n)\n\nStore a record in a primary 64-bit integer index table. \nStore a record in a primary 64-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - ID of the entry \ndata - Record to store \nlen - Size of data \n\nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPrecondition:\n\\*((uint64\\_t\\*)data) stores the primary key \nReturns:\niterator to the newly created table row \nPost\na new entry is created in the table \nfunction db_update_i64\nvoid db.h::db_update_i64 (\n    int32_t iterator,\n    account_name payer,\n    const void * data,\n    uint32_t len\n)\n\nUpdate a record in a primary 64-bit integer index table. \nUpdate a record in a primary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row containing the record to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \ndata - New updated record \nlen - Size of data \n\nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPrecondition:\n\\*((uint64\\_t\\*)data) stores the primary key \nPrecondition:\niterator points to an existing table row in the table \nPost\nthe record contained in the table row pointed to by iterator is replaced with the new updated record \nfunction db_remove_i64\nvoid db.h::db_remove_i64 (\n    int32_t iterator\n)\n\nRemove a record from a primary 64-bit integer index table. \nRemove a record from a primary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer\nExample:\nint32_t itr = db_find_i64(receiver, receiver, table1, N(alice));\neosio_assert(itr >= 0, \"Alice cannot be removed since she was already not found in the table\");\ndb_remove_i64(itr);\n\nfunction db_get_i64\nint32_t db.h::db_get_i64 (\n    int32_t iterator,\n    const void * data,\n    uint32_t len\n)\n\nGet a record in a primary 64-bit integer index table. \nGet a record in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the record to retrieve \ndata - Pointer to the buffer which will be filled with the retrieved record \nlen - Size of the buffer \n\nReturns:\nsize of the data copied into the buffer if len > 0, or size of the retrieved record if len == 0. \nPrecondition:\niterator points to an existing table row in the table \nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPost\ndata will be filled with the retrieved record (truncated to the first len bytes if necessary)\nExample:\nchar value[50];\nauto len = db_get_i64(itr, value, 0);\neosio_assert(len \nfunction db_next_i64\nint32_t db.h::db_next_i64 (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a primary 64-bit integer index table. \nFind the table row following the referenced table row in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched\nExample:\nint32_t charlie_itr = db_find_i64(receiver, receiver, table1, N(charlie));\n// expect nothing after charlie\nuint64_t prim = 0\nint32_t  end_itr = db_next_i64(charlie_itr, &prim);\neosio_assert(end_itr \nfunction db_previous_i64\nint32_t db.h::db_previous_i64 (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a primary 64-bit integer index table. \nFind the table row preceding the referenced table row in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched\nExample:\nuint64_t prim = 0;\nint32_t  itr_prev = db_previous_i64(itr, &prim);\n\nfunction db_find_i64\nint32_t db.h::db_find_i64 (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t id\n)\n\nFind a table row in a primary 64-bit integer index table by primary key. \nFind a table row in a primary 64-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key of the table row to look up \n\nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found\nExample:\nint itr = db_find_i64(receiver, receiver, table1, N(charlie));\n\nfunction db_lowerbound_i64\nint32_t db.h::db_lowerbound_i64 (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t id\n)\n\nFind the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key. \nFind the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key The table row that matches the lowerbound condition is the first table row in the table with the lowest primary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key used to determine the lowerbound \n\nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_upperbound_i64\nint32_t db.h::db_upperbound_i64 (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t id\n)\n\nFind the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key. \nFind the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key The table row that matches the upperbound condition is the first table row in the table with the lowest primary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key used to determine the upperbound \n\nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_end_i64\nint32_t db.h::db_end_i64 (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table. \nGet an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx64_store\nint32_t db.h::db_idx64_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const uint64_t * secondary\n)\n\nStore an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. \nStore an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary 64-bit integer index table \nfunction db_idx64_update\nvoid db.h::db_idx64_update (\n    int32_t iterator,\n    account_name payer,\n    const uint64_t * secondary\n)\n\nUpdate an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. \nUpdate an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx64_remove\nvoid db.h::db_idx64_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 64-bit integer index table. \nRemove a table row from a secondary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx64_next\nint32_t db.h::db_idx64_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 64-bit integer index table. \nFind the table row following the referenced table row in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx64_previous\nint32_t db.h::db_idx64_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 64-bit integer index table. \nFind the table row preceding the referenced table row in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx64_find_primary\nint32_t db.h::db_idx64_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary 64-bit integer index table by primary key. \nFind a table row in a secondary 64-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a uint64\\_t variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx64_find_secondary\nint32_t db.h::db_idx64_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 64-bit integer index table by secondary key. \nFind a table row in a secondary 64-bit integer index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx64_lowerbound\nint32_t db.h::db_idx64_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx64_upperbound\nint32_t db.h::db_idx64_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx64_end\nint32_t db.h::db_idx64_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx128_store\nint32_t db.h::db_idx128_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const uint128_t * secondary\n)\n\nStore an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. \nStore an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary 128-bit integer index table \nfunction db_idx128_update\nvoid db.h::db_idx128_update (\n    int32_t iterator,\n    account_name payer,\n    const uint128_t * secondary\n)\n\nUpdate an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. \nUpdate an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx128_remove\nvoid db.h::db_idx128_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 128-bit integer index table. \nRemove a table row from a secondary 128-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx128_next\nint32_t db.h::db_idx128_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 128-bit integer index table. \nFind the table row following the referenced table row in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx128_previous\nint32_t db.h::db_idx128_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 128-bit integer index table. \nFind the table row preceding the referenced table row in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx128_find_primary\nint32_t db.h::db_idx128_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary 128-bit integer index table by primary key. \nFind a table row in a secondary 128-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a uint128\\_t variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx128_find_secondary\nint32_t db.h::db_idx128_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 128-bit integer index table by secondary key. \nFind a table row in a secondary 128-bit integer index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx128_lowerbound\nint32_t db.h::db_idx128_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx128_upperbound\nint32_t db.h::db_idx128_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx128_end\nint32_t db.h::db_idx128_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx256_store\nint32_t db.h::db_idx256_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const uint128_t * data,\n    uint32_t data_len\n)\n\nStore an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table. \nStore an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \ndata - Pointer to the secondary key data stored as an array of 2 uint128\\_t integers \ndata_len - Must be set to 2 \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and the specified secondary key is created in the secondary 256-bit index table \nfunction db_idx256_update\nvoid db.h::db_idx256_update (\n    int32_t iterator,\n    account_name payer,\n    const uint128_t * data,\n    uint32_t data_len\n)\n\nUpdate an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table. \nUpdate an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \ndata - Pointer to the new secondary key data (which is stored as an array of 2 uint128\\_t integers) that will replace the existing one of the association \ndata_len - Must be set to 2 \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by the specified secondary key \nfunction db_idx256_remove\nvoid db.h::db_idx256_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 256-bit index table. \nRemove a table row from a secondary 256-bit index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx256_next\nint32_t db.h::db_idx256_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 256-bit index table. \nFind the table row following the referenced table row in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx256_previous\nint32_t db.h::db_idx256_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 256-bit index table. \nFind the table row preceding the referenced table row in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx256_find_primary\nint32_t db.h::db_idx256_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t primary\n)\n\nFind a table row in a secondary 128-bit integer index table by primary key. \nFind a table row in a secondary 256-bit index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the an array of 2 uint128\\_t integers which will act as the buffer to hold the retrieved secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx256_find_secondary\nint32_t db.h::db_idx256_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 256-bit index table by secondary key. \nFind a table row in a secondary 256-bit index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) used to lookup the table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to the specified secondary key or the end iterator of the table if the table row could not be found \nfunction db_idx256_lowerbound\nint32_t db.h::db_idx256_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key (uses lexicographical ordering on the 256-bit keys)\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx256_upperbound\nint32_t db.h::db_idx256_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key (uses lexicographical ordering on the 256-bit keys)\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) first used to determine the upperbound and which is then replaced with the secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx256_end\nint32_t db.h::db_idx256_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx_double_store\nint32_t db.h::db_idx_double_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const double * secondary\n)\n\nStore an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. \nStore an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary double-precision floating-point index table \nfunction db_idx_double_update\nvoid db.h::db_idx_double_update (\n    int32_t iterator,\n    account_name payer,\n    const double * secondary\n)\n\nUpdate an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. \nUpdate an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx_double_remove\nvoid db.h::db_idx_double_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary double-precision floating-point index table. \nRemove a table row from a secondary double-precision floating-point index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx_double_next\nint32_t db.h::db_idx_double_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary double-precision floating-point index table. \nFind the table row following the referenced table row in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_double_previous\nint32_t db.h::db_idx_double_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary double-precision floating-point index table. \nFind the table row preceding the referenced table row in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_double_find_primary\nint32_t db.h::db_idx_double_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    double * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary double-precision floating-point index table by primary key. \nFind a table row in a secondary double-precision floating-point index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a double variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx_double_find_secondary\nint32_t db.h::db_idx_double_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const double * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary double-precision floating-point index table by secondary key. \nFind a table row in a secondary double-precision floating-point index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a double variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx_double_lowerbound\nint32_t db.h::db_idx_double_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_double_upperbound\nint32_t db.h::db_idx_double_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_double_end\nint32_t db.h::db_idx_double_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx_long_double_store\nint32_t db.h::db_idx_long_double_store (\n    account_name scope,\n    table_name table,\n    account_name payer,\n    uint64_t id,\n    const long double * secondary\n)\n\nStore an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. \nStore an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary quadruple-precision floating-point index table \nfunction db_idx_long_double_update\nvoid db.h::db_idx_long_double_update (\n    int32_t iterator,\n    account_name payer,\n    const long double * secondary\n)\n\nUpdate an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. \nUpdate an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx_long_double_remove\nvoid db.h::db_idx_long_double_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary quadruple-precision floating-point index table. \nRemove a table row from a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx_long_double_next\nint32_t db.h::db_idx_long_double_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary quadruple-precision floating-point index table. \nFind the table row following the referenced table row in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_long_double_previous\nint32_t db.h::db_idx_long_double_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table. \nFind the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_long_double_find_primary\nint32_t db.h::db_idx_long_double_find_primary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    long double * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary quadruple-precision floating-point index table by primary key. \nFind a table row in a secondary quadruple-precision floating-point index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a long double variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_find_secondary\nint32_t db.h::db_idx_long_double_find_secondary (\n    account_name code,\n    account_name scope,\n    table_name table,\n    const long double * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary quadruple-precision floating-point index table by secondary key. \nFind a table row in a secondary quadruple-precision floating-point index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a long double variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_lowerbound\nint32_t db.h::db_idx_long_double_lowerbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    long double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_upperbound\nint32_t db.h::db_idx_long_double_upperbound (\n    account_name code,\n    account_name scope,\n    table_name table,\n    long double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_end\nint32_t db.h::db_idx_long_double_end (\n    account_name code,\n    account_name scope,\n    table_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/db.h\n"},"dispatcher_8hpp.html":{"url":"dispatcher_8hpp.html","title":"dispatcher.hpp","keywords":"dispatcher.hpp N EOSIO_API_CALL EOSIO_API EOSIO_ABI","body":"file dispatcher.hpp\nGo to the source code of this file.\nDefines\n\n\n\nType\nName\n\n\n\n\n\nN\n\n\n\nEOSIO_API_CALL\n\n\n\nEOSIO_API\n\n\n\nEOSIO_ABIConvenient macro to create contract apply handler.\n\n\n\ndefine N\ndefine N;\n\ndefine EOSIO_API_CALL\ndefine EOSIO_API_CALL;\n\ndefine EOSIO_API\ndefine EOSIO_API;\n\ndefine EOSIO_ABI\ndefine EOSIO_ABI;\n\nConvenient macro to create contract apply handler. \nConvenient macro to create contract apply handler To be able to use this macro, the contract needs to be derived from eosio::contract\nParameters:\n\nTYPE - The class name of the contract \nMEMBERS - The sequence of available actions supported by this contract\n\nExample: \nEOSIO_ABI( eosio::bios, (setpriv)(setalimits)(setglimits)(setprods)(reqauth) )\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/dispatcher.hpp\n"},"eosio_8hpp.html":{"url":"eosio_8hpp.html","title":"eosio.hpp","keywords":"eosio.hpp","body":"file eosio.hpp\nGo to the source code of this file.\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/eosio.hpp\n"},"eosiolib_8cpp.html":{"url":"eosiolib_8cpp.html","title":"eosiolib.cpp","keywords":"eosiolib.cpp eosio::memory_manager eosio::memory_manager::memory eosio::memory_manager::memory::buffer_ptr sbrk malloc calloc realloc free","body":"file eosiolib.cpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::memory_manager\n\n\nclass\neosio::memory_manager::memory\n\n\nclass\neosio::memory_manager::memory::buffer_ptr\n\n\n\n\n\n\nType\nName\n\n\n\n\nvoid *\nsbrk (size_t num_bytes)\n\n\nvoid *\nmalloc (size_t size) namespace eosio\n\n\nvoid *\ncalloc (size_t count, size_t size) Allocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0.\n\n\nvoid *\nrealloc (void * ptr, size_t size) Reallocate the given area of memory.\n\n\nvoid\nfree (void * ptr) Deallocates the given area of memory.\n\n\n\nfunction sbrk\nvoid * eosiolib.cpp::sbrk (\n    size_t num_bytes\n)\n\nfunction malloc\nvoid * eosiolib.cpp::malloc (\n    size_t size\n)\n\nnamespace eosio \nAllocate additional memory. \nfunction calloc\nvoid * eosiolib.cpp::calloc (\n    size_t count,\n    size_t size\n)\n\nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0. \nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0\nParameters:\n\ncount - Number of elements to allocate \nsize - Size of each element \n\nReturns:\nvoid* - Pointer to start of the new allocated memory \nfunction realloc\nvoid * eosiolib.cpp::realloc (\n    void * ptr,\n    size_t size\n)\n\nReallocate the given area of memory. \nReallocate the given area of memory, which is allocated by malloc(), calloc(), or realloc() previously\nParameters:\n\nptr - Pointer to the memory area to be reallocated \nsize - New size of the memory \n\nReturns:\nvoid* - Pointer to the new reallocated memory \nfunction free\nvoid eosiolib.cpp::free (\n    void * ptr\n)\n\nDeallocates the given area of memory. \nDeallocates the given area of memory which is previously allocated by malloc(), calloc(), or realloc() \nParameters:\n\nptr - Pointer to the memory to be deallocated \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/eosiolib.cpp\n"},"fixed__key_8hpp.html":{"url":"fixed__key_8hpp.html","title":"fixed_key.hpp","keywords":"fixed_key.hpp eosio::fixed_key eosio::fixed_key eosio::fixed_key::bool_pack","body":"file fixed_key.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::fixed_key\n\n\nclass\neosio::fixed_key\n\n\nstruct\neosio::fixed_key::bool_pack\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp\n"},"fixedpoint_8hpp.html":{"url":"fixedpoint_8hpp.html","title":"fixedpoint.hpp","keywords":"fixedpoint.hpp eosio::fixed_point32 eosio::fixed_point64 eosio::fixed_point128 eosio::fixed_point128 eosio::fixed_point64 eosio::fixed_point32","body":"file fixedpoint.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::fixed_point32\n\n\nstruct\neosio::fixed_point64\n\n\nstruct\neosio::fixed_point128\n\n\nstruct\neosio::fixed_point128\n\n\nstruct\neosio::fixed_point64\n\n\nstruct\neosio::fixed_point32\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp\n"},"memory_8h.html":{"url":"memory_8h.html","title":"memory.h","keywords":"memory.h","body":"file memory.h\nGo to the source code of this file.\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/memory.h\n"},"memory_8hpp.html":{"url":"memory_8hpp.html","title":"memory.hpp","keywords":"memory.hpp sbrk malloc calloc realloc free","body":"file memory.hpp\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void *|sbrk (size_t num_bytes) |\n|void *|malloc (size_t size) Allocate additional memory. |\n|void *|calloc (size_t count, size_t size) Allocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0. |\n|void *|realloc (void * ptr, size_t size) Reallocate the given area of memory. |\n|void|free (void * ptr) Deallocates the given area of memory. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction sbrk\nvoid * memory.hpp::sbrk (\n    size_t num_bytes\n)\n\nfunction malloc\nvoid * memory.hpp::malloc (\n    size_t size\n)\n\nAllocate additional memory. \nnamespace eosio\nAllocate additional memory\nParameters:\n\nsize - Number of additional bytes to be allocated \n\nReturns:\nvoid* - Pointer to start of the new allocated memory\nAllocate additional memory. \nfunction calloc\nvoid * memory.hpp::calloc (\n    size_t count,\n    size_t size\n)\n\nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0. \nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0\nParameters:\n\ncount - Number of elements to allocate \nsize - Size of each element \n\nReturns:\nvoid* - Pointer to start of the new allocated memory \nfunction realloc\nvoid * memory.hpp::realloc (\n    void * ptr,\n    size_t size\n)\n\nReallocate the given area of memory. \nReallocate the given area of memory, which is allocated by malloc(), calloc(), or realloc() previously\nParameters:\n\nptr - Pointer to the memory area to be reallocated \nsize - New size of the memory \n\nReturns:\nvoid* - Pointer to the new reallocated memory \nfunction free\nvoid memory.hpp::free (\n    void * ptr\n)\n\nDeallocates the given area of memory. \nDeallocates the given area of memory which is previously allocated by malloc(), calloc(), or realloc() \nParameters:\n\nptr - Pointer to the memory to be deallocated \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/memory.hpp\n"},"multi__index_8hpp.html":{"url":"multi__index_8hpp.html","title":"multi_index.hpp","keywords":"multi_index.hpp eosio::_multi_index_detail::secondary_index_db_functions eosio::_multi_index_detail::secondary_key_traits eosio::_multi_index_detail::secondary_key_traits< key256 > eosio::indexed_by eosio::multi_index eosio::multi_index::item eosio::multi_index::item_ptr eosio::multi_index::index eosio::multi_index::index::const_iterator eosio::multi_index::intc eosio::multi_index::const_iterator WRAP_SECONDARY_SIMPLE_TYPE WRAP_SECONDARY_ARRAY_TYPE MAKE_TRAITS_FOR_ARITHMETIC_SECONDARY_KEY","body":"file multi_index.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::_multi_index_detail::secondary_index_db_functions\n\n\nstruct\neosio::_multi_index_detail::secondary_key_traits\n\n\nstruct\neosio::_multi_index_detail::secondary_key_traits\n\n\nstruct\neosio::indexed_by\n\n\nclass\neosio::multi_index\n\n\nstruct\neosio::multi_index::item\n\n\nstruct\neosio::multi_index::item_ptr\n\n\nstruct\neosio::multi_index::index\n\n\nstruct\neosio::multi_index::index::const_iterator\n\n\nstruct\neosio::multi_index::intc\n\n\nstruct\neosio::multi_index::const_iterator\n\n\n\nDefines\n\n\n\nType\nName\n\n\n\n\n\nWRAP_SECONDARY_SIMPLE_TYPE\n\n\n\nWRAP_SECONDARY_ARRAY_TYPE\n\n\n\nMAKE_TRAITS_FOR_ARITHMETIC_SECONDARY_KEY\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \ndefine WRAP_SECONDARY_SIMPLE_TYPE\ndefine WRAP_SECONDARY_SIMPLE_TYPE;\n\ndefine WRAP_SECONDARY_ARRAY_TYPE\ndefine WRAP_SECONDARY_ARRAY_TYPE;\n\ndefine MAKE_TRAITS_FOR_ARITHMETIC_SECONDARY_KEY\ndefine MAKE_TRAITS_FOR_ARITHMETIC_SECONDARY_KEY;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"optional_8hpp.html":{"url":"optional_8hpp.html","title":"optional.hpp","keywords":"optional.hpp eosio::optional","body":"file optional.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::optional\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/optional.hpp\n"},"permission_8h.html":{"url":"permission_8h.html","title":"permission.h","keywords":"permission.h check_transaction_authorization check_permission_authorization get_permission_last_used get_account_creation_time","body":"file permission.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|int32_t|check_transaction_authorization (const char * trx_data, uint32_t trx_size, const char * pubkeys_data, uint32_t pubkeys_size, const char * perms_data, uint32_t perms_size) Checks if a transaction is authorized by a provided set of keys and permissions. |\n|int32_t|check_permission_authorization (account_name account, permission_name permission, const char * pubkeys_data, uint32_t pubkeys_size, const char * perms_data, uint32_t perms_size, uint64_t delay_us) Checks if a permission is authorized by a provided delay and a provided set of keys and permissions. |\n|int64_t|get_permission_last_used (account_name account, permission_name permission) Returns the last used time of a permission. |\n|int64_t|get_account_creation_time (account_name account) Returns the creation time of an account. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction check_transaction_authorization\nint32_t permission.h::check_transaction_authorization (\n    const char * trx_data,\n    uint32_t trx_size,\n    const char * pubkeys_data,\n    uint32_t pubkeys_size,\n    const char * perms_data,\n    uint32_t perms_size\n)\n\nChecks if a transaction is authorized by a provided set of keys and permissions. \nParameters:\n\ntrx_data - pointer to the start of the serialized transaction \ntrx_size - size (in bytes) of the serialized transaction \npubkeys_data - pointer to the start of the serialized vector of provided public keys \npubkeys_size - size (in bytes) of serialized vector of provided public keys (can be 0 if no public keys are to be provided) \nperms_data - pointer to the start of the serialized vector of provided permissions (empty permission name acts as wildcard) \nperms_size - size (in bytes) of the serialized vector of provided permissions\n\nReturns:\n1 if the transaction is authorized, 0 otherwise \nfunction check_permission_authorization\nint32_t permission.h::check_permission_authorization (\n    account_name account,\n    permission_name permission,\n    const char * pubkeys_data,\n    uint32_t pubkeys_size,\n    const char * perms_data,\n    uint32_t perms_size,\n    uint64_t delay_us\n)\n\nChecks if a permission is authorized by a provided delay and a provided set of keys and permissions. \nParameters:\n\naccount - the account owner of the permission \npermission - the name of the permission to check for authorization \npubkeys_data - pointer to the start of the serialized vector of provided public keys \npubkeys_size - size (in bytes) of serialized vector of provided public keys (can be 0 if no public keys are to be provided) \nperms_data - pointer to the start of the serialized vector of provided permissions (empty permission name acts as wildcard) \nperms_size - size (in bytes) of the serialized vector of provided permissions \ndelay_us - the provided delay in microseconds (cannot exceed INT64_MAX)\n\nReturns:\n1 if the permission is authorized, 0 otherwise \nfunction get_permission_last_used\nint64_t permission.h::get_permission_last_used (\n    account_name account,\n    permission_name permission\n)\n\nReturns the last used time of a permission. \nParameters:\n\naccount - the account owner of the permission \npermission - the name of the permission\n\nReturns:\nthe last used time (in microseconds since Unix epoch) of the permission \nfunction get_account_creation_time\nint64_t permission.h::get_account_creation_time (\n    account_name account\n)\n\nReturns the creation time of an account. \nParameters:\n\naccount - the account\n\nReturns:\nthe creation time (in microseconds since Unix epoch) of the account \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/permission.h\n"},"permission_8hpp.html":{"url":"permission_8hpp.html","title":"permission.hpp","keywords":"permission.hpp","body":"file permission.hpp\nGo to the source code of this file.\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/permission.hpp\n"},"print_8h.html":{"url":"print_8h.html","title":"print.h","keywords":"print.h prints prints_l printi printui printi128 printui128 printsf printdf printqf printn printhex","body":"file print.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void|prints (const char * cstr) Prints string. |\n|void|prints_l (const char * cstr, uint32_t len) Prints string. |\n|void|printi (int64_t value) Prints value as a 64 bit signed integer. |\n|void|printui (uint64_t value) Prints value as a 64 bit unsigned integer. |\n|void|printi128 (const int128_t * value) Prints value as a 128 bit signed integer. |\n|void|printui128 (const uint128_t * value) Prints value as a 128 bit unsigned integer. |\n|void|printsf (float value) Prints value as single-precision floating point number (i.e. float) |\n|void|printdf (double value) Prints value as double-precision floating point number (i.e. double) |\n|void|printqf (const long double * value) Prints value as quadruple-precision floating point number (i.e. long double) |\n|void|printn (uint64_t name) Prints a 64 bit names as base32 encoded string. |\n|void|printhex (const void * data, uint32_t datalen) |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction prints\nvoid print.h::prints (\n    const char * cstr\n)\n\nPrints string. \nPrints string \nParameters:\n\ncstr - a null terminated string\n\nExample:\nprints(\"Hello World!\"); // Output: Hello World!\n\nfunction prints_l\nvoid print.h::prints_l (\n    const char * cstr,\n    uint32_t len\n)\n\nPrints string. \nPrints string up to given length \nParameters:\n\ncstr - pointer to string \nlen - len of string to be printed\n\nExample:\nprints_l(\"Hello World!\", 5); // Output: Hello\n\nfunction printi\nvoid print.h::printi (\n    int64_t value\n)\n\nPrints value as a 64 bit signed integer. \nPrints value as a 64 bit signed integer \nParameters:\n\nvalue of 64 bit signed integer to be printed\n\nExample:\nprinti(-1e+18); // Output: -1000000000000000000\n\nfunction printui\nvoid print.h::printui (\n    uint64_t value\n)\n\nPrints value as a 64 bit unsigned integer. \nPrints value as a 64 bit unsigned integer \nParameters:\n\nvalue of 64 bit unsigned integer to be printed\n\nExample:\nprintui(1e+18); // Output: 1000000000000000000\n\nfunction printi128\nvoid print.h::printi128 (\n    const int128_t * value\n)\n\nPrints value as a 128 bit signed integer. \nPrints value as a 128 bit signed integer \nParameters:\n\nvalue is a pointer to the 128 bit signed integer to be printed\n\nExample:\nint128_t large_int(-87654323456);\nprinti128(&large_int); // Output: -87654323456\n\nfunction printui128\nvoid print.h::printui128 (\n    const uint128_t * value\n)\n\nPrints value as a 128 bit unsigned integer. \nPrints value as a 128 bit unsigned integer \nParameters:\n\nvalue is a pointer to the 128 bit unsigned integer to be printed\n\nExample:\nuint128_t large_int(87654323456);\nprintui128(&large_int); // Output: 87654323456\n\nfunction printsf\nvoid print.h::printsf (\n    float value\n)\n\nPrints value as single-precision floating point number (i.e. float) \nPrints value as single-precision floating point number \nParameters:\n\nvalue of float to be printed\n\nExample:\nfloat value = 5.0 / 10.0;\nprintsf(value); // Output: 0.5\n\nfunction printdf\nvoid print.h::printdf (\n    double value\n)\n\nPrints value as double-precision floating point number (i.e. double) \nPrints value as double-precision floating point number \nParameters:\n\nvalue of double to be printed\n\nExample:\ndouble value = 5.0 / 10.0;\nprintdf(value); // Output: 0.5\n\nfunction printqf\nvoid print.h::printqf (\n    const long double * value\n)\n\nPrints value as quadruple-precision floating point number (i.e. long double) \nPrints value as quadruple-precision floating point number \nParameters:\n\nvalue is a pointer to the long double to be printed\n\nExample:\nlong double value = 5.0 / 10.0;\nprintqf(value); // Output: 0.5\n\nfunction printn\nvoid print.h::printn (\n    uint64_t name\n)\n\nPrints a 64 bit names as base32 encoded string. \nPrints a 64 bit names as base32 encoded string \nParameters:\n\nname - 64 bit name to be printed\n\nExample: \nprintn(N(abcde)); // Output: abcde\n\nfunction printhex\nvoid print.h::printhex (\n    const void * data,\n    uint32_t datalen\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/print.h\n"},"print_8hpp.html":{"url":"print_8hpp.html","title":"print.hpp","keywords":"print.hpp eosio::iostream","body":"file print.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::iostream\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/print.hpp\n"},"privileged_8h.html":{"url":"privileged_8h.html","title":"privileged.h","keywords":"privileged.h get_resource_limits set_resource_limits set_proposed_producers set_active_producers is_privileged set_privileged set_blockchain_parameters_packed get_blockchain_parameters_packed activate_feature","body":"file privileged.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void|get_resource_limits (account_name account, int64_t * ram_bytes, int64_t * net_weight, int64_t * cpu_weight) Get the resource limits of an account Get the resource limits of an account. |\n|void|set_resource_limits (account_name account, int64_t ram_bytes, int64_t net_weight, int64_t cpu_weight) Set the resource limits of an account Set the resource limits of an account. |\n|int64_t|set_proposed_producers (char * producer_data, uint32_t producer_data_size) |\n|void|set_active_producers (char * producer_data, uint32_t producer_data_size) Set new active producers Set new active producers. Producers will only be activated once the block which starts the next round is irrreversible. |\n|bool|is_privileged (account_name account) Check if an account is privileged Check if an account is privileged. |\n|void|set_privileged (account_name account, bool is_priv) Set the privileged status of an account Set the privileged status of an account. |\n|void|set_blockchain_parameters_packed (char * data, uint32_t datalen) Set the blockchain parameters Set the blockchain parameters. |\n|uint32_t|get_blockchain_parameters_packed (char * data, uint32_t datalen) Retrieve the blolckchain parameters Retrieve the blolckchain parameters. |\n|void|activate_feature (int64_t f) Activate new feature Activate new feature. |\nfunction get_resource_limits\nvoid privileged.h::get_resource_limits (\n    account_name account,\n    int64_t * ram_bytes,\n    int64_t * net_weight,\n    int64_t * cpu_weight\n)\n\nGet the resource limits of an account Get the resource limits of an account. \nParameters:\n\naccount - name of the account whose resource limit to get \nram_bytes - pointer to int64\\_t to hold retrieved ram limit in absolute bytes \nnet_weight - pointer to int64\\_t to hold net limit \ncpu_weight - pointer to int64\\_t to hold cpu limit \n\nfunction set_resource_limits\nvoid privileged.h::set_resource_limits (\n    account_name account,\n    int64_t ram_bytes,\n    int64_t net_weight,\n    int64_t cpu_weight\n)\n\nSet the resource limits of an account Set the resource limits of an account. \nParameters:\n\naccount - name of the account whose resource limit to be set \nram_bytes - ram limit in absolute bytes \nnet_weight - fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts) \ncpu_weight - fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts) \n\nfunction set_proposed_producers\nint64_t privileged.h::set_proposed_producers (\n    char * producer_data,\n    uint32_t producer_data_size\n)\n\nProposes a schedule change, once the block that contains the proposal becomes irreversible, the schedule is promoted to \"pending\" automatically. Once the block that promotes the schedule is irreversible, the schedule will become \"active\" \nParameters:\n\nproducer_data - packed data of produce_keys in the appropriate producer schedule order \nproducer_data_size - size of the data buffer\n\nReturns:\n-1 if proposing a new producer schedule was unsuccessful, otherwise returns the version of the new proposed schedule \nfunction set_active_producers\nvoid privileged.h::set_active_producers (\n    char * producer_data,\n    uint32_t producer_data_size\n)\n\nSet new active producers Set new active producers. Producers will only be activated once the block which starts the next round is irrreversible. \nParameters:\n\nproducer_data - pointer to producer schedule packed as bytes \nproducer_data_size - size of the packed producer schedule \n\nPrecondition:\nproducer\\_data is a valid pointer to a range of memory at least producer\\_data\\_size bytes long that contains serialized produced schedule data \nfunction is_privileged\nbool privileged.h::is_privileged (\n    account_name account\n)\n\nCheck if an account is privileged Check if an account is privileged. \nParameters:\n\naccount - name of the account to be checked \n\nReturns:\ntrue if the account is privileged \nReturns:\nfalse if the account is not privileged \nfunction set_privileged\nvoid privileged.h::set_privileged (\n    account_name account,\n    bool is_priv\n)\n\nSet the privileged status of an account Set the privileged status of an account. \nParameters:\n\naccount - name of the account whose privileged account to be set \nis_priv - privileged status \n\nfunction set_blockchain_parameters_packed\nvoid privileged.h::set_blockchain_parameters_packed (\n    char * data,\n    uint32_t datalen\n)\n\nSet the blockchain parameters Set the blockchain parameters. \nParameters:\n\ndata - pointer to blockchain parameters packed as bytes \ndatalen - size of the packed blockchain parameters \n\nPrecondition:\ndata is a valid pointer to a range of memory at least datalen bytes long that contains packed blockchain params data \nfunction get_blockchain_parameters_packed\nuint32_t privileged.h::get_blockchain_parameters_packed (\n    char * data,\n    uint32_t datalen\n)\n\nRetrieve the blolckchain parameters Retrieve the blolckchain parameters. \nParameters:\n\ndata - output buffer of the blockchain parameters, only retrieved if sufficent size to hold packed data. \ndatalen - size of the data buffer, 0 to report required size. \n\nReturns:\nsize of the blockchain parameters \nPrecondition:\ndata is a valid pointer to a range of memory at least datalen bytes long \nPost\ndata is filled with packed blockchain parameters \nfunction activate_feature\nvoid privileged.h::activate_feature (\n    int64_t f\n)\n\nActivate new feature Activate new feature. \nParameters:\n\nf - name (identifier) of the feature to be activated \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/privileged.h\n"},"privileged_8hpp.html":{"url":"privileged_8hpp.html","title":"privileged.hpp","keywords":"privileged.hpp eosio::blockchain_parameters eosio::producer_key","body":"file privileged.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::blockchain_parameters\n\n\nstruct\neosio::producer_key\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/privileged.hpp\n"},"producer__schedule_8hpp.html":{"url":"producer__schedule_8hpp.html","title":"producer_schedule.hpp","keywords":"producer_schedule.hpp eosio::producer_schedule","body":"file producer_schedule.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::producer_schedule\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/producer\\_schedule.hpp\n"},"public__key_8hpp.html":{"url":"public__key_8hpp.html","title":"public_key.hpp","keywords":"public_key.hpp eosio::public_key","body":"file public_key.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::public_key\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/public\\_key.hpp\n"},"reflect_8hpp.html":{"url":"reflect_8hpp.html","title":"reflect.hpp","keywords":"reflect.hpp eosio::reflector EOSLIB_REFLECT_VISIT_BASE EOSLIB_REFLECT_VISIT2_BASE EOSLIB_REFLECT_VISIT_MEMBER EOSLIB_REFLECT_VISIT2_MEMBER EOSLIB_REFLECT_BASE_MEMBER_COUNT EOSLIB_REFLECT_MEMBER_COUNT EOSLIB_REFLECT_DERIVED_IMPL_INLINE EOSLIB_REFLECT_DERIVED_IMPL_EXT EOSLIB_REFLECT EOSLIB_REFLECT_TEMPLATE EOSLIB_REFLECT_EMPTY EOSLIB_REFLECT_FWD EOSLIB_REFLECT_DERIVED_IMPL EOSLIB_REFLECT_IMPL EOSLIB_REFLECT_DERIVED EOSLIB_REFLECT_DERIVED_TEMPLATE","body":"file reflect.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::reflector\n\n\n\nDefines\n\n\n\nType\nName\n\n\n\n\n\nEOSLIB_REFLECT_VISIT_BASEeosio\n\n\n\nEOSLIB_REFLECT_VISIT2_BASE\n\n\n\nEOSLIB_REFLECT_VISIT_MEMBER\n\n\n\nEOSLIB_REFLECT_VISIT2_MEMBER\n\n\n\nEOSLIB_REFLECT_BASE_MEMBER_COUNT\n\n\n\nEOSLIB_REFLECT_MEMBER_COUNT\n\n\n\nEOSLIB_REFLECT_DERIVED_IMPL_INLINE\n\n\n\nEOSLIB_REFLECT_DERIVED_IMPL_EXT\n\n\n\nEOSLIB_REFLECTSpecializes eosio::reflector for TYPE.\n\n\n\nEOSLIB_REFLECT_TEMPLATEPerform class template reflection.\n\n\n\nEOSLIB_REFLECT_EMPTYPerform class reflection on empty class.\n\n\n\nEOSLIB_REFLECT_FWDPerform forward declaration of class reflection.\n\n\n\nEOSLIB_REFLECT_DERIVED_IMPL\n\n\n\nEOSLIB_REFLECT_IMPL\n\n\n\nEOSLIB_REFLECT_DERIVEDSpecializes eosio::reflector for TYPE where type inherits other reflected classes.\n\n\n\nEOSLIB_REFLECT_DERIVED_TEMPLATEPerform class template reflection where TYPE inherits other reflected classes.\n\n\n\ndefine EOSLIB_REFLECT_VISIT_BASE\ndefine EOSLIB_REFLECT_VISIT_BASE;\n\neosio \ndefine EOSLIB_REFLECT_VISIT2_BASE\ndefine EOSLIB_REFLECT_VISIT2_BASE;\n\ndefine EOSLIB_REFLECT_VISIT_MEMBER\ndefine EOSLIB_REFLECT_VISIT_MEMBER;\n\ndefine EOSLIB_REFLECT_VISIT2_MEMBER\ndefine EOSLIB_REFLECT_VISIT2_MEMBER;\n\ndefine EOSLIB_REFLECT_BASE_MEMBER_COUNT\ndefine EOSLIB_REFLECT_BASE_MEMBER_COUNT;\n\ndefine EOSLIB_REFLECT_MEMBER_COUNT\ndefine EOSLIB_REFLECT_MEMBER_COUNT;\n\ndefine EOSLIB_REFLECT_DERIVED_IMPL_INLINE\ndefine EOSLIB_REFLECT_DERIVED_IMPL_INLINE;\n\ndefine EOSLIB_REFLECT_DERIVED_IMPL_EXT\ndefine EOSLIB_REFLECT_DERIVED_IMPL_EXT;\n\ndefine EOSLIB_REFLECT\ndefine EOSLIB_REFLECT;\n\nSpecializes eosio::reflector for TYPE. \nPerform class reflection\nParameters:\n\nTYPE - the class template to be reflected \nMEMBERS - a sequence of member names. (field1)(field2)(field3)\n\nSee also: EOSLIB_REFLECT_DERIVED \ndefine EOSLIB_REFLECT_TEMPLATE\ndefine EOSLIB_REFLECT_TEMPLATE;\n\nPerform class template reflection. \nPerform class template reflection\nParameters:\n\nTEMPLATE_ARGS - a sequence of template args. (args1)(args2)(args3) \nTYPE - the class template to be reflected \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_REFLECT_EMPTY\ndefine EOSLIB_REFLECT_EMPTY;\n\nPerform class reflection on empty class. \nPerform class reflection on empty class\nParameters:\n\nTYPE - the class to be reflected \n\ndefine EOSLIB_REFLECT_FWD\ndefine EOSLIB_REFLECT_FWD;\n\nPerform forward declaration of class reflection. \nPerform forward declaration of class reflection\nParameters:\n\nTYPE - the class to be reflected \n\ndefine EOSLIB_REFLECT_DERIVED_IMPL\ndefine EOSLIB_REFLECT_DERIVED_IMPL;\n\ndefine EOSLIB_REFLECT_IMPL\ndefine EOSLIB_REFLECT_IMPL;\n\ndefine EOSLIB_REFLECT_DERIVED\ndefine EOSLIB_REFLECT_DERIVED;\n\nSpecializes eosio::reflector for TYPE where type inherits other reflected classes. \nPerform class reflection where TYPE inherits other reflected classes\nParameters:\n\nTYPE - the class to be reflected \nINHERITS - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_REFLECT_DERIVED_TEMPLATE\ndefine EOSLIB_REFLECT_DERIVED_TEMPLATE;\n\nPerform class template reflection where TYPE inherits other reflected classes. \nPerform class template reflection where TYPE inherits other reflected classes\nParameters:\n\nTEMPLATE_ARGS - a sequence of template args. (args1)(args2)(args3) \nTYPE - the class to be reflected \nINHERITS - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/reflect.hpp\n"},"serialize_8hpp.html":{"url":"serialize_8hpp.html","title":"serialize.hpp","keywords":"serialize.hpp EOSLIB_REFLECT_MEMBER_OP EOSLIB_SERIALIZE EOSLIB_SERIALIZE_DERIVED","body":"file serialize.hpp\nGo to the source code of this file.\nDefines\n\n\n\nType\nName\n\n\n\n\n\nEOSLIB_REFLECT_MEMBER_OP\n\n\n\nEOSLIB_SERIALIZEDefines serialization and deserialization for a class.\n\n\n\nEOSLIB_SERIALIZE_DERIVEDDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined.\n\n\n\ndefine EOSLIB_REFLECT_MEMBER_OP\ndefine EOSLIB_REFLECT_MEMBER_OP;\n\ndefine EOSLIB_SERIALIZE\ndefine EOSLIB_SERIALIZE;\n\nDefines serialization and deserialization for a class. \nDefines serialization and deserialization for a class\nParameters:\n\nTYPE - the class to have its serialization and deserialization defined \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_SERIALIZE_DERIVED\ndefine EOSLIB_SERIALIZE_DERIVED;\n\nDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined. \nDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined\nParameters:\n\nTYPE - the class to have its serialization and deserialization defined \nBASE - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/serialize.hpp\n"},"singleton_8hpp.html":{"url":"singleton_8hpp.html","title":"singleton.hpp","keywords":"singleton.hpp eosio::singleton eosio::singleton::row","body":"file singleton.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::singleton\n\n\nstruct\neosio::singleton::row\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/singleton.hpp\n"},"stdlib_8hpp.html":{"url":"stdlib_8hpp.html","title":"stdlib.hpp","keywords":"stdlib.hpp","body":"file stdlib.hpp\nGo to the source code of this file.\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/stdlib.hpp\n"},"symbol_8hpp.html":{"url":"symbol_8hpp.html","title":"symbol.hpp","keywords":"symbol.hpp eosio::symbol_type eosio::extended_symbol S","body":"file symbol.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::symbol_type\n\n\nstruct\neosio::extended_symbol\n\n\n\nDefines\n\n\n\nType\nName\n\n\n\n\n\nS\n\n\n\ndefine S\ndefine S;\n\nMacro for converting string to char representation of symbol\nParameters:\n\nprecision - precision of symbol \nstr - the string representation of the symbol \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/symbol.hpp\n"},"system_8h.html":{"url":"system_8h.html","title":"system.h","keywords":"system.h eosio_assert eosio_assert_message eosio_assert_code eosio_exit current_time now","body":"file system.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void|eosio_assert (uint32_t test, const char * msg) Aborts processing of this action and unwinds all pending changes. |\n|void|eosio_assert_message (uint32_t test, const char * msg, uint32_t msg_len) Aborts processing of this action and unwinds all pending changes. |\n|void|eosio_assert_code (uint32_t test, uint64_t code) Aborts processing of this action and unwinds all pending changes. |\n|void|eosio_exit (int32_t code) Aborts execution of wasm without failing the contract. |\n|uint64_t|current_time () Get time of the current block (i.e. the block including this action) |\n|uint32_t|now () Get time (rounded down to the nearest second) of the current block (i.e. the block including this action) |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction eosio_assert\nvoid system.h::eosio_assert (\n    uint32_t test,\n    const char * msg\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore\n\nExample:\neosio_assert(1 == 2, \"One is not equal to two.\");\neosio_assert(1 == 1, \"One is not equal to one.\");\n\nParameters:\n\nmsg - a null terminated string explaining the reason for failure \n\nfunction eosio_assert_message\nvoid system.h::eosio_assert_message (\n    uint32_t test,\n    const char * msg,\n    uint32_t msg_len\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore \nmsg - a pointer to the start of string explaining the reason for failure \nmsg_len - length of the string \n\nfunction eosio_assert_code\nvoid system.h::eosio_assert_code (\n    uint32_t test,\n    uint64_t code\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore \ncode - the error code \n\nfunction eosio_exit\nvoid system.h::eosio_exit (\n    int32_t code\n)\n\nAborts execution of wasm without failing the contract. \nThis method will abort execution of wasm without failing the contract. This is used to bypass all cleanup / destructors that would normally be called. \nParameters:\n\ncode - the exit code Example:\n\neosio_exit(0);\neosio_exit(1);\neosio_exit(2);\neosio_exit(3);\n\nfunction current_time\nuint64_t system.h::current_time ()\n\nGet time of the current block (i.e. the block including this action) \nReturns the time in microseconds from 1970 of the current block \nReturns:\ntime in microseconds from 1970 of the current block \nfunction now\nuint32_t system.h::now ()\n\nGet time (rounded down to the nearest second) of the current block (i.e. the block including this action) \nReturns the time in seconds from 1970 of the block including this action \nReturns:\ntime in seconds from 1970 of the current block \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/system.h\n"},"time_8hpp.html":{"url":"time_8hpp.html","title":"time.hpp","keywords":"time.hpp eosio::microseconds eosio::time_point eosio::time_point_sec eosio::block_timestamp","body":"file time.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::microseconds\n\n\nclass\neosio::time_point\n\n\nclass\neosio::time_point_sec\n\n\nclass\neosio::block_timestamp\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/time.hpp\n"},"transaction_8h.html":{"url":"transaction_8h.html","title":"transaction.h","keywords":"transaction.h send_deferred cancel_deferred read_transaction transaction_size tapos_block_num tapos_block_prefix expiration get_action get_context_free_data","body":"file transaction.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void|send_deferred (const uint128_t & sender_id, account_name payer, const char * serialized_transaction, size_t size, uint32_t replace_existing = 0) Sends a deferred transaction. |\n|int|cancel_deferred (const uint128_t & sender_id) Cancels a deferred transaction. |\n|size_t|read_transaction (char * buffer, size_t size) Access a copy of the currently executing transaction. |\n|size_t|transaction_size () Gets the size of the currently executing transaction. |\n|int|tapos_block_num () Gets the block number used for TAPOS on the currently executing transaction. |\n|int|tapos_block_prefix () Gets the block prefix used for TAPOS on the currently executing transaction. |\n|time|expiration () Gets the expiration of the currently executing transaction. |\n|int|get_action (uint32_t type, uint32_t index, char * buff, size_t size) Retrieves the indicated action from the active transaction. |\n|int|get_context_free_data (uint32_t index, char * buff, size_t size) Retrieve the signed_transaction.context_free_data[index]. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction send_deferred\nvoid transaction.h::send_deferred (\n    const uint128_t & sender_id,\n    account_name payer,\n    const char * serialized_transaction,\n    size_t size,\n    uint32_t replace_existing = 0\n)\n\nSends a deferred transaction. \nSends a deferred transaction.\nParameters:\n\nsender_id - ID of sender \npayer - Account paying for RAM \nserialized_transaction - Pointer of serialized transaction to be deferred \nsize - Size to reserve \nreplace_existing - f this is 0 then if the provided sender_id is already in use by an in-flight transaction from this contract, which will be a failing assert. If 1 then transaction will atomically cancel/replace the inflight transaction \n\nfunction cancel_deferred\nint transaction.h::cancel_deferred (\n    const uint128_t & sender_id\n)\n\nCancels a deferred transaction. \nCancels a deferred transaction.\nParameters:\n\nsender_id - The id of the sender\n\nPrecondition:\nThe deferred transaction ID exists. \nPrecondition:\nThe deferred transaction ID has not yet been published. \nPost\nDeferred transaction canceled.\nReturns:\n1 if transaction was canceled, 0 if transaction was not found\nExample:\nid = 0xffffffffffffffff\ncancel_deferred( id );\n\nfunction read_transaction\nsize_t transaction.h::read_transaction (\n    char * buffer,\n    size_t size\n)\n\nAccess a copy of the currently executing transaction. \nAccess a copy of the currently executing transaction.\nParameters:\n\nbuffer - a buffer to write the current transaction to \nsize - the size of the buffer, 0 to return required size \n\nReturns:\nthe size of the transaction written to the buffer, or number of bytes that can be copied if size==0 passed \nfunction transaction_size\nsize_t transaction.h::transaction_size ()\n\nGets the size of the currently executing transaction. \nGets the size of the currently executing transaction.\nReturns:\nsize of the currently executing transaction \nfunction tapos_block_num\nint transaction.h::tapos_block_num ()\n\nGets the block number used for TAPOS on the currently executing transaction. \nGets the block number used for TAPOS on the currently executing transaction.\nReturns:\nblock number used for TAPOS on the currently executing transaction Example: \nint tbn = tapos_block_num();\n\nfunction tapos_block_prefix\nint transaction.h::tapos_block_prefix ()\n\nGets the block prefix used for TAPOS on the currently executing transaction. \nGets the block prefix used for TAPOS on the currently executing transaction.\nReturns:\nblock prefix used for TAPOS on the currently executing transaction Example: \nint tbp = tapos_block_prefix();\n\nfunction expiration\ntime transaction.h::expiration ()\n\nGets the expiration of the currently executing transaction. \nGets the expiration of the currently executing transaction.\nReturns:\nexpiration of the currently executing transaction Example: \ntime tm = expiration();\neosio_print(tm);\n\nfunction get_action\nint transaction.h::get_action (\n    uint32_t type,\n    uint32_t index,\n    char * buff,\n    size_t size\n)\n\nRetrieves the indicated action from the active transaction. \nRetrieves the indicated action from the active transaction.\nParameters:\n\ntype - 0 for context free action, 1 for action \nindex - the index of the requested action \nbuff - output packed buff of the action \nsize - amount of buff read, pass 0 to have size returned \n\nReturns:\nthe size of the action, -1 on failure \nfunction get_context_free_data\nint transaction.h::get_context_free_data (\n    uint32_t index,\n    char * buff,\n    size_t size\n)\n\nRetrieve the signed_transaction.context_free_data[index]. \nRetrieve the signed_transaction.context_free_data[index].\nParameters:\n\nindex - the index of the context_free_data entry to retrieve \nbuff - output buff of the context_free_data entry \nsize - amount of context_free_data[index] to retrieve into buff, 0 to report required size \n\nReturns:\nsize copied, or context_free_data[index].size() if 0 passed for size, or -1 if index not valid \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/transaction.h\n"},"transaction_8hpp.html":{"url":"transaction_8hpp.html","title":"transaction.hpp","keywords":"transaction.hpp eosio::transaction_header eosio::transaction eosio::onerror","body":"file transaction.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::transaction_header\n\n\nclass\neosio::transaction\n\n\nstruct\neosio::onerror\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/transaction.hpp\n"},"types_8h.html":{"url":"types_8h.html","title":"types.h","keywords":"types.h public_key signature account_permission ALIGNED account_name permission_name table_name time scope_name action_name weight_type transaction_id_type block_id_type ALIGNED ALIGNED ALIGNED","body":"file types.h\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\npublic_key\n\n\nstruct\nsignature\n\n\nstruct\naccount_permission\n\n\n\nDefines\n\n\n\nType\nName\n\n\n\n\n\nALIGNED\n\n\n\n\n\n\nType\nName\n\n\n\n\ntypedef uint64_t\naccount_nameName of an account.\n\n\ntypedef uint64_t\npermission_nameName of a permission.\n\n\ntypedef uint64_t\ntable_nameName of a table.\n\n\ntypedef uint32_t\ntimeTime.\n\n\ntypedef uint64_t\nscope_nameName of a scope.\n\n\ntypedef uint64_t\naction_nameName of an action.\n\n\ntypedef uint16_t\nweight_typeMacro to align/overalign a type to ensure calls to intrinsics with pointers/references are properly aligned.\n\n\ntypedef struct checksum256\ntransaction_id_typeType of EOSIO Transaction Id.\n\n\ntypedef struct checksum256\nblock_id_type\n\n\n\n\n\n\nType\nName\n\n\n\n\nstruct\nALIGNED (checksum256) 256-bit hash\n\n\nstruct\nALIGNED (checksum160) 160-bit hash\n\n\nstruct\nALIGNED (checksum512) 512-bit hash\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \ndefine ALIGNED\ndefine ALIGNED;\n\ntypedef account_name\ntypedef uint64_t account_name;\n\nName of an account. \nName of an account \ntypedef permission_name\ntypedef uint64_t permission_name;\n\nName of a permission. \nName of an account \ntypedef table_name\ntypedef uint64_t table_name;\n\nName of a table. \nName of atable \ntypedef time\ntypedef uint32_t time;\n\nTime. \nTime \ntypedef scope_name\ntypedef uint64_t scope_name;\n\nName of a scope. \nName of a scope \ntypedef action_name\ntypedef uint64_t action_name;\n\nName of an action. \nName of an action \ntypedef weight_type\ntypedef uint16_t weight_type;\n\nMacro to align/overalign a type to ensure calls to intrinsics with pointers/references are properly aligned. \nMacro to align/overalign a type to ensure calls to intrinsics with pointers/references are properly aligned \ntypedef transaction_id_type\ntypedef struct checksum256 transaction_id_type;\n\nType of EOSIO Transaction Id. \nType of EOSIO Transaction Id. It is 256-bit hash \ntypedef block_id_type\ntypedef struct checksum256 block_id_type;\n\nfunction ALIGNED\nstruct types.h::ALIGNED (\n    checksum256 \n)\n\n256-bit hash \n256-bit hash \nfunction ALIGNED\nstruct types.h::ALIGNED (\n    checksum160 \n)\n\n160-bit hash \n160-bit hash \nfunction ALIGNED\nstruct types.h::ALIGNED (\n    checksum512 \n)\n\n512-bit hash \n512-bit hash \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/types.h\n"},"types_8hpp.html":{"url":"types_8hpp.html","title":"types.hpp","keywords":"types.hpp eosio::name std::less< checksum256 > N operator== operator== operator!=","body":"file types.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::name\n\n\nstruct\nstd::less\n\n\n\nDefines\n\n\n\nType\nName\n\n\n\n\n\nNUsed to generate a compile time uint64_t from the base32 encoded string interpretation of X.\n\n\n\n\n\n\nType\nName\n\n\n\n\nbool\noperator== (const checksum256 & lhs, const checksum256 & rhs) Equality Operator for checksum256.\n\n\nbool\noperator== (const checksum160 & lhs, const checksum160 & rhs) Equality Operator for checksum256.\n\n\nbool\noperator!= (const checksum160 & lhs, const checksum160 & rhs) Equality Operator for checksum256.\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \ndefine N\ndefine N;\n\nUsed to generate a compile time uint64_t from the base32 encoded string interpretation of X. \nUsed to generate a compile time uint64_t from the base32 encoded string interpretation of X\nParameters:\n\nX - String representation of the name \n\nReturns:\nconstexpr uint64_t - 64-bit unsigned integer representation of the name \nfunction operator==\nbool types.hpp::operator== (\n    const checksum256 & lhs,\n    const checksum256 & rhs\n)\n\nEquality Operator for checksum256. \nEquality Operator for checksum256\nParameters:\n\nlhs - First data to be compared \nrhs - Second data to be compared \n\nReturns:\ntrue - if equal \nReturns:\nfalse - if unequal \nfunction operator==\nbool types.hpp::operator== (\n    const checksum160 & lhs,\n    const checksum160 & rhs\n)\n\nEquality Operator for checksum256. \nEquality Operator for checksum160\nParameters:\n\nlhs - First data to be compared \nrhs - Second data to be compared \n\nReturns:\ntrue - if equal \nReturns:\nfalse - if unequal \nfunction operator!=\nbool types.hpp::operator!= (\n    const checksum160 & lhs,\n    const checksum160 & rhs\n)\n\nEquality Operator for checksum256. \nEquality Operator for checksum160\nParameters:\n\nlhs - First data to be compared \nrhs - Second data to be compared \n\nReturns:\ntrue - if unequal \nReturns:\nfalse - if equal \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/types.hpp\n"},"varint_8hpp.html":{"url":"varint_8hpp.html","title":"varint.hpp","keywords":"varint.hpp unsigned_int signed_int","body":"file varint.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nunsigned_int\n\n\nstruct\nsigned_int\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/varint.hpp\n"},"vector_8hpp.html":{"url":"vector_8hpp.html","title":"vector.hpp","keywords":"vector.hpp","body":"file vector.hpp\nGo to the source code of this file.\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/vector.hpp\n"}}}