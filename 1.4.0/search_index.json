{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["\"\"_n","\"contract\"","\"core","\"eosiolib/public_key.hpp\")","\"foo\"_n,","\"how","\"resource\"","#includ","$","'.cpp'","(","(./examples/hello).","(acta)","(boost","(build","(contract","(defin","(e.g.","(eosio","(explicitli","(four","(hello.abi)","(hello.wasm)","(i.e.","(it","(n)","(now","(o0","(or","(post","(quantity)","(replac","(testact)","(the","(two","(use","(usual","(wasm)","(webassembl","(which",")",").","){","*/",",","..","...","./build.sh","./eosio.cdt","./examples/abigen_test/test.cpp.","./examples/hello/hello.clauses.md.","./examples/hello/hello.contracts.md","./install.sh",".clauses.md.",".contracts.md",".wasm","/)","/*","//","0","0.x86_64.rpm","1","1.0.0)","1.2.x","1.3.x","1.4.0","1.4.0.x86_64","1.4.0.x86_64.deb","11","3","3.5)","4)","7,",":","::public_key)",">",">>","[...","[[eosio::action(\"\")]]","[[eosio::action]]","[[eosio::contract(\"somecontract\")]]).","[[eosio::contract]]","[[eosio::contract]].","[[eosio::ignore]]","[[eosio::table(\"\")]].","[[eosio::table,","[[eosio::table]]","[[eosio::table]].","[options]","]","__attribute__((eosio_action))","__attribute__((eosio_table))","__cxa_pure_virtu","_d","a;","aa","abi","abi,","abi.","abi.act","abigen","abigen,","abigen:","abov","above:","accident","account","account_nam","account_permiss","act","acta(){}","action","action(ignore)","action,","action.","action_nam","actionnam","actual","ad","add","add_contract(","add_contract.","add_executable.","addit","advanc","against","alia","align","alloc","allow","alon","alway","analys","analysi","anoth","api","api.","append","appli","approach","apt","ar","arg","arg=","argument","around","assembl","asset","ast","attach","attribut","attribute,","attribute.","automat","avail","b;","bad","bake","base","be","befor","before=","below","better","between","bill_to_account","binari","bit","block_id_typ","body.","bool","boost","both","break","brew","brew,","build","built","bypass","bytes.","c","c++","c++11","c++17","call","capi_checksum160","capi_checksum256","capi_checksum512","capi_nam","capi_public_key","capi_signatur","capsiz","cast","caus","caveat","cc","cd","cdt","cfl","chain","chang","changes.","check","checksum","checksum160","checksum256","checksum512","clang","class","class.","classes.","claus","clause.","clauseid","clone","cmake","cmake$","cmake_minimum_required(vers","cmakelists.txt","cmakelists.txt:","code","code,","code.","command","comment","comparison","compat","compil","compile,","compiler$","compiler)","complet","concept","condition","config.cmak","conjunct","connect","consid","const","constant","constexpr","constexpr.","construct","constructor","context","contract","contract,","contract.","contract::contract;","contract=hello","contracts.","control","convers","convert","copi","core","coroutin","cpp","cpp/eosio","current","d=","datastream","dd","deal","debian","decid","decis","declar","deductions.","default","defin","definit","depend","describ","descript","deseri","deserializer.","develop","developers.eos.io","devoid","di","differ","direct","directori","disabl","display","disrupt","disruptive,","dm","does.","don't","done","done.","download","drastic","e","each","elid","elis","emit","empty.","enabl","end","enum","enum'","eosio","eosio.cdt","eosio.cdt)","eosio.cdt,","eosio.cdt.","eosio.cdt/examples/hello","eosio.cdt/examples/templ","eosio.cdt/examples/template.","eosio.contracts/cmakelists.txt","eosio.ld","eosio.token)","eosio/eosio.cdt","eosio::act","eosio::asset","eosio::asset()","eosio::asset(0,","eosio::char_to_symbol,","eosio::check_transaction_author","eosio::contract","eosio::contract(\"test\")]]","eosio::contract.","eosio::datastream","eosio::extended_symbol:","eosio::extensions_typ","eosio::has_auth.","eosio::ignor","eosio::is_account.","eosio::is_valid_symbol,","eosio::multi_index","eosio::nam","eosio::name.","eosio::name::length","eosio::name::raw","eosio::name::suffix.","eosio::name_suffix","eosio::permission_level","eosio::public_key","eosio::require_auth.","eosio::singleton","eosio::string_to_name,","eosio::string_to_symbol,","eosio::symbol","eosio::symbol.","eosio::symbol:","eosio::symbol_cod","eosio::symbol_code:","eosio::symbol_name_length","eosio::symbol_typ","eosio::t","eosio::vector","eosio;","eosio_abi","eosio_dispatch","eosio_dispatch(","eosiolib","eosiolib.","eosiolib/action.hpp","eosiolib/asset.hpp","eosiolib/contract.hpp","eosiolib/core_symbol.hpp.","eosiolib/dispatcher.hpp","eosiolib/ignore.hpp","eosiolib/multi_index.hpp","eosiolib/name.hpp","eosiolib/name.hpp.","eosiolib/optional.hpp.","eosiolib/permission.hpp","eosiolib/singleton.hpp","eosiolib/symbol.hpp","eosiolib/transaction.hpp.","eosiolib/types.hpp","eosiolib/types.hpp.","eosiolib/vector.hpp:","eoslib_serialize(","equival","equivalence,","essenti","exampl","example.","example:","exist","experimental,","explicit","explicitli","explicitly.","extern","extra","facilit","fail)","falign","fall","fcoroutin","featur","few","field","file","file\"","file:","filenam","files:","filter","find_package(eosio.cdt)","find_package(eosio.cdt).","finlin","first","fix","flag","float","flow","fmerg","fno","folder","folder.","follow","forc","forward","from,","fstack","fstrict","fullpath","function","functions.","futur","gener","generation):","get_contract.","get_or_cr","get_symbol","git","give","global","gnu","go","good","greater","guid","have","header","hello","hello.cpp","hello.wasm","help","heurist","hidden","hint","hous","html","https://github.com/eosio/eosio.cdt","https://github.com/eosio/eosio.cdt/releases/download/v1.4.0/eosio.cdt","i.e.","i=","id","ideal","identifi","ignor","ignore:","ignore_wrapper(some_value)","ignore_wrapper:","implicit","implicitli","implicitly)","import","important!","in.","includ","include=","included.","inclus","incomplete.","indepth","index","indexed_bi","initi","inlin","input","instal","instanc","instances.","instead","instead,","instead.","int","int64_t","intent","intern","intrins","introduc","introduct","invert","is_valid","is_valid,","issu","issues.","isysroot=","it'","it.","json,","key","knowledg","l=","languag","last","ld","ld)","learn","length","less","level","libc","libcxx","librari","library.","licens","line","link","linker)","linux","list","lld.","llvm","llvm,","longer","lto","mac","macro","macro.","made","main","make","mani","manual","manually.","mark","match","mean","meant","mechan","memori","mention","merg","method","method.","minim","mit","mkdir","mode","modifi","more","more)","move","multi","multi_index","n","n(foo)","n;","name","name(\"foo\").","name,","namespac","navig","need","never","new","newest","non","normal","note","now","o","o3)","o=","objdump","object","occur","odd","old","omitted)","on","once.","oper","opt=","optim","option","options:","origin","os","outpu","output","output=","output=hello.abi","output=test.abi.","outsid","over","over,","overflow","overflows.","overview:","overwrit","owner;","p=","packag","packages,","packages.","paramet","parameters).","pars","part","pass","path","paths.","pattern","perfect","permiss","permission_nam","piec","place","placehold","platform.","pleas","pointer","polici","polymorph","post","potenti","pp","practic","precis","precision,","precision.","prefer","prepend","preprocess","preprocess,","preprocessor","pretti","previou","previous","primarili","primary_key()","print","printf,","prior","private.","process","produc","program","project","project(test_exampl","protector","provided_key","public","public:","public_key","pure","purpos","qualif","quantiti","quit","r","rang","ranlib","raw","raw.","read","readelf","readme.","reason","receiver,","recurs","redefin","reduc","refer","reflect","releas","release.)","releases.","remov","renam","replac","replacement.","represent","requir","require_read_lock.","require_write_lock","respectively,","restrict","return","reus","ricardian","root","rpm","rule","run","s","s(4,sys)","s,","safe","safeti","safety.","same","scope","scope_nam","scratch)","script","search","section","section.)","see","send_inline_act","set","set,","shortcut","show","signatur","simpl","simpli","smart","smash","snprintf","some_typ","someth","sourc","specif","specifi","sprintf,","sstream","st;","stack","standard","std::option","std::set","std::set.","std::string_view","std::string_view.","std::to_str","std::vector","std=","step","still","stl","strict","strong","struct","struct.","structs.","structur","style","subsequ","sudo","suitabl","support","suppress","symbol","symbol\".","symbol(\"sys\",","symbol(symbol_code(\"sys\"),","symbol(symbol_code(\"sys\"),4)","symbol(symbol_code(\"sys\"),4)).","symbol,","symbol.","symbol_cod","symbol_nam","syntax","sysroot.","system","taba","tabb","tabl","table_a;","table_b;","table_nam","tables.","tables.#includ","tag","take","tap","target","target,","templat","test","test,","test.","test.cpp","test.cpp:","test.wasm","test_contract,","test_contract.abi","test_contract.wasm","testa","testa(","testa,","testact(","testtaba","testtabb","testtabl","testtable_t;","them.","therefor","these,","thing","this,","those","three","time","tool","tool,","toolchain","toolchain,","toolkit)","transaction_id_typ","treat","tri","ts","two","type","type.","typedef","typedef:","typedefs.","typedefs:","types,","types.","types/funct","u=","uint64_t","uint64_t).","uint64_t,","uint64_t.","uint64_t:","uint8_t","undefin","under","understand","uninstal","unlik","unpack","unreach","us","usag","usage.","usage:","use.","used,","used.","user","v","v1.3.1).","v1.4.0","valid","valid,","valu","variabl","variants.","variou","vein","verbos","version","virtual","void","void.","vtabl","vulner","w","w=","want","warn","wasm","wasm,","wasm2wast","wast2wasm","way","webassembl","weight_typ","wget","within","without","work","work.","write","writer","writer.","writing,","written.","x","x86_64","yum","zero","{","}","};"],"modules.html":["32,64,128,256","access","accounts.","action","action.","actionapi","actioncapi","actioncppapi","actions.","aliases.","api","api.","array","assetapi","assetcppapi","assets.","base","binari","binary_extens","bit","blockchain.","builtin","byte","bytes.","c","c++","calcul","chain","chainapi","chaincapi","check","class","common","compilerbuiltinsapi","configur","consoleapi","consolecapi","consolecppapi","contain","contract","contract.","contracttyp","cpp","cryptoapi","cryptocapi","cryptocppapi","data","databas","database.","databasec","databasecpp","datastream","declar","defin","defn","deseri","dispatch","dispatchercpp","done","effici","eosio","extens","fix","fixed_byt","fixed_key","fixedpoint","form","function","functions.","gener","handler","hash.","hashes.","helper","here","hold","index","inlin","insid","int128","integ","interact","interfac","intern","intrinsics.","key","length","level","lexicograph","lexicographically.","list","log/print","manag","memori","memoryapi","memorycppapi","messages.","modul","modules:","more","multi","multiindex","object.","payload","point","privileg","privilegedapi","privilegedcapi","privilegedcppapi","produc","producertyp","proper","provid","public","publickeytyp","queri","read","retriev","safe","send","serial","serialization/.","serializecpp","signatur","signaturetyp","singleton","size","smart","sort","specifi","state.","store","stream","symbolapi","symbolcppapi","symbols.","system","systemapi","systemcapi","table.","text","toolchain.","transact","transactionapi","transactioncapi","transactioncppapi","transactions.","type","type.","typedef","types,","variabl","varint","version","wraper","wrapper","write"],"group__actionapi.html":["\"account2\"_n,","\"account3\"_n);","&","(","(\"action_member1_name\",","()","(a)(b)(c)",")","...","//","//1","//4","//8","=","a;","account","account.","accounts...","action","action.","action.cod","action_member1_value)(\"action_member2_name\",","action_member2_value)","actionapi","actionapi::has_auth","actionapi::is_account","actionapi::require_auth","actionapi::require_recipi","actionapi::unpack_action_data","ad","add","api","auth","auth,","auth.","author","auths.","b;","bodi","bool","c","c++","c;","call","cast","char","check","class","consid","const","contain","contract","current","data","defin","doesn't","dummy_act","dummy_action,","enabl","eosio::act","eosio::permission_level","eoslib_serialize(","example:","except","exist","fail","fail.","found.","function","group","has_auth","have","helper","inlin","int","intend","interpret","is_account","level","list","long","member","method","modul","msg","multipl","n","name","note:","notifi","notified.","notify_account","notify_account,","parameters:","part","permission_level","provid","queri","remaining_account","requir","require_auth","require_recipi","require_recipient(\"account1\"_n,","returns:","safe","send","send_inline_act","send_inline_action;","set","set.","similar","singl","specifi","struct","t","t.","throw","times.","type","unpack","unpack_action_data","unpack_action_data();","unsign","verifi","void","wrapper","{","};"],"group__actioncapi.html":["\"account\":","\"active\"","\"amount\":","\"authorization\":","\"code\":","\"data\":","\"eos\",","\"from\":","\"inita\",","\"initb\",","\"permission\":","\"to\":","\"transfer\",","\"type\":","(","()","(in",")","*","//","0","1000","1970","1970)","5","5);","=","[{","abov","abstract","accordingly.","account","account.","account_name;","act","action","action'","action.","action_data_s","action_name;","action_size();","actioncapi","actioncapi::action_data_s","actioncapi::current_receiv","actioncapi::has_auth","actioncapi::is_account","actioncapi::publication_tim","actioncapi::read_action_data","actioncapi::require_auth","actioncapi::require_auth2","actioncapi::require_recipi","actioncapi::send_context_free_inlin","actioncapi::send_inlin","add","api","array","assum","auth","auth.","authorization;","auths.","block","bool","buffer","buffer[128];","byte","capi_nam","char","check","code","code/typ","contain","content","context","contract","copi","copied,","current","current_receiv","data","data;","defin","descript","detail","dynam","enabl","eos.io","example:","examples:","except","execut","exist","field","field.","fill","follow","found.","free","function","group","has_auth","inita","initc","inlin","inspect","is_account","len","len==0","length","level","list","locat","location.","long","memori","method","microsecond","more...","msg","msg,","msgsize","name","name,","noth","notifi","notified.","number","opaqu","output:","pack","parameters:","parent","pass","permiss","permission_level[]","pointer","post","precondition:","primari","print(current_time());","print(msgsize);","print(total);","process","provid","public","publication_tim","queri","rang","read_action(buffer,","read_action_data","receiv","report","requir","require_auth","require_auth(\"inita\"_n);","require_auth(\"initb\"_n);","require_auth2","require_recipi","require_recipient(\"initc\"_n);","return","returns:","send","send_context_free_inlin","send_inlin","serial","serialized\\_act","serialized_act","serialized_action,","set","size","size_t","specifi","struct","structure:","taken","throw","time","time.","timestamp","total","transact","uint32_t","uint64_t","up","us","valid","verifi","void","{","}","};","}],"],"group__actioncppapi.html":["\"account2\"_n,","\"account3\"_n);","&","(","(\"action_member1_name\",","()","(a)(b)(c)",")","...","//","//1","//4","//8","=","a;","account","account.","accounts...","action","action.","action.cod","action_member1_value)(\"action_member2_name\",","action_member2_value)","actioncppapi","actioncppapi::has_auth","actioncppapi::is_account","actioncppapi::require_auth","actioncppapi::require_recipi","actioncppapi::unpack_action_data","ad","add","addit","api","auth","auth,","auth.","author","auths.","b;","bodi","bool","c","c++","c;","call","cast","char","check","class","consid","const","contain","contract","current","data","defin","descript","detail","directli","document","doesn't","dummy_act","dummy_action,","enabl","eosio::act","eosio::permission_level","eoslib_serialize(","example:","except","exist","fail","fail.","found.","function","group","has_auth","have","helper","inlin","int","intend","interpret","is_account","level","list","long","member","method","more...","msg","multipl","n","name","note:","notifi","notified.","notify_account","notify_account,","parameters:","part","permission_level","provid","queri","remaining_account","requir","require_auth","require_recipi","require_recipient(\"account1\"_n,","returns:","safe","send","send_inline_act","send_inline_action;","set","set.","similar","singl","specifi","struct","t","t.","throw","times.","type","unpack","unpack_action_data","unpack_action_data();","unsign","us","verifi","void","wrapper","{","};"],"group__assetapi.html":["api","asset","assetapi","assets.","class","cpp","defin","eosio::asset","eosio::extended_asset","extend","group","manag","modul","name","store","struct","type"],"group__assetcppapi.html":["api","assetcppapi","assets.","class","cpp","defin","eosio::asset","eosio::extended_asset","extend","group","manag","name","store","struct","type"],"group__chainapi.html":["!=","&","(",")","*","a,","api","assert_recover_key","assert_ripemd160","assert_sha1","assert_sha256","assert_sha512","b","bool","byte","c","c++","calcul","chain","chainapi","chainapi::assert_recover_key","chainapi::assert_ripemd160","chainapi::assert_sha1","chainapi::assert_sha256","chainapi::assert_sha512","chainapi::oper","chainapi::operator==","chainapi::recover_key","chainapi::ripemd160","chainapi::sha1","chainapi::sha256","chainapi::sha512","char","check","compar","comput","const","data","data,","defin","digest","digest,","digest.","eosio::checksum160","eosio::checksum256","eosio::checksum512","eosio::public_key","eosio::public_key::data;","eosio::public_key::type;","eosio::signatur","eosio::signature::data;","eosio::signature::type;","evalu","fast","friend","function","gener","given","group","hash","hash.","hashes.","intern","k1","key","key,","key.","length","length,","match","messag","method","mode.","modul","op","oper","operator==","optim","parameters:","provid","pubkey","public","public_key","queri","r1","recov","recover_key","returns:","ripemd160","ripemd160.","safe","sha1","sha1.","sha256","sha256.","sha512","sha512.","sig","sig,","sign","signatur","signature,","signature.","state.","std::array","test","type","uint32_t","unsigned_int","us","variabl","void","want","wraper"],"group__chaincapi.html":["(",")","*","0","=","account","activ","actual","api","array","buffer","buffer,","byte","bytes_popul","c","capi_nam","chain","chaincapi","chaincapi::get_active_produc","datalen","defin","example:","full","function","get","get_active_produc","get_active_producers(producers,","group","intern","length","long","memori","name","number","output.","parameters:","pass","pointer","popul","post","precondition:","produc","producers,","producers.","producers[21];","queri","rang","requir","return","returns:","set","size","sizeof(capi_name)*21);","state.","store","uint32_t"],"group__cryptocapi.html":["\"invalid","###","&calc_hash","(",")",");","*","//","//if","==","```","```cpp","anyth","api","assert","assert160","assert256","assert512","assert\\_recover\\_key","assert_recover_key","assert_recover_key(","assert_ripemd160","assert_ripemod160(","assert_sha1","assert_sha1(","assert_sha256","assert_sha256(","assert_sha512","assert_sha512(","below","byte","c","calc_hash","calc_hash;","calcul","capi\\_checksum160\\*","capi\\_checksum256\\*","capi\\_checksum512\\*","capi_checksum160","capi_checksum256","capi_checksum512","char","check","checksum","checksum.","compar","const","creat","cryptocapi","cryptocapi::assert_recover_key","cryptocapi::assert_ripemd160","cryptocapi::assert_sha1","cryptocapi::assert_sha256","cryptocapi::assert_sha512","cryptocapi::recover_key","cryptocapi::ripemd160","cryptocapi::sha1","cryptocapi::sha256","cryptocapi::sha512","data","data,","data;","defin","digest","digest\");","digest,","digest;","eos_assert(","eosio::print(\"pub","eosio::print(\"ripemod160","eosio::print(\"sha1","eosio::print(\"sha256","eosio::print(\"sha512","equal","evalu","example:","execut","fast","fire.","function","gener","given","group","hard","hash","hash\"","hash\");","hash,","hash.","hash;","int","key","length","length,","length;","match","memori","messag","message.","method","mode.","never","next","number","op","optim","paramet","parameter.","parameters:","point","pointer","post","precondition:","provid","pub","pub,","pub;","publen","publen;","public","recover_key","recoveri","result","return.","returns:","ripemd160","ripemod160","ripemod160(","sha1","sha1(","sha256","sha256(","sha512","sha512(","sig","sig,","sig;","siglen","siglen,","siglen;","signatur","signature,","signature.","size_t","statement.","store","test","true,","uint32_t","us","void","want","written"],"group__cryptocppapi.html":["!=","&","(",")","*","a,","assert_recover_key","assert_ripemd160","assert_sha1","assert_sha256","assert_sha512","b","bool","byte","c++","calcul","char","check","compar","comput","const","cryptocppapi","cryptocppapi::assert_recover_key","cryptocppapi::assert_ripemd160","cryptocppapi::assert_sha1","cryptocppapi::assert_sha256","cryptocppapi::assert_sha512","cryptocppapi::oper","cryptocppapi::operator==","cryptocppapi::recover_key","cryptocppapi::ripemd160","cryptocppapi::sha1","cryptocppapi::sha256","cryptocppapi::sha512","data","data,","defin","digest","digest,","digest.","eosio::checksum160","eosio::checksum256","eosio::checksum512","eosio::public_key","eosio::public_key::data;","eosio::public_key::type;","eosio::signatur","eosio::signature::data;","eosio::signature::type;","evalu","fast","friend","function","gener","given","group","hash","hashes.","k1","key","key,","key.","length","length,","match","messag","method","mode.","op","oper","operator==","optim","parameters:","provid","pubkey","public","public_key","r1","recov","recover_key","returns:","ripemd160","ripemd160.","safe","sha1","sha1.","sha256","sha256.","sha512","sha512.","sig","sig,","sign","signatur","signature,","signature.","std::array","test","type","uint32_t","unsigned_int","us","variabl","void","want","wraper"],"group__compilerbuiltinsapi.html":["&","(","()","(a","(b","(the","(which",")","//","0","0;","1","1);","10000","100;","128","16","32","3;","4","64","64));","64),","8;","=",">>","@return1","__addtf3","__ashlti3","__ashlti3(res,","__ashrti3","__ashrti3(res,","__break_point","__cmptf2","__divtf3","__divti3","__divti3(res,","__eqtf2","__extenddftf2","__extendsftf2","__fixtfdi","__fixtfsi","__fixunstfdi","__fixunstfsi","__getf2","__gttf2","__int128","__letf2","__lshlti3","__lshlti3(res,","__lshrti3","__lshrti3(res,","__lttf2","__modti3","__modti3(res,","__multf3","__multi3","__multi3(res,","__netf2","__subtf3","__trunctfdf2","__trunctfsf2","__udivti3","__udivti3(res,","__umodti3","__umodti3(res,","__unordtf2","a,","add","arithmet","assign","b","b,","between","bit","builtin","check","compar","compilerbuiltinsapi","compilerbuiltinsapi::__addtf3","compilerbuiltinsapi::__ashlti3","compilerbuiltinsapi::__ashrti3","compilerbuiltinsapi::__break_point","compilerbuiltinsapi::__cmptf2","compilerbuiltinsapi::__divtf3","compilerbuiltinsapi::__divti3","compilerbuiltinsapi::__eqtf2","compilerbuiltinsapi::__extenddftf2","compilerbuiltinsapi::__extendsftf2","compilerbuiltinsapi::__fixtfdi","compilerbuiltinsapi::__fixtfsi","compilerbuiltinsapi::__fixunstfdi","compilerbuiltinsapi::__fixunstfsi","compilerbuiltinsapi::__getf2","compilerbuiltinsapi::__gttf2","compilerbuiltinsapi::__letf2","compilerbuiltinsapi::__lshlti3","compilerbuiltinsapi::__lshrti3","compilerbuiltinsapi::__lttf2","compilerbuiltinsapi::__modti3","compilerbuiltinsapi::__multf3","compilerbuiltinsapi::__multi3","compilerbuiltinsapi::__netf2","compilerbuiltinsapi::__subtf3","compilerbuiltinsapi::__trunctfdf2","compilerbuiltinsapi::__trunctfsf2","compilerbuiltinsapi::__udivti3","compilerbuiltinsapi::__umodti3","compilerbuiltinsapi::__unordtf2","convert","declar","divid","divis","doubl","double,","double.","equal","example:","extend","f","factor.","first","float","float.","function","gener","greater","group","h","ha","ha,","hb","helper","hi","hi,","high","inequ","input","int","int128","int32_t","int64_t","integ","integer.","integers)","integers.","l","l,","la","la,","lb","lb,","left","less","lo","lo,","logic","long","low","modular","modulu","multipl","multipli","nan","nan,","number","oper","output:","parameter.","parameters:","perform","post","printi128(&res);","product.","re","replac","repres","res,","result","ret","ret,","returns:","right","second","shift","shift.","split","subtract","toolchain.","truncat","two","uint32_t","uint64_t","unsign","valu","void"],"group__consoleapi.html":["\"abcde\"_n;","\"hello","%\",","&","&&","&&...","(","(87654323456);","(it",")","*","*s",",","/","//","10);","1e+18;","=","a,","api","apples:","arg","args...","behav","c","c++","char","class","consol","consoleapi","consoleapi::oper","consoleapi::print","consoleapi::print_f","const","contain","cout","defin","defn","eosio::cout;","eosio::iostream","example:","format","function","group","hello","input","iostream","iostream&","iostream.","list","log/print","messages.","modul","name","null","oper","operator<<","ouput:","out","output","overload","parameters:","print","print(","print_f","print_f(\"numb","printf/","refer","replac","rest","returns:","s","s,","similar","specifi","specifier)","static","std::out","stream","strem","string","string.","string_as_unsigned_64_bit","string_as_unsigned_64_bit);","templat","termin","text","type","uint128_t","uint64_t","unsigned_128_bit_int","unsigned_128_bit_int,","unsigned_64_bit_int","unsigned_64_bit_int,","us","v","val","val,","valu","values.","variabl","void","world!\";","world!100000000000000000087654323456abcd","wrapper"],"group__consolecapi.html":["(","(i.e.",")","*","/","//","0.5","10.0;","1000000000000000000","128","1e+18);","5);","5.0","64","87654323456","87654323456);","=","abcd","api","base32","bit","c","char","consolecapi","consolecapi::print","consolecapi::printdf","consolecapi::printhex","consolecapi::printi","consolecapi::printi128","consolecapi::printn","consolecapi::printqf","consolecapi::prints_l","consolecapi::printsf","consolecapi::printui","consolecapi::printui128","const","cstr","cstr,","data,","datalen","defn","doubl","double)","encod","example:","float","float)","function","given","group","hello","int128_t","int64_t","integ","integer.","large_int(","large_int(87654323456);","len","length","log/print","long","messages.","name","null","number","output:","parameters:","point","pointer","precis","print","printdf","printdf(value);","printhex","printi","printi(","printi128","printi128(&large_int);","printn","printn(\"abcde\"_n);","printqf","printqf(value);","prints(\"hello","prints_l","prints_l(\"hello","printsf","printsf(value);","printui","printui(1e+18);","printui128","printui128(&large_int);","quadrupl","sign","singl","string","string.","termin","text","uint128_t","uint32_t","uint64_t","unsign","up","valu","void","world!","world!\");","world!\","],"group__consolecppapi.html":["\",","\"abcde\"_n;","\"hello","%\",","&","&&","&&...","(","(87654323456);","(it",")",");","*","*s",",","/","//","10);","1e+18;","5","=","``","a,","api","apples:","arg","args...","behav","c","c++","char","class","consolecppapi","consolecppapi::oper","consolecppapi::print","consolecppapi::print_f","const","contain","cout","custom","defin","descript","detail","detect","easi","eosio::cout;","eosio::iostream","even","example:","format","function","group","hello","input","iostream","iostream&","iostream.","list","log/print","make","messages.","method","more...","name","nativ","null","number:","oper","operator<<","ouput:","out","output","overload","parameters:","print","print(","print_f","print_f(\"numb","printf/","refer","replac","rest","returns:","s","s,","similar","specifi","specifier)","static","std::out","stream","strem","string","string.","string_as_unsigned_64_bit","string_as_unsigned_64_bit);","templat","termin","text","type","type.","types.","uint128_t","uint64_t","unsigned_128_bit_int","unsigned_128_bit_int,","unsigned_64_bit_int","unsigned_64_bit_int,","us","v","val","val,","valu","values.","variabl","variad","void","world!\";","world!100000000000000000087654323456abcd","world,","wrapper"],"group__cryptoapi.html":["!=","&","(",")","*","a,","api","assert_recover_key","assert_ripemd160","assert_sha1","assert_sha256","assert_sha512","b","bool","byte","c","c++","calcul","chain","char","check","compar","comput","const","cryptoapi","cryptoapi::assert_recover_key","cryptoapi::assert_ripemd160","cryptoapi::assert_sha1","cryptoapi::assert_sha256","cryptoapi::assert_sha512","cryptoapi::oper","cryptoapi::operator==","cryptoapi::recover_key","cryptoapi::ripemd160","cryptoapi::sha1","cryptoapi::sha256","cryptoapi::sha512","data","data,","defin","descript","detail","digest","digest,","digest.","eosio::checksum160","eosio::checksum256","eosio::checksum512","eosio::public_key","eosio::public_key::data;","eosio::public_key::type;","eosio::signatur","eosio::signature::data;","eosio::signature::type;","evalu","fast","friend","function","gener","given","group","hash","hash.","hashes.","k1","key","key,","key.","length","length,","match","messag","method","mode.","modul","more...","op","oper","operator==","optim","parameters:","provid","pubkey","public","public_key","r1","recov","recover_key","returns:","ripemd160","ripemd160.","safe","sha1","sha1.","sha256","sha256.","sha512","sha512.","sig","sig,","sign","signatur","signature,","signature.","std::array","test","type","uint32_t","unsigned_int","us","variabl","void","want","wraper"],"group__database.html":["\"alic","\"alice\"_n);","\"charlie\"_n);","&prim);","(","(impli","(it","(or","(truncat","(use","(which",")","*","//","0","0);","0,","0.","0;","1","128","2","256","64","=","==",">",">=","\\*((uint64\\_t\\*)data)","\\*primari","\\*secondari","account","act","alreadi","api","array","associ","assum","auto","between","bit","blockchain.","buffer","byte","c","c++","capi_nam","char","charli","charlie_itr","code","code,","condit","const","contain","continu","copi","cost","creat","current","data","data,","data_len","data_len,","databas","database.","database::db_end_i64","database::db_find_i64","database::db_get_i64","database::db_idx128_end","database::db_idx128_find_primari","database::db_idx128_find_secondari","database::db_idx128_lowerbound","database::db_idx128_next","database::db_idx128_previ","database::db_idx128_remov","database::db_idx128_stor","database::db_idx128_upd","database::db_idx128_upperbound","database::db_idx256_end","database::db_idx256_find_primari","database::db_idx256_find_secondari","database::db_idx256_lowerbound","database::db_idx256_next","database::db_idx256_previ","database::db_idx256_remov","database::db_idx256_stor","database::db_idx256_upd","database::db_idx256_upperbound","database::db_idx64_end","database::db_idx64_find_primari","database::db_idx64_find_secondari","database::db_idx64_lowerbound","database::db_idx64_next","database::db_idx64_previ","database::db_idx64_remov","database::db_idx64_stor","database::db_idx64_upd","database::db_idx64_upperbound","database::db_idx_double_end","database::db_idx_double_find_primari","database::db_idx_double_find_secondari","database::db_idx_double_lowerbound","database::db_idx_double_next","database::db_idx_double_previ","database::db_idx_double_remov","database::db_idx_double_stor","database::db_idx_double_upd","database::db_idx_double_upperbound","database::db_idx_long_double_end","database::db_idx_long_double_find_primari","database::db_idx_long_double_find_secondari","database::db_idx_long_double_lowerbound","database::db_idx_long_double_next","database::db_idx_long_double_previ","database::db_idx_long_double_remov","database::db_idx_long_double_stor","database::db_idx_long_double_upd","database::db_idx_long_double_upperbound","database::db_lowerbound_i64","database::db_next_i64","database::db_previous_i64","database::db_remove_i64","database::db_store_i64","database::db_update_i64","database::db_upperbound_i64","db_end_i64","db_find_i64","db_find_i64(receiver,","db_get_i64","db_get_i64(itr,","db_idx128_end","db_idx128_find_primari","db_idx128_find_secondari","db_idx128_lowerbound","db_idx128_next","db_idx128_previ","db_idx128_remov","db_idx128_stor","db_idx128_upd","db_idx128_upperbound","db_idx256_end","db_idx256_find_primari","db_idx256_find_secondari","db_idx256_lowerbound","db_idx256_next","db_idx256_previ","db_idx256_remov","db_idx256_stor","db_idx256_upd","db_idx256_upperbound","db_idx64_end","db_idx64_find_primari","db_idx64_find_secondari","db_idx64_lowerbound","db_idx64_next","db_idx64_previ","db_idx64_remov","db_idx64_stor","db_idx64_upd","db_idx64_upperbound","db_idx_double_end","db_idx_double_find_primari","db_idx_double_find_secondari","db_idx_double_lowerbound","db_idx_double_next","db_idx_double_previ","db_idx_double_remov","db_idx_double_stor","db_idx_double_upd","db_idx_double_upperbound","db_idx_long_double_end","db_idx_long_double_find_primari","db_idx_long_double_find_secondari","db_idx_long_double_lowerbound","db_idx_long_double_next","db_idx_long_double_previ","db_idx_long_double_remov","db_idx_long_double_stor","db_idx_long_double_upd","db_idx_long_double_upperbound","db_lowerbound_i64","db_next_i64","db_next_i64(charlie_itr,","db_previous_i64","db_previous_i64(itr,","db_remove_i64","db_remove_i64(itr);","db_store_i64","db_update_i64","db_upperbound_i64","defin","determin","doubl","end","end_itr","entri","eosio","eosio_assert(end_itr","eosio_assert(itr","eosio_assert(len","equal","example:","exist","exists,","expect","fill","find","first","float","follow","found","found,","function","given","group","hold","id","id,","index","int","int32_t","integ","integers)","interfac","iter","iterator,","itr","itr_prev","key","key.","keys)","last","left","len","lexicograph","long","look","lookup","lowerbound","lowest","match","memori","modul","name","necessary)","new","newli","next","noth","on","order","otherwis","owner","parameters:","past","pay","payer","payer)","payer,","point","pointer","post","preced","precis","precondition:","previou","prim","primari","quadrupl","rang","receiver)","receiver,","record","referenc","refund","remov","replac","repres","resid","retriev","return","returns:","row","scope","scope,","secondari","secondary,","set","size","specifi","storag","store","tabl","table\");","table)","table,","table.","table1,","uint128\\_t","uint128_t","uint32_t","uint64\\_t","uint64_t","untouch","up","updat","upperbound","us","valid","valu","value,","value[50];","variabl","void","within"],"group__databasec.html":["\"alic","\"alice\"_n);","\"charlie\"_n);","&prim);","(","(impli","(it","(or","(truncat","(use","(which",")","*","//","0","0);","0,","0.","0;","1","128","2","256","64","=","==",">",">=","\\*((uint64\\_t\\*)data)","\\*primari","\\*secondari","account","act","alreadi","api","array","associ","assum","auto","between","bit","buffer","byte","c","capi_nam","char","charli","charlie_itr","code","code,","condit","const","contain","continu","copi","cost","creat","current","data","data,","data_len","data_len,","databas","database.","databasec","databasec::db_end_i64","databasec::db_find_i64","databasec::db_get_i64","databasec::db_idx128_end","databasec::db_idx128_find_primari","databasec::db_idx128_find_secondari","databasec::db_idx128_lowerbound","databasec::db_idx128_next","databasec::db_idx128_previ","databasec::db_idx128_remov","databasec::db_idx128_stor","databasec::db_idx128_upd","databasec::db_idx128_upperbound","databasec::db_idx256_end","databasec::db_idx256_find_primari","databasec::db_idx256_find_secondari","databasec::db_idx256_lowerbound","databasec::db_idx256_next","databasec::db_idx256_previ","databasec::db_idx256_remov","databasec::db_idx256_stor","databasec::db_idx256_upd","databasec::db_idx256_upperbound","databasec::db_idx64_end","databasec::db_idx64_find_primari","databasec::db_idx64_find_secondari","databasec::db_idx64_lowerbound","databasec::db_idx64_next","databasec::db_idx64_previ","databasec::db_idx64_remov","databasec::db_idx64_stor","databasec::db_idx64_upd","databasec::db_idx64_upperbound","databasec::db_idx_double_end","databasec::db_idx_double_find_primari","databasec::db_idx_double_find_secondari","databasec::db_idx_double_lowerbound","databasec::db_idx_double_next","databasec::db_idx_double_previ","databasec::db_idx_double_remov","databasec::db_idx_double_stor","databasec::db_idx_double_upd","databasec::db_idx_double_upperbound","databasec::db_idx_long_double_end","databasec::db_idx_long_double_find_primari","databasec::db_idx_long_double_find_secondari","databasec::db_idx_long_double_lowerbound","databasec::db_idx_long_double_next","databasec::db_idx_long_double_previ","databasec::db_idx_long_double_remov","databasec::db_idx_long_double_stor","databasec::db_idx_long_double_upd","databasec::db_idx_long_double_upperbound","databasec::db_lowerbound_i64","databasec::db_next_i64","databasec::db_previous_i64","databasec::db_remove_i64","databasec::db_store_i64","databasec::db_update_i64","databasec::db_upperbound_i64","db_end_i64","db_find_i64","db_find_i64(receiver,","db_get_i64","db_get_i64(itr,","db_idx128_end","db_idx128_find_primari","db_idx128_find_secondari","db_idx128_lowerbound","db_idx128_next","db_idx128_previ","db_idx128_remov","db_idx128_stor","db_idx128_upd","db_idx128_upperbound","db_idx256_end","db_idx256_find_primari","db_idx256_find_secondari","db_idx256_lowerbound","db_idx256_next","db_idx256_previ","db_idx256_remov","db_idx256_stor","db_idx256_upd","db_idx256_upperbound","db_idx64_end","db_idx64_find_primari","db_idx64_find_secondari","db_idx64_lowerbound","db_idx64_next","db_idx64_previ","db_idx64_remov","db_idx64_stor","db_idx64_upd","db_idx64_upperbound","db_idx_double_end","db_idx_double_find_primari","db_idx_double_find_secondari","db_idx_double_lowerbound","db_idx_double_next","db_idx_double_previ","db_idx_double_remov","db_idx_double_stor","db_idx_double_upd","db_idx_double_upperbound","db_idx_long_double_end","db_idx_long_double_find_primari","db_idx_long_double_find_secondari","db_idx_long_double_lowerbound","db_idx_long_double_next","db_idx_long_double_previ","db_idx_long_double_remov","db_idx_long_double_stor","db_idx_long_double_upd","db_idx_long_double_upperbound","db_lowerbound_i64","db_next_i64","db_next_i64(charlie_itr,","db_previous_i64","db_previous_i64(itr,","db_remove_i64","db_remove_i64(itr);","db_store_i64","db_update_i64","db_upperbound_i64","defin","descript","detail","determin","doubl","end","end_itr","entri","eosio","eosio_assert(end_itr","eosio_assert(itr","eosio_assert(len","equal","example:","exist","exists,","expect","fill","find","first","float","follow","found","found,","function","given","group","hold","id","id,","index","int","int32_t","integ","integers)","interfac","iter","iterator,","itr","itr_prev","key","key.","keys)","last","left","len","level","lexicograph","long","look","lookup","low","lowerbound","lowest","match","memori","more...","name","necessary)","new","newli","next","noth","on","order","otherwis","owner","parameters:","past","pay","payer","payer)","payer,","point","pointer","post","preced","precis","precondition:","previou","prim","primari","provid","quadrupl","rang","receiver)","receiver,","record","referenc","refund","remov","replac","repres","resid","retriev","return","returns:","row","scope","scope,","secondari","secondary,","set","size","specifi","storag","store","tabl","table\");","table)","table,","table.","table1,","uint128\\_t","uint128_t","uint32_t","uint64\\_t","uint64_t","untouch","up","updat","upperbound","us","valid","valu","value,","value[50];","variabl","void","within"],"group__databasecpp.html":["class","database.","databasecpp","defin","descript","detail","eosio","eosio::singleton","group","index","interfac","modul","more...","multi","name","singleton","tabl","table.","type"],"group__multiindex.html":["#includ","(myaction)",")","16","=",">",">,","_self;","api","auto","boost","c++","call","class","code","code,","const","container.","contract","data","database.","datastream","defin","descript","detail","doubl","ds):contract(receiver,","ds){}","eosio","eosio::multi_index","eosio;","eosio_dispatch(","exactli","example:","function","get_secondary_1()","get_secondary_2()","get_secondary_3()","get_secondary_4()","get_secondary_5()","group","here","index","indexed_bi","indic","indices.","insid","interfac","key,","key.","long","member","more...","multi","multi_index","multiindex","myaction()","mycontract(nam","mycontract,","mycontract:","name","namespac","object","of:","parameters:","pattern","primari","primary;","primary_key()","provid","public:","receiver,","record","requir","retriev","return","scope","scope);","secondari","secondary_1;","secondary_2;","secondary_3;","secondary_4;","secondary_5;","store","struct","support","t","tabl","table(","table,","table.","tablenam","templat","type","uint128_t","uint256_t","uint64_t","uint64_t.","up","us","void","{","}","};"],"group__singleton.html":["class","defin","eosio","eosio::singleton","group","name","singleton","table.","type"],"group__dispatcher.html":["(",")","accepts,","action","api","arg","argument","bool","c++","class","code,","contract","contract.","correpond","defin","deriv","dispatch","dispatcher::execute_act","eosio::contract","execut","execute_act","func","function","group","handler","handler,","handler.","i.e.","insid","member","modul","name","namespac","obj","object","parameters:","proper","q","receiv","returns:","self,","t","templat","true","unpack","void(t::*)(args...)"],"group__dispatchercpp.html":["(",")","accepts,","action","arg","argument","bool","c++","class","code,","contract","contract.","correpond","defin","deriv","dispatch","dispatchercpp","dispatchercpp::execute_act","eosio::contract","execut","execute_act","func","function","group","handler","handler,","handler.","i.e.","insid","member","name","namespac","obj","object","parameters:","proper","q","receiv","returns:","self,","t","templat","true","unpack","void(t::*)(args...)"],"group__fixedpoint.html":["32,64,128,256","appropri","arithmet","basic","bit","class","comparison","contract","contract.","decim","descript","detail","develop","eosio::fixed_point128","eosio::fixed_point32","eosio::fixed_point64","fix","fixed_point","fixedpoint","float","format","group","henc","indeterministic,","integ","more...","name","number","oper","pass","point","prevent","repres","required.","smart","struct","support","templat","type","us","variabl","version"],"group__memoryapi.html":["(",")","*","0","0.","addit","alloc","api","area","array","bit","block","byte","c++","calloc","calloc(),","common","count","count,","dealloc","defin","each","element","elements,","eosio","free","function","functions.","given","group","initi","long,","malloc","malloc(),","memori","memory,","memory.","memoryapi","memoryapi::calloc","memoryapi::fre","memoryapi::malloc","memoryapi::realloc","modul","namespac","new","number","parameters:","pointer","previous","ptr","ptr,","realloc","realloc()","returns:","size","size_t","start","void","void*"],"group__memorycppapi.html":["(",")","*","0","0.","addit","alloc","area","array","bit","block","byte","calloc","calloc(),","common","count","count,","dealloc","defin","each","element","elements,","eosio","free","function","functions.","given","group","initi","long,","malloc","malloc(),","memori","memory,","memory.","memorycppapi","memorycppapi::calloc","memorycppapi::fre","memorycppapi::malloc","memorycppapi::realloc","namespac","new","number","parameters:","pointer","previous","ptr","ptr,","realloc","realloc()","returns:","size","size_t","start","void","void*"],"group__serialize.html":["(args1)(args2)(args3)","(basea)(baseb)(basec)","(field1)(field2)(field3)","also:","api","args.","base","bytes.","c++","class","class.","classes.","data","declar","defin","defined.","deseri","empti","eosio::reflector","eoslib_reflect","eoslib_reflect;","eoslib_reflect_deriv","eoslib_reflect_derived;","eoslib_reflect_derived_templ","eoslib_reflect_derived_template;","eoslib_reflect_empti","eoslib_reflect_empty;","eoslib_reflect_fwd","eoslib_reflect_fwd;","eoslib_reflect_templ","eoslib_reflect_template;","eoslib_seri","eoslib_serialize;","eoslib_serialize_deriv","eoslib_serialize_derived;","form","forward","function","group","inherit","member","modul","name","names.","object.","parameters:","perform","read","reflect","reflection.","see","sequenc","serial","special","stream","templat","template_arg","type","type.","write"],"group__datastream.html":["&","(",")","*","::eosio::ignor","::eosio::ignore_wrapp",">",">>","alway","arg","array","binary_extens","binary_extension.","bool","bool.","boost::container::flat_map","boost::container::flat_set","buffer","buffer,","byte","bytes.","c","capi_checksum160","capi_checksum256","capi_checksum512","capi_public_key","char","char.","checksum256","checksum256.","class","class.","const","contain","cs","d","data","data.","datastream","datastream&","datastream::deseri","datastream::oper","datastream::operator>>","datastream::pack","datastream::pack_s","datastream::unpack","defin","deseri","destin","ds","ds,","eosio::binary_extens","eosio::datastream","eosio::datastream<","eosio::public_key","eosio::public_key.","eosio::signatur","eosio::signature.","eosio::symbol","eosio::symbol_cod","error","except","fix","fixed_byt","fixed_bytes.","flat","flat_set","flat_set.","form","function","group","ignor","ignored_wrapp","ignored_wrapper'","insid","int","k","key","key256","key256.","len","length","m","map","map.","n","name","non","object","oper","operator<<","operator>>","opt","option","optional.","pack","pack_siz","parameters:","pointer","pointer.","post","primit","pubkey","public_key","public_key.","read","refer","returns:","s","serial","serializea","serialized,","set","set.","sig","size","size_t","std::array","std::array.","std::map","std::option","std::pair","std::pair.","std::set","std::string","std::tupl","std::variant","std::variant.","std::vector","stream","stream.","string","string.","sym","sym_cod","symbol","symbol.","symbol_cod","symbol_code.","t","t(&)","t.","templat","throw","tupl","tuple.","type","type.","unpack","v","val","valu","value.","var","var,","variabl","vector","vector.","void","write"],"group__serializecpp.html":["(args1)(args2)(args3)","(basea)(baseb)(basec)","(field1)(field2)(field3)","also:","api","args.","base","c++","class","class.","classes.","declar","defin","defined.","deseri","empti","eosio::reflector","eoslib_reflect","eoslib_reflect;","eoslib_reflect_deriv","eoslib_reflect_derived;","eoslib_reflect_derived_templ","eoslib_reflect_derived_template;","eoslib_reflect_empti","eoslib_reflect_empty;","eoslib_reflect_fwd","eoslib_reflect_fwd;","eoslib_reflect_templ","eoslib_reflect_template;","eoslib_seri","eoslib_serialize;","eoslib_serialize_deriv","eoslib_serialize_derived;","forward","group","inherit","member","name","names.","object.","parameters:","perform","reflect","reflection.","see","sequenc","serial","serializecpp","special","templat","template_arg","type","type."],"group__symbolapi.html":["!=","&","(","()","(are","(begin","(return",")","*","+","7)","=","==","[begin,","a,","api","appropri","b","begin","begin,","bool","boolean","both","buffer","buffer.","char","char*","charact","check","class","code","con","const","constexpr","contain","contract","contractth","cpp","defin","different)","end","end)","eosio::extended_symbol","eosio::extended_symbol::contract;","eosio::extended_symbol::symbol;","eosio::symbol","eosio::symbol::value;","eosio::symbol_cod","eosio::symbol_code::value;","equival","explicit","extend","extended_symbol","friend","function","get_contract","get_symbol","group","host","invert","is_valid","last","length","less","manag","memori","modul","name","oper","operator.","operator<","operator==","parameters:","past","pointer)","post","precis","precondit","precondition:","print","provid","rang","raw","region","repreresent","represent","return","returns:","same","same)","satisfied)","satisfied,","sc,","show_precis","size","ss,","start","std::string","std::string_view","store","str","string","struct","sym,","symbol","symbol'","symbol_cod","symbol_code.","symbolapi","symbolapi::cod","symbolapi::extended_symbol","symbolapi::get_contract","symbolapi::get_symbol","symbolapi::is_valid","symbolapi::length","symbolapi::oper","symbolapi::operator==","symbolapi::precis","symbolapi::print","symbolapi::raw","symbolapi::symbol","symbolapi::symbol_cod","symbolapi::to_str","symbolapi::write_as_str","symbols.","symbolth","to.","to_str","token","true","type","uint32_t","uint64_t","uint8_t","valid","valu","variabl","void","write","write_as_str","written"],"group__symbolcppapi.html":["!=","&","(","()","(are","(begin","(return",")","*","+","7)","=","==","[begin,","a,","api","appropri","b","begin","begin,","bool","boolean","both","buffer","buffer.","char","char*","charact","check","class","code","con","const","constexpr","contain","contract","contractth","cpp","defin","different)","end","end)","eosio::extended_symbol","eosio::extended_symbol::contract;","eosio::extended_symbol::symbol;","eosio::symbol","eosio::symbol::value;","eosio::symbol_cod","eosio::symbol_code::value;","equival","explicit","extend","extended_symbol","friend","function","get_contract","get_symbol","group","host","invert","is_valid","last","length","less","manag","memori","name","oper","operator.","operator<","operator==","parameters:","past","pointer)","post","precis","precondit","precondition:","print","provid","rang","raw","region","repreresent","represent","return","returns:","same","same)","satisfied)","satisfied,","sc,","show_precis","size","ss,","start","std::string","std::string_view","store","str","string","struct","sym,","symbol","symbol'","symbol_cod","symbol_code.","symbolcppapi","symbolcppapi::cod","symbolcppapi::extended_symbol","symbolcppapi::get_contract","symbolcppapi::get_symbol","symbolcppapi::is_valid","symbolcppapi::length","symbolcppapi::oper","symbolcppapi::operator==","symbolcppapi::precis","symbolcppapi::print","symbolcppapi::raw","symbolcppapi::symbol","symbolcppapi::symbol_cod","symbolcppapi::to_str","symbolcppapi::write_as_str","symbols.","symbolth","to.","to_str","token","true","type","uint32_t","uint64_t","uint8_t","valid","valu","variabl","void","write","write_as_str","written"],"group__systemapi.html":["\"one","(","()","(i.e.","(round",")","*","/","0","1","1,","1970","2,","==","abort","abort,","access","accounts.","action","action)","api","block","bypass","c","called.","chain","chang","changes.","char","cleanup","code","condit","configur","const","contract.","current","current_tim","defin","destructor","done","down","eosio_assert","eosio_assert(1","eosio_assert_cod","eosio_assert_messag","eosio_exit","eosio_exit(0);","eosio_exit(1);","eosio_exit(2);","eosio_exit(3);","equal","error","example:","execut","exit","explain","fail","failur","function","group","ignor","includ","int32_t","interact","intrinsics.","length","level","method","microsecond","modul","msg","msg,","msg_len","nearest","normal","now","null","one.\");","parameters:","pend","pointer","privileg","process","reason","return","returns:","second","second)","start","string","system","systemapi","systemapi::current_tim","systemapi::eosio_assert","systemapi::eosio_assert_cod","systemapi::eosio_assert_messag","systemapi::eosio_exit","systemapi::now","termin","test","test,","time","true","two.\");","uint32_t","uint64_t","unwind","us","void","wasm","without"],"group__privilegedapi.html":["&","(",")","access","accounts.","api","api.","blockchain","blolckchain","c","c++","chain","class","configur","const","defin","done","eosio::blockchain_paramet","function","get_blockchain_paramet","group","modul","name","new","param","paramet","parameters.","parameters:","privileg","privilegedapi","privilegedapi::get_blockchain_paramet","privilegedapi::set_blockchain_paramet","replac","retriev","set","set_blockchain_paramet","struct","type","void"],"group__privilegedcapi.html":["\"active\"","\"pending\"","(","(identifier)","(weight",")","*","/","0","1","absolut","account","account,","account.","activ","activate_featur","api.","appropri","automatically.","avail","base","becom","block","blockchain","blolckchain","bool","buffer","buffer,","byte","c","capi_nam","change,","char","check","contain","cpu","cpu_weight","data","data,","data.","datalen","defin","f","fals","featur","feature.","fill","fraction","function","get_blockchain_parameters_pack","get_resource_limit","group","hold","int64\\_t","int64_t","irreversible,","irrreversible.","is_priv","is_privileg","limit","long","memori","name","net","net_weight","net_weight,","new","next","onc","order","otherwis","output","pack","param","paramet","parameters,","parameters.","parameters:","pointer","post","precondition:","privileg","privileged.","privilegedcapi","privilegedcapi::activate_featur","privilegedcapi::get_blockchain_parameters_pack","privilegedcapi::get_resource_limit","privilegedcapi::is_privileg","privilegedcapi::set_active_produc","privilegedcapi::set_blockchain_parameters_pack","privilegedcapi::set_privileg","privilegedcapi::set_proposed_produc","privilegedcapi::set_resource_limit","produc","produce_key","producer\\_data","producer\\_data\\_s","producer_data","producer_data,","producer_data_s","producers.","promot","proportion","propos","ram","ram_byt","ram_bytes,","rang","report","requir","resourc","retriev","return","returns:","round","schedul","serial","set","set_active_produc","set_blockchain_parameters_pack","set_privileg","set_proposed_produc","set_resource_limit","size","size.","start","statu","suffic","total_weight_of_all_accounts)","true","uint32_t","unsuccessful,","valid","version","void","whose"],"group__privilegedcppapi.html":["&","(",")","api.","blockchain","blolckchain","c++","class","const","defin","eosio::blockchain_paramet","function","get_blockchain_paramet","group","name","new","param","paramet","parameters.","parameters:","privileg","privilegedcppapi","privilegedcppapi::get_blockchain_paramet","privilegedcppapi::set_blockchain_paramet","replac","retriev","set","set_blockchain_paramet","struct","type","void"],"group__systemcapi.html":["\"one","(","()","(i.e.","(round",")","*","/","0","1","1,","1970","2,","==","abort","abort,","action","action)","api","block","bypass","called.","chang","changes.","char","cleanup","code","condit","const","contract.","current","current_tim","defin","destructor","down","eosio_assert","eosio_assert(1","eosio_assert_cod","eosio_assert_messag","eosio_exit","eosio_exit(0);","eosio_exit(1);","eosio_exit(2);","eosio_exit(3);","equal","error","example:","execut","exit","explain","fail","failur","function","group","ignor","includ","int32_t","interact","intrinsics.","length","level","method","microsecond","msg","msg,","msg_len","nearest","normal","now","null","one.\");","parameters:","pend","pointer","process","reason","return","returns:","second","second)","start","string","system","systemcapi","systemcapi::current_tim","systemcapi::eosio_assert","systemcapi::eosio_assert_cod","systemcapi::eosio_assert_messag","systemcapi::eosio_exit","systemcapi::now","termin","test","test,","time","true","two.\");","uint32_t","uint64_t","unwind","us","void","wasm","without"],"group__transactionapi.html":["(",")","0","1","action","action,","actions.","activ","api","api.","c","c++","class","context","defin","descript","detail","directli","eosio::onerror","eosio::transact","eosio::transaction_head","free","function","get_act","group","index","indic","inlin","method","modul","more...","name","note:","parameters:","request","retriev","returns:","safe","send","struct","transact","transaction.","transactionapi","transactionapi::get_act","transactions.","type","type,","uint32_t","us","wrapper"],"group__transactioncapi.html":["&","(","()",")",");","*","0","0xffffffffffffffff","1","=","access","account","action","action,","activ","alreadi","amount","api","assert.","atom","block","buff","buff,","buffer","buffer,","byte","cancel","cancel/replac","cancel_def","cancel_deferred(","canceled,","canceled.","capi_nam","char","const","context","context_free_data","context_free_data[index]","context_free_data[index].size()","contract,","copi","copied,","current","defer","defin","entri","eosio_print(tm);","epoch","example:","execut","exists.","expir","expiration();","f","fail","failur","flight","found","free","function","get","get_act","get_context_free_data","group","id","index","index,","indic","inflight","int","number","output","pack","parameters:","pass","pay","payer","payer,","pointer","post","precondition:","prefix","provid","published.","ram","read,","read_transact","replace_exist","report","request","requir","reserv","retriev","return","returns:","second","send","send_def","sender","sender_id","sender_id,","serial","serialized_transact","serialized_transaction,","signed_transaction.context_free_data[index].","size","size,","size==0","size_t","tapo","tapos_block_num","tapos_block_num();","tapos_block_prefix","tapos_block_prefix();","tbn","tbp","tm","transact","transaction.","transaction_s","transactioncapi","transactioncapi::cancel_def","transactioncapi::expir","transactioncapi::get_act","transactioncapi::get_context_free_data","transactioncapi::read_transact","transactioncapi::send_def","transactioncapi::tapos_block_num","transactioncapi::tapos_block_prefix","transactioncapi::transaction_s","transactions.","type","type,","uint128_t","uint32_t","unix","us","valid","void","write","written"],"group__transactioncppapi.html":["(",")","0","1","action","action,","activ","api","api.","c","c++","class","context","descript","detail","directli","eosio::onerror","eosio::transact","eosio::transaction_head","free","function","get_act","group","index","indic","method","more...","name","note:","parameters:","request","retriev","returns:","safe","struct","transact","transaction.","transactioncppapi","transactioncppapi::get_act","type","type,","uint32_t","us","wrapper"],"group__types.html":["/.","aliases.","array","base","binari","builtin","byte","class","contain","contract","contract.","defin","effici","eosio","extens","fix","group","hold","index","integ","key","length","lexicograph","lexicographically.","modul","more","multi","name","payload","produc","provid","public","serial","signatur","signed_int","size","sort","specifi","struct","table.","type","type.","typedef","types,","unsigned_int","variabl"],"group__binary__extension.html":["&","&&","&&...","(","()",")","*",",","=",">","_data","_get","_has_valu","arg","auto","binari","binary_extens","binary_extension::_get","binary_extension::binary_extens","binary_extension::emplac","binary_extension::has_valu","binary_extension::oper","binary_extension::reset","binary_extension::valu","binary_extension::value_or","binary_extension::~binary_extens","bool","class","const","constexpr","construct","contain","convert","def","default","emplac","eosio::binary_extens","eosio::binary_extension::_data;","eosio::binary_extension::_has_value;","eosio::binary_extension::value_typ","explicit","ext","extens","function","group","has_valu","hold","name","oper","payload","place","precondition:","reset","specifi","std::aligned_storage::typ","std::in_place_t","t","t;","test","type","typedef","u","us","user","valu","value_or","value_typ","variabl","void","~binary_extens"],"group__contracttype.html":["base","class","contract","contract.","contracttyp","defin","eosio","eosio::contract","group","name","type"],"group__fixed__bytes.html":["!=","&","(",")","==",">",">=","array","bool","byte","c1","c1,","c2","c2,","c2.","class","compar","const","eosio::fixed_byt","fals","first","fix","fixed_byt","fixed_bytes::oper","fixed_bytes::operator==","function","group","lexicograph","lexicographically.","name","object","oper","operator<","operator<=","operator==","otherwis","parameters:","return","returns:","second","size","sort","true,","two","type","variabl"],"group__fixed__key.html":["!=","&","(",")","==",">",">=","bool","c1","c1,","c2","c2,","c2.","class","compar","const","eosio::fixed_key","fals","first","fix","fixed_key","fixed_key::oper","fixed_key::operator==","function","group","index","key","lexicograph","multi","name","object","oper","operator<","operator<=","operator==","otherwis","parameters:","return","returns:","second","size","sort","table.","true,","two","type","variabl"],"group__producertype.html":["action","action.","amount","author","base","base_per_transaction_net_usag","bill","block","block_signing_key","bool","class","constexpr","context_free_discount_net_usage_den","context_free_discount_net_usage_num","cover","deferred_trx_expiration_window","defin","depth","depth.","eosio::blockchain_parameters::base_per_transaction_net_usage;","eosio::blockchain_parameters::context_free_discount_net_usage_den;","eosio::blockchain_parameters::context_free_discount_net_usage_num;","eosio::blockchain_parameters::deferred_trx_expiration_window;","eosio::blockchain_parameters::max_authority_depth;","eosio::blockchain_parameters::max_block_cpu_usage;","eosio::blockchain_parameters::max_block_net_usage;","eosio::blockchain_parameters::max_inline_action_depth;","eosio::blockchain_parameters::max_inline_action_size;","eosio::blockchain_parameters::max_transaction_cpu_usage;","eosio::blockchain_parameters::max_transaction_delay;","eosio::blockchain_parameters::max_transaction_lifetime;","eosio::blockchain_parameters::max_transaction_net_usage;","eosio::blockchain_parameters::min_transaction_cpu_usage;","eosio::blockchain_parameters::net_usage_leeway;","eosio::blockchain_parameters::target_block_cpu_usage_pct;","eosio::blockchain_parameters::target_block_net_usage_pct;","eosio::producer_key","eosio::producer_key::block_signing_key;","eosio::producer_key::producer_name;","friend","group","incident","incidentals.","inlin","key","lifetim","max_authority_depth","max_block_cpu_usag","max_block_net_usag","max_inline_action_depth","max_inline_action_s","max_transaction_cpu_usag","max_transaction_delay","max_transaction_lifetim","max_transaction_net_usag","maximum","min_transaction_cpu_usag","name","net","net_usage_leeway","oper","operator<","produc","producer.","producer_nam","producertyp","producertype::oper","public_key","sign","size","struct","target_block_cpu_usage_pct","target_block_net_usage_pct","transact","transacton","transacton.","type","type.","uint16_t","uint32_t","uint64_t","us","usag","variabl"],"group__publickeytype.html":["class","eosio::public_key","group","key","name","public","publickeytyp","specifi","struct","type","type."],"group__signaturetype.html":["class","eosio::signatur","group","name","signatur","signaturetyp","specifi","struct","type","type."],"group__varint.html":["class","defin","effici","group","integ","length","more","name","provid","serialization/.","signed_int","struct","type","unsigned_int","variabl","varint"],"classes.html":["(_multi_index_detail)","(detail)","(eosio)","*","32",">","action","action,","action_wrapp","arg,","args...","asset","b","binary_extens","block_timestamp","blockchain_paramet","bool","bool,","brows","c","capi_public_key","capi_signatur","char","check_typ","check_types<","class","const","const_mem_fun","contract","convert","convert<","d","datastream","datastream<","e","eosio::fixed_bytes<","eosio::key256","extend","extended_asset","extended_symbol","f","fixed_byt","fixed_bytes::bool_pack","fixed_key","fixed_key::bool_pack","fixed_point128","fixed_point32","fixed_point64","g","get_nth","get_nth_impl","get_nth_impl<","i,","ignor","ignore<","ignore_wrapp","index","indexed_bi","inline_dispatch","inline_dispatcher<","iostream","is_sam","is_same<","m","memory_manag","memory_manager::memori","memory_manager::memory::buffer_ptr","microsecond","multi_index","multi_index::const_iter","multi_index::index","multi_index::index::const_iter","multi_index::intc","multi_index::item","multi_index::item_ptr","n","n,","name","o","onerror","p","permission_level","producer_key","producer_schedul","public_key","r","reflector","s","secondary_index_db_funct","secondary_key_trait","secondary_key_traits<","signatur","signed_int","singleton","singleton::row","size_t","store","symbol","symbol_cod","t","t,","time_point","time_point_sec","to_const_char_arr","transact","transaction_head","u","unsigned_int","unwrap","unwrap<","v","variant_action_wrapp","void(t::*)(args...),"],"functions.html":["!=","(eosio::_multi_index_detail::secondary_key_trait","(eosio::action)","(eosio::action,","(eosio::action_wrapper)","(eosio::action_wrapper,","(eosio::asset)","(eosio::asset,","(eosio::binary_extension)","(eosio::binary_extension,","(eosio::block_timestamp)","(eosio::block_timestamp,","(eosio::const_mem_fun)","(eosio::contract)","(eosio::contract,","(eosio::datastream)","(eosio::datastream,","(eosio::extended_asset)","(eosio::extended_symbol)","(eosio::fixed_bytes)","(eosio::fixed_bytes,","(eosio::fixed_key)","(eosio::fixed_point128)","(eosio::fixed_point128,","(eosio::fixed_point32)","(eosio::fixed_point32,","(eosio::fixed_point64)","(eosio::ignore_wrapper)","(eosio::ignore_wrapper,","(eosio::inline_dispatcher)","(eosio::memory_manager)","(eosio::memory_manager,","(eosio::memory_manager::memory)","(eosio::memory_manager::memory::buffer_ptr)","(eosio::memory_manager::memory::buffer_ptr,","(eosio::microseconds)","(eosio::multi_index)","(eosio::multi_index,","(eosio::multi_index::const_iterator,","(eosio::multi_index::index)","(eosio::multi_index::index,","(eosio::multi_index::intc)","(eosio::multi_index::item)","(eosio::multi_index::item_ptr)","(eosio::name)","(eosio::name,","(eosio::onerror)","(eosio::permission_level)","(eosio::singleton)","(eosio::singleton::row)","(eosio::symbol)","(eosio::symbol,","(eosio::symbol_code)","(eosio::time_point)","(eosio::time_point,","(eosio::time_point_sec)","(eosio::transaction)","(eosio::transaction_header)","(eosio::variant_action_wrapper)","(signed_int)","(unsigned_int)","*","*=","::free","=",">",">,",">::call",">::datastream",">::lowest",">::put",">::remain",">::seekp",">::skip",">::tellp",">::valid",">::write",">=","_","_get","action","action::act","action::data_a","action::eoslib_seri","action_wrapp","action_wrapper::action_wrapp","adjust_to_mem_block","asset","asset::asset","asset::is_amount_within_rang","asset::oper","asset::operator/=","asset::set_amount","available_primary_key","b","begin","binary_extens","binary_extension::_get","binary_extension::binary_extens","binary_extension::has_valu","binary_extension::reset","binary_extension::valu","binary_extension::value_or","binary_extension::~binary_extens","block_timestamp","block_timestamp::block_timestamp","block_timestamp::next","block_timestamp::set_time_point","block_timestamp::to_time_point","bool","buffer_ptr","c","call","cbegin","cend","char_to_valu","class","cleanup_remain","code","const_iter","const_mem_fun::operator()","contract","contract::contract","contract::get_datastream","contract::get_self","count","crbegin","crend","d","data_a","datastream","datastream::po","datastream::read","datastream<","document","e","each","emplac","end","eosio::_multi_index_detail::secondary_key_traits)","eosio::action_wrapper,","eosio::datastream)","eosio::extended_asset,","eosio::extended_symbol,","eosio::fixed_key)","eosio::fixed_point128,","eosio::fixed_point32,","eosio::fixed_point64)","eosio::fixed_point64,","eosio::ignore_wrapper,","eosio::key256","eosio::memory_manager::memory)","eosio::microseconds)","eosio::microseconds,","eosio::multi_index)","eosio::multi_index,","eosio::multi_index::const_iterator,","eosio::multi_index::index)","eosio::multi_index::index,","eosio::multi_index::index::const_iterator)","eosio::multi_index::index::const_iterator,","eosio::name)","eosio::name,","eosio::singleton)","eosio::symbol)","eosio::symbol,","eosio::symbol_code)","eosio::time_point)","eosio::time_point,","eosio::time_point_sec)","eosio::time_point_sec,","eosio::transaction,","eosio::variant_action_wrapper)","eoslib_seri","eras","exist","expand_memori","extended_asset","extended_asset::extended_asset","extended_asset::get_extended_symbol","extended_symbol","extended_symbol::extended_symbol","extended_symbol::get_contract","extended_symbol::get_symbol","extract_secondary_key","f","find","fixed_byt","fixed_bytes::fixed_byt","fixed_bytes::for","fixed_key","fixed_key::fixed_key","fixed_key::num_word","fixed_key::padded_byt","fixed_key::set_from_word_sequ","fixed_point128","fixed_point128::fixed_point128","fixed_point32","fixed_point32::fixed_point32","fixed_point64","fixed_point64::fixed_point64","fixed_point64::frac_part","fixed_point64::int_part","fixed_point64::oper","fixed_point64::operator/","fixed_point64::operator>","frac_part","free","from_current_act","function","g","get_cod","get_contract","get_datastream","get_extended_symbol","get_index","get_mem_ptr","get_or_cr","get_or_default","get_scop","get_self","get_symbol","h","has_valu","here","ignor","ignore<","ignore_wrapp","ignore_wrapper::ignore_wrapp","ignore_wrapper::oper","index","init","inline_dispatcher<","int32_t","int_part","is_alloc","is_amount_within_rang","is_capacity_remain","is_in_heap","is_init","is_valid","item","item_ptr","iterator_to","l","length","link","list","load_object_by_primary_iter","lower_bound","lowest","m","malloc","malloc_from_fre","mark_alloc","mark_fre","maximum","member:","memori","memory_manag","memory_manager::adjust_to_mem_block","memory_manager::memory::buffer_ptr::buffer_ptr","memory_manager::memory::buffer_ptr::is_alloc","memory_manager::memory::buffer_ptr::mark_alloc","memory_manager::memory::buffer_ptr::mark_fre","memory_manager::memory::buffer_ptr::merge_contigu","memory_manager::memory::buffer_ptr::merge_contiguous_if_avail","memory_manager::memory::buffer_ptr::next_ptr","memory_manager::memory::buffer_ptr::ptr","memory_manager::memory::buffer_ptr::s","memory_manager::memory::cleanup_remain","memory_manager::memory::expand_memori","memory_manager::memory::fre","memory_manager::memory::init","memory_manager::memory::is_capacity_remain","memory_manager::memory::is_in_heap","memory_manager::memory::is_init","memory_manager::memory::malloc","memory_manager::memory::malloc_from_fre","memory_manager::memory::memori","memory_manager::memory::realloc_in_plac","memory_manager::memory_manag","memory_manager::next_active_heap","memory_manager::realloc","memory_manager::void","merge_contigu","merge_contiguous_if_avail","microsecond","microseconds::count","microseconds::microsecond","microseconds::oper","microseconds::operator!=","microseconds::to_second","min","modifi","multi_index","multi_index::available_primary_key","multi_index::emplac","multi_index::get_index","multi_index::index::begin","multi_index::index::cbegin","multi_index::index::cend","multi_index::index::const_iterator::const_iter","multi_index::index::const_iterator::oper","multi_index::index::crbegin","multi_index::index::crend","multi_index::index::end","multi_index::index::eras","multi_index::index::extract_secondary_key","multi_index::index::find","multi_index::index::get_cod","multi_index::index::get_scop","multi_index::index::index","multi_index::index::numb","multi_index::index::validate_index_nam","multi_index::intc::oper","multi_index::item::item","multi_index::item_ptr::item_ptr","multi_index::iterator_to","multi_index::load_object_by_primary_iter","multi_index::lower_bound","multi_index::modifi","multi_index::multi_index","multi_index::rbegin","multi_index::rend","multi_index::require_find","multi_index::transform_indic","multi_index::upper_bound","multi_index::validate_table_nam","n","name","name::char_to_valu","name::nam","name::oper","name::suffix","next","next_active_heap","next_ptr","num_word","number","o","onerror::from_current_act","onerror::unpack_sent_trx","oper","operator!=","operator()","operator+","operator++","operator+=","operator/","operator/=","operator=","operator==","operator>","p","padded_byt","permission_level","permission_level::permission_level","po","precis","primary_key","print","ptr","put","r","raw","rbegin","read","realloc","realloc_in_plac","remain","remov","rend","require_find","reset","s","sec_since_epoch","secondary_key_traits<","seekp","send","send_context_fre","set","set_amount","set_from_word_sequ","set_time_point","signed_int","signed_int)","signed_int,","signed_int::oper","signed_int::operator++","signed_int::signed_int","singleton","singleton::exist","singleton::get","singleton::get_or_cr","singleton::get_or_default","singleton::remov","singleton::row::primary_key","singleton::set","singleton::singleton","size","size_t","skip","suffix","symbol","symbol::cod","symbol::precis","symbol::print","symbol::symbol","symbol_cod","symbol_code::is_valid","symbol_code::length","symbol_code::oper","symbol_code::raw","symbol_code::symbol_cod","symbol_code::to_str","symbol_code::write_as_str","t","tellp","time_point","time_point::oper","time_point::operator<","time_point::operator<=","time_point::operator==","time_point::time_point","time_point::time_since_epoch","time_point_sec","time_point_sec::maximum","time_point_sec::min","time_point_sec::oper","time_point_sec::operator+","time_point_sec::operator+=","time_point_sec::sec_since_epoch","time_point_sec::time_point_sec","time_since_epoch","to_act","to_second","to_str","to_time_point","transact","transaction::transact","transaction_head","transaction_header::transaction_head","transform_indic","u","uint64_t","unpack_sent_trx","unsigned_int","unsigned_int)","unsigned_int::oper","unsigned_int::operator=","unsigned_int::unsigned_int","upper_bound","v","valid","validate_index_nam","validate_table_nam","valu","value_or","variant_action_wrapp","variant_action_wrapper::get_mem_ptr","variant_action_wrapper::send","variant_action_wrapper::send_context_fre","variant_action_wrapper::to_act","variant_action_wrapper::variant_action_wrapp","void","void(t::*)(args...),","w","write","write_as_str","~","~binary_extens"],"variables.html":["(capi_public_key,","(eosio::action)","(eosio::action_wrapper,","(eosio::asset)","(eosio::asset,","(eosio::binary_extension)","(eosio::binary_extension,","(eosio::block_timestamp)","(eosio::blockchain_parameters)","(eosio::contract)","(eosio::contract,","(eosio::datastream)","(eosio::datastream,","(eosio::detail::check_types,","(eosio::extended_asset)","(eosio::extended_asset,","(eosio::fixed_bytes,","(eosio::fixed_point128,","(eosio::memory_manager)","(eosio::memory_manager::memory)","(eosio::memory_manager::memory::buffer_ptr)","(eosio::microseconds)","(eosio::multi_index)","(eosio::multi_index::const_iterator,","(eosio::multi_index::index::const_iterator)","(eosio::multi_index::item)","(eosio::multi_index::item_ptr)","(eosio::onerror)","(eosio::permission_level)","(eosio::producer_key)","(eosio::producer_schedule)","(eosio::public_key,","(eosio::singleton)","(eosio::time_point)","(eosio::time_point_sec)","(eosio::transaction)","(eosio::transaction_header)","_","__idx","__iter","__primary_itr","_active_free_heap","_active_heap","_alloc_memory_mask","_available_heap","_code","_count","_d","_data","_end","_has_valu","_heap","_heap_end","_heap_siz","_heaps_actual_s","_heaps_siz","_idx","_indic","_initial_heap","_initial_heap_s","_item","_items_vector","_mem_block","_multidx","_next_primary_key","_offset","_po","_primary_itr","_primary_key","_ptr","_rem_mem_block_mask","_scope","_self","_size","_size_mark","_start","_t","account","action","action::account","action::author","action::nam","action_nam","actor","amount","arr","arr_itr","asset::amount","asset::max_amount","author","b","base_per_transaction_net_usag","binary_extension::_has_valu","block_interval_m","block_signing_key","block_timestamp::block_interval_m","block_timestamp::block_timestamp_epoch","block_timestamp::slot","block_timestamp_epoch","blockchain_parameters::base_per_transaction_net_usag","blockchain_parameters::context_free_discount_net_usage_den","blockchain_parameters::context_free_discount_net_usage_num","blockchain_parameters::deferred_trx_expiration_window","blockchain_parameters::max_authority_depth","blockchain_parameters::max_block_cpu_usag","blockchain_parameters::max_block_net_usag","blockchain_parameters::max_inline_action_depth","blockchain_parameters::max_inline_action_s","blockchain_parameters::max_transaction_cpu_usag","blockchain_parameters::max_transaction_delay","blockchain_parameters::max_transaction_lifetim","blockchain_parameters::max_transaction_net_usag","blockchain_parameters::min_transaction_cpu_usag","blockchain_parameters::net_usage_leeway","blockchain_parameters::target_block_cpu_usage_pct","blockchain_parameters::target_block_net_usage_pct","c","capi_signature,","class","code_nam","context_free_act","context_free_discount_net_usage_den","context_free_discount_net_usage_num","contract","contract::_d","contract::_self","d","data","datastream::_end","datastream::_po","datastream::_start","deferred_trx_expiration_window","delay_sec","document","e","each","elaps","eosio::action,","eosio::detail::check_types,","eosio::detail::get_nth,","eosio::detail::get_nth_impl,","eosio::detail::is_same,","eosio::detail::to_const_char_arr,","eosio::extended_symbol)","eosio::fixed_bytes,","eosio::fixed_key)","eosio::fixed_point32,","eosio::fixed_point64)","eosio::ignore_wrapper,","eosio::memory_manager::memory::buffer_ptr)","eosio::multi_index)","eosio::multi_index::index)","eosio::multi_index::index::const_iterator,","eosio::multi_index::item_ptr)","eosio::name,","eosio::public_key,","eosio::signature)","eosio::singleton::row,","eosio::symbol,","eosio::symbol_code,","eosio::variant_action_wrapper)","expir","extended_asset::quant","extended_symbol::contract","extended_symbol::symbol","fixed_key::_data","fixed_key::arr","fixed_key::arr_itr","fixed_point64::v","here","index","indices_typ","link","list","m","max_amount","max_authority_depth","max_block_cpu_usag","max_block_net_usag","max_cpu_usage_m","max_inline_action_depth","max_inline_action_s","max_net_usage_word","max_stack_buffer_s","max_transaction_cpu_usag","max_transaction_delay","max_transaction_lifetim","max_transaction_net_usag","member:","memory_manager::_active_free_heap","memory_manager::_active_heap","memory_manager::_alloc_memory_mask","memory_manager::_available_heap","memory_manager::_heaps_actual_s","memory_manager::_heaps_s","memory_manager::_initial_heap","memory_manager::_initial_heap_s","memory_manager::_mem_block","memory_manager::_rem_mem_block_mask","memory_manager::_size_mark","memory_manager::memory::_heap","memory_manager::memory::_heap_s","memory_manager::memory::_offset","memory_manager::memory::buffer_ptr::_heap_end","memory_manager::memory::buffer_ptr::_ptr","memory_manager::memory::buffer_ptr::_s","microseconds::_count","min_transaction_cpu_usag","multi_index::_cod","multi_index::_indic","multi_index::_items_vector","multi_index::_next_primary_key","multi_index::_scop","multi_index::index::_multidx","multi_index::index::const_iterator::_idx","multi_index::indices_typ","multi_index::item::__idx","multi_index::item::__it","multi_index::item::__primary_itr","multi_index::item_ptr::_item","multi_index::item_ptr::_primary_itr","multi_index::item_ptr::_primary_key","multi_index::max_stack_buffer_s","n","name","net_usage_leeway","onerror::sender_id","onerror::sent_trx","p","permiss","permission_level::actor","permission_level::permiss","pk_valu","produc","producer_key::block_signing_key","producer_key::producer_nam","producer_nam","producer_schedule::produc","producer_schedule::vers","q","quantiti","r","ref_block_num","ref_block_prefix","s","sender_id","sent_trx","signature::data","signature::typ","signed_int,","singleton::_t","singleton::pk_valu","slot","symbol","t","target_block_cpu_usage_pct","target_block_net_usage_pct","time_point::elaps","time_point_sec::utc_second","transaction::act","transaction::context_free_act","transaction::transaction_extens","transaction_extens","transaction_header::delay_sec","transaction_header::expir","transaction_header::max_cpu_usage_m","transaction_header::max_net_usage_word","transaction_header::ref_block_num","transaction_header::ref_block_prefix","type","u","unsigned_int)","unsigned_int::valu","utc_second","v","val","valu","variabl","variant_action_wrapper::action_nam","variant_action_wrapper::code_nam","variant_action_wrapper::permiss","version"],"enumerations.html":["(eosio::indexed_by,","(eosio::multi_index)","(eosio::multi_index::intc)","(eosio::name)","c","class","constant","document","e","each","enumer","eosio::multi_index::index)","here","index","link","list","member:","multi_index::index::const","multi_index::intc::","multi_index::next_primary_key_tag","n","name::raw","next_primary_key_tag","r","raw"],"annotated.html":["*","32",">","_datastream_detail","_multi_index_detail","action","action,","action_wrapp","arg,","args...","asset","binary_extens","block_timestamp","blockchain_paramet","bool","bool,","bool_pack","brief","buffer_ptr","capi_public_key","capi_signatur","char","check_typ","check_types<","class","classes,","const","const_iter","const_mem_fun","contract","convert","convert<","datastream","datastream<","descriptions:","detail","eosio","eosio::fixed_bytes<","eosio::key256","extend","extended_asset","extended_symbol","fixed_byt","fixed_key","fixed_point128","fixed_point32","fixed_point64","get_nth","get_nth_impl","get_nth_impl<","here","i,","ignor","ignore<","ignore_wrapp","index","indexed_bi","inline_dispatch","inline_dispatcher<","intc","interfac","iostream","is_sam","is_same<","item","item_ptr","list","memori","memory_manag","microsecond","multi_index","n,","name","namespac","onerror","permission_level","producer_key","producer_schedul","public_key","reflector","row","secondary_index_db_funct","secondary_key_trait","secondary_key_traits<","signatur","signed_int","singleton","size_t","store","struct","structs,","symbol","symbol_cod","t","t,","time_point","time_point_sec","to_const_char_arr","transact","transaction_head","u","union","unsigned_int","unwrap","unwrap<","variant_action_wrapp","void(t::*)(args...),"],"struct_extended.html":[">","class","descript","detail","document","extend","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/symbol.hpp","inform","list","owner","store","struct","symbol"],"struct_stores.html":[">","class","code","code.","descript","detail","document","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/symbol.hpp","list","more...","store","struct","symbol"],"structcapi__public__key.html":["34",">","attribut","bytes.","capi_public_key","capi_public_key::data[34];","char","class","data","descript","detail","document","eosio","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/types.h","key.","list","more...","name","public","struct","type","variabl"],"structcapi__signature.html":["66",">","attribut","bytes.","capi_signatur","capi_signature::data[66];","class","data","descript","detail","document","eosio","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/types.h","list","more...","name","public","signature.","struct","type","uint8_t","variabl"],"namespaceeosio.html":["!=","\"abcde\"_n;","\"account2\"_n,","\"account3\"_n);","\"hello","%\",","&","&&","&&...","(","()","(1/2)","(1/24)","(10/24)","(11/24)","(12/24)","(13/24)","(14/24)","(15/24)","(16/24)","(17/24)","(18/24)","(19/24)","(2/2)","(2/24)","(20/24)","(21/24)","(22/24)","(23/24)","(24/24)","(3/24)","(4/24)","(5/24)","(6/24)","(7/24)","(8/24)","(87654323456);","(9/24)","(a)(b)(c)","(arg","(bool","(cannot","(const","(datastream","(doubl","(empti","(eosio::blockchain_paramet","(eosio::symbol_cod","(fixed_byt","(fixed_key","(float","(i.e.","(int","(int128_t","(int32_t","(int64_t","(iostream","(it","(long","(name","(std::string","(t","(uint128_t","(uint32_t","(uint64_t","(unsign",")","*","*s",",","/","//","//1","//4","//8","0","1","10);","128","1e+18;","2323)","32","64","::eosio::ignor","::eosio::ignore)","::eosio::ignore_wrapp","=","==",">",">())",">(),",">=",">>","a,","a;","accepts,","account","account,","account.","accounts...","act","act)","act,","action","action,","action.","action.cod","action_wrapp","actiontyp","activ","ad","add","alway","api","apples:","arg","args)","args...","argument","array","assert_recover_key","assert_ripemd160","assert_sha1","assert_sha256","assert_sha512","asset","assignhelp","auth","auth,","auth.","author","auths.","b;","base32","be)","behav","binary_extens","binary_extension.","bit","block_timestamp","block_timestamp_typ","blockchain","blockchain_paramet","blolckchain","bodi","bool","bool.","boost::container::flat_map","boost::container::flat_set","buffer","buffer,","byte","bytes)","c","c)","c++","c1","c1,","c2","c2)","c2,","c2.","c;","calcul","call","capi_checksum160","capi_checksum256","capi_checksum512","capi_public_key","cast","char","char.","check","check_permission_author","check_transaction_author","checksum160","checksum256","checksum256.","checksum512","class","class.","code","code,","compar","comput","consid","const","const_mem_fun","constexpr","contain","context","contract","contract::on(","correpond","cout","cs","cs)","current","d","d)","data","data,","data.","datastream","datastream&","datastream<","day","delay","delay,","deriv","deseri","destin","digest","digest,","digest.","dispatch","dispatch_inlin","divid","document","doesn't","doubl","double)","ds","ds,","dummy_act","dummy_action,","dynam","enabl","encod","eosio","eosio::assert_recover_key","eosio::assert_ripemd160","eosio::assert_sha1","eosio::assert_sha256","eosio::assert_sha512","eosio::assignhelp","eosio::binary_extens","eosio::block_timestamp_type;","eosio::blockchain_paramet","eosio::check_permission_author","eosio::check_transaction_author","eosio::checksum160","eosio::checksum256","eosio::checksum512","eosio::contract","eosio::cout;","eosio::day","eosio::deseri","eosio::dispatch","eosio::dispatch_inlin","eosio::execute_act","eosio::extension;","eosio::extensions_type;","eosio::fixed_divid","eosio::get_act","eosio::get_blockchain_paramet","eosio::has_auth","eosio::hour","eosio::is_account","eosio::key256;","eosio::memory_heap;","eosio::millisecond","eosio::minut","eosio::oper","eosio::operator==","eosio::operator>>","eosio::pack","eosio::pack_s","eosio::print","eosio::print_f","eosio::public_key","eosio::public_key.","eosio::recover_key","eosio::require_auth","eosio::require_recipi","eosio::ripemd160","eosio::same_payer;","eosio::second","eosio::set_blockchain_paramet","eosio::sha1","eosio::sha256","eosio::sha512","eosio::signatur","eosio::signature.","eosio::symbol","eosio::symbol_cod","eosio::unpack","eosio::unpack_action_data","eoslib_serialize(","error","evalu","example:","exce","except","execut","execute_act","exist","extended_asset","extended_symbol","extens","extensions_typ","fail","fail.","fals","fast","file:","first","fix","fixed_byt","fixed_bytes.","fixed_bytes;","fixed_divid","fixed_divide(131313,","fixed_key","fixed_point128","fixed_point128.","fixed_point32","fixed_point64","fixed_point64.","flat","flat_set","flat_set.","float","float)","follow","format","found.","free","func","func)","function","gener","get_act","get_blockchain_paramet","given","h","h)","handler","handler,","handler.","has_auth","hash","hash)","have","hello","helper","hexidecim","hour","i)","i.e.","ignor","ignore_wrapp","ignored_wrapp","ignored_wrapper'","implement","in/eosio.cdt/libraries/eosiolib/action.hpp","incom","index","index)","indexed_bi","indic","inline_dispatch","inline_dispatcher<","input","insid","int","int128_t","int32_t","int64_max)","int64_t","integ","integer.","interpret","iostream","iostream&","iostream.","is_account","k","key","key256","key256.","keys,","len","len)","length","length)","length,","level","level)","lexicograph","lhs,","list","long","m","m)","map","map.","match","member","memory_heap","memory_manag","messag","method","microsecond","millisecond","minut","mode.","msg","multi_index","multipl","n","n)","name","name)","namespac","new","non","note:","notifi","notified.","notify_account","notify_account)","notify_account,","null","num","num)","number","obj","object","object.","onerror","op","oper","operator<","operator<<","operator<=","operator==","operator>>","opt","opt)","optim","option","optional.","otherwis","ouput:","out","out,","output","overload","owner","pack","pack_siz","param","paramet","parameters.","parameters:","params)","part","permiss","permission,","permission_level","permissions.","perms,","point","pointer","pointer.","post","precis","precondition:","primit","print","print(","print()","print_f","print_f(\"numb","printf/","producer_key","producer_schedul","provid","provided_delay_u","provided_key","provided_keys,","provided_permiss","provided_permissions,","ptr","ptr)","pubkey","pubkey)","public","public_key","public_key.","q","q,","qr","qr)","quadrupl","read","receiv","recov","recover_key","refer","reflector","remaining_account","remaining_accounts)","replac","request","requir","require_auth","require_recipi","require_recipient(\"account1\"_n,","rest","rest)","result","retriev","return","returns:","rh","rhs)","rhs_val,","ripemd160","ripemd160.","s","s)","s,","same_pay","second","self,","serial","serializea","serialized,","set","set.","set_blockchain_paramet","sha1","sha1.","sha256","sha256.","sha512","sha512.","sig","sig)","sig,","sign","signatur","signature.","similar","singl","singleton","size","size_t","specifi","specifier)","static","static_cast(std::numeric_limits::max())","static_cast(std::numeric_limits::max()))","std::array","std::array.","std::map","std::option","std::out","std::pair","std::pair.","std::set","std::set()","std::set(),","std::setpermission_level","std::setpublic_key","std::string","std::tupl","std::variant","std::variant.","std::vector","std::vectorextens","std::vectorpermission_level","store","stream","stream.","strem","string","string.","string_as_unsigned_64_bit","string_as_unsigned_64_bit);","struct","sym","sym)","sym_cod","sym_code)","symbol","symbol.","symbol_cod","symbol_code.","t","t(&)","t)","t.","templat","termin","test","throw","time_point","time_point_sec","times.","transact","transaction.","transaction_head","true","true,","trx","trx,","tupl","tuple.","two","type","type,","type.","typedef","uint128_t","uint32_t","uint64_t","uint8_t","unit32","unit64","unpack","unpack_action_data","unpack_action_data();","unsign","unsigned_128_bit_int","unsigned_128_bit_int,","unsigned_64_bit_int","unsigned_64_bit_int,","us","v","v)","val","val)","val,","valu","value)","value.","values.","var","var)","var,","variabl","variant_action_wrapp","vector","vector.","verifi","void","void(t::*)(args...)","void(t::*)(args...),","want","whether","wildcard)","work","world!\";","world!100000000000000000087654323456abcd","wrapper","write","{","};"],"namespaceeosio_1_1__datastream__detail.html":["()","::",">","_datastream_detail","bool","check","class","constexpr","document","eosio","eosio::_datastream_detail","eosio::_datastream_detail::is_point","eosio::_datastream_detail::is_primit","fals","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/datastream.hpp","is_point","is_primit","list","name","namespac","otherwis","parameters:","pointer","pointer.","primit","returns:","t","templat","true","type","type."],"namespaceeosio_1_1__multi__index__detail.html":["32","::",">","_multi_index_detail","class","document","eosio","eosio::_multi_index_detail","eosio::fixed_bytes<","eosio::key256","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","list","name","namespac","secondary_index_db_funct","secondary_key_trait","secondary_key_traits<","struct","type"],"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":["::",">","_multi_index_detail","class","document","eosio","eosio::_multi_index_detail::secondary_index_db_funct","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","list","secondary_index_db_funct","struct"],"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":["::",">","_multi_index_detail","class","document","eosio","eosio::_multi_index_detail::secondary_key_trait","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","list","secondary_key_trait","struct"],"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":["()","32","::",">",">::lowest","_multi_index_detail","class","constexpr","document","eosio","eosio::_multi_index_detail::secondary_key_trait","eosio::_multi_index_detail::secondary_key_traits<","eosio::fixed_byt","eosio::fixed_bytes<","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","list","lowest","name","public","secondary_key_trait","secondary_key_traits<","static","struct","type"],"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":["()","::",">","_multi_index_detail","class","constexpr","document","eosio","eosio::_multi_index_detail::secondary_key_trait","eosio::_multi_index_detail::secondary_key_traits::lowest","eosio::_multi_index_detail::secondary_key_traits<","eosio::key256","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","list","lowest","name","public","secondary_key_trait","secondary_key_traits<","static","struct","type"],"structeosio_1_1action.html":["&","&&","(","()","(1/3)","(2/3)","(3/3)","(account)(name)(authorization)(data)","(account)(name)(authorization)(data))","(action","(action,","(const","(std::vectorpermission_level",")",",","::","=",">","a,","account","accountnam","action","action.","along","attribut","auth","auth,","author","authorizationlist","auths,","class","const","construct","constructor","contain","context","data","data.","data_a","datapayload","default","descript","detail","document","eosio","eosio::act","eosio::action::account;","eosio::action::act","eosio::action::authorization;","eosio::action::data;","eosio::action::data_a","eosio::action::eoslib_seri","eosio::action::name;","eosio::action::send_context_fre","eoslib_seri","expect","file:","follow","for.","free","function","gener","given","in/eosio.cdt/libraries/eosiolib/action.hpp","inlin","intend","levels.","list","meta","more...","n","n,","name","name,","namenam","new","object","object.","pack","pack(...)","parameters:","payload","permiss","permission,","permission_level","permissions,","precondition:","public","receiver)","receiver,","represent","retriev","returns:","send","send_context_fre","serial","serializ","std::vector","std::vectorpermission_level","struct","struct,","struct.","t","t.","templat","type","unpack","valu","value)","variabl","via","void"],"structeosio_1_1action__wrapper.html":["&","&&","&&...","(","()","(1/4)","(2/4)","(3/4)","(4/4)","(arg","(code",")","::",">","action","action_nam","action_wrapp","arg","args)","attribut","auto","class","code","code,","code_nam","const","constexpr","document","eosio","eosio::action_wrapp","eosio::action_wrapper::action_name;","eosio::action_wrapper::action_wrapp","eosio::action_wrapper::code_name;","eosio::action_wrapper::get_mem_ptr","eosio::action_wrapper::permissions;","eosio::action_wrapper::send","eosio::action_wrapper::send_context_fre","eosio::action_wrapper::to_act","eosio::nam","eosio::permission_level","file:","follow","function","gener","get_mem_ptr","in/eosio.cdt/libraries/eosiolib/action.hpp","list","name","perm","perm)","permiss","perms)","public","send","send_context_fre","static","std::vector","std::vectoreosio::permission_level","struct","to_act","type","variabl","void"],"structeosio_1_1asset.html":["&","(","()","(1/2)","(2/2)","(const","(int64_t",")","*","*=","*multipl","1","2^62","::","=",">","a)","a,","act","ad","addit","amount","amount.","amountth","anoth","asset","asset&","asset'","asset.","assign","attribut","b","b,","bool","both","cap","check","class","compar","const","constexpr","construct","divid","dividend","divis","divisor","document","doesn't","eosio","eosio::asset","eosio::asset::amount;","eosio::asset::asset","eosio::asset::is_amount_within_rang","eosio::asset::is_valid","eosio::asset::max_amount;","eosio::asset::oper","eosio::asset::operator!=","eosio::asset::operator+","eosio::asset::operator+=","eosio::asset::operator/","eosio::asset::operator/=","eosio::asset::operator==","eosio::asset::operator>","eosio::asset::operator>=","eosio::asset::print","eosio::asset::set_amount","eosio::asset::symbol;","eosio::asset::to_str","equal","exce","fals","file:","first","follow","friend","function","gener","given","greater","in/eosio.cdt/libraries/eosiolib/asset.hpp","inequ","int64_t","is_amount_within_rang","is_valid","it'","itself.","less","list","max","max_amount","max_amountmaximum","maximum","minu","multipl","multipli","name","neg","new","number","number.","object.","oper","operator!=","operator!=inequ","operator+","operator+=","operator+addit","operator,","operator.","operator/","operator/=","operator/divis","operator<","operator<=","operator==","operator==equ","operator>","operator>=","operator>=great","operator>great","operatorless","otherwis","parameters:","possibl","post","preceed","preceeding.","precondition:","print","proceed","proceeding.","public","refer","result","returns:","s","s)","same","second","set","set_amount","static","std::string","struct","subtract","symbol","symbolth","to_str","true","type","unari","us","valid","valid.","valu","variabl","void"],"classeosio_1_1binary__extension.html":["&","&&","&&...","(","()","(arg","(binary_extens","(const","(std::in_place_t,","(t","(u",")","*",",","::","=",">","arg","args)","auto","binari","binary_extens","bool","class","const","constexpr","construct","contain","convert","def","def)","default","descript","detail","document","emplac","eosio","eosio::binary_extens","eosio::binary_extension::binary_extens","eosio::binary_extension::emplac","eosio::binary_extension::has_valu","eosio::binary_extension::oper","eosio::binary_extension::reset","eosio::binary_extension::valu","eosio::binary_extension::value_or","eosio::binary_extension::value_typ","eosio::binary_extension::~binary_extens","explicit","ext","ext)","extens","file:","follow","function","gener","has_valu","hold","in/eosio.cdt/libraries/eosiolib/binary\\_extension.hpp","list","more...","name","oper","other)","parameters:","payload","place","precondition:","public","reset","specifi","std::in_place_t","t","t;","templat","test","type","typedef","u","us","user","valu","value_or","value_typ","void","~binary_extens"],"classeosio_1_1block__timestamp.html":["!=","&","(","()","(1/3)","(2/3)","(3/3)","(const","(uint32_t",")","0","0)","::","=",">",">=","attribut","block","block_interval_m","block_timestamp","block_timestamp_epoch","bool","class","comput","const","constexpr","descript","detail","document","eosio","eosio::block_timestamp","eosio::block_timestamp::block_interval_ms;","eosio::block_timestamp::block_timestamp","eosio::block_timestamp::block_timestamp_epoch;","eosio::block_timestamp::maximum","eosio::block_timestamp::min","eosio::block_timestamp::next","eosio::block_timestamp::oper","eosio::block_timestamp::operator=","eosio::block_timestamp::operator==","eosio::block_timestamp::slot;","eosio::block_timestamp::to_time_point","epoch","explicit","file:","follow","function","gener","header","in/eosio.cdt/libraries/eosiolib/time.hpp","int32_t","int64_t","interv","list","maximum","millisecond","min","name","next","number","oper","operator<","operator<=","operator=","operator==","parameteris","public","repres","s","slot","slots.","static","t","t)","take","time","time_point","time_point_sec","to_time_point","type","uint32_t","us","variabl","void"],"structeosio_1_1blockchain__parameters.html":["::",">","action","action.","amount","attribut","author","base","base_per_transaction_net_usag","base_per_transaction_net_usageth","bill","blockchain","blockchain_paramet","chang","class","configur","consensu","consensus.","context_free_discount_net_usage_den","context_free_discount_net_usage_num","cover","deferred_trx_expiration_window","depth","depth.","descript","detail","document","eosio","eosio::blockchain_paramet","eosio::blockchain_parameters::base_per_transaction_net_usage;","eosio::blockchain_parameters::context_free_discount_net_usage_den;","eosio::blockchain_parameters::context_free_discount_net_usage_num;","eosio::blockchain_parameters::deferred_trx_expiration_window;","eosio::blockchain_parameters::max_authority_depth;","eosio::blockchain_parameters::max_block_cpu_usage;","eosio::blockchain_parameters::max_block_net_usage;","eosio::blockchain_parameters::max_inline_action_depth;","eosio::blockchain_parameters::max_inline_action_size;","eosio::blockchain_parameters::max_transaction_cpu_usage;","eosio::blockchain_parameters::max_transaction_delay;","eosio::blockchain_parameters::max_transaction_lifetime;","eosio::blockchain_parameters::max_transaction_net_usage;","eosio::blockchain_parameters::min_transaction_cpu_usage;","eosio::blockchain_parameters::net_usage_leeway;","eosio::blockchain_parameters::target_block_cpu_usage_pct;","eosio::blockchain_parameters::target_block_net_usage_pct;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/privileged.hpp","incident","incidentals.","inlin","lifetim","list","max_authority_depth","max_authority_depthmaximum","max_block_cpu_usag","max_block_net_usag","max_inline_action_depth","max_inline_action_depthmaximum","max_inline_action_s","max_inline_action_sizemaximum","max_transaction_cpu_usag","max_transaction_delay","max_transaction_lifetim","max_transaction_lifetimemaximum","max_transaction_net_usag","maximum","min_transaction_cpu_usag","more...","name","net","net_usage_leeway","public","size","struct","target_block_cpu_usage_pct","target_block_net_usage_pct","transact","transacton","transacton.","tunabl","type","uint16_t","uint32_t","uint64_t","usag","variabl","via"],"structeosio_1_1const__mem__fun.html":["&","(","(1/4)","(2/4)","(3/4)","(4/4)","(const",")","::",">","auto","chainedptr","class","const","const_mem_fun","document","eosio","eosio::const_mem_fun","eosio::const_mem_fun::operator()","eosio::const_mem_fun::result_type;","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","list","name","operator()","public","result_typ","std::reference_wrapp","std::remove_reference::typ","struct","type","typedef","x","x)"],"classeosio_1_1contract.html":["(","()","(name",")","::",">","@","_code","_codeth","_d","_self","_selfth","action","attribut","base","class","class,","code","code,","const","construct","contract","contract.","datastream","deriv","descript","detail","document","ds","ds)","eosio","eosio::contract","eosio::contract::_code;","eosio::contract::_ds;","eosio::contract::_self;","eosio::contract::contract","eosio::contract::get_cod","eosio::contract::get_datastream","eosio::contract::get_self","eosio_abi","file:","follow","function","gener","get_cod","get_datastream","get_self","given","in/eosio.cdt/libraries/eosiolib/contract.hpp","list","macro.","make","more...","name","name.","new","object.","parameters:","processing.","protect","public","receiv","receiver,","returns:","type","us","variabl"],"classeosio_1_1datastream.html":["&","(","()","(1/2)","(2/2)","(char","(const","(size_t","(t","(unsign",")","*","::",">","bool","buffer","buffer.","byte","bytes.","c","c)","char","class","const","construct","current","d","d,","data","datastream","descript","destin","detail","document","eosio","eosio::datastream","eosio::datastream::datastream","eosio::datastream::get","eosio::datastream::po","eosio::datastream::put","eosio::datastream::read","eosio::datastream::remain","eosio::datastream::seekp","eosio::datastream::skip","eosio::datastream::tellp","eosio::datastream::valid","eosio::datastream::writ","fals","file:","follow","form","function","gener","get","given","in/eosio.cdt/libraries/eosiolib/datastream.hpp","list","more...","name","new","number","object","object.","offset","origin","p","p)","parameters:","po","pointer","posit","public","put","rang","rawng","read","read/skip","read/skipped.","refer","rel","remain","retriev","return","returns:","s","s)","seekp","set","size","size_t","skip","sourc","specif","specifi","start","start,","stream","stream.","t","tellp","templat","true","type","unsign","valid","void","within","write"],"classeosio_1_1datastream_3_01size__t_01_4.html":["(","()","(char)","(const","(size_t",")",").","*","*,",",",",size_t","0","0)","0.","::","=",">","alway","amount","behav","bool","char","char*","check","class","const","construct","datastream","datastream<","determin","document","eosio","eosio::datastream","eosio::datastream::datastream","eosio::datastream::put","eosio::datastream::remain","eosio::datastream::seekp","eosio::datastream::skip","eosio::datastream::tellp","eosio::datastream::valid","eosio::datastream::writ","eosio::datastream<","file:","final","follow","function","gener","given","help","in/eosio.cdt/libraries/eosiolib/datastream.hpp","increas","increment","init_s","initi","it'","list","name","new","object","object.","on","one.","p","p)","parameters:","public","put","remain","return","returns:","s","s)","s.","same","seekp","serial","set","size","size.","size_t","skip","skip(","special","tellp","true","type","us","valid","validity.","value.","write","write("],"namespaceeosio_1_1detail.html":["(","()","(r(act::*)(args...)",")","*","::","=",">","action,","arg,","args...","auto","bool","bool,","char","check_typ","check_types<","class","const","constexpr","convert","convert<","decltype(get_args(action))","decltype(get_args(action));","decltype(get_args_nounwrap(action))","decltype(get_args_nounwrap(action));","deduc","deduced_nounwrap","detail","document","eosio","eosio::detail","eosio::detail::deduc","eosio::detail::deduced_nounwrap","eosio::detail::get_arg","eosio::detail::get_args_nounwrap","eosio::detail::type_check","file:","follow","function","gener","get_arg","get_args_nounwrap","get_nth","get_nth_impl","get_nth_impl<","i,","ignore<","in/eosio.cdt/libraries/eosiolib/action.hpp","is_sam","is_same<","list","n,","name","namespac","p","p)","r(act::*)(args...)","struct","t","t,","to_const_char_arr","type","type_check","typedef","u","unwrap","unwrap<","us"],"structeosio_1_1detail_1_1check__types.html":["::","=",">","attribut","bool","check_typ","check_types;","class","constexpr","detail","document","eosio","eosio::detail::check_typ","eosio::detail::check_types::typ","eosio::detail::check_types::value;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","list","name","public","static","struct","type","typedef","us","valu","variabl"],"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":["::",">","action,","attribut","bool","check_typ","check_types<","class","constexpr","detail","document","eosio","eosio::detail::check_typ","eosio::detail::check_types::value;","eosio::detail::check_types<","file:","follow","gener","i,","in/eosio.cdt/libraries/eosiolib/action.hpp","list","name","public","static","struct","t","type","valu","variabl"],"structeosio_1_1detail_1_1convert.html":["::",">","class","convert","detail","document","eosio","eosio::detail::convert","eosio::detail::convert::type;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","list","name","public","struct","t","type","typedef"],"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":["*","::",">","char","class","convert","convert<","detail","document","eosio","eosio::detail::convert","eosio::detail::convert::type;","eosio::detail::convert<","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","list","name","public","std::string","struct","type","typedef"],"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":["*","::",">","char","class","const","convert","convert<","detail","document","eosio","eosio::detail::convert","eosio::detail::convert::type;","eosio::detail::convert<","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","list","name","public","std::string","struct","type","typedef"],"structeosio_1_1detail_1_1get__nth.html":["::",">","attribut","auto","class","constexpr","detail","document","eosio","eosio::detail::get_nth","eosio::detail::get_nth::value;","file:","follow","gener","get_nth","in/eosio.cdt/libraries/eosiolib/action.hpp","list","name","public","static","struct","type","valu","variabl"],"structeosio_1_1detail_1_1get__nth__impl.html":["::",">","attribut","auto","class","constexpr","detail","document","eosio","eosio::detail::get_nth_impl","eosio::detail::get_nth_impl::value;","file:","follow","gener","get_nth_impl","in/eosio.cdt/libraries/eosiolib/action.hpp","list","name","public","static","struct","type","valu","variabl"],"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":["::",">","arg,","args...","attribut","auto","class","constexpr","detail","document","eosio","eosio::detail::get_nth_impl","eosio::detail::get_nth_impl::value;","eosio::detail::get_nth_impl<","file:","follow","gener","get_nth_impl","get_nth_impl<","in/eosio.cdt/libraries/eosiolib/action.hpp","list","n,","name","public","static","struct","type","valu","variabl"],"structeosio_1_1detail_1_1is__same.html":["::",">","attribut","bool","class","constexpr","detail","document","eosio","eosio::detail::is_sam","eosio::detail::is_same::value;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","is_sam","list","name","public","static","struct","type","valu","variabl"],"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":["::",">","attribut","bool","class","constexpr","detail","document","eosio","eosio::detail::is_sam","eosio::detail::is_same::value;","eosio::detail::is_same<","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","is_sam","is_same<","list","name","public","static","struct","t,","type","valu","variabl"],"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":["::",">","attribut","bool","bool,","class","constexpr","detail","document","eosio","eosio::detail::is_sam","eosio::detail::is_same::value;","eosio::detail::is_same<","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","is_sam","is_same<","list","name","public","static","struct","type","u","valu","variabl"],"structeosio_1_1detail_1_1to__const__char__arr.html":["::",">","attribut","char","class","const","constexpr","detail","document","eosio","eosio::detail::to_const_char_arr","eosio::detail::to_const_char_arr::value[];","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/name.hpp","list","name","public","static","struct","to_const_char_arr","type","valu","variabl"],"structeosio_1_1detail_1_1unwrap.html":["::",">","class","detail","document","eosio","eosio::detail::unwrap","eosio::detail::unwrap::type;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","list","name","public","struct","t","type","typedef","unwrap"],"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":["::",">",">::type;","class","detail","document","eosio","eosio::detail::unwrap","eosio::detail::unwrap<","file:","follow","gener","ignore<","in/eosio.cdt/libraries/eosiolib/action.hpp","list","name","public","struct","t","type","typedef","unwrap","unwrap<"],"structeosio_1_1extended__asset.html":["&","(","()","(1/3)","(2/3)","(3/3)","(asset","(int64_t",")","::","=","=subtract",">","a,","ad","add","addit","amount","asset","asset.","attribut","b","bool","both","c","c)","class","comparison","const","construct","constructor","contract","contractth","default","document","eosio","eosio::extended_asset","eosio::extended_asset::contract;","eosio::extended_asset::extended_asset","eosio::extended_asset::get_extended_symbol","eosio::extended_asset::oper","eosio::extended_asset::operator!=","eosio::extended_asset::operator+","eosio::extended_asset::operator+=","eosio::extended_asset::operator==","eosio::extended_asset::operator>=","eosio::extended_asset::print","eosio::extended_asset::quantity;","extend","extended_asset","extended_symbol","file:","follow","friend","function","gener","get_extended_symbol","given","in/eosio.cdt/libraries/eosiolib/asset.hpp","int64_t","less","list","minu","name","need","neg","new","object.","oper","operator!=","operator!=comparison","operator+","operator+=","operator+=addit","operator+addit","operator.","operator<","operator<=","operator==","operator==comparison","operator>=","operator>=comparison","operatorcomparison","operatorless","owner","parameters:","precondition:","print","public","quantiti","result","returns:","s","s)","same","struct","subtract","symbol","type","unari","us","v,","variabl","void"],"classeosio_1_1extended__symbol.html":["!=","!=invert","&","(","()","(are","(bool","(symbol",")","::","=","==",">","a,","b","bool","boolean","both","class","con","con)","const","constexpr","different)","document","eosio","eosio::extended_symbol","eosio::extended_symbol::extended_symbol","eosio::extended_symbol::get_contract","eosio::extended_symbol::get_symbol","eosio::extended_symbol::oper","eosio::extended_symbol::operator==","eosio::extended_symbol::print","equival","extend","extended_symbol","file:","follow","friend","function","gener","get_contract","get_symbol","in/eosio.cdt/libraries/eosiolib/symbol.hpp","invert","less","list","name","oper","operator.","operator<","operator==","operator==equival","operatorless","print","provid","public","return","returns:","same","same)","show_precis","sym,","symbol","true","true)","type","void"],"classeosio_1_1fixed__bytes.html":["!=","!=compar","&","(","()","(1/2)","(2/2)","(;","(const",")","0;","16","::",";","==",">",">=",">=compar",">compar","alloc","arr","arr)","arr_itr","array","attribut","bool","bool_pack","byte","c1","c1,","c2","c2,","c2.","class","compar","const","constexpr","constructor","contain","data","default","defin","descript","detail","document","eosio","eosio::fixed_byt","eosio::fixed_bytes::arr;","eosio::fixed_bytes::arr_itr;","eosio::fixed_bytes::fixed_byt","eosio::fixed_bytes::for","eosio::fixed_bytes::num_word","eosio::fixed_bytes::oper","eosio::fixed_bytes::operator==","eosio::fixed_bytes::padded_byt","eosio::fixed_bytes::word_t;","fals","file:","first","fix","fixed_byt","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/fixed\\_bytes.hpp","initi","insid","lexicograph","lexicographically.","list","more...","name","num_word","num_words()","num_words()>","number","object","object.","oper","operator<","operator<=","operator==","operator==compar","operatorcompar","otherwis","pad","padded_byt","parameters:","public","remain","return","returns:","second","size","size_t","smaller","sort","sourc","static","std::array","std::arrayword_t,","struct","sub_words_left","sub_words_left)","sub_words_left,","templat","true,","two","type","typedef","types.","uint128_t","variabl","word","word_t","word_t.","zero"],"structeosio_1_1fixed__bytes_1_1bool__pack.html":["::",">","bool_pack","class","document","eosio","eosio::fixed_bytes::bool_pack","file:","fixed_byt","follow","gener","in/eosio.cdt/libraries/eosiolib/fixed\\_bytes.hpp","list","struct"],"classeosio_1_1fixed__key.html":["!=","!=compar","&","(","()","(1/2)","(2/2)","(const",")","16","::","==",">",">=",">=compar",">compar","alloc","arr","arr)","arr_itr","arr_itrconstructor","attribut","bool","bool_pack","byte","c1","c1,","c2","c2,","c2.","class","compar","const","constexpr","constructor","contain","data","default","defin","descript","detail","document","eosio","eosio::fixed_key","eosio::fixed_key::arr;","eosio::fixed_key::arr_itr;","eosio::fixed_key::fixed_key","eosio::fixed_key::num_word","eosio::fixed_key::oper","eosio::fixed_key::operator==","eosio::fixed_key::padded_byt","eosio::fixed_key::word_t;","fals","file:","first","fix","fixed_key","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp","index","initi","insid","key","lexicograph","list","more...","multi","name","num_word","num_words()","num_words()>","number","object","object.","oper","operator<","operator<=","operator==","operator==compar","operatorcompar","otherwis","pad","padded_byt","parameters:","public","remain","return","returns:","second","size","size_t","smaller","sort","sourc","static","std::array","std::arrayword_t,","struct","tabl","table.","templat","true,","two","type","typedef","types.","uint128_t","variabl","word","word_t","word_t.","zero"],"structeosio_1_1fixed__key_1_1bool__pack.html":["::",">","bool_pack","class","document","eosio","eosio::fixed_key::bool_pack","file:","fixed_key","follow","gener","in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp","list","struct"],"structeosio_1_1fixed__point128.html":["&","(","()","(1/3)","(1/4)","(2/3)","(2/4)","(3/3)","(3/4)","(4/4)","(const","(int128_t",")","0","0)","128","64","::","=",">","a(123232.455667233)","a(1234.455667)","a(1234.455667);","a(123424)","a*b;","a+b+c;","anoth","assign","attribut","b(13324.32323);","b(a);","b/a;","bit","bool","c","c(a);","class","class.","const","construct","constructor","creat","d","decim","descript","detail","document","e","eosio","eosio::fixed_point128","eosio::fixed_point128::fixed_point128","eosio::fixed_point128::frac_part","eosio::fixed_point128::int_part","eosio::fixed_point128::oper","eosio::fixed_point128::operator=","eosio::fixed_point128::operator==","eosio::fixed_point128::operator>","eosio::fixed_point128::print","eosio::fixed_point128::val;","equal","example:","factor","fals","file:","fix","fixed_point128","fixed_point128&","fixed_point128,64,32","fixed_point128.","fixed_point32","fixed_point32.","fixed_point64","fixed_point64.","follow","frac_part","function","gener","greater","i.","in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp","instanc","int128_t","int128_t,","int128_t.","int_part","integ","less","list","more...","name","new","number","number.","object","oper","operator.","operator<","operator=","operator==","operator>","otherwis","param","parameters:","part","point","point128","precis","print","public","q","qr","r","r)","refer","repres","represent","return","returns:","sourc","std::cout","struct","templat","true","type","uint128_t","v","val","valu","value.","valvalu","variabl","variou","void"],"structeosio_1_1fixed__point32.html":["&","(","()","(1/2)","(1/3)","(1/4)","(2/2)","(2/3)","(2/4)","(3/3)","(3/4)","(4/4)","(const","(int32_t",")","*","/","0","0)","32","64","::","=",">","a(1234.455667)","a*b;","a+b+c;","addend","addit","anoth","assign","attribut","b(9.654);","b/a;","between","bit","bool","c","class","class.","const","construct","d","decim","descript","detail","divis","divisor","document","e","eosio","eosio::fixed_point32","eosio::fixed_point32::fixed_point32","eosio::fixed_point32::frac_part","eosio::fixed_point32::int_part","eosio::fixed_point32::oper","eosio::fixed_point32::operator+","eosio::fixed_point32::operator/","eosio::fixed_point32::operator=","eosio::fixed_point32::operator==","eosio::fixed_point32::operator>","eosio::fixed_point32::print","eosio::fixed_point32::val;","equal","example:","fals","file:","fix","fixed_point32","fixed_point32&","fixed_point32(131313)","fixed_point32(2323)","fixed_point32.","fixed_point32qr)?q:qr","fixed_point64","fixed_point64.","float","follow","frac_part","function","gener","goe","greater","implement","in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp","int32_t","int32_t.","int_part","integ","issu","less","lh","list","max","minuend","more...","multipl","multipli","name","new","number","number.","object","object.","oper","operator+","operator.","operator/","operator<","operator=","operator==","operator>","otherwis","param","parameters:","part","point","point32","precis","print","public","qr","r","r)","refer","relat","replac","repres","represent","resolv","result","return","returns:","rh","rhs)","second","sourc","std::cout","store","struct","subtract","sum","templat","true","truncated.","two","type","uint32_t","undetermenist","v","val","valu","value.","valvalu","variabl","void"],"structeosio_1_1fixed__point64.html":["&","(","()","(1/2)","(1/3)","(2/2)","(2/3)","(3/3)","(const","(int64_t",")","*","/","0","0)","64","::","=",">","a(123232.455667233)","a(1234.455667)","a(123424)","a*b;","a+b+c;","addend","addit","anoth","assign","attribut","b/a;","between","bit","bool","c","class","class.","const","construct","d","decim","descript","detail","divis","divisor","document","e","eosio","eosio::fixed_point64","eosio::fixed_point64::fixed_point64","eosio::fixed_point64::frac_part","eosio::fixed_point64::int_part","eosio::fixed_point64::oper","eosio::fixed_point64::operator+","eosio::fixed_point64::operator/","eosio::fixed_point64::operator=","eosio::fixed_point64::operator==","eosio::fixed_point64::operator>","eosio::fixed_point64::print","eosio::fixed_point64::val;","equal","example:","fals","file:","fix","fixed64","fixed_point128","fixed_point128.","fixed_point32","fixed_point32.","fixed_point64","fixed_point64&","fixed_point64(131313)","fixed_point64(2323)","fixed_point64.","fixed_point64qr)?q:qr","follow","frac_part","function","gener","goe","greater","in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp","int64_t","int64_t.","int_part","integ","less","lh","list","max","minuend","more...","multipl","multipli","name","new","number","number.","object","object.","oper","operator+","operator.","operator/","operator<","operator=","operator==","operator>","otherwis","parameters:","part","point","point64","precis","print","public","qr","r","r)","refer","repres","represent","result","return","returns:","rh","rhs)","second","sourc","std::cout","store","struct","subtract","sum","templat","true","two","type","uint64_t","v","val","valu","value.","valvalu","variabl","void"],"structeosio_1_1ignore.html":["::",">","abi","add","allow","allowed.","class","correct","current","datastream","definition,","descript","detail","document","eosio","eosio::ignor","file:","follow","foo(float,","gener","i.e.","ignor","ignore)","ignore,","in/eosio.cdt/libraries/eosiolib/ignore.hpp","int)","later","list","method","more...","non","relax","release.","restrict","struct","succe","tell","type","type,","type.","void"],"structeosio_1_1ignore__wrapper.html":["(","()","(1/3)","(2/3)","(3/3)","(ignor","(t",")","::",">","action","allow","attribut","class","constexpr","correct","descript","detail","document","eosio","eosio::ignore_wrapp","eosio::ignore_wrapper::get","eosio::ignore_wrapper::ignore_wrapp","eosio::ignore_wrapper::oper","eosio::ignore_wrapper::value;","file:","follow","function","gener","ignor","ignore<","ignore_wrapp","in/eosio.cdt/libraries/eosiolib/ignore.hpp","inlin","list","more...","name","oper","payload","payload.","public","send","struct","t","type","val","val)","valu","variabl","wrapper"],"structeosio_1_1indexed__by.html":["\".\",","\".\".","#includ","(myaction)","(primary)(secondary)",")","1","13","13th","16","5,","64","::","=",">","_self;","`boost::multi\\_index::const\\_mem\\_fun`.","alia","auto","base32","bit","boost","call","charact","character,","characters,","class","code","code,","conform","const","constant","datastream","descript","detail","details.","digit","document","ds):contract(receiver,","ds){}","encod","enum","eosio","eosio,","eosio::contract","eosio::indexed_bi","eosio::indexed_by::const","eosio::indexed_by::secondary_extractor_type;","eosio;","eosio_dispatch(","eoslib_serialize(","example:","extractor","file:","first","follow","function","gener","get_secondary()","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","index","index.","index_nam","indexed_bi","indexnam","indic","instanti","integ","key","list","lowercas","maximum","more","more...","multi","multi_index","myaction()","mycontract(nam","mycontract,","mycontract:","name","namespac","object","oper","p","parameters:","primary;","primary_key()","provid","public","public:","receiver,","recommend","record","record,","refer","requir","restrict","return","scope","scope);","secondari","secondary;","secondary_extractor_typ","see","specified.","static_cast(indexname)","static_cast(indexname),","struct","tabl","table(","table.","take","templat","template,","twelv","type","type.","typedef","uint128_t","uint64_t","up","us","void","z,","{","}","};"],"structeosio_1_1inline__dispatcher.html":["::",">","class","document","eosio","eosio::inline_dispatch","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","inline_dispatch","list","struct"],"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":["&","(","(1/2)","(2/2)","(name",")","::",">","arg","args)","call","class","code,","const","document","eosio","eosio::inline_dispatch","eosio::inline_dispatcher::cal","eosio::inline_dispatcher<","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","inline_dispatch","inline_dispatcher<","list","name","perm,","permission_level","perms,","public","static","std::tupl","std::vector","std::vectorpermission_level","struct","type","void","void(t::*)(args...),"],"classeosio_1_1iostream.html":["::",">","c++","class","descript","detail","document","eosio","eosio::iostream","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/print.hpp","iostream","list","simul","stream","style"],"classeosio_1_1memory__manager.html":["(","()","(1/2)",")","*","0","0.","::",">","addit","alloc","area","array","bit","block","byte","calloc","calloc(),","callocalloc","class","count","count,","document","each","element","elements,","eosio","eosio::memory_manag","eosio::memory_manager::calloc","eosio::memory_manager::malloc","eosio::memory_manager::memory_manag","eosio::memory_manager::realloc","file:","follow","friend","function","gener","given","in/eosio.cdt/libraries/eosiolib/eosiolib.cpp","initi","list","long,","malloc","malloc(),","mallocnamespac","memori","memory,","memory.","memory_manag","name","namespac","new","number","parameters:","pointer","previous","ptr","ptr,","public","realloc","realloc()","reallocrealloc","returns:","size","size_t","start","type","void","void*"],"classeosio_1_1memory__manager_1_1memory.html":["(","()","(char","(const","(uint32_t",")","*","*const","::",">","bool","buffer_ptr","char","class","cleanup_remain","const","document","eosio","eosio::memory_manager::memori","eosio::memory_manager::memory::cleanup_remain","eosio::memory_manager::memory::expand_memori","eosio::memory_manager::memory::fre","eosio::memory_manager::memory::init","eosio::memory_manager::memory::is_capacity_remain","eosio::memory_manager::memory::is_in_heap","eosio::memory_manager::memory::is_init","eosio::memory_manager::memory::malloc","eosio::memory_manager::memory::malloc_from_fre","eosio::memory_manager::memory::memori","eosio::memory_manager::memory::realloc_in_plac","exp_mem,","expand_memori","file:","follow","free","function","gener","in/eosio.cdt/libraries/eosiolib/eosiolib.cpp","init","is_capacity_remain","is_in_heap","is_init","list","malloc","malloc_from_fre","mem_heap,","memori","memory_manag","name","orig_ptr_s","orig_ptr_size)","ptr","ptr)","ptr,","public","realloc_in_plac","size","size)","size,","type","uint32_t","void"],"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":["(","()","(1/2)","(2/2)","(uint32_t","(void",")","*","*const","::",">","bool","buff_size,","buffer_ptr","char","class","const","document","end","eosio","eosio::memory_manager::memory::buffer_ptr","eosio::memory_manager::memory::buffer_ptr::buffer_ptr","eosio::memory_manager::memory::buffer_ptr::end","eosio::memory_manager::memory::buffer_ptr::is_alloc","eosio::memory_manager::memory::buffer_ptr::mark_alloc","eosio::memory_manager::memory::buffer_ptr::mark_fre","eosio::memory_manager::memory::buffer_ptr::merge_contigu","eosio::memory_manager::memory::buffer_ptr::merge_contiguous_if_avail","eosio::memory_manager::memory::buffer_ptr::next_ptr","eosio::memory_manager::memory::buffer_ptr::ptr","eosio::memory_manager::memory::buffer_ptr::s","file:","follow","function","gener","heap_end","heap_end)","in/eosio.cdt/libraries/eosiolib/eosiolib.cpp","is_alloc","list","mark_alloc","mark_fre","memori","memory_manag","merge_contigu","merge_contiguous_if_avail","name","needed_s","needed_size)","next_ptr","ptr","ptr,","public","size","type","uint32_t","val","val)","void"],"classeosio_1_1microseconds.html":["&","(","()","(const","(int64_t",")","0","0)","::","=",">","_count","a,","attribut","b","bool","c","c)","class","const","count","document","eosio","eosio::microsecond","eosio::microseconds::_count;","eosio::microseconds::count","eosio::microseconds::maximum","eosio::microseconds::microsecond","eosio::microseconds::oper","eosio::microseconds::operator!=","eosio::microseconds::operator+","eosio::microseconds::operator+=","eosio::microseconds::operator==","eosio::microseconds::operator>","eosio::microseconds::operator>=","eosio::microseconds::to_second","explicit","file:","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/time.hpp","int64_t","l,","list","maximum","microsecond","name","oper","operator!=","operator+","operator+=","operator<","operator<=","operator==","operator>","operator>=","public","r","static","time_point","time_point;","to_second","type","variabl"],"classeosio_1_1multi__index.html":["!=","\");","\".\"","\"1","\"address","\"blacksburg\";","\"blumer\";","\"brendan\";","\"brendan\"_n;","\"ca\";","\"code","\"couldn't","\"dan\"_n);","\"dan\"_n,","\"dan\"_n;","\"daniel\",","\"daniel\";","\"evert","\"hk\";","\"hong","\"invalid","\"larimer\";","\"lock","\"onli","\"record","\"san","\"scope","\"unabl","\"va\";","#includ","&","&&","(","()","(1/2)","(2/2)","(a","(and","(const","(const_iter","(i.e.,","(idx128),","(idx256),","(idx64),","(myaction)","(name","(period)","(quadruple)","(uint64_t","(unused)",")",");","*","*itr,","//","0;","1","1.","12","128","16","256","5,","64","93445;","93446;","::",";","=","==",">",">account_nam",">citi","[&](","[&](auto&","_self.value);","`","``,","aborted.","account","account_name;","action","ad","add","address","address)","address.account_nam","address.c","address.find(\"dan\"_n);","address.first_nam","address.key","address.last_nam","address.st","address.street","address.zip","address_index","address_index;","addressbook(nam","addressbook,","addressbook:","addresses(\"dan\"_n,","addresses(_self,","addresses.available_primary_key();","addresses.begin(),","addresses.cbegin(),","addresses.cend(),","addresses.crbegin();","addresses.crend();","addresses.emplace(_self,","addresses.emplace(payer,","addresses.end(),","addresses.erase(","addresses.erase(*itr);","addresses.find(\"dan\"_n);","addresses.get(\"dan\"_n);","addresses.get_index();","addresses.modify(","addresses.rbegin();","addresses.rend();","agreement","alia","alloc","and,","appear","appropri","arbitrari","arf,","argument","associ","author","auto","auto&","autoincr","avail","available_primary_key","begin","between","bill","bit","boost","boost::multi_index::const_mem_fun.","bound","by_zip()","call","cbegin","cend","changed.","char","charact","charg","city;","class","code","code,","const","const_iter","const_mem_fun","const_reverse_iter","const_reverse_iteratorstruct","constant","construct","constructor","constructor)","contain","contract","contract.","convert","crbegin","creat","created,","created.","creation.","crend","current","custom","datastream","default","definition);","deleted\");","desir","details.","determin","differ","digit","document","doesn't","don't","doubl","ds)","ds):contract(receiver,","due","each","element","emplac","end","eo","eosio","eosio::const_mem_fun","eosio::multi_index","eosio::multi_index::available_primary_key","eosio::multi_index::begin","eosio::multi_index::cbegin","eosio::multi_index::cend","eosio::multi_index::const_reverse_iterator;","eosio::multi_index::crbegin","eosio::multi_index::crend","eosio::multi_index::emplac","eosio::multi_index::end","eosio::multi_index::eras","eosio::multi_index::find","eosio::multi_index::get","eosio::multi_index::get_cod","eosio::multi_index::get_index","eosio::multi_index::get_scop","eosio::multi_index::iterator_to","eosio::multi_index::lower_bound","eosio::multi_index::modifi","eosio::multi_index::multi_index","eosio::multi_index::rbegin","eosio::multi_index::rend","eosio::multi_index::require_find","eosio::multi_index::upper_bound","eosio::raw","eosio;","eosio_abi(","eosio_assert(addresses.get_code()","eosio_assert(iterator_to(user)","eosio_assert(itr","eosio_assert(user.first_nam","eosio_dispatch(","equal","eras","error","error_msg","establish","example:","except","exceptions:","execut","exist","exist\");","exist**","exist,","expect","extractor","file:","find","first","first_name;","fix","float","follow","found","found\");","found,","found.","front.\");","full","function","gener","get_cod","get_index","get_scop","given","greater","hierarchi","highest","him.\");","id","ideal","identifi","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","inabl","incorrect","incrementing,","index","index.","indexnam","indic","indices.","initi","instanc","instanti","intc","integ","intend","invalid","invalid.","item","item_ptr","iter","iterator\");","iterator.","iterator_to","itr","itr)","itr++;","itr,","key","key\"","key\")","key,","key.","key;","kong\";","lambda","last","last_name;","left.","less","letters,","lexicograph","like","list","load_object_by_primary_iter","lock","long","long,","lower","lower_bound","lowercas","lowest","lui","match","match\");","match.\");","maximum","member","messag","method","modifi","modified\");","more","multi","multi_index","multi_index::const_iter","myaction()","name","name(\"brendan\"),","name(\"dan\"),","namespac","negative).","never","new","newli","note","notes:","obispo\",","obispo\";","obj","obj)","obj,","object","object).","object,","object.","object\\_typ","object_typ","oper","overhead","overhead.","own","paramet","parameters:","pay","payer","payer,","place","plenti","point","pointer","post","precis","precondition,","precondition:","primari","primary)","primary,","primary.","primary_key()","primit","properly\");","properti","property.","public","public:","rbegin","realiti","receiv","receiver,","reclaimed.","recommend","record","record\");","refer","referenc","refund","remov","removed,","rend","replac","require_find","result","retriev","return","returns:","revers","row","row)","same","scope","scope)","search","search.","second","secondari","see","self):contract(self)","serial","serialized,","set","signatur","size","space","specifi","state;","std::reverse_iter","std::reverse_iteratorconst_iter","std;","storag","street;","strictli","string","struct","t","tabl","table,","table.","tablenam","tables)","take","target","templat","template,","throw","thu","type","type:","typedef","uint32_t","uint64_t","uint64_t;","under","uniqu","unsign","up","updat","updated.","updated;","updater)","upper","upper_bound","us","usag","usage.","user","valid","valu","value.","violat","void","way\";","within","wrap","write","written","zip","zip;","zip_index","zip_index.end(),","zip_index.find(zipnumb);","zip_index.lower_bound(zipnumb);","zip_index.upper_bound(zipnumb);","zipnumb","{","{}","}","});","};"],"structeosio_1_1multi__index_1_1const__iterator.html":["!=","&","(","()","(1/2)","(2/2)","(int)",")","*","::",">","a,","b","bool","class","classes:","const","const_iter","document","eosio","eosio::multi_index::const_iter","eosio::multi_index::const_iterator::oper","eosio::multi_index::const_iterator::operator++","eosio::multi_index::const_iterator::operator==","file:","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","inherit","int","list","multi_index","multi_index;","name","oper","operator++","operator==","public","std::iter","struct","t","type"],"structeosio_1_1multi__index_1_1index.html":["\"unabl","&","&&","(","()","(1/2)","(2/2)","(const","(const_iter","(eosio::nam","(number","(secondary_key_typ","(static_cast(tablename)",")","*","0x000000000000000full)","0x000000000000000full),","0xfffffffffffffff0ull)","::","=",">","auto","begin","bool","cbegin","cend","char","class","const","const_iter","const_reverse_iter","const_reverse_iteratorstruct","constant","constexpr","crbegin","crend","document","end","enum","eosio","eosio::multi_index::index","eosio::multi_index::index::begin","eosio::multi_index::index::cbegin","eosio::multi_index::index::cend","eosio::multi_index::index::const","eosio::multi_index::index::const_reverse_iterator;","eosio::multi_index::index::crbegin","eosio::multi_index::index::crend","eosio::multi_index::index::end","eosio::multi_index::index::eras","eosio::multi_index::index::extract_secondary_key","eosio::multi_index::index::find","eosio::multi_index::index::get","eosio::multi_index::index::get_cod","eosio::multi_index::index::get_scop","eosio::multi_index::index::iterator_to","eosio::multi_index::index::lower_bound","eosio::multi_index::index::modifi","eosio::multi_index::index::nam","eosio::multi_index::index::numb","eosio::multi_index::index::rbegin","eosio::multi_index::index::rend","eosio::multi_index::index::require_find","eosio::multi_index::index::secondary_extractor_type;","eosio::multi_index::index::secondary_key_type;","eosio::multi_index::index::upper_bound","eosio::multi_index::index::validate_index_nam","eosio::nam","eras","error_msg","extract_secondary_key","extractor","file:","find","follow","friend","function","gener","get_cod","get_scop","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","index","index_nam","index_numb","index_table_nam","iterator_to","itr","itr)","itr,","key\"","key\")","lambda","list","lower_bound","modifi","multi_index","multi_index::index::const_iter","multi_index;","n","n)","name","number","number,","obj","obj)","payer,","public","rbegin","rend","require_find","secondari","secondary)","secondary,","secondary_extractor_typ","secondary_key_typ","static","static_cast(indexname),","static_cast(tablename),","std::decay::typ","std::reverse_iter","std::reverse_iteratorconst_iter","struct","t","table_nam","type","typedef","uint64_t","updat","updater)","upper_bound","validate_index_nam","void","{","|","}","};"],"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":["!=","&","(","()","(1/2)","(2/2)","(int)",")","*","::",">","a,","b","bool","class","classes:","const","const_iter","document","eosio","eosio::multi_index::index::const_iter","eosio::multi_index::index::const_iterator::const_iter","eosio::multi_index::index::const_iterator::oper","eosio::multi_index::index::const_iterator::operator++","eosio::multi_index::index::const_iterator::operator==","file:","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","index","index;","inherit","int","list","multi_index","name","oper","operator++","operator==","public","std::iter","struct","t","type"],"structeosio_1_1multi__index_1_1intc.html":["()","::","=",">","class","const","document","e","enum","eosio","eosio::multi_index::intc","eosio::multi_index::intc::","eosio::multi_index::intc::oper","file:","follow","function","gener","i,","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","intc","list","multi_index","multi_index::index","name","oper","public","struct","type","uint64_t","valu","{","}","};"],"structeosio_1_1multi__index_1_1item.html":["&&","(","(const",")","*","::",">","__idx","__iter","__primary_itr","attribut","c","c)","class","classes:","const","constructor","document","eosio","eosio::multi_index::item","eosio::multi_index::item::__idx;","eosio::multi_index::item::__iters[sizeof...(indices)+(sizeof...(indices)==0)];","eosio::multi_index::item::__primary_itr;","eosio::multi_index::item::item","file:","follow","function","gener","idx,","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","inherit","int32_t","item","list","multi_index","multi_index*","name","public","struct","t","type","variabl"],"structeosio_1_1multi__index_1_1item__ptr.html":["&&","(","(std::unique_ptr",")","::",">","_item","_primary_itr","_primary_key","attribut","class","document","eosio","eosio::multi_index::item_ptr","eosio::multi_index::item_ptr::_item;","eosio::multi_index::item_ptr::_primary_itr;","eosio::multi_index::item_ptr::_primary_key;","eosio::multi_index::item_ptr::item_ptr","file:","follow","function","gener","i,","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","int32_t","item_ptr","list","multi_index","name","pitr","pitr)","pk,","public","std::unique_ptr","struct","type","uint64_t","variabl"],"structeosio_1_1name.html":["!=","!=invert","&","(","()","(1/4)","(2/4)","(3/4)","(4/4)","(are","(begin","(char","(eosio::nam","(name::raw","(return","(std::string_view","(uint64_t",")","*","+","13)","::","==",">","[begin,","a,","appropri","attribut","b","base32","begin","begin,","bool","boolean","both","buffer","buffer.","c","c)","char","char*","char_to_valu","charact","class","const","constexpr","contain","convert","correspond","descript","detail","different)","document","enabl","end","end)","ensur","enum","eosio","eosio::nam","eosio::name::char_to_valu","eosio::name::length","eosio::name::nam","eosio::name::oper","eosio::name::operator==","eosio::name::raw","eosio::name::suffix","eosio::name::to_str","eosio::name::value;","eosio::name::write_as_str","equival","expect","explicit","file:","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/name.hpp","invert","last","length","less","list","mathemat","memori","method","more...","name","name.","name::raw","occur.","oper","operator.","operator<","operator==","operator==equival","operatorless","parameters:","pass","past","pointer)","post","precondit","precondition:","print","provid","public","r","r)","rang","raw","region","represent","return","returns:","same","same)","satisfied)","satisfied,","size","special","start","static","std::string","std::string_view","str","str)","string","string.","struct","style)","suffix","symbol","to.","to_str","true","type","uint64_t","uint8_t","v","v)","valid","valu","value.","variabl","wrap","write","write_as_str","written","{","}","};"],"structeosio_1_1onerror.html":["()","::",">","attribut","class","const","document","eosio","eosio::onerror","eosio::onerror::from_current_act","eosio::onerror::sender_id;","eosio::onerror::sent_trx;","eosio::onerror::unpack_sent_trx","file:","follow","from_current_act","function","gener","in/eosio.cdt/libraries/eosiolib/transaction.hpp","list","name","onerror","public","sender_id","sent_trx","static","std::vector","struct","transact","type","uint128_t","unpack_sent_trx","variabl"],"structeosio_1_1permission__level.html":["&","(","()","(1/2)","(2/2)","(authorization)","(name",")","::",">","a,","account","actor","actornam","attribut","author","b","bool","check","class","compar","const","constexpr","construct","constructor","default","descript","detail","document","eosio","eosio::permission_level","eosio::permission_level::actor;","eosio::permission_level::operator==","eosio::permission_level::permission;","eosio::permission_level::permission_level","equal","fals","file:","first","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/action.hpp","level","list","more...","name","new","object","object.","operator==","operator==check","own","p","p)","pack","parameters:","permiss","permission.","permission_level","permissionnam","permissions.","public","represent","returns:","second","struct","true","two","type","unequ","variabl"],"structeosio_1_1producer__key.html":["::",">","attribut","block","block_signing_key","block_signing_keyblock","bool","class","constexpr","descript","detail","document","eosio","eosio::producer_key","eosio::producer_key::block_signing_key;","eosio::producer_key::oper","eosio::producer_key::producer_name;","file:","follow","friend","gener","in/eosio.cdt/libraries/eosiolib/privileged.hpp","key","key,","key.","list","map","more...","name","oper","operator<","produc","producer.","producer_key","producer_nam","producer_namenam","public","public_key","schedul","sign","struct","type","us","variabl"],"structeosio_1_1producer__schedule.html":["::",">","account","activ","attribut","both","class","defin","descript","detail","document","eosio","eosio::producer_schedul","eosio::producer_schedule::producers;","eosio::producer_schedule::version;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/producer\\_schedule.hpp","includ","increment","key","key.","list","more...","name","name,","number","order,","produc","producer_schedul","producers.","producerslist","public","schedule,","schedule.","sequenti","set","sign","std::vector","std::vectorproducer_key","struct","type","uint32_t","variabl","version","versionvers"],"structeosio_1_1public__key.html":["!=","&","(",")","::",">","a,","attribut","b","bool","byte","class","const","data","databyt","descript","detail","document","eosio","eosio::public_key","eosio::public_key::data;","eosio::public_key::oper","eosio::public_key::operator==","eosio::public_key::type;","file:","follow","friend","gener","in/eosio.cdt/libraries/eosiolib/crypto.hpp","k1","key","key,","key.","list","more...","name","oper","operator==","public","public_key","r1","std::array","struct","type","typetyp","unsigned_int","variabl"],"structeosio_1_1reflector.html":["::",">","class","document","eosio","eosio::reflector","eosio::reflector::is_enum;","eosio::reflector::is_reflected;","file:","follow","gener","in/eosio.cdt/libraries/eosiolib/reflect.hpp","is_enum","is_reflect","list","name","public","reflector","std::false_typ","struct","type","typedef"],"structeosio_1_1signature.html":["!=","&","(",")","::",">","a,","attribut","b","bool","byte","class","const","data","databyt","descript","detail","document","eosio","eosio::signatur","eosio::signature::data;","eosio::signature::oper","eosio::signature::operator==","eosio::signature::type;","file:","follow","friend","gener","in/eosio.cdt/libraries/eosiolib/crypto.hpp","k1","list","more...","name","oper","operator==","public","r1","signatur","signature,","signature.","std::array","struct","type","typetyp","unsigned_int","variabl"],"classeosio_1_1singleton.html":["&","(","()","(const","(name",")","::","=",">","account","bill","bill_to_account","bill_to_account)","bill_to_account,","bool","case","check","class","code","code,","const","construct","creat","data","def","default","descript","detail","document","doesn't","eosio","eosio::singleton","eosio::singleton::exist","eosio::singleton::get","eosio::singleton::get_or_cr","eosio::singleton::get_or_default","eosio::singleton::remov","eosio::singleton::set","eosio::singleton::singleton","except","exist","exist,","exist.","exists.","fals","file:","follow","function","gener","get_or_cr","get_or_default","given","in/eosio.cdt/libraries/eosiolib/singleton.hpp","insid","list","name","new","newli","object","object.","on","otherwis","owner","parameters:","pay","public","remov","return","returns:","row","scope","scope)","set","singl","singleton","singletonnam","specifi","store","struct","t","t()","t())","tabl","table'","table.","templat","throw","true","type","types.","uint64_t","us","valu","value,","variabl","variou","void","wrapper"],"structeosio_1_1singleton_1_1row.html":["()","::",">","attribut","class","const","data","data.","descript","detail","document","eosio","eosio::singleton::row","eosio::singleton::row::primary_key","eosio::singleton::row::value;","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/singleton.hpp","insid","key","list","more...","name","primari","primary_key","public","returns:","row","singleton","store","struct","structur","t","tabl","table.","type","uint64_t","valu","valuevalu","variabl"],"classeosio_1_1symbol.html":["!=","!=invert","&","(","()","(are","(bool","(std::string_view","(symbol_cod","(uint64_t",")","::","=","==",">","a,","b","bool","boolean","both","class","code","const","constexpr","different)","document","eosio","eosio::symbol","eosio::symbol::cod","eosio::symbol::is_valid","eosio::symbol::oper","eosio::symbol::operator==","eosio::symbol::precis","eosio::symbol::print","eosio::symbol::raw","eosio::symbol::symbol","equival","explicit","file:","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/symbol.hpp","invert","is_valid","less","list","name","oper","operator.","operator<","operator==","operator==equival","operatorless","precis","precision)","print","provid","public","raw","raw)","repreresent","represent","return","returns:","same","same)","sc,","show_precis","ss,","std::string_view","symbol","symbol'","symbol_cod","true","true)","type","uint64_t","uint8_t","valid","void"],"classeosio_1_1symbol__code.html":["!=","!=invert","&","(","()","(are","(begin","(char","(return","(std::string_view","(uint64_t",")","*","+","7)","::","==",">","[begin,","a,","appropri","b","begin","begin,","bool","boolean","both","buffer","buffer.","char","char*","charact","check","class","code","const","constexpr","contain","different)","document","end","end)","eosio","eosio::symbol_cod","eosio::symbol_code::is_valid","eosio::symbol_code::length","eosio::symbol_code::oper","eosio::symbol_code::operator==","eosio::symbol_code::raw","eosio::symbol_code::symbol_cod","eosio::symbol_code::to_str","eosio::symbol_code::write_as_str","equival","explicit","file:","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/symbol.hpp","invert","is_valid","last","length","less","list","memori","name","oper","operator.","operator<","operator==","operator==equival","operatorless","parameters:","past","pointer)","post","precondit","precondition:","provid","public","rang","raw","raw)","region","represent","return","returns:","same","same)","satisfied)","satisfied,","size","start","std::string","std::string_view","str","str)","string","symbol","symbol_cod","symbol_code.","to.","to_str","true","type","uint32_t","uint64_t","valid","write","write_as_str","written"],"classeosio_1_1time__point.html":["!=","&","(","()","(1/2)","(2/2)","(const","(microsecond",")","::","=",">",">=","attribut","bool","class","const","document","e","elaps","eosio","eosio::time_point","eosio::time_point::elapsed;","eosio::time_point::oper","eosio::time_point::operator+","eosio::time_point::operator+=","eosio::time_point::operator==","eosio::time_point::sec_since_epoch","eosio::time_point::time_point","eosio::time_point::time_since_epoch","explicit","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/time.hpp","list","m","m)","microsecond","microseconds()","microseconds())","name","oper","operator+","operator+=","operator<","operator<=","operator==","public","sec_since_epoch","t","t)","time_point","time_since_epoch","type","uint32_t","variabl"],"classeosio_1_1time__point__sec.html":["!=","&","(","()","(1/2)","(1/3)","(1/4)","(2/2)","(2/3)","(2/4)","(3/3)","(3/4)","(4/4)","(const","(microsecond","(time_point_sec","(uint32_t",")","1970","::","=",">",">=","a,","accur","attribut","b","bool","class","const","descript","detail","document","eosio","eosio::time_point","eosio::time_point_sec","eosio::time_point_sec::maximum","eosio::time_point_sec::min","eosio::time_point_sec::oper","eosio::time_point_sec::operator+","eosio::time_point_sec::operator+=","eosio::time_point_sec::operator=","eosio::time_point_sec::operator==","eosio::time_point_sec::sec_since_epoch","eosio::time_point_sec::time_point_sec","eosio::time_point_sec::utc_seconds;","explicit","file:","follow","friend","function","gener","in/eosio.cdt/libraries/eosiolib/time.hpp","list","lower","m","m)","maximum","microsecond","min","name","offset","offset)","oper","operator+","operator+=","operator<","operator<=","operator=","operator==","public","resolut","sec_since_epoch","second","seconds)","static","t","t)","t,","time_point","time_point_sec","type","uint32_t","utc_second","variabl"],"classeosio_1_1transaction.html":["&","(","(const","(time_point_sec",")","::","=",">","action","attribut","bool","class","classes:","const","context_free_act","document","eosio","eosio::transact","eosio::transaction::actions;","eosio::transaction::context_free_actions;","eosio::transaction::send","eosio::transaction::transact","eosio::transaction::transaction_extensions;","eosio::transaction_head","exp","extensions_typ","fals","false)","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/transaction.hpp","inherit","list","name","payer,","public","replace_exist","send","sender_id,","std::vector","std::vectoract","time_point_sec","time_point_sec(now()+60)","time_point_sec(now()+60))","transact","transaction_extens","type","uint128_t","variabl","void"],"classeosio_1_1transaction__header.html":["(","(time_point_sec",")","8","::","=",">","attribut","bill","byte","class","classes:","compress","cpu","delay_sec","delay_secnumb","document","eosio","eosio::transact","eosio::transaction_head","eosio::transaction_header::delay_sec;","eosio::transaction_header::expiration;","eosio::transaction_header::max_cpu_usage_ms;","eosio::transaction_header::max_net_usage_words;","eosio::transaction_header::ref_block_num;","eosio::transaction_header::ref_block_prefix;","eosio::transaction_header::transaction_head","exp","expir","file:","follow","function","gener","in/eosio.cdt/libraries/eosiolib/transaction.hpp","inherit","list","max_cpu_usage_m","max_cpu_usage_msnumb","max_net_usage_word","name","number","public","ref_block_num","ref_block_prefix","serial","time_point_sec","time_point_sec(now()+60)","time_point_sec(now()+60))","transact","transaction_head","type","uint16_t","uint32_t","uint8_t","unit","unsigned_int","usag","variabl","word"],"structeosio_1_1variant__action__wrapper.html":["&","&&","&&...","(","()","(1/4)","(2/4)","(3/4)","(4/4)","(arg","(code",")","::",">","action","action_nam","arg","args)","attribut","auto","class","code","code,","code_nam","const","constexpr","document","eosio","eosio::nam","eosio::permission_level","eosio::variant_action_wrapp","eosio::variant_action_wrapper::action_name;","eosio::variant_action_wrapper::code_name;","eosio::variant_action_wrapper::get_mem_ptr","eosio::variant_action_wrapper::permissions;","eosio::variant_action_wrapper::send","eosio::variant_action_wrapper::send_context_fre","eosio::variant_action_wrapper::to_act","eosio::variant_action_wrapper::variant_action_wrapp","file:","follow","function","gener","get_mem_ptr","in/eosio.cdt/libraries/eosiolib/action.hpp","list","name","perm","perm)","permiss","perms)","public","send","send_context_fre","static","std::vector","std::vectoreosio::permission_level","struct","to_act","type","variabl","variant_action_wrapp","void"],"structsigned__int.html":["&","(","()","(1/2)","(1/3)","(2/2)","(2/3)","(3/3)","(const","(int)","(int32_t",")","0","0)","32","=",">",">>",">>deseri","assign","attribut","between","bit","bool","byte","check","class","compar","const","construct","contain","convers","convert","current","datastream","datastream&","descript","deseri","destin","detail","document","ds","ds,","effici","encod","equal","fals","few","file:","first","follow","friend","function","gener","given","greater","i,","in/eosio.cdt/libraries/eosiolib/varint.hpp","increment","inequ","int","int.","int32_t","integ","integer.","length","less","list","more","more...","name","new","object","object'","object.","oper","operator!=","operator!=equ","operator!=inequ","operator++","operator.","operator<","operator<<","operator=","operator==","operator==equ","operator>=","operator>=great","operatorless","operatorseri","otherwis","parameters:","possibl","possible.","primit","provid","public","read","refer","result","returns:","second","serial","sign","signed_int","signed_int::oper","signed_int::operator!=","signed_int::operator++","signed_int::operator=","signed_int::operator==","signed_int::operator>=","signed_int::signed_int","signed_int::value;","sourc","stream","struct","t","templat","true","two","type","unequ","unsigned_int&","us","v","v)","valu","value.","valuecontain","variabl","varint32","vi","write","zag","zig"],"structunsigned__int.html":["&","(","()","(1/2)","(1/3)","(2/2)","(2/3)","(3/3)","(t","(uint32_t",")","0","0)","128","32","=",">",">>",">>deseri","assign","attribut","base","between","bit","bool","byte","check","class","compar","const","construct","contain","convers","convert","datastream","datastream&","descript","deseri","destin","detail","document","ds","ds,","effici","encod","equal","fals","few","file:","first","follow","friend","function","gener","given","greater","i,","in/eosio.cdt/libraries/eosiolib/varint.hpp","inequ","int","int.","integ","integer.","length","less","list","more","more...","name","new","object","object.","oper","operator!=","operator!=equ","operator!=inequ","operator.","operator<","operator<<","operator=","operator==","operator==equ","operator>=","operator>=great","operatorless","operatorseri","otherwis","parameters:","possibl","possible.","precondition:","provid","public","read","refer","returns:","second","serial","serialuz","soruc","sourc","stream","struct","t","target","templat","true","two","type","uint32_t","unequ","unsign","unsigned_int","unsigned_int&","unsigned_int::oper","unsigned_int::operator!=","unsigned_int::operator=","unsigned_int::operator==","unsigned_int::operator>=","unsigned_int::unsigned_int","unsigned_int::value;","us","v","v)","valu","value.","valuecontain","variabl","varuint32","vi","vlq","write"],"files.html":["action.h","action.hpp","asset.hpp","binary_extension.hpp","brief","chain.h","compiler_builtins.h","contract.hpp","crypto.cpp","crypto.h","crypto.hpp","datastream.hpp","db.h","descriptions:","dispatcher.hpp","document","eosio.cdt","eosio.cdt/","eosio.hpp","eosiolib","eosiolib.cpp","eosiolib/","file","fixed_bytes.hpp","fixed_key.hpp","fixedpoint.hpp","here","ignore.hpp","in/","librari","libraries/","list","memory.h","memory.hpp","multi_index.hpp","name.hpp","permission.h","permission.hpp","print.h","print.hpp","privileged.h","privileged.hpp","producer_schedule.hpp","public_key.hpp","reflect.hpp","serialize.hpp","singleton.hpp","stdlib.hpp","symbol.hpp","system.h","time.hpp","transaction.h","transaction.hpp","types.h","varint.hpp"],"dir_f4c96640472432942b3fc30ed441ca04.html":["directori","file","in/","in/eosio.cdt","in/eosio.cdt/","refer"],"dir_45e00aafcb063b38cae24fc05c5e0d54.html":["directori","eosio.cdt/","file","in/eosio.cdt","in/eosio.cdt/librari","in/eosio.cdt/libraries/","refer"],"dir_aec5bb64676d64f4f6eae682e441225e.html":["directori","file","in/eosio.cdt/librari","in/eosio.cdt/libraries/eosiolib","in/eosio.cdt/libraries/eosiolib/","libraries/","refer"],"dir_1134efb280eb12b0569be244927e10ce.html":["action.h","action.hpp","asset.hpp","binary_extension.hpp","chain.h","compiler_builtins.h","contract.hpp","crypto.cpp","crypto.h","crypto.hpp","datastream.hpp","db.h","directori","dispatcher.hpp","eosio.hpp","eosiolib.cpp","eosiolib/","file","fixed_bytes.hpp","fixed_key.hpp","fixedpoint.hpp","ignore.hpp","in/eosio.cdt/libraries/eosiolib","memory.h","memory.hpp","multi_index.hpp","name.hpp","permission.h","permission.hpp","print.h","print.hpp","privileged.h","privileged.hpp","producer_schedule.hpp","public_key.hpp","refer","reflect.hpp","serialize.hpp","singleton.hpp","stdlib.hpp","symbol.hpp","system.h","time.hpp","transaction.h","transaction.hpp","types.h","varint.hpp"],"action_8h.html":["(","()","(capi_nam","(char","(void",")","*","0","1970","account","account.","action","action'","action.","action.h","action.h::action_data_s","action.h::current_receiv","action.h::has_auth","action.h::is_account","action.h::publication_tim","action.h::read_action_data","action.h::require_auth","action.h::require_auth2","action.h::require_recipi","action.h::send_context_free_inlin","action.h::send_inlin","action_data_s","add","array","auth","auth.","auths.","bool","byte","capi_nam","char","check","class","code","context","copi","copied,","copyright","current","current_receiv","data","defin","descript","detail","document","dynam","eos/license.txt","exist","field","field.","file","file.","file:","fill","follow","found.","free","function","gener","go","has_auth","in/eosio.cdt/libraries/eosiolib/action.h","inlin","is_account","len","len)","len==0","length","level","locat","location.","long","memori","method","microsecond","msg","msg,","name","name)","name,","notifi","notified.","number","pack","parameters:","parent","pass","permiss","permission)","pointer","post","precondition:","provid","public","publication_tim","rang","read_action_data","receiv","report","requir","require_auth","require_auth2","require_recipi","return","returns:","send","send_context_free_inlin","send_inlin","serial","serialized\\_act","serialized_act","serialized_action,","set","size","size)","size_t","sourc","specifi","throw","time","time.","transact","uint32_t","uint64_t","up","us","valid","verifi","void","|","|bool|has_auth","|bool|is_account","|capi_name|current_receiv","|type|name|","|uint32_t|action_data_s","|uint32_t|read_action_data","|uint64_t|publication_tim","|void|require_auth","|void|require_auth2","|void|require_recipi","|void|send_context_free_inlin","|void|send_inlin"],"action_8hpp.html":["(\"action_member1_name\",","*","...",">","account","action","action,","action.","action.hpp","action_member1_value)(\"action_member2_name\",","action_member2_value)","arg,","args...","bool","bool,","char","class","code","const","contract","copyright","defin","descript","detail","document","eos/license.txt","eosio::act","eosio::action_wrapp","eosio::detail::check_typ","eosio::detail::check_types<","eosio::detail::convert","eosio::detail::convert<","eosio::detail::get_nth","eosio::detail::get_nth_impl","eosio::detail::get_nth_impl<","eosio::detail::is_sam","eosio::detail::is_same<","eosio::detail::unwrap","eosio::detail::unwrap<","eosio::inline_dispatch","eosio::inline_dispatcher<","eosio::permission_level","eosio::variant_action_wrapp","file","file.","file:","follow","gener","go","i,","ignore<","in/eosio.cdt/libraries/eosiolib/action.hpp","inlin","inline_action_send","inline_action_sender2","inline_action_sender2;","inline_action_sender3","inline_action_sender3;","inline_action_sender;","intend","member","n,","name","parameters:","send","send_inline_act","send_inline_action;","send_inline_actionsend","sourc","specifi","struct","t","t,","type","u","void(t::*)(args...),"],"asset_8hpp.html":["asset.hpp","class","code","document","eosio::asset","eosio::extended_asset","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/asset.hpp","name","sourc","struct","type"],"binary__extension_8hpp.html":["binary_extension.hpp","class","code","document","eosio::binary_extens","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/binary\\_extension.hpp","name","sourc","type"],"chain_8h.html":["(","(capi_nam",")","*","0","=","account","activ","actual","array","buffer","buffer,","byte","bytes_popul","capi_nam","chain.h","chain.h::get_active_produc","class","code","copyright","datalen","datalen)","defin","descript","detail","document","eos/license.txt","example:","file","file.","file:","follow","full","function","gener","get","get_active_produc","get_active_producers(producers,","go","in/eosio.cdt/libraries/eosiolib/chain.h","length","long","memori","name","number","output.","parameters:","pass","pointer","popul","post","precondition:","produc","producers,","producers.","producers[21];","rang","requir","return","returns:","set","size","sizeof(capi_name)*21);","sourc","store","uint32_t","|","|type|name|","|uint32_t|get_active_produc"],"compiler__builtins_8h.html":["&","(","()","(__int128","(a","(b","(long","(the","(uint64_t","(unsign","(which",")","//","0","0;","1","1);","10000","100;","128","16","32","3;","4","64","64));","64),","8;","=",">>","@return1","__addtf3","__ashlti3","__ashlti3(res,","__ashrti3","__ashrti3(res,","__break_point","__cmptf2","__divtf3","__divti3","__divti3(res,","__eqtf2","__extenddftf2","__extendsftf2","__fixtfdi","__fixtfsi","__fixunstfdi","__fixunstfsi","__getf2","__gttf2","__int128","__letf2","__lshlti3","__lshlti3(res,","__lshrti3","__lshrti3(res,","__lttf2","__modti3","__modti3(res,","__multf3","__multi3","__multi3(res,","__netf2","__subtf3","__trunctfdf2","__trunctfsf2","__udivti3","__udivti3(res,","__umodti3","__umodti3(res,","__unordtf2","a,","add","arithmet","assign","b","b,","between","bit","check","class","code","compar","compiler_builtins.h","compiler_builtins.h::__addtf3","compiler_builtins.h::__ashlti3","compiler_builtins.h::__ashrti3","compiler_builtins.h::__break_point","compiler_builtins.h::__cmptf2","compiler_builtins.h::__divtf3","compiler_builtins.h::__divti3","compiler_builtins.h::__eqtf2","compiler_builtins.h::__extenddftf2","compiler_builtins.h::__extendsftf2","compiler_builtins.h::__fixtfdi","compiler_builtins.h::__fixtfsi","compiler_builtins.h::__fixunstfdi","compiler_builtins.h::__fixunstfsi","compiler_builtins.h::__getf2","compiler_builtins.h::__gttf2","compiler_builtins.h::__letf2","compiler_builtins.h::__lshlti3","compiler_builtins.h::__lshrti3","compiler_builtins.h::__lttf2","compiler_builtins.h::__modti3","compiler_builtins.h::__multf3","compiler_builtins.h::__multi3","compiler_builtins.h::__netf2","compiler_builtins.h::__subtf3","compiler_builtins.h::__trunctfdf2","compiler_builtins.h::__trunctfsf2","compiler_builtins.h::__udivti3","compiler_builtins.h::__umodti3","compiler_builtins.h::__unordtf2","convert","copyright","defin","descript","detail","divid","divis","document","doubl","double,","double.","eos/license.txt","equal","example:","extend","f","f)","factor.","file","file.","file:","first","float","float.","follow","function","gener","go","greater","h","h)","ha","ha,","hb","hb)","hi","hi,","high","in/eosio.cdt/libraries/eosiolib/compiler\\_builtins.h","inequ","input","int","int32_t","int64_t","integ","integer.","integers)","integers.","l","l,","la","la,","lb","lb,","left","less","lo","lo,","logic","long","low","modular","modulu","multipl","multipli","nan","nan,","number","oper","output:","parameter.","parameters:","perform","post","printi128(&res);","product.","re","replac","repres","res,","result","ret","ret,","returns:","right","second","shift","shift)","shift.","sourc","split","subtract","truncat","two","uint32_t","uint64_t","unsign","valu","void","|","|double|__trunctfdf2","|float|__trunctfsf2","|int32_t|__fixtfsi","|int64_t|__fixtfdi","|int|__cmptf2","|int|__eqtf2","|int|__getf2","|int|__gttf2","|int|__letf2","|int|__lttf2","|int|__netf2","|int|__unordtf2","|type|name|","|uint32_t|__fixunstfsi","|uint64_t|__fixunstfdi","|void|__addtf3","|void|__ashlti3","|void|__ashrti3","|void|__break_point","|void|__divtf3","|void|__divti3","|void|__extenddftf2","|void|__extendsftf2","|void|__lshlti3","|void|__lshrti3","|void|__modti3","|void|__multf3","|void|__multi3","|void|__subtf3","|void|__udivti3","|void|__umodti3"],"contract_8hpp.html":["class","code","contract.hpp","document","eosio::contract","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/contract.hpp","name","sourc","type"],"crypto_8cpp.html":["class","code","copyright","crypto.cpp","defin","descript","detail","document","eos/license.txt","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/crypto.cpp","sourc"],"crypto_8h.html":["\"invalid","###","&calc_hash","(","(const",")",");","*","//","//if","==","```","```cpp","anyth","assert","assert160","assert256","assert512","assert\\_recover\\_key","assert_recover_key","assert_recover_key(","assert_ripemd160","assert_ripemod160(","assert_sha1","assert_sha1(","assert_sha256","assert_sha256(","assert_sha512","assert_sha512(","below","byte","calc_hash","calc_hash;","calcul","capi\\_checksum160\\*","capi\\_checksum256\\*","capi\\_checksum512\\*","capi_checksum160","capi_checksum256","capi_checksum512","char","checksum","checksum.","class","code","compar","const","copyright","creat","crypto.h","crypto.h::assert_recover_key","crypto.h::assert_ripemd160","crypto.h::assert_sha1","crypto.h::assert_sha256","crypto.h::assert_sha512","crypto.h::recover_key","crypto.h::ripemd160","crypto.h::sha1","crypto.h::sha256","crypto.h::sha512","data","data,","data;","defin","descript","detail","digest","digest\");","digest,","digest;","document","eos/license.txt","eos_assert(","eosio::print(\"pub","eosio::print(\"ripemod160","eosio::print(\"sha1","eosio::print(\"sha256","eosio::print(\"sha512","equal","evalu","example:","execut","fast","file","file.","file:","fire.","follow","function","gener","given","go","hard","hash","hash\"","hash\");","hash)","hash,","hash.","hash;","in/eosio.cdt/libraries/eosiolib/crypto.h","int","key","length","length,","length;","match","memori","messag","message.","method","mode.","never","next","number","op","optim","paramet","parameter.","parameters:","point","pointer","post","precondition:","provid","pub","pub,","pub;","publen","publen)","publen;","public","recover_key","recoveri","result","return.","returns:","ripemd160","ripemod160","ripemod160(","sha1","sha1(","sha256","sha256(","sha512","sha512(","sig","sig,","sig;","siglen","siglen,","siglen;","signatur","signature,","signature.","size_t","sourc","statement.","store","test","true,","uint32_t","us","void","want","written","|","|int|recover_key","|type|name|","|void|assert_recover_key","|void|assert_ripemd160","|void|assert_sha1","|void|assert_sha256","|void|assert_sha512","|void|ripemd160","|void|sha1","|void|sha256","|void|sha512"],"crypto_8hpp.html":["class","code","copyright","crypto.hpp","defin","descript","detail","document","eos/license.txt","eosio::public_key","eosio::signatur","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/crypto.hpp","name","sourc","struct","type"],"datastream_8hpp.html":[">","class","code","copyright","datastream.hpp","defin","descript","detail","document","eos/license.txt","eosio::datastream","eosio::datastream<","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/datastream.hpp","name","size_t","sourc","type"],"db_8h.html":["\"alic","\"alice\"_n);","\"charlie\"_n);","&prim);","(","(capi_nam","(impli","(int32_t","(it","(or","(truncat","(uint64_t","(use","(which",")","*","//","0","0);","0,","0.","0;","1","128","2","256","64","=","==",">",">=","\\*((uint64\\_t\\*)data)","\\*primari","\\*secondari","account","act","alreadi","api","array","associ","assum","auto","between","bit","blockchain","buffer","byte","c","capi_nam","char","charli","charlie_itr","class","code","code,","condit","const","contain","continu","copi","copyright","cost","creat","current","data","data,","data_len","data_len)","data_len,","database.","db.h","db.h::db_end_i64","db.h::db_find_i64","db.h::db_get_i64","db.h::db_idx128_end","db.h::db_idx128_find_primari","db.h::db_idx128_find_secondari","db.h::db_idx128_lowerbound","db.h::db_idx128_next","db.h::db_idx128_previ","db.h::db_idx128_remov","db.h::db_idx128_stor","db.h::db_idx128_upd","db.h::db_idx128_upperbound","db.h::db_idx256_end","db.h::db_idx256_find_primari","db.h::db_idx256_find_secondari","db.h::db_idx256_lowerbound","db.h::db_idx256_next","db.h::db_idx256_previ","db.h::db_idx256_remov","db.h::db_idx256_stor","db.h::db_idx256_upd","db.h::db_idx256_upperbound","db.h::db_idx64_end","db.h::db_idx64_find_primari","db.h::db_idx64_find_secondari","db.h::db_idx64_lowerbound","db.h::db_idx64_next","db.h::db_idx64_previ","db.h::db_idx64_remov","db.h::db_idx64_stor","db.h::db_idx64_upd","db.h::db_idx64_upperbound","db.h::db_idx_double_end","db.h::db_idx_double_find_primari","db.h::db_idx_double_find_secondari","db.h::db_idx_double_lowerbound","db.h::db_idx_double_next","db.h::db_idx_double_previ","db.h::db_idx_double_remov","db.h::db_idx_double_stor","db.h::db_idx_double_upd","db.h::db_idx_double_upperbound","db.h::db_idx_long_double_end","db.h::db_idx_long_double_find_primari","db.h::db_idx_long_double_find_secondari","db.h::db_idx_long_double_lowerbound","db.h::db_idx_long_double_next","db.h::db_idx_long_double_previ","db.h::db_idx_long_double_remov","db.h::db_idx_long_double_stor","db.h::db_idx_long_double_upd","db.h::db_idx_long_double_upperbound","db.h::db_lowerbound_i64","db.h::db_next_i64","db.h::db_previous_i64","db.h::db_remove_i64","db.h::db_store_i64","db.h::db_update_i64","db.h::db_upperbound_i64","db_end_i64","db_find_i64","db_find_i64(receiver,","db_get_i64","db_get_i64(itr,","db_idx128_end","db_idx128_find_primari","db_idx128_find_secondari","db_idx128_lowerbound","db_idx128_next","db_idx128_previ","db_idx128_remov","db_idx128_stor","db_idx128_upd","db_idx128_upperbound","db_idx256_end","db_idx256_find_primari","db_idx256_find_secondari","db_idx256_lowerbound","db_idx256_next","db_idx256_previ","db_idx256_remov","db_idx256_stor","db_idx256_upd","db_idx256_upperbound","db_idx64_end","db_idx64_find_primari","db_idx64_find_secondari","db_idx64_lowerbound","db_idx64_next","db_idx64_previ","db_idx64_remov","db_idx64_stor","db_idx64_upd","db_idx64_upperbound","db_idx_double_end","db_idx_double_find_primari","db_idx_double_find_secondari","db_idx_double_lowerbound","db_idx_double_next","db_idx_double_previ","db_idx_double_remov","db_idx_double_stor","db_idx_double_upd","db_idx_double_upperbound","db_idx_long_double_end","db_idx_long_double_find_primari","db_idx_long_double_find_secondari","db_idx_long_double_lowerbound","db_idx_long_double_next","db_idx_long_double_previ","db_idx_long_double_remov","db_idx_long_double_stor","db_idx_long_double_upd","db_idx_long_double_upperbound","db_lowerbound_i64","db_next_i64","db_next_i64(charlie_itr,","db_previous_i64","db_previous_i64(itr,","db_remove_i64","db_remove_i64(itr);","db_store_i64","db_update_i64","db_upperbound_i64","defin","descript","detail","determin","document","doubl","end","end_itr","entri","eos/license.txt","eosio_assert(end_itr","eosio_assert(itr","eosio_assert(len","equal","example:","exist","exists,","expect","file","file.","file:","fill","find","first","float","follow","found","found,","function","gener","given","go","hold","id","id)","id,","in/eosio.cdt/libraries/eosiolib/db.h","index","int","int32_t","integ","integers)","interfac","iter","iterator)","iterator,","itr","itr_prev","key","key.","keys)","last","left","len","len)","lexicograph","long","look","lookup","lowerbound","lowest","match","memori","more...","name","necessary)","new","newli","next","noth","on","order","otherwis","owner","parameters:","past","pay","payer","payer)","payer,","point","pointer","post","preced","precis","precondition:","previou","prim","primari","primary)","quadrupl","rang","receiver)","receiver,","record","referenc","refund","remov","replac","repres","resid","retriev","return","returns:","row","scope","scope,","secondari","secondary)","secondary,","set","size","sourc","specifi","storag","store","tabl","table\");","table)","table,","table.","table1,","uint128\\_t","uint128_t","uint32_t","uint64\\_t","uint64_t","untouch","up","updat","upperbound","us","valid","valu","value,","value[50];","variabl","void","within","|","|int32_t|db_end_i64","|int32_t|db_find_i64","|int32_t|db_get_i64","|int32_t|db_idx128_end","|int32_t|db_idx128_find_primari","|int32_t|db_idx128_find_secondari","|int32_t|db_idx128_lowerbound","|int32_t|db_idx128_next","|int32_t|db_idx128_previ","|int32_t|db_idx128_stor","|int32_t|db_idx128_upperbound","|int32_t|db_idx256_end","|int32_t|db_idx256_find_primari","|int32_t|db_idx256_find_secondari","|int32_t|db_idx256_lowerbound","|int32_t|db_idx256_next","|int32_t|db_idx256_previ","|int32_t|db_idx256_stor","|int32_t|db_idx256_upperbound","|int32_t|db_idx64_end","|int32_t|db_idx64_find_primari","|int32_t|db_idx64_find_secondari","|int32_t|db_idx64_lowerbound","|int32_t|db_idx64_next","|int32_t|db_idx64_previ","|int32_t|db_idx64_stor","|int32_t|db_idx64_upperbound","|int32_t|db_idx_double_end","|int32_t|db_idx_double_find_primari","|int32_t|db_idx_double_find_secondari","|int32_t|db_idx_double_lowerbound","|int32_t|db_idx_double_next","|int32_t|db_idx_double_previ","|int32_t|db_idx_double_stor","|int32_t|db_idx_double_upperbound","|int32_t|db_idx_long_double_end","|int32_t|db_idx_long_double_find_primari","|int32_t|db_idx_long_double_find_secondari","|int32_t|db_idx_long_double_lowerbound","|int32_t|db_idx_long_double_next","|int32_t|db_idx_long_double_previ","|int32_t|db_idx_long_double_stor","|int32_t|db_idx_long_double_upperbound","|int32_t|db_lowerbound_i64","|int32_t|db_next_i64","|int32_t|db_previous_i64","|int32_t|db_store_i64","|int32_t|db_upperbound_i64","|type|name|","|void|db_idx128_remov","|void|db_idx128_upd","|void|db_idx256_remov","|void|db_idx256_upd","|void|db_idx64_remov","|void|db_idx64_upd","|void|db_idx_double_remov","|void|db_idx_double_upd","|void|db_idx_long_double_remov","|void|db_idx_long_double_upd","|void|db_remove_i64","|void|db_update_i64"],"dispatcher_8hpp.html":["(setpriv)(setalimits)(setglimits)(setprods)(reqauth)",")","action","appli","avail","class","code","contract","conveni","creat","defin","deriv","dispatcher.hpp","document","eosio::bios,","eosio::contract","eosio_dispatch","eosio_dispatch(","eosio_dispatch;","eosio_dispatch_help","eosio_dispatch_helper;","eosio_dispatch_intern","eosio_dispatch_internal;","eosio_dispatchconveni","example:","file","file.","file:","follow","gener","go","handler","handler.","in/eosio.cdt/libraries/eosiolib/dispatcher.hpp","macro","macro,","member","name","need","parameters:","sequenc","sourc","support","type","us"],"eosio_8hpp.html":["action","action;","class","code","common","contract","contract;","copyright","defin","descript","detail","document","eos/license.txt","eosio.hpp","file","file.","file:","follow","gener","go","helper","in/eosio.cdt/libraries/eosiolib/eosio.hpp","macro","name","reduc","sourc","tabl","table;","type","verbos"],"eosiolib_8cpp.html":["(","(size_t","(void",")","*","0","0.","addit","alloc","area","array","bit","block","byte","calloc","calloc(),","class","code","count","count,","dealloc","document","each","element","elements,","eosio","eosio::memory_manag","eosio::memory_manager::memori","eosio::memory_manager::memory::buffer_ptr","eosiolib.cpp","eosiolib.cpp::calloc","eosiolib.cpp::fre","eosiolib.cpp::malloc","eosiolib.cpp::realloc","eosiolib.cpp::sbrk","file","file.","file:","follow","free","function","gener","given","go","in/eosio.cdt/libraries/eosiolib/eosiolib.cpp","initi","long,","malloc","malloc(),","memori","memory,","memory.","name","namespac","new","num_byt","num_bytes)","number","parameters:","pointer","previous","ptr","ptr)","ptr,","realloc","realloc()","returns:","sbrk","size","size)","size_t","sourc","start","type","void","void*"],"fixed__bytes_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","eosio::fixed_byt","eosio::fixed_bytes::bool_pack","file","file.","file:","fixed_bytes.hpp","follow","gener","go","in/eosio.cdt/libraries/eosiolib/fixed\\_bytes.hpp","name","sourc","struct","type"],"fixed__key_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","eosio::fixed_key","eosio::fixed_key::bool_pack","file","file.","file:","fixed_key.hpp","follow","gener","go","in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp","name","sourc","struct","type"],"fixedpoint_8hpp.html":["class","code","document","eosio::fixed_point128","eosio::fixed_point32","eosio::fixed_point64","file","file.","file:","fixedpoint.hpp","follow","gener","go","in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp","name","sourc","struct","type"],"ignore_8hpp.html":["class","code","document","eosio::ignor","eosio::ignore_wrapp","file","file.","file:","follow","gener","go","ignore.hpp","in/eosio.cdt/libraries/eosiolib/ignore.hpp","name","sourc","struct","type"],"memory_8h.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/memory.h","memory.h","sourc"],"memory_8hpp.html":["(","(size_t","(void",")","*","*|calloc","*|malloc","*|realloc","*|sbrk","0","0.","addit","alloc","area","array","bit","block","byte","calloc","calloc(),","class","code","copyright","count","count,","dealloc","defin","descript","detail","document","each","element","elements,","eos/license.txt","eosio","file","file.","file:","follow","free","function","gener","given","go","in/eosio.cdt/libraries/eosiolib/memory.hpp","initi","long,","malloc","malloc(),","memori","memory,","memory.","memory.hpp","memory.hpp::calloc","memory.hpp::fre","memory.hpp::malloc","memory.hpp::realloc","memory.hpp::sbrk","namespac","new","num_byt","num_bytes)","number","parameters:","pointer","previous","ptr","ptr)","ptr,","realloc","realloc()","returns:","sbrk","size","size)","size_t","sourc","start","void","void*","|","|type|name|","|void","|void|fre"],"multi__index_8hpp.html":["32",">","class","code","copyright","defin","descript","detail","document","eos/license.txt","eosio::_multi_index_detail::secondary_index_db_funct","eosio::_multi_index_detail::secondary_key_trait","eosio::_multi_index_detail::secondary_key_traits<","eosio::const_mem_fun","eosio::fixed_bytes<","eosio::indexed_bi","eosio::key256","eosio::multi_index","eosio::multi_index::const_iter","eosio::multi_index::index","eosio::multi_index::index::const_iter","eosio::multi_index::intc","eosio::multi_index::item","eosio::multi_index::item_ptr","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","make_traits_for_arithmetic_secondary_key","make_traits_for_arithmetic_secondary_key;","multi_index.hpp","name","sourc","struct","type","wrap_secondary_array_typ","wrap_secondary_array_type;","wrap_secondary_simple_typ","wrap_secondary_simple_type;"],"name_8hpp.html":["\"foo\"_n","()","class","code","constexpr","copyright","defin","descript","detail","document","eos/license.txt","eosio","eosio::detail::to_const_char_arr","eosio::nam","file","file.","file:","follow","function","gener","go","in/eosio.cdt/libraries/eosiolib/name.hpp","liter","name","name.hpp","name.hpp::operator\"\"_n","namespac","name{\"foo\"}","oper","operator\"\"_n","shortcut","sourc","struct","type"],"permission_8h.html":["(","(can","(cannot","(capi_nam","(const","(empti","(in",")","*","0","1","account","account)","account,","account.","act","author","authorized,","bytes)","capi_nam","char","check","check_permission_author","check_transaction_author","class","code","const","copyright","creation","defin","delay","delay_u","delay_us)","descript","detail","document","eos/license.txt","epoch)","exce","file","file.","file:","follow","function","gener","get_account_creation_tim","get_permission_last_us","go","in/eosio.cdt/libraries/eosiolib/permission.h","int32_t","int64_max)","int64_t","key","last","microsecond","name","otherwis","owner","parameters:","permiss","permission)","permission,","permission.","permission.h","permission.h::check_permission_author","permission.h::check_transaction_author","permission.h::get_account_creation_tim","permission.h::get_permission_last_us","permissions.","perms_data","perms_data,","perms_siz","perms_size)","perms_size,","pointer","provid","provided)","pubkeys_data","pubkeys_data,","pubkeys_s","pubkeys_size,","public","return","returns:","serial","set","size","sourc","start","time","transact","trx_data","trx_data,","trx_size","trx_size,","uint32_t","uint64_t","unix","us","vector","wildcard)","|","|int32_t|check_permission_author","|int32_t|check_transaction_author","|int64_t|get_account_creation_tim","|int64_t|get_permission_last_us","|type|name|"],"permission_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/permission.hpp","permission.hpp","sourc"],"print_8h.html":["(","(const","(doubl","(float","(i.e.","(int64_t","(uint64_t",")","*","/","//","0.5","10.0;","1000000000000000000","128","1e+18);","5);","5.0","64","87654323456","87654323456);","=","abcd","base32","bit","char","class","code","const","copyright","cstr","cstr)","cstr,","data,","datalen","datalen)","defin","descript","detail","document","doubl","double)","encod","eos/license.txt","example:","file","file.","file:","float","float)","follow","function","gener","given","go","hello","in/eosio.cdt/libraries/eosiolib/print.h","int128_t","int64_t","integ","integer.","large_int(","large_int(87654323456);","len","len)","length","long","name","name)","null","number","output:","parameters:","point","pointer","precis","print","print.h","print.h::print","print.h::printdf","print.h::printhex","print.h::printi","print.h::printi128","print.h::printn","print.h::printqf","print.h::prints_l","print.h::printsf","print.h::printui","print.h::printui128","printdf","printdf(value);","printhex","printi","printi(","printi128","printi128(&large_int);","printn","printn(\"abcde\"_n);","printqf","printqf(value);","prints(\"hello","prints_l","prints_l(\"hello","printsf","printsf(value);","printui","printui(1e+18);","printui128","printui128(&large_int);","quadrupl","sign","singl","sourc","string","string.","termin","uint128_t","uint32_t","uint64_t","unsign","up","valu","value)","void","world!","world!\");","world!\",","|","|type|name|","|void|print","|void|printdf","|void|printhex","|void|printi","|void|printi128","|void|printn","|void|printqf","|void|prints_l","|void|printsf","|void|printui","|void|printui128"],"print_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","eosio::iostream","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/print.hpp","name","print.hpp","sourc","type"],"privileged_8h.html":["\"active\"","\"pending\"","(","(capi_nam","(char","(identifier)","(int64_t","(weight",")","*","/","0","1","absolut","account","account)","account,","account.","activ","activate_featur","appropri","automatically.","avail","base","becom","block","blockchain","blolckchain","bool","buffer","buffer,","byte","capi_nam","change,","char","check","class","code","contain","cpu","cpu_weight","cpu_weight)","data","data,","data.","datalen","datalen)","document","f","f)","fals","featur","feature.","file","file.","file:","fill","follow","fraction","function","gener","get_blockchain_parameters_pack","get_resource_limit","go","hold","in/eosio.cdt/libraries/eosiolib/privileged.h","int64\\_t","int64_t","irreversible,","irrreversible.","is_priv","is_priv)","is_privileg","limit","long","memori","name","net","net_weight","net_weight,","new","next","onc","order","otherwis","output","pack","param","paramet","parameters,","parameters.","parameters:","pointer","post","precondition:","privileg","privileged.","privileged.h","privileged.h::activate_featur","privileged.h::get_blockchain_parameters_pack","privileged.h::get_resource_limit","privileged.h::is_privileg","privileged.h::set_active_produc","privileged.h::set_blockchain_parameters_pack","privileged.h::set_privileg","privileged.h::set_proposed_produc","privileged.h::set_resource_limit","produc","produce_key","producer\\_data","producer\\_data\\_s","producer_data","producer_data,","producer_data_s","producer_data_size)","producers.","promot","proportion","propos","ram","ram_byt","ram_bytes,","rang","report","requir","resourc","retriev","return","returns:","round","schedul","serial","set","set_active_produc","set_blockchain_parameters_pack","set_privileg","set_proposed_produc","set_resource_limit","size","size.","sourc","start","statu","suffic","total_weight_of_all_accounts)","true","uint32_t","unsuccessful,","valid","version","void","whose","|","|bool|is_privileg","|int64_t|set_proposed_produc","|type|name|","|uint32_t|get_blockchain_parameters_pack","|void|activate_featur","|void|get_resource_limit","|void|set_active_produc","|void|set_blockchain_parameters_pack","|void|set_privileg","|void|set_resource_limit"],"privileged_8hpp.html":["class","code","document","eosio::blockchain_paramet","eosio::producer_key","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/privileged.hpp","name","privileged.hpp","sourc","struct","type"],"producer__schedule_8hpp.html":["class","code","document","eosio::producer_schedul","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/producer\\_schedule.hpp","name","producer_schedule.hpp","sourc","struct","type"],"public__key_8hpp.html":["class","code","document","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/public\\_key.hpp","public_key.hpp","sourc"],"reflect_8hpp.html":["(args1)(args2)(args3)","(basea)(baseb)(basec)","(field1)(field2)(field3)","also:","args.","base","class","class.","classes.","code","declar","defin","document","empti","eosio","eosio::reflector","eoslib_reflect","eoslib_reflect;","eoslib_reflect_base_member_count","eoslib_reflect_base_member_count;","eoslib_reflect_deriv","eoslib_reflect_derived;","eoslib_reflect_derived_impl","eoslib_reflect_derived_impl;","eoslib_reflect_derived_impl_ext","eoslib_reflect_derived_impl_ext;","eoslib_reflect_derived_impl_inlin","eoslib_reflect_derived_impl_inline;","eoslib_reflect_derived_templ","eoslib_reflect_derived_template;","eoslib_reflect_derived_templateperform","eoslib_reflect_derivedspeci","eoslib_reflect_empti","eoslib_reflect_empty;","eoslib_reflect_emptyperform","eoslib_reflect_fwd","eoslib_reflect_fwd;","eoslib_reflect_fwdperform","eoslib_reflect_impl","eoslib_reflect_impl;","eoslib_reflect_member_count","eoslib_reflect_member_count;","eoslib_reflect_templ","eoslib_reflect_template;","eoslib_reflect_templateperform","eoslib_reflect_visit2_bas","eoslib_reflect_visit2_base;","eoslib_reflect_visit2_memb","eoslib_reflect_visit2_member;","eoslib_reflect_visit_bas","eoslib_reflect_visit_base;","eoslib_reflect_visit_baseeosio","eoslib_reflect_visit_memb","eoslib_reflect_visit_member;","eoslib_reflectspeci","file","file.","file:","follow","forward","gener","go","in/eosio.cdt/libraries/eosiolib/reflect.hpp","inherit","member","name","names.","parameters:","perform","reflect","reflect.hpp","reflection.","see","sequenc","sourc","special","struct","templat","template_arg","type","type."],"serialize_8hpp.html":["(basea)(baseb)(basec)","(field1)(field2)(field3)","base","class","class.","code","defin","defined.","deseri","document","eoslib_reflect_member_op","eoslib_reflect_member_op;","eoslib_seri","eoslib_serialize;","eoslib_serialize_deriv","eoslib_serialize_derived;","eoslib_serialize_deriveddefin","eoslib_serializedefin","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/serialize.hpp","inherit","member","name","names.","parameters:","sequenc","serial","serialize.hpp","sourc","type"],"singleton_8hpp.html":["class","code","document","eosio::singleton","eosio::singleton::row","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/singleton.hpp","name","singleton.hpp","sourc","struct","type"],"stdlib_8hpp.html":["class","code","document","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/stdlib.hpp","sourc","stdlib.hpp"],"symbol_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","eosio::extended_symbol","eosio::symbol","eosio::symbol_cod","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/symbol.hpp","name","sourc","symbol.hpp","type"],"system_8h.html":["\"one","(","()","(i.e.","(int32_t","(round","(uint32_t",")","*","/","0","1","1,","1970","2,","==","abort","abort,","action","action)","block","bypass","called.","chang","changes.","char","class","cleanup","code","code)","condit","const","contract.","copyright","current","current_tim","defin","descript","destructor","detail","document","down","eos/license.txt","eosio_assert","eosio_assert(1","eosio_assert_cod","eosio_assert_messag","eosio_exit","eosio_exit(0);","eosio_exit(1);","eosio_exit(2);","eosio_exit(3);","equal","error","example:","execut","exit","explain","fail","failur","file","file.","file:","follow","function","gener","go","ignor","in/eosio.cdt/libraries/eosiolib/system.h","includ","int32_t","length","method","microsecond","msg","msg)","msg,","msg_len","msg_len)","nearest","normal","now","null","one.\");","parameters:","pend","pointer","process","reason","return","returns:","second","second)","sourc","start","string","system.h","system.h::current_tim","system.h::eosio_assert","system.h::eosio_assert_cod","system.h::eosio_assert_messag","system.h::eosio_exit","system.h::now","termin","test","test,","time","true","two.\");","uint32_t","uint64_t","unwind","us","void","wasm","without","|","|type|name|","|uint32_t|now","|uint64_t|current_tim","|void|eosio_assert","|void|eosio_assert_cod","|void|eosio_assert_messag","|void|eosio_exit"],"time_8hpp.html":["class","code","document","eosio::block_timestamp","eosio::microsecond","eosio::time_point","eosio::time_point_sec","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/time.hpp","name","sourc","time.hpp","type"],"transaction_8h.html":["&","(","()","(char","(const","(uint32_t",")",");","*","0","0)","0xffffffffffffffff","1","=","access","account","action","action,","activ","alreadi","amount","assert.","atom","block","buff","buff,","buffer","buffer,","byte","cancel","cancel/replac","cancel_def","cancel_deferred(","canceled,","canceled.","capi_nam","char","class","code","const","context","context_free_data","context_free_data[index]","context_free_data[index].size()","contract,","copi","copied,","copyright","current","defer","defin","descript","detail","document","entri","eos/license.txt","eosio_print(tm);","epoch","example:","execut","exists.","expir","expiration();","f","fail","failur","file","file.","file:","flight","follow","found","free","function","gener","get","get_act","get_context_free_data","go","id","in/eosio.cdt/libraries/eosiolib/transaction.h","index","index,","indic","inflight","int","number","output","pack","parameters:","pass","pay","payer","payer,","pointer","post","precondition:","prefix","provid","published.","ram","read,","read_transact","replace_exist","report","request","requir","reserv","retriev","return","returns:","second","send","send_def","sender","sender_id","sender_id)","sender_id,","serial","serialized_transact","serialized_transaction,","signed_transaction.context_free_data[index].","size","size)","size,","size==0","size_t","sourc","tapo","tapos_block_num","tapos_block_num();","tapos_block_prefix","tapos_block_prefix();","tbn","tbp","tm","transact","transaction.","transaction.h","transaction.h::cancel_def","transaction.h::expir","transaction.h::get_act","transaction.h::get_context_free_data","transaction.h::read_transact","transaction.h::send_def","transaction.h::tapos_block_num","transaction.h::tapos_block_prefix","transaction.h::transaction_s","transaction_s","type","type,","uint128_t","uint32_t","unix","us","valid","void","write","written","|","|int|cancel_def","|int|get_act","|int|get_context_free_data","|int|tapos_block_num","|int|tapos_block_prefix","|size_t|read_transact","|size_t|transaction_s","|type|name|","|uint32_t|expir","|void|send_def"],"transaction_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","eosio::onerror","eosio::transact","eosio::transaction_head","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/transaction.hpp","name","sourc","struct","transaction.hpp","type"],"types_8h.html":["(","(capi_checksum160)","(capi_checksum256)","(capi_checksum512)",")","160","256","512","align","align/overalign","aligned.","aligned;","alignedmacro","bit","call","capi_checksum160","capi_checksum256","capi_checksum512","capi_nam","capi_name;","capi_public_key","capi_signatur","class","code","copyright","defin","descript","detail","document","ensur","eos/license.txt","file","file.","file:","follow","function","gener","go","hash","in/eosio.cdt/libraries/eosiolib/types.h","intrins","macro","name","pointers/refer","properli","sourc","struct","type","typedef","types.h","types.h::align","uint64_t"],"varint_8hpp.html":["class","code","copyright","defin","descript","detail","document","eos/license.txt","file","file.","file:","follow","gener","go","in/eosio.cdt/libraries/eosiolib/varint.hpp","name","signed_int","sourc","struct","type","unsigned_int","varint.hpp"]},"length":181},"tokenStore":{"root":{"0":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.004118616144975288},"group__database.html":{"ref":"group__database.html","tf":0.0012131715771230502},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0012142237640936687},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.021108179419525065},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0032278889606197547},"db_8h.html":{"ref":"db_8h.html","tf":0.0009728978457261987},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.015968063872255488}},".":{"5":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}}},"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}},"x":{"8":{"6":{"docs":{},"_":{"6":{"4":{"docs":{},".":{"docs":{},"r":{"docs":{},"p":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0037067545304777594},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0034662045060658577},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012455885405854266},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002905100064557779},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},")":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}},"x":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}},",":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"0":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}},"docs":{},"f":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}}}}}}}}}},"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}},"docs":{},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0032948929159802307},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0025823111684958036}}}},"docs":{},")":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},".":{"0":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}}}},"docs":{}}},"1":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"2":{"8":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.04365733113673806},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__database.html":{"ref":"group__database.html","tf":0.004506065857885615},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004509973980919341},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.03712072304712718},"db_8h.html":{"ref":"db_8h.html","tf":0.00542043085476025},"print_8h.html":{"ref":"print_8h.html","tf":0.01556420233463035}}},"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}},"3":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}},"t":{"docs":{},"h":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}},")":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}},"6":{"0":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}}},"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008237232289950577},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006455777921239509}}},"9":{"7":{"0":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01593625498007968},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.017316017316017316},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"system_8h.html":{"ref":"system_8h.html","tf":0.0125}},")":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}},"docs":{}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.009472817133443162},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013192612137203167},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.007424144609425436},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.00998003992015968}},".":{"0":{"docs":{},".":{"0":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"docs":{}}},"2":{"docs":{},".":{"docs":{},"x":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"3":{"docs":{},".":{"docs":{},"x":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}}},"4":{"docs":{},".":{"0":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},".":{"docs":{},"x":{"8":{"6":{"docs":{},"_":{"6":{"4":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}},"docs":{}}},"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}},")":{"docs":{},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012911555842479018}}}},"e":{"docs":{},"+":{"1":{"8":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"docs":{}},"docs":{}}},",":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}},"2":{"3":{"2":{"3":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}},"docs":{}},"docs":{}},"5":{"6":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004506065857885615},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004509973980919341},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"db_8h.html":{"ref":"db_8h.html","tf":0.005142460041695622},"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}}},"docs":{}},"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}},",":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}},"^":{"6":{"2":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}},"docs":{}},"docs":{}}},"3":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002471169686985173},"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":1.3636363636363638},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":4.166666666666666},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.02283653846153846},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.022727272727272728},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0025823111684958036},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6521739130434783}},",":{"6":{"4":{"docs":{},",":{"1":{"2":{"8":{"docs":{},",":{"2":{"5":{"6":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"4":{"docs":{"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304}}},"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},".":{"5":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"docs":{}},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008237232289950577},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006455777921239509}}}},"4":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008237232289950577},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006455777921239509}},")":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"5":{"1":{"2":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}}},"docs":{}},"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},".":{"0":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}}},"docs":{}},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}},"6":{"4":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.060955518945634266},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.023872679045092837},"group__database.html":{"ref":"group__database.html","tf":0.00779896013864818},"group__databasec.html":{"ref":"group__databasec.html","tf":0.007805724197745013},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0034113816095518684},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.057133634602969656},"db_8h.html":{"ref":"db_8h.html","tf":0.009312022237665045},"print_8h.html":{"ref":"print_8h.html","tf":0.023346303501945526}},")":{"docs":{},")":{"docs":{},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002059308072487644},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0016139444803098773}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0037067545304777594},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002905100064557779}}}}},"6":{"docs":{"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903}}},"docs":{}},"7":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},")":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}},"8":{"7":{"6":{"5":{"4":{"3":{"2":{"3":{"4":{"5":{"6":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876}},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012911555842479018}}}},"9":{"3":{"4":{"4":{"5":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0014531866306829978}}}},"6":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012455885405854266}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"\"":{"1":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006020344612829562}}},"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"\"":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"d":{"docs":{},"e":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}}}}}}}}}}}},"a":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"n":{"docs":{},"g":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}},"k":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"\"":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"2":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}},"3":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}},"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"\"":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}}}}}},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}},"e":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010379904504878555}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}},"n":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004151961801951422}}}}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"\"":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0043595598920489935}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186}}}}},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"\"":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}},",":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}},"l":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}},".":{"docs":{},"\"":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}},".":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569}}}},"b":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"b":{"docs":{},"u":{"docs":{},"r":{"docs":{},"g":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0043595598920489935}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569}}},"_":{"docs":{},"n":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0043595598920489935}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0035291675316587085}}}}}},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.013745704467353952}}}}}}},"v":{"docs":{},"a":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0043595598920489935}}}}}}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}}}}}},"#":{"docs":{},"#":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}},"$":{"docs":{"./":{"ref":"./","tf":0.007918025151374011}}},"'":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"'":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"(":{"1":{"0":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"1":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"2":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"3":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"4":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"5":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"6":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"7":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"8":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"9":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.004098360655737705},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.01675977653631285},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.013157894736842105},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.00859106529209622},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.018633540372670808},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.007017543859649123},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}},"3":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.006864988558352402},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833}}}},"4":{"docs":{},")":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725}}}},"docs":{}}},"2":{"0":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"1":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"2":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"3":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"4":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.004098360655737705},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.013157894736842105},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.00859106529209622},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012422360248447204},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.007017543859649123},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}},"3":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.006864988558352402},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833}}}},"4":{"docs":{},")":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725}}}},"docs":{}}},"3":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"3":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.006864988558352402},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833}}}},"4":{"docs":{},")":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725}}}},"docs":{}}},"4":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"4":{"docs":{},")":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725}}}},"docs":{}}},"5":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"6":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"7":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"8":{"7":{"6":{"5":{"4":{"3":{"2":{"3":{"4":{"5":{"6":{"docs":{},")":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"9":{"docs":{},"/":{"2":{"4":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}}},"docs":{"./":{"ref":"./","tf":0.0027945971122496508},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.020689655172413793},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.016494845360824743},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.021052631578947368},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.025454545454545455},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.026871401151631478},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.011943986820428337},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.029177718832891247},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.02626641651031895},"group__database.html":{"ref":"group__database.html","tf":0.010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010407632263660017},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"group__datastream.html":{"ref":"group__datastream.html","tf":0.01403061224489796},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.023696682464454975},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.024},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01593625498007968},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0225},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.017316017316017316},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013192612137203167},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.024054982817869417},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.01444043321299639},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.014336917562724014},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.015506280043417585},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007731958762886598},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.03431372549019608},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.01639344262295082},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.0171990171990172},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.027491408934707903},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.03773584905660377},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.01834862385321101},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01953125},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.019230769230769232},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.020594965675057208},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.01990049751243781},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.010398613518197574},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.008802816901408451},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.015789473684210527},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.019230769230769232},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.017241379310344827},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.03867403314917127},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.027932960893854747},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.03571428571428571},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0024911770811708533},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.02631578947368421},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.02577319587628866},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.024844720496894408},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.01580135440180587},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020202020202020204},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.02197802197802198},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.021660649819494584},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.01483679525222552},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.03859649122807018},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.043478260869565216},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.03431372549019608},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.015625},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.01555023923444976},"action_8h.html":{"ref":"action_8h.html","tf":0.017857142857142856},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00936087798579729},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.009746588693957114},"db_8h.html":{"ref":"db_8h.html","tf":0.008339124391938846},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.022727272727272728},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.02100840336134454},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"print_8h.html":{"ref":"print_8h.html","tf":0.021400778210116732},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01675977653631285},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.00998003992015968},"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}},".":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},")":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0037067545304777594},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002905100064557779}},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732}},",":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}},"r":{"docs":{},"g":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.014705882352941176},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.014705882352941176}},"s":{"1":{"docs":{},")":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"2":{"docs":{},")":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"3":{"docs":{},")":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542}}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"docs":{}}},"e":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.009478672985781991},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0096},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186}}}}}}}}}}}}}}}},"b":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002059308072487644},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0016139444803098773}},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"l":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},")":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"b":{"docs":{},")":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},")":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.012048192771084338},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.013043478260869565},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"s":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00558226081563033},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.030927835051546393},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.03773584905660377},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.015789473684210527},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.019230769230769232},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.017241379310344827},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.015873015873015872},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.012027491408934709},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.042105263157894736},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004576659038901602},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.009746588693957114},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0196078431372549},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0196078431372549}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"_":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.011160714285714286},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.004030576789437109},"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"1":{"6":{"0":{"docs":{},")":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},")":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496}}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{},")":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"n":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.022099447513812154},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},")":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{"classes.html":{"ref":"classes.html","tf":0.08383233532934131}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.008838579624748023}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},")":{"docs":{"classes.html":{"ref":"classes.html","tf":0.31736526946107785}}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093},"variables.html":{"ref":"variables.html","tf":0.01171875}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093},"variables.html":{"ref":"variables.html","tf":0.01171875}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.009689922480620155},"variables.html":{"ref":"variables.html","tf":0.0078125}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.011627906976744186},"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.013565891472868217},"variables.html":{"ref":"variables.html","tf":0.00390625}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.007751937984496124},"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.007751937984496124},"variables.html":{"ref":"variables.html","tf":0.01171875}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01937984496124031}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.06640625}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093},"variables.html":{"ref":"variables.html","tf":0.0078125}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062},"variables.html":{"ref":"variables.html","tf":0.01171875}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01744186046511628},"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062},"variables.html":{"ref":"variables.html","tf":0.00390625}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093},"variables.html":{"ref":"variables.html","tf":0.0078125}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093},"variables.html":{"ref":"variables.html","tf":0.00390625}}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062}}}},"docs":{}},"6":{"4":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}},"docs":{}},"docs":{}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}}}}},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},",":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.009689922480620155},"variables.html":{"ref":"variables.html","tf":0.04296875}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062}}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01744186046511628},"variables.html":{"ref":"variables.html","tf":0.01171875}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01744186046511628},"variables.html":{"ref":"variables.html","tf":0.0078125}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.007751937984496124},"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.011627906976744186},"variables.html":{"ref":"variables.html","tf":0.0234375},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.015503875968992248}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093},"variables.html":{"ref":"variables.html","tf":0.0078125}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.007751937984496124}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.015503875968992248}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.01171875}}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.006772009029345372}},"e":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062},"variables.html":{"ref":"variables.html","tf":0.0078125}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.0078125}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0078125}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0078125}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.011627906976744186},"variables.html":{"ref":"variables.html","tf":0.0078125}}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},"e":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062},"variables.html":{"ref":"variables.html","tf":0.00390625}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.01171875}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.0234375}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"1":{"docs":{},")":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"2":{"docs":{},")":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"3":{"docs":{},")":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.024096385542168676},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.02608695652173913},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.015267175572519083},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}},"i":{"docs":{},".":{"docs":{},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763},"system_8h.html":{"ref":"system_8h.html","tf":0.0125}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"permission_8h.html":{"ref":"permission_8h.html","tf":0.020588235294117647}},"t":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"db_8h.html":{"ref":"db_8h.html","tf":0.0034746351633078527},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.004098360655737705},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}},"docs":{}},"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},")":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.013157894736842105},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012422360248447204},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}},"x":{"1":{"2":{"8":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}},"docs":{}},"docs":{}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428}}}}}}},"n":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0013955652039075825},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}},"o":{"0":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"d":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}}}},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"*":{"docs":{},")":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"h":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002471169686985173},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.003873466752743706}}}},"w":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004576659038901602},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}}}}},"u":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457}},"s":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__database.html":{"ref":"group__database.html","tf":0.0013864818024263432},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0013876843018213356},"db_8h.html":{"ref":"db_8h.html","tf":0.0011118832522585128}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006455777921239509}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.01675977653631285},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.011441647597254004},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010379904504878555},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004519044544867657},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876}}}}},"docs":{}},"docs":{}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.011120263591433279},"group__database.html":{"ref":"group__database.html","tf":0.0006932409012131716},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0006938421509106678},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.015493867010974823},"db_8h.html":{"ref":"db_8h.html","tf":0.0005559416261292564}}}}}}},"\"":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},")":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.023696682464454975},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.024},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010554089709762533},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.07216494845360824},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.045454545454545456},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.05555555555555555},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.06060606060606061},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.015463917525773196},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.00980392156862745},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.012295081967213115},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.08353808353808354},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.03436426116838488},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0297029702970297},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.01834862385321101},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0234375},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.019230769230769232},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.018306636155606407},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.029850746268656716},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.010398613518197574},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01056338028169014},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.010526315789473684},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007692307692307693},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007957559681697613},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.07142857142857142},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.04419889502762431},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0782122905027933},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.023809523809523808},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005397550342536849},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.05263157894736842},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.041237113402061855},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.062111801242236024},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.02708803611738149},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.06779661016949153},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.01694915254237288},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.04332129963898917},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.03560830860534125},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.014035087719298246},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.02288329519450801},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.00980392156862745},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.004807692307692308},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554},"action_8h.html":{"ref":"action_8h.html","tf":0.013392857142857142},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006455777921239509},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.043478260869565216},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.015968063872255488}}},"m":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004576659038901602}}}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{"classes.html":{"ref":"classes.html","tf":0.023952095808383235}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0022595222724338285}}},"docs":{}},"docs":{}},"docs":{}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}}}}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},",":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.00859106529209622}}}}}}}}}}}}}}}}},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"s":{"docs":{},")":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.001936733376371853}}}}}},";":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}}}}}},")":{"docs":{"./":{"ref":"./","tf":0.0032603632976245926},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.02413793103448276},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.016494845360824743},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.02456140350877193},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.025454545454545455},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01875},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.026871401151631478},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.011943986820428337},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.029177718832891247},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.02626641651031895},"group__database.html":{"ref":"group__database.html","tf":0.010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010407632263660017},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"group__datastream.html":{"ref":"group__datastream.html","tf":0.02465986394557823},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.023696682464454975},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.024},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01593625498007968},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0225},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.017316017316017316},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013192612137203167},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.024054982817869417},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.021660649819494584},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021505376344086023},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.020313226856877035},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007731958762886598},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.03431372549019608},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.01639344262295082},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.0171990171990172},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.027491408934707903},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.03773584905660377},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.01834862385321101},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0234375},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.019230769230769232},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.020594965675057208},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.01990049751243781},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.01386481802426343},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01232394366197183},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.017543859649122806},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.020512820512820513},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.01856763925729443},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.03867403314917127},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.027932960893854747},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.03571428571428571},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.007888727423707702},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.02631578947368421},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.02577319587628866},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.024844720496894408},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.01580135440180587},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020202020202020204},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.02197802197802198},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.021660649819494584},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.01483679525222552},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.03859649122807018},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.043478260869565216},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.03431372549019608},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.015625},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.01555023923444976},"action_8h.html":{"ref":"action_8h.html","tf":0.017857142857142856},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00936087798579729},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.014619883040935672},"db_8h.html":{"ref":"db_8h.html","tf":0.008339124391938846},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.022727272727272728},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.02100840336134454},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"print_8h.html":{"ref":"print_8h.html","tf":0.021400778210116732},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01675977653631285},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.00998003992015968},"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}},"{":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},";":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.007797270955165692},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}},"*":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.014545454545454545},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0275},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.015355086372360844},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0150093808630394},"group__database.html":{"ref":"group__database.html","tf":0.010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010407632263660017},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.02976190476190476},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.03125},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0175},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010554089709762533},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":1.6133116295894376},"classes.html":{"ref":"classes.html","tf":0.2631578947368421},"functions.html":{"ref":"functions.html","tf":0.07106240845925768},"annotated.html":{"ref":"annotated.html","tf":0.2542372881355932},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00372150721042022},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.9415983606557377},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":1.8574938574938578},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.009174311926605505},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.6521739130434783},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":5},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":4.166666666666666},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.6856643356643357},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7539787798408488},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.03763440860215054},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.06629834254143646},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.055865921787709494},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":1.1867408906882593},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.013745704467353952},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":1.1024844720496894},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.043478260869565216},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.013544018058690745},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.017804154302670624},"action_8h.html":{"ref":"action_8h.html","tf":0.013392857142857142},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.5660377358490566},"chain_8h.html":{"ref":"chain_8h.html","tf":0.020202020202020204},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.042884990253411304},"db_8h.html":{"ref":"db_8h.html","tf":0.01667824878387769},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.05454545454545454},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.03361344537815126},"permission_8h.html":{"ref":"permission_8h.html","tf":0.029411764705882353},"print_8h.html":{"ref":"print_8h.html","tf":0.023346303501945526},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0260707635009311},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.015968063872255488}},"/":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"s":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07106240845925768},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4718237704918033}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526}}}}}}}}},",":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.03314917127071823},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0223463687150838}}}}}}},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}},"|":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"r":{"docs":{},"k":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}}}},".":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525}}}},"/":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"d":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"/":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"*":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"/":{"1":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"4":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"8":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.04536082474226804},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0037067545304777594},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.026525198938992044},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0093419140543907},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002905100064557779},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"print_8h.html":{"ref":"print_8h.html","tf":0.019455252918287938}},"i":{"docs":{},"f":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}}}}},".":{"docs":{"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904}}}},":":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}},":":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.038461538461538464},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.125},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.125},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.05555555555555555},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.06060606060606061},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.046511627906976744},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.07142857142857142},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.07142857142857142},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.07142857142857142},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.0625},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.07142857142857142},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.06451612903225806},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":0.125},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.125},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.012048192771084338},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.01675977653631285},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.013157894736842105},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.018633540372670808},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.07106240845925768}}}}}}}},">":{"docs":{"./":{"ref":"./","tf":0.004191895668374476},"group__database.html":{"ref":"group__database.html","tf":0.0012131715771230502},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0012142237640936687},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__datastream.html":{"ref":"group__datastream.html","tf":0.2},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.8032193886778802},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":1.374466688546111},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":1.3743890518084068},"classes.html":{"ref":"classes.html","tf":1.7225023636936654},"functions.html":{"ref":"functions.html","tf":0.211249240881649},"annotated.html":{"ref":"annotated.html","tf":1.6641030665229746},"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.2924911400711491},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":4.1678321678321675},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":8.416666666666666},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":6.28030303030303},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007731958762886598},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0196078431372549},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.9262899262899263},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6659196175108322},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":3.8675426136363638},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":2.6279264214046822},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":4.199999999999999},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":5.035714285714286},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":4.202380952380952},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":3.6047619047619044},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":5.033333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":5.033333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":8.43010752688172},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.840265742345465},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":0.0625},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.84037558685446},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011538461538461539},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011936339522546418},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.012048192771084338},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":1.3725649350649352},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014492753623188406},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":4.5285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0014531866306829978},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":1.1801619433198383},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":1.0962732919254659},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7283208020050125},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.4377247466492318},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.03333333333333333},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0196078431372549},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"action_8hpp.html":{"ref":"action_8hpp.html","tf":2.556693620844564},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":3},"db_8h.html":{"ref":"db_8h.html","tf":0.0009728978457261987},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":1.9719063545150501}},">":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.005766062602965404},"group__datastream.html":{"ref":"group__datastream.html","tf":1.8076530612244897},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.6563606086552011},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.6545777591973244},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.6842105263157895},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004519044544867657}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}}}}}}},"=":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0012131715771230502},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0012142237640936687},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":1.374466688546111},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":1.3743890518084068},"functions.html":{"ref":"functions.html","tf":0.07106240845925768},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.14616803863535746},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6624831913939937},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.838532640092432},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.8386150234741784},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7248120300751879},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.43543641712978093},"db_8h.html":{"ref":"db_8h.html","tf":0.0009728978457261987}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}}}}}}},",":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.019801980198019802},"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.03225806451612903}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}},"(":{"docs":{},")":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0026987751712684244}}}}}}}}}}}}}},"[":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"[":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{},"]":{"docs":{},"]":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"]":{"docs":{},"]":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},"]":{"docs":{},"]":{"docs":{},")":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{},"]":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"]":{"docs":{},"]":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{},"]":{"docs":{},"]":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"]":{"docs":{},"]":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"]":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}}}}}}}},"{":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208}}}}}}}},"&":{"docs":{},"]":{"docs":{},"(":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"&":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006020344612829562}}}}}}}}}}},"]":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"_":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625}},"_":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}},"docs":{}}}}}}},"c":{"docs":{},"x":{"docs":{},"a":{"docs":{},"_":{"docs":{},"p":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}},"docs":{}}}}}},"e":{"docs":{},"q":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}}},"s":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}}},"s":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}}},"s":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.013179571663920923},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.010974822466107165}}},"docs":{}},"docs":{}},"docs":{}}},"d":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":3.028985507246377}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":3.028985507246377}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}},"docs":{}}}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}},"docs":{}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}},"docs":{}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}},"s":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}},"docs":{}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}},"docs":{}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.484282829356433},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.48419375663799746}}},"docs":{}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":3.028985507246377}}}}}}}}}}}}}},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":1.88490099009901}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.4016096943389401},"variables.html":{"ref":"variables.html","tf":0.00390625}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":5.011363636363637}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":1.879950495049505}},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227}}},"t":{"docs":{},"h":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004567157982146564}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.8032193886778802},"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.4016096943389401},"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":1.879950495049505}},"t":{"docs":{},"h":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":3.032258064516129}},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":5.038461538461538},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}},"p":{"docs":{},"o":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":3.032258064516129}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":3.032258064516129}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}},"a":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"a":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"b":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.011178388448998603},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},".":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.004657661853749418}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"o":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}},"e":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"r":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.03187250996015936},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.03463203463203463},"system_8h.html":{"ref":"system_8h.html","tf":0.0375}},",":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}},"c":{"docs":{},"d":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.06206896551724138},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.0288659793814433},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.06315789473684211},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0425},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"variables.html":{"ref":"variables.html","tf":0.00390625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0035664444099860445},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.379100281162137},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.007265933153414989},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023255813953488372},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"action_8h.html":{"ref":"action_8h.html","tf":0.03571428571428571},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692},"permission_8h.html":{"ref":"permission_8h.html","tf":0.023529411764705882},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.040968342644320296},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"e":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00954951214448827}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863}},".":{"docs":{},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"action_8h.html":{"ref":"action_8h.html","tf":0.006696428571428571},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0111731843575419}}},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0111731843575419}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}},")":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.005988023952095809}}}},"p":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}},"u":{"docs":{},"r":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},"a":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{},"}":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.004657661853749418},"modules.html":{"ref":"modules.html","tf":0.021604938271604937},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.04482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.04536082474226804},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.03508771929824561},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.16091954022988506},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.16216216216216217},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.027888446215139442},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.030303030303030304},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.06578947368421052},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013192612137203167},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.0847457627118644},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0764954009272306},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":9.235238987816306},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.00980392156862745},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.01015228426395939},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.039603960396039604},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":2.522222222222222},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.00980392156862745},"action_8h.html":{"ref":"action_8h.html","tf":0.033482142857142856},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.0380952380952381},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":3.798780487804878},"system_8h.html":{"ref":"system_8h.html","tf":0.03125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.011976047904191617}},"(":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.32608695652173914},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":4.166666666666666},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}}},".":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.027586206896551724},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.008247422680412371},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.021052631578947368},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.023195876288659795},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.02030456852791878},"action_8h.html":{"ref":"action_8h.html","tf":0.008928571428571428},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.01904761904761905}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"action_8h.html":{"ref":"action_8h.html","tf":11.252232142857142}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"action_8hpp.html":{"ref":"action_8hpp.html","tf":10.292542677448338}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"s":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}},"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":1.2598039215686274},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":1.2598039215686274}},"e":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525}}}}}}}}}},"docs":{}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"s":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.252061855670103},"action_8h.html":{"ref":"action_8h.html","tf":1.2522321428571428}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":10.044117647058824}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__actionapi.html":{"ref":"group__actionapi.html","tf":11.367084639498433}},":":{"docs":{},":":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":11.252061855670103}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"s":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}},"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":11.367145135566188}},":":{"docs":{},":":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105}}}},"'":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.012371134020618556},"action_8h.html":{"ref":"action_8h.html","tf":0.013392857142857142}}},")":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.0125}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"a":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}},";":{"docs":{"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025}}}}},"v":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.015},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"chain_8h.html":{"ref":"chain_8h.html","tf":0.04040404040404041},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.020484171322160148},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.005988023952095809}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}},"o":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":2.511627906976744}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}},"d":{"docs":{"./":{"ref":"./","tf":0.014904517931998137},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0030737704918032786},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133}},"d":{"docs":{"./":{"ref":"./","tf":0.002328830926874709},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.010344827586206896},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.010526315789473684},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008237232289950577},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065},"action_8h.html":{"ref":"action_8h.html","tf":0.006696428571428571},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0009683666881859264}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002328830926874709},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.006147540983606557},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.009153318077803204},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.008974358974358974},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009283819628647215},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.02100840336134454}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006227942702927133}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006020344612829562}}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005812746522731991}}}}}}}}}}}}},"c":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006435540793024704}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006020344612829562}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006020344612829562}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006435540793024704}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006020344612829562}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0018683828108781398}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}},":":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}}}}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004567157982146564}}}}}}}}},".":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}},"c":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.002283578991073282}}}}}}}},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0037367656217562797}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}},"*":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.002075980900975711}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904}}}}}}},"g":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"types_8h.html":{"ref":"types_8h.html","tf":7.562992125984252}},"/":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.015748031496062992}}},";":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496}}},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.06547619047619048},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.06875},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.043010752688172046},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.03636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.0546218487394958}}},"w":{"docs":{"./":{"ref":"./","tf":0.0037261294829995344},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.04819277108433735},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}}}}}}}},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"g":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.015625}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}},"s":{"docs":{},"o":{"docs":{},":":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"i":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.005122950819672131},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.017543859649122806},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.010256410256410256},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009283819628647215}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}}}}},"d":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}},"p":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"modules.html":{"ref":"modules.html","tf":3.3950617283950613},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.017241379310344827},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.11538461538461539},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01090909090909091},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"group__database.html":{"ref":"group__database.html","tf":0.0006932409012131716},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.0199203187250996},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0410958904109589},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.06578947368421052},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"a":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.043478260869565216}}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0018683828108781398},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.006772009029345372},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.008902077151335312},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"g":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.03365384615384615},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0319634703196347},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.013745704467353952},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0023259420065126378},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.029411764705882353},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.012285012285012284},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.029411764705882353}},"=":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004657661853749418},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0043595598920489935}}}}}}},"s":{"docs":{},".":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542}},".":{"docs":{},".":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.32608695652173914},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":3.571428571428571},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.014705882352941176},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.014705882352941176}}}},",":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.32608695652173914},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":3.571428571428571},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.8419988445984979},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.8421361502347418}},"a":{"docs":{},"y":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"group__datastream.html":{"ref":"group__datastream.html","tf":0.006802721088435374},"group__types.html":{"ref":"group__types.html","tf":0.023809523809523808},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.0036101083032490976},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002791130407815165},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0034662045060658577},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.8367995378393991},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.835093896713615}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}}}}}}}}}}}}}}},")":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0032948929159802307},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.003873466752743706}}}}}}}},"e":{"docs":{},"a":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.02976190476190476},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.03125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.031818181818181815},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.029411764705882353}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}},"f":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0037367656217562797}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.038461538461538464},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":6.07172131147541},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.06636155606407322}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__assetapi.html":{"ref":"group__assetapi.html","tf":13.038461538461538}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":13.055555555555555}}}}}}}},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.07692307692307693},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}},"&":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526}}},"'":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009221311475409836}}},".":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.011270491803278689},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.013729977116704805}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":15.052631578947368}}}}}}},"r":{"docs":{},"t":{"1":{"6":{"0":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.716103896103896},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3636363636363638},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.7162051000822593},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.7161618868935942},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3636363636363638}},"(":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.716103896103896},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3648863636363637},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.7162051000822593},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.7161618868935942},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3646110225057595}}},"docs":{}},"docs":{}},"docs":{}},"o":{"docs":{},"d":{"1":{"6":{"0":{"docs":{},"(":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.716103896103896},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3648863636363637},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.7162051000822593},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.7161618868935942},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3646110225057595}},"(":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}},"2":{"5":{"6":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.716103896103896},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3648863636363637},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.7162051000822593},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.7161618868935942},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3646110225057595}},"(":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.716103896103896},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3648863636363637},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.7162051000822593},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.7161618868935942},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3646110225057595}},"(":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}},"docs":{}},"docs":{}},"docs":{}}}}},"\\":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}}}}}}}}}}}}},".":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}},"u":{"docs":{},"m":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.005354200988467875},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.014344262295081968},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.021052631578947368},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.010256410256410256},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.010610079575596816},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.004807692307692308},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004196255648805681}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.007972270363951473},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00797918473547268},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012455885405854266},"db_8h.html":{"ref":"db_8h.html","tf":0.00778318276580959}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.006054960409874243},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.00980392156862745},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.006872852233676976},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.00980392156862745},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}},"o":{"docs":{},"m":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.00980392156862745},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.018867924528301886},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.038461538461538464},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.06666666666666667},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006020344612829562},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.00980392156862745},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}},"&":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"h":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714}},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732}}},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"action_8h.html":{"ref":"action_8h.html","tf":0.006696428571428571}}},"o":{"docs":{},"r":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.010344827586206896},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.010526315789473684},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"variables.html":{"ref":"variables.html","tf":0.00390625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0024810048069468134},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.3842549203373946},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.015228426395939087},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010379904504878555},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}}}},"s":{"docs":{},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"action_8h.html":{"ref":"action_8h.html","tf":0.008928571428571428}}},",":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.004191895668374476},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010379904504878555},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007272727272727273},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.007677543186180422},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0037067545304777594},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0075046904315197},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.009478672985781991},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0096},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010309278350515464},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.011270491803278689},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.020594965675057208},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.007936507936507936},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.013157894736842105},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012422360248447204},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.01744186046511628},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020202020202020204},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.02197802197802198},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.009153318077803204},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002905100064557779}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.5179303278688525},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.015228426395939087},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.011441647597254004},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}},".":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526}}},"t":{"docs":{},"h":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}}}}},")":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.005122950819672131}}},"(":{"1":{"2":{"3":{"2":{"3":{"2":{"docs":{},".":{"4":{"5":{"5":{"6":{"6":{"7":{"2":{"3":{"3":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"4":{"2":{"4":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}}},"docs":{}},"docs":{},".":{"4":{"5":{"5":{"6":{"6":{"7":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"*":{"docs":{},"b":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}}}},"+":{"docs":{},"b":{"docs":{},"+":{"docs":{},"c":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}}}}}}},"b":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007272727272727273},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.007677543186180422},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.014415156507413509},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0075046904315197},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.023696682464454975},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.024},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.022540983606557378},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.020594965675057208},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.024875621890547265},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.007936507936507936},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.013157894736842105},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012422360248447204},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.011286681715575621},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020202020202020204},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.02197802197802198},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.018050541516245487},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.01483679525222552},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.009153318077803204},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.011297611362169141}},";":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"a":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"s":{"docs":{},"e":{"3":{"2":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.009029345372460496},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__serialize.html":{"ref":"group__serialize.html","tf":0.01606425702811245},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.017391304347826087},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.015228426395939087},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368}},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.838409475465313}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}}}},"e":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},"e":{"docs":{},"=":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"group__database.html":{"ref":"group__database.html","tf":0.0008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0008673026886383347},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007692307692307693},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007957559681697613},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.007211538461538462},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007177033492822967},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.001936733376371853},"db_8h.html":{"ref":"db_8h.html","tf":0.0006949270326615705}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4844937620122282},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208}},",":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.015228426395939087},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004774756072244135},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.00847457627118644}},")":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}},",":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__types.html":{"ref":"group__types.html","tf":0.023809523809523808},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":5.0034364261168385},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914}}},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":2.7940857297883883},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07292895651724456},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":7.766584766584767}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":17.558823529411764}}}}}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.006872852233676976},"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.020618556701030927},"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.024054982817869417}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.006872852233676976},"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.01718213058419244},"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}},"~":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.10873146622734761},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.03978779840848806},"group__database.html":{"ref":"group__database.html","tf":0.01681109185441941},"group__databasec.html":{"ref":"group__databasec.html","tf":0.016825672159583693},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.005272135214761979},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.02283653846153846},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.022727272727272728},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.09812782440284054},"db_8h.html":{"ref":"db_8h.html","tf":0.019874913134120917},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723},"print_8h.html":{"ref":"print_8h.html","tf":0.038910505836575876},"types_8h.html":{"ref":"types_8h.html","tf":0.07086614173228346}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.03187250996015936},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.03463203463203463},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0158311345646438},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.006872852233676976},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02631578947368421},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946},"system_8h.html":{"ref":"system_8h.html","tf":0.0375},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.015968063872255488}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6590467652771552}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":3.763157894736842}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07292895651724456},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":7.0355595398177195}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6590467652771552}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0547945205479452},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.02},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.07407407407407407},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.01015228426395939},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0186219739292365}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":5.00507614213198}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"y":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"i":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}},"o":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007272727272727273},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.007677543186180422},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0075046904315197},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0021258503401360546},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.6518562401263823},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.6522},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.4119189726894556},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.021660649819494584},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021505376344086023},"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"functions.html":{"ref":"functions.html","tf":0.07106240845925768},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00744301442084044},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.045454545454545456},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.01639344262295082},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.46683046683046686},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.041237113402061855},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.03211009174311927},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0390625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.34531772575250835},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.046511627906976744},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":5.066666666666666},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.06666666666666667},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.02288329519450801},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.03482587064676617},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.02079722703639515},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.02112676056338028},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.010526315789473684},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007692307692307693},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007957559681697613},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0335195530726257},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.047619047619047616},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.02631578947368421},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.024844720496894408},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.7703160270880361},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02631578947368421},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.04040404040404041},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.04395604395604396},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.9808212996389891},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":1.032640949554896},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.042105263157894736},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.02745995423340961},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.028846153846153848},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.028708133971291867},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.014218009478672985},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0144},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.014925373134328358},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.006772009029345372},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.010830324909747292},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.008902077151335312}}}}},",":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.32608695652173914},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":5},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.2657979817772117},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.8350664355863662},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":5.0625},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.835093896713615},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":5.0625}}}}}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.009478672985781991},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0096},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009221311475409836},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012455885405854266}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"w":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"classes.html":{"ref":"classes.html","tf":10}}}}},"i":{"docs":{},"e":{"docs":{},"f":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.005780346820809248},"files.html":{"ref":"files.html","tf":0.018518518518518517}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}}},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"i":{"docs":{},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904}}}}}}},"f":{"docs":{},"f":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013192612137203167},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.00998003992015968}},"e":{"docs":{},"r":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0012131715771230502},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0012142237640936687},"group__datastream.html":{"ref":"group__datastream.html","tf":0.016581632653061226},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.006357574817801209},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.020642201834862386},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.006772009029345372},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.008902077151335312},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.0009728978457261987},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}},"[":{"1":{"2":{"8":{"docs":{},"]":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}},"docs":{}},"docs":{}},"docs":{}},",":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0079155672823219},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.007984031936127744}}},".":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.009174311926605505},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208}}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.159371015724607},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":7.335625268586163}}}}}}}},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0079155672823219},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.00998003992015968}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}},"t":{"docs":{},"e":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.02268041237113402},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007272727272727273},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.007677543186180422},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0075046904315197},"group__database.html":{"ref":"group__database.html","tf":0.0006932409012131716},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0006938421509106678},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0012755102040816326},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0175},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__types.html":{"ref":"group__types.html","tf":0.023809523809523808},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":5.003610108303249},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.06651376146788991},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.01559792027729636},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01232394366197183},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020202020202020204},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.02197802197802198},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.004807692307692308},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.004784688995215311},"action_8h.html":{"ref":"action_8h.html","tf":0.020089285714285716},"chain_8h.html":{"ref":"chain_8h.html","tf":0.030303030303030304},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"db_8h.html":{"ref":"db_8h.html","tf":0.0005559416261292564},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01303538175046555},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}}},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176}}}}}},"_":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010379904504878555}}}}}}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002059308072487644},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0016139444803098773}}},"(":{"1":{"3":{"3":{"2":{"4":{"docs":{},".":{"3":{"2":{"3":{"2":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"docs":{},".":{"6":{"5":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}},"/":{"docs":{},"a":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}}}}},"c":{"1":{"docs":{"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.08664259927797834},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.08602150537634409},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.009303768026050551},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.05199306759098787},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0528169014084507}},",":{"docs":{"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.021660649819494584},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021505376344086023},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00372150721042022},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.010398613518197574},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01056338028169014}}}},"2":{"docs":{"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.06498194945848375},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.06451612903225806},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00558226081563033},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.03119584055459272},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.03169014084507042}},",":{"docs":{"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.01444043321299639},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.014336917562724014},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.006932409012131715},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.007042253521126761}}},".":{"docs":{"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.021660649819494584},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021505376344086023},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00372150721042022},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.02079722703639515},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.02112676056338028}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00186075360521011}}}},"docs":{"./":{"ref":"./","tf":0.0027945971122496508},"modules.html":{"ref":"modules.html","tf":0.018518518518518517},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00909090909090909},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__datastream.html":{"ref":"group__datastream.html","tf":0.003401360544217687},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.039473684210526314},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.03389830508474576},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002015816405644286},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.013761467889908258},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.023809523809523808},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}},"+":{"docs":{},"+":{"1":{"1":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"7":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.008849557522123894},"modules.html":{"ref":"modules.html","tf":0.024691358024691357},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.022988505747126436},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.039473684210526314},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.03389830508474576},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":5.057142857142857},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":3.005952380952381},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":3.00625},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":2.5053763440860215},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6757575757575756},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":2.504201680672269}},"(":{"docs":{},")":{"docs":{},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.012345679012345678},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007272727272727273},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00375},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.005758157389635317},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0075046904315197},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0029239766081871343}}}},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}},";":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}}}}}}}}}},"p":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}},"i":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"1":{"6":{"0":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"group__datastream.html":{"ref":"group__datastream.html","tf":0.002551020408163265},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015506280043417584},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.007797270955165692},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.007797270955165692},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0025},"group__datastream.html":{"ref":"group__datastream.html","tf":0.002551020408163265},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015506280043417584},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.018556701030927835},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.02631578947368421},"group__database.html":{"ref":"group__database.html","tf":0.01317157712305026},"group__databasec.html":{"ref":"group__databasec.html","tf":0.013183000867302688},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"action_8h.html":{"ref":"action_8h.html","tf":0.017857142857142856},"chain_8h.html":{"ref":"chain_8h.html","tf":0.020202020202020204},"db_8h.html":{"ref":"db_8h.html","tf":0.017095205003474636},"permission_8h.html":{"ref":"permission_8h.html","tf":0.020588235294117647},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872},"types_8h.html":{"ref":"types_8h.html","tf":1.890748031496063}},"e":{"docs":{},";":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496}}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":12.56060606060606},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"types_8h.html":{"ref":"types_8h.html","tf":1.8828740157480315}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"3":{"4":{"docs":{},"]":{"docs":{},";":{"docs":{"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":12.564516129032258},"types_8h.html":{"ref":"types_8h.html","tf":1.8828740157480315}},"e":{"docs":{},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"6":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"\\":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"1":{"6":{"0":{"docs":{},"\\":{"docs":{},"*":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0025},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.001949317738791423}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"\\":{"docs":{},"*":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{},"\\":{"docs":{},"*":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"e":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}}}},"u":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.005988023952095809}},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.5026385224274406},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.501996007984032}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}},".":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}},"c":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}},"d":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"f":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672}}}},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00909090909090909},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__chainapi.html":{"ref":"group__chainapi.html","tf":10.716103896103895}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182}}},"2":{"5":{"6":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182}}},"2":{"5":{"6":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":17.513157894736842}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.018867924528301886}}}}}}},".":{"docs":{},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"chain_8h.html":{"ref":"chain_8h.html","tf":17.51010101010101}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.01015228426395939},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"system_8h.html":{"ref":"system_8h.html","tf":0.01875}}}},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}},"d":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}},"r":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.014545454545454545},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0225},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.015355086372360844},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0136986301369863},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0150093808630394},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0012755102040816326},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.011058451816745656},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0112},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010554089709762533},"classes.html":{"ref":"classes.html","tf":0.2631578947368421},"annotated.html":{"ref":"annotated.html","tf":0.2542372881355932},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.06060606060606061},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.004806946813459451},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.016055045871559634},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.6521739130434783},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":5},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":4.166666666666666},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.0625},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.06629834254143646},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.055865921787709494},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.013745704467353952},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.02708803611738149},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.02967359050445104},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.5660377358490566},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.029239766081871343},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"permission_8h.html":{"ref":"permission_8h.html","tf":0.029411764705882353},"print_8h.html":{"ref":"print_8h.html","tf":0.007782101167315175},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.013972055888223553}},"l":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}},"*":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.008902077151335312}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}},"s":{"docs":{},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.7545146726862303}}}}}}}}}},"g":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"modules.html":{"ref":"modules.html","tf":0.012345679012345678},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.005766062602965404},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0010854396030392309},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.09090909090909091},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.006147540983606557},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.00847457627118644},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.014423076923076924},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.014354066985645933},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.006778566817301485},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00931098696461825}},"s":{"docs":{},"u":{"docs":{},"m":{"1":{"6":{"0":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07308401931767873}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}},"docs":{}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.008771929824561403}},".":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.011695906432748537}}}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes.html":{"ref":"classes.html","tf":0.14355499527261267},"annotated.html":{"ref":"annotated.html","tf":0.1386793377094151},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.34531772575250835},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":5.046511627906977},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333}},"e":{"docs":{},"s":{"docs":{},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.32608695652173914},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":1.6666666666666665}}},";":{"docs":{"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"permission_8h.html":{"ref":"permission_8h.html","tf":3.0029411764705882}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"permission_8h.html":{"ref":"permission_8h.html","tf":3.0029411764705882}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.038461538461538464},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.06896551724137931},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485},"group__singleton.html":{"ref":"group__singleton.html","tf":0.18181818181818182},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.057692307692307696},"group__serialize.html":{"ref":"group__serialize.html","tf":0.11646586345381527},"group__datastream.html":{"ref":"group__datastream.html","tf":0.002976190476190476},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.12608695652173912},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00631911532385466},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0064},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.039473684210526314},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.05084745762711865},"group__types.html":{"ref":"group__types.html","tf":0.023809523809523808},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.006872852233676976},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.21428571428571427},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.007220216606498195},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.007168458781362007},"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.09090909090909091},"group__signaturetype.html":{"ref":"group__signaturetype.html","tf":0.1},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216},"annotated.html":{"ref":"annotated.html","tf":5.127167630057803},"struct_extended.html":{"ref":"struct_extended.html","tf":0.1111111111111111},"struct_stores.html":{"ref":"struct_stores.html","tf":0.10526315789473684},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.06060606060606061},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.06451612903225806},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0046518840130252755},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.11538461538461539},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.125},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.125},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.05555555555555555},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.06060606060606061},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.00980392156862745},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.004098360655737705},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":5.007371007371007},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":5.017182130584192},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.01015228426395939},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.03773584905660377},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":5.024752475247524},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":5.006880733944954},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":2.51171875},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.028846153846153848},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.046511627906976744},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.07142857142857142},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.07142857142857142},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.07142857142857142},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.0625},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.07142857142857142},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.06451612903225806},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":5.014925373134329},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":5.006932409012132},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":0.125},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":5.007042253521127},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.125},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.0038461538461538464},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.03571428571428571},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014492753623188406},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.14285714285714285},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":5.15},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":5.026881720430108},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":5.027624309392265},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":5.016759776536313},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":5.01984126984127},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":5.006020344612829},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.02631578947368421},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.00859106529209622},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012422360248447204},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.03389830508474576},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02631578947368421},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020202020202020204},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.058823529411764705},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.02197802197802198},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":5.011299435028248},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":5.0108303249097474},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":5.008902077151335},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":5.010526315789473},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":5.006864988558353},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":5.033333333333333},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":5.03},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.00980392156862745},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.01904761904761905},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.10526315789473684},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.17647058823529413},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.17647058823529413},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.08333333333333333},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.16666666666666666},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.028985507246376812},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.022727272727272728},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.15384615384615385},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.15384615384615385},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.07407407407407407},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.10526315789473684},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.046153846153846156},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.043478260869565216},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.13636363636363635},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.10526315789473684},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.11764705882352941},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.08333333333333333},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.10305343511450382},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.11578947368421053},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.15789473684210525},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.19230769230769232},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.2608695652173913},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.15384615384615385},"types_8h.html":{"ref":"types_8h.html","tf":0.015748031496062992},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.08333333333333333}},".":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.015267175572519083}}},",":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.005780346820809248}}},":":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.006578947368421052},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}},",":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}}}}},"u":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}},"$":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.002328830926874709},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__database.html":{"ref":"group__database.html","tf":0.006065857885615251},"group__databasec.html":{"ref":"group__databasec.html","tf":0.006071118820468344},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.3156595576619273},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3157},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0196078431372549},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.04455445544554455},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.9447202166064982},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0196078431372549},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.058823529411764705},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.005003474635163308},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.05263157894736842},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.08333333333333333},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.021875},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},",":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__database.html":{"ref":"group__database.html","tf":0.0050259965337954935},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005030355594102341},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0392156862745098},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014492753623188406},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.05714285714285714},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.012455885405854267},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0392156862745098},"db_8h.html":{"ref":"db_8h.html","tf":0.008061153578874217}}},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842}}},"/":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":1.2598039215686274},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":1.2598039215686274}}}}}},")":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"o":{"docs":{},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007272727272727273},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.007677543186180422},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008237232289950577},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0075046904315197},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.08664259927797834},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.08602150537634409},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.009924019227787254},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.012295081967213115},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0415944540727903},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.04225352112676056},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.028846153846153848},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.028708133971291867},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0009683666881859264},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.009153318077803204}}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"i":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.004191895668374476}},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"r":{"docs":{},"$":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":10.484282829356433}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}}}}}}}}}}}},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}}},"e":{"docs":{},"q":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}},"s":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}}},"s":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}}},"s":{"docs":{},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}},"s":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":10.484193756637998}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}}}}}}},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}},"e":{"docs":{},"q":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"s":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}},"s":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}},"s":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}},"s":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"u":{"docs":{},"t":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007272727272727273},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.007677543186180422},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0075046904315197},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}}}}}}}},"n":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.006239168110918544},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00624457935819601},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"db_8h.html":{"ref":"db_8h.html","tf":0.006671299513551077},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"u":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.01015228426395939}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}}},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.045454545454545456},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.02125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.04798464491362764},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0136986301369863},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.04690431519699812},"group__database.html":{"ref":"group__database.html","tf":0.003119584055459272},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003122289679098005},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.034653465346534656},"group__datastream.html":{"ref":"group__datastream.html","tf":0.008503401360544218},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.04265402843601896},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0432},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0079155672823219},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.06529209621993128},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.036101083032490974},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.035842293906810034},"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.01938285005427198},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.01288659793814433},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.049019607843137254},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.02971311475409836},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.0687960687960688},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.07903780068728522},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.11320754716981132},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0297029702970297},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.020642201834862386},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.03125},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.32608695652173914},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":4.166666666666666},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.0625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.041189931350114416},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.04975124378109453},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.019064124783362217},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01936619718309859},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.02456140350877193},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.041025641025641026},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.03978779840848806},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014492753623188406},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.03867403314917127},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0782122905027933},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.07936507936507936},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.015569856757317833},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.07894736842105263},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.1013745704467354},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.07453416149068323},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.043478260869565216},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.03611738148984198},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.03389830508474576},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.04040404040404041},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.04395604395604396},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.05776173285198556},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.04747774480712166},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.11929824561403508},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.059496567505720827},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.03333333333333333},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.049019607843137254},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.025240384615384616},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.023923444976076555},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.023391812865497075},"db_8h.html":{"ref":"db_8h.html","tf":0.005003474635163308},"permission_8h.html":{"ref":"permission_8h.html","tf":0.026470588235294117},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.007984031936127744}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":5.009661835748792},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.004191895668374476},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.045813586097946286},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0464},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.0859106529209622},"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.045454545454545456},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.05555555555555555},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.06060606060606061},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.058823529411764705},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.10319410319410319},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.013745704467353952},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.019230769230769232},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.046511627906976744},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.0625},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.06965174129353234},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.010398613518197574},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01056338028169014},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.10714285714285714},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.010309278350515464},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.056433408577878104},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02631578947368421},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.08664259927797834},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.05934718100890208},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.058823529411764705},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.043478260869565216}},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.020618556701030927},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0030737704918032786},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.01485148514851485},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.018306636155606407},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.01929824561403509},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011538461538461539},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011936339522546418},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.029069767441860465},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.00847457627118644},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007177033492822967}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.006520726595249185},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.01559792027729636},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.014084507042253521},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":5.009433962264151},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.2657979817772117},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4890609199943748},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":5.0855263157894735},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.5220146048109966},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":6.1645962732919255}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48573935055281364},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4842139175257732}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":12.504807692307692}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308}},"_":{"docs":{},"f":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":11.2526525198939}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}},"d":{"docs":{},"f":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}}}},"i":{"1":{"2":{"8":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}},"docs":{}},"docs":{}},"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}},"n":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}},"q":{"docs":{},"f":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}}},"s":{"docs":{},"_":{"docs":{},"l":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}}},"f":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}}},"u":{"docs":{},"i":{"1":{"2":{"8":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}},"docs":{}},"docs":{}},"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":12.504566210045661}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}},"_":{"docs":{},"f":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}},"s":{"docs":{},".":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007731958762886598},"action_8h.html":{"ref":"action_8h.html","tf":0.006696428571428571},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.8434856175972927}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.8434856175972927}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":2.522222222222222}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.015370284117373078},"modules.html":{"ref":"modules.html","tf":3.3364197530864192},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.034482758620689655},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.04054054054054054},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.317239336492891},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3173},"group__types.html":{"ref":"group__types.html","tf":0.023809523809523808},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07308401931767873},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":7.003712871287129},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.7917620137299771},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.08695652173913043},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":3.823170731707317}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.022988505747126436},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0297029702970297},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":17.558823529411764}}}}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},";":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}},"_":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}},"=":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__contracttype.html":{"ref":"group__contracttype.html","tf":17.571428571428573}}}},"h":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}},";":{"docs":{"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025}}}}}},"o":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.0013864818024263432},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0013876843018213356},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00935374149659864},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.024054982817869417},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00372150721042022},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.019656019656019656},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.010398613518197574},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01056338028169014},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554},"db_8h.html":{"ref":"db_8h.html","tf":0.0011118832522585128},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833}}},"t":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.006589785831960461},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"classes.html":{"ref":"classes.html","tf":0.14954301922470847},"annotated.html":{"ref":"annotated.html","tf":0.14445968453022434},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.354933110367893},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":5.035714285714286},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.011286681715575621},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.004784688995215311},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0071013557133634605}},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.2631578947368421},"annotated.html":{"ref":"annotated.html","tf":0.2542372881355932},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.6521739130434783},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":2},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":1.6666666666666665}}}}},"n":{"docs":{},"i":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.028985507246376812}}}}}},")":{"docs":{"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453}}}},"p":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.010309278350515464},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0079155672823219},"action_8h.html":{"ref":"action_8h.html","tf":0.013392857142857142},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.007984031936127744}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}}}}}}}}},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.04597701149425287},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.05405405405405406},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792}}}}}},"c":{"docs":{},"t":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.006772009029345372}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":2.5096153846153846},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":2.509132420091324},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}},"n":{"docs":{},"t":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.01818181818181818},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563}},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}}}}},"s":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.003119584055459272},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003122289679098005},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.015228426395939087}}}}}},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.004657661853749418},"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.07692307692307693},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}},"/":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"u":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"_":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}},")":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.024742268041237112},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.0199203187250996},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.021645021645021644},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0395778364116095},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.02522935779816514},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"action_8h.html":{"ref":"action_8h.html","tf":0.029017857142857144},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692},"system_8h.html":{"ref":"system_8h.html","tf":0.021875},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.03992015968063872}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.252061855670103},"action_8h.html":{"ref":"action_8h.html","tf":1.2522321428571428}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":2.1468412066021627},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":2.1471861471861473},"system_8h.html":{"ref":"system_8h.html","tf":2.1459821428571426}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":10.716161886893593}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925}}},"2":{"5":{"6":{"docs":{"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925}}},"2":{"5":{"6":{"docs":{"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":11.364886363636364}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125}}},"2":{"5":{"6":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125}}},"2":{"5":{"6":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.6444707118465984},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":10.71620510008226}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055}}},"2":{"5":{"6":{"docs":{"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055}}},"2":{"5":{"6":{"docs":{"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":25.058823529411764}}}}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"crypto_8h.html":{"ref":"crypto_8h.html","tf":11.364611022505759}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":15.041666666666666}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"2":{"5":{"6":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"2":{"5":{"6":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00375},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.014124293785310734},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.043478260869565216}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}}}},";":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"s":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.003401360544217687},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067}},"t":{"docs":{},"r":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}},",":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876}}},")":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.015873015873015872},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}}}}},"d":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.006802721088435374},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0026360676073809894},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}},"=":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.020618556701030927},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.5049350649350648},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.065},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":1.5091856320263228},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":1.5073706781023852},"group__database.html":{"ref":"group__database.html","tf":0.004332755632582322},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__serialize.html":{"ref":"group__serialize.html","tf":0.012048192771084338},"group__datastream.html":{"ref":"group__datastream.html","tf":0.007653061224489796},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.025},"variables.html":{"ref":"variables.html","tf":0.00390625},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":7.5606060606060606},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":7.564516129032258},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.010389207629089781},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.3894095595126523},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.009174311926605505},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0034662045060658577},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0035211267605633804},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":2.51010101010101},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":2.510989010989011},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.01977401129943503},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0375},"action_8h.html":{"ref":"action_8h.html","tf":0.022321428571428572},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.05847953216374269},"db_8h.html":{"ref":"db_8h.html","tf":0.0033356497567755385},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0186219739292365}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__datastream.html":{"ref":"group__datastream.html","tf":10.299914965986394},"classes.html":{"ref":"classes.html","tf":0.14355499527261267},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.1386793377094151},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.11774210584272138},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.06930693069306931},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":6.379691409507923},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3948863636363638},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0035291675316587085},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.013221153846153846},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.013157894736842105}},"&":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.025510204081632654},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.009303768026050551},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.015731292517006803}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},">":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.008078231292517007}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087}},"_":{"docs":{},"s":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087}}}}}}},"o":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}},"p":{"docs":{},"o":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"functions.html":{"ref":"functions.html","tf":0.5529953917050692},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07246376811594203},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":2.5}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":13.041666666666666}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__database.html":{"ref":"group__database.html","tf":10.246421570020173},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}},"e":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"c":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__databasec.html":{"ref":"group__databasec.html","tf":10.24607509988199}},"p":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":17.53448275862069}}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}},"docs":{}},"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}},"docs":{}},"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"t":{"docs":{"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099}}}}},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.014545454545454545},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.02},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.015355086372360844},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0150093808630394},"group__database.html":{"ref":"group__database.html","tf":0.001559792027729636},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0015611448395490026},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0024810048069468134},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.023391812865497075},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.015},"chain_8h.html":{"ref":"chain_8h.html","tf":0.030303030303030304},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0111731843575419}},")":{"docs":{"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0013864818024263432},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0013876843018213356},"db_8h.html":{"ref":"db_8h.html","tf":0.0011118832522585128}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0006932409012131716},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0006938421509106678},"db_8h.html":{"ref":"db_8h.html","tf":0.0011118832522585128}}},")":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}}}}},"a":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.3687910028116215}}}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}}}}}}}},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}}},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.01818181818181818},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563}}}}}}},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}}}},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"m":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.008771929824561403},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007692307692307693},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.013262599469496022}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.011450381679389313}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616}},";":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616}}}}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616}},";":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.34531772575250835}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.34531772575250835}}}}}}}}}}}}}}}},"f":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.006872852233676976},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.01694915254237288}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007731958762886598},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006864988558352402},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.005199306759098787},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.00528169014084507},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.022598870056497175}}}}}},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"modules.html":{"ref":"modules.html","tf":0.11419753086419752},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.020689655172413793},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.014035087719298246},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.07692307692307693},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007272727272727273},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.10344827586206896},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__singleton.html":{"ref":"group__singleton.html","tf":0.09090909090909091},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.022988505747126436},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"group__serialize.html":{"ref":"group__serialize.html","tf":0.10843373493975904},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.10869565217391304},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0410958904109589},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.02631578947368421},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__types.html":{"ref":"group__types.html","tf":0.03571428571428571},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.09523809523809523},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.10144927536231885},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.1951219512195122},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.12307692307692308},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.12595419847328243},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.14736842105263157},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.031496062992125984},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}}},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368}}}}}}},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204}}},"e":{"docs":{},"r":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.021108179419525065},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.01996007984031936}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.8434856175972927}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"t":{"docs":{},"h":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.019867549668874173},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.02030456852791878}},".":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.01015228426395939}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"p":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.012048192771084338},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.005780346820809248},"files.html":{"ref":"files.html","tf":0.018518518518518517}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__serialize.html":{"ref":"group__serialize.html","tf":0.040160642570281124},"group__datastream.html":{"ref":"group__datastream.html","tf":0.23784013605442178},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.0391304347826087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.09076117856717478},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.11578947368421053}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.012329931972789115},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.004496821212591099},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}},"i":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":5.009615384615385},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.03225806451612903},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.012048192771084338},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},"s":{"docs":{},".":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.885}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}},"u":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},"s":{"docs":{},")":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012455885405854266}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0027945971122496508},"dir_f4c96640472432942b3fc30ed441ca04.html":{"ref":"dir_f4c96640472432942b3fc30ed441ca04.html","tf":0.25},"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":0.2},"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":0.2},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.021739130434782608}}}}},"l":{"docs":{},"i":{"docs":{"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288}}}}}}}},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.004191895668374476}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"modules.html":{"ref":"modules.html","tf":0.328408195429472},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":17.54597701149425},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.14570285023405494}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":17.513513513513512}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218}}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":13.764492753623188}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.025454545454545455},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0075},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.026871401151631478},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.02626641651031895},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0023259420065126378},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00682261208576998}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00375},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01818181818181818},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.019193857965451054},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.01876172607879925},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0023259420065126378}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}},";":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}}},"i":{"docs":{},"t":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002471169686985173},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0010854396030392309},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0030737704918032786},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002905100064557779}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}},"s":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009221311475409836},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007692307692307693},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007957559681697613},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}},"o":{"docs":{},"r":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0030737704918032786},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}}}}}}}},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"o":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.005122950819672131},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.02824858757062147}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"w":{"docs":{},"n":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216},"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.038461538461538464},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.03225806451612903},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":0.0625},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.012048192771084338},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.006578947368421052},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"files.html":{"ref":"files.html","tf":0.018518518518518517},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.058823529411764705},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.05263157894736842},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.08333333333333333},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.02471169686985173},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.021220159151193633},"group__database.html":{"ref":"group__database.html","tf":0.007105719237435009},"group__databasec.html":{"ref":"group__databasec.html","tf":0.007111882046834345},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0297029702970297},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.02937378954163977},"db_8h.html":{"ref":"db_8h.html","tf":0.009034051424600417},"print_8h.html":{"ref":"print_8h.html","tf":0.019455252918287938}},"e":{"docs":{},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0032948929159802307},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.003873466752743706}}},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0012355848434925864},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.001936733376371853}}},")":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"print_8h.html":{"ref":"print_8h.html","tf":0.007782101167315175}}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}},"e":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}},"b":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"docs":{}},"docs":{}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}},"docs":{}},"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"docs":{}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"docs":{}},"docs":{}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.2460749495695656},"group__databasec.html":{"ref":"group__databasec.html","tf":0.24607509988198997},"db_8h.html":{"ref":"db_8h.html","tf":0.24604062475079463}}},"docs":{}},"docs":{}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"db_8h.html":{"ref":"db_8h.html","tf":10.246040624750796}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}},"docs":{}},"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.025510204081632654},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.009303768026050551},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554}},")":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0035291675316587085}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0035291675316587085}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{},"}":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}},",":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.01913265306122449},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.015816405644285936},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0013955652039075825}}},",":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.009174311926605505}}}},"e":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"enumerations.html":{"ref":"enumerations.html","tf":0.08695652173913043},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":3.7884615384615383},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.007017543859649123}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.01818181818181818},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563}}}},"s":{"docs":{},"i":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}},"s":{"docs":{},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7213032581453633}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"i":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.011450381679389313}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.39817326822210164},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.4594594594594595},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064}}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0032603632976245926},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}}},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__database.html":{"ref":"group__database.html","tf":0.010918544194107453},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010928013876843019},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00631911532385466},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0064},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48553175246271607},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.009029345372460496},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.011869436201780416},"db_8h.html":{"ref":"db_8h.html","tf":0.010284920083391245}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},")":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208}}}},"u":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.005154639175257732},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.057692307692307696},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.006772009029345372}},"'":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"e":{"docs":{},"r":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":5.086956521739131}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}}}}}},"o":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006020344612829562}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.019096413600372612},"modules.html":{"ref":"modules.html","tf":0.012345679012345678},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.10344827586206896},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.024752475247524754},"group__singleton.html":{"ref":"group__singleton.html","tf":0.09090909090909091},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.06060606060606061},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.06451612903225806},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":5.0727738937168105},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.038461538461538464},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.01485148514851485},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.03225806451612903},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":0.0625},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.012048192771084338},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014492753623188406},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.006578947368421052},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.030303030303030304},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.03296703296703297},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.043478260869565216},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}},".":{"docs":{},"c":{"docs":{},"d":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0055891942244993015},"files.html":{"ref":"files.html","tf":0.33333333333333337}},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"/":{"docs":{"files.html":{"ref":"files.html","tf":0.018518518518518517},"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":10}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":13.774390243902438}}}}}},"/":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"d":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.3670846394984326},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.3671451355661883},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.3662136832239926},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.29254267744833784}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":1.2549019607843137},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.29254267744833784}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725}}}}}}},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0196078431372549}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},";":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}}}}},"t":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007731958762886598}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},";":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}},"_":{"docs":{},"a":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__assetapi.html":{"ref":"group__assetapi.html","tf":3.0384615384615383},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":3.0555555555555554},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4697745901639344},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":5.052631578947368}},"(":{"0":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.00819672131147541}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}},"+":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}},"/":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526}},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}},"=":{"docs":{},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}},">":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},";":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"2":{"5":{"6":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"1":{"6":{"0":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01090909090909091},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.011516314779270634},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.01125703564727955},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017056908047759342}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00909090909090909},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.009596928982725527},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.009380863039399626},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015506280043417584}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.005454545454545455},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.005758157389635317},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.005628517823639775},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055}}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002328830926874709},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__contracttype.html":{"ref":"group__contracttype.html","tf":7.571428571428571},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":1.879950495049505},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":7.5588235294117645},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},"]":{"docs":{},"]":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},";":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}}}}}}},"d":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},";":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":2.509433962264151},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6675585284280936}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.03773584905660377}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__datastream.html":{"ref":"group__datastream.html","tf":0.20085034013605443},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.365929941618015},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":3.0833333333333335}},"<":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.2},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3636363636363638},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":3}}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.015503875968992248}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525}}}}},"p":{"docs":{},"o":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}}},"u":{"docs":{},"t":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}}},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"p":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}}}}}}}}}}}},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.33570234113712377}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":5.023255813953488},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.30206648697214733}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333}}}}}}}}}},"<":{"docs":{"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":2.5},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":7.535714285714286},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.3115902964959569}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571}}}}}}}}},"<":{"docs":{"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":3},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":2.5},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.5660377358490566}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":7.533333333333333},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.29254267744833784}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":7.533333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.30206648697214733}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0078125}}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333}}}}}}}}}},"<":{"docs":{"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":2.142857142857143},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283}}}}}}}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616}},"s":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":7.533333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.3115902964959569}},"e":{"docs":{},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.01171875}}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333}}}}}}}}}},"<":{"docs":{"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":3},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":3},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.5660377358490566}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":7.53125},"name_8hpp.html":{"ref":"name_8hpp.html","tf":3.7717391304347827}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{},";":{"docs":{"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":7.535714285714286},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.06451612903225806},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.30206648697214733}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.03571428571428571}}}}}}}}},"<":{"docs":{"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":2.5},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.31407977883096366},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3141},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":1.5049751243781095},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":3.7884615384615383}},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},";":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},";":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453}}}}}}}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0078125}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__assetapi.html":{"ref":"group__assetapi.html","tf":3.0384615384615383},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":3.0555555555555554},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.7917620137299771},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":5.052631578947368}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},";":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006864988558352402}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.011441647597254004}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}},"+":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}},"=":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}},"=":{"docs":{},"=":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}},">":{"docs":{},"=":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},";":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"e":{"docs":{},";":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}},";":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":15.012048192771084},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":5.052631578947368}},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":1.3725649350649352},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":5.052631578947368}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.026785714285714284}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":2.5048076923076925},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":2.5045662100456623},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":15.05},"print_8hpp.html":{"ref":"print_8hpp.html","tf":7.545454545454546}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":5.004830917874396},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6675585284280936}}},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":15.071428571428571},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.30206648697214733}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857}}}}}}},"<":{"docs":{"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":2.5},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__multiindex.html":{"ref":"group__multiindex.html","tf":7.5049504950495045},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4890609199943748},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6675585284280936}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.015503875968992248},"variables.html":{"ref":"variables.html","tf":0.00390625}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":1.160425101214575},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6675585284280936}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.03289473684210526}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{},"+":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.013157894736842105}}}},"=":{"docs":{},"=":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.47046821305841924},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6675585284280936}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":1.077639751552795},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6675585284280936}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.007751937984496124}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.031055900621118012}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{},"+":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012422360248447204}}}},"=":{"docs":{},"=":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":3.769230769230769},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6675585284280936}},":":{"docs":{},":":{"docs":{"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":3.0144927536231885},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6675585284280936}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":3.0161290322580645},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6675585284280936}},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"+":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":2.5053763440860215},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6712121212121211}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.159432746024925},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6712121212121211}},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"_":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}}}},"s":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}},"i":{"docs":{},"t":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}}},"i":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.159371015724607},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6712121212121211}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},";":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8373015873015872},"time_8hpp.html":{"ref":"time_8hpp.html","tf":3.0434782608695654}},"s":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093}}},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}}},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.015873015873015872}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}},"+":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}},"=":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}},"=":{"docs":{},"=":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}},">":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}},"=":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.004657661853749418},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0196078431372549},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.00859106529209622},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.7522573363431151},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0196078431372549},"name_8hpp.html":{"ref":"name_8hpp.html","tf":3.8152173913043477}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.002328830926874709},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}}},"s":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.009029345372460496}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.009029345372460496}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062},"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.3670846394984326},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.3671451355661883},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0196078431372549},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":2.505813953488372},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0196078431372549},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.29254267744833784}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.005454545454545455},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.005758157389635317},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.005628517823639775},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":7.590909090909091},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017056908047759342},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":2.51010101010101},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":5.041666666666667}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102}}}}}}}}}}}}}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00372150721042022}},"(":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"2":{"5":{"6":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"docs":{}}}}}},"_":{"docs":{},"f":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":3.763157894736842},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":5.052631578947368}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":5.0120481927710845},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":7.5588235294117645}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},";":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},"_":{"docs":{},"s":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":5.029411764705882},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8524173027989821}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},";":{"docs":{"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"docs":{}},"docs":{}},"docs":{}}}}}},"a":{"docs":{},"w":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":7.5344827586206895},"group__singleton.html":{"ref":"group__singleton.html","tf":7.590909090909091},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.877824858757062},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":5.052631578947368}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":5.0125},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":5.052631578947368}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"group__signaturetype.html":{"ref":"group__signaturetype.html","tf":7.6},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015506280043417584},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":2.510989010989011},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":5.041666666666667}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099}}}}}}}}}}}}}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}},")":{"docs":{"variables.html":{"ref":"variables.html","tf":0.0078125}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.31407977883096366},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3141},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.9411101083032491},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":3.7884615384615383}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.010830324909747292}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.01444043321299639}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.31407977883096366},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3141},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":1.002967359050445},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":3.7884615384615383}},"e":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.008902077151335312}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.008902077151335312}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}}}}}}}}}}}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.011627906976744186}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062},"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"1":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"2":{"5":{"6":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"docs":{}},"docs":{}},"docs":{}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":3.013157894736842},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":3.016949152542373},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":2.511111111111111},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":3.7884615384615383}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":3.013157894736842},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":3.016949152542373},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.885},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":3.7884615384615383}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},";":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},";":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},";":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7177944862155388},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004576659038901602},"time_8hpp.html":{"ref":"time_8hpp.html","tf":3.0434782608695654}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.011627906976744186}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.43085975809087934},"time_8hpp.html":{"ref":"time_8hpp.html","tf":3.0434782608695654}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.015503875968992248}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801}}}}}}}},"i":{"docs":{},"n":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.029748283752860413}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004576659038901602}},"=":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.006864988558352402}}}},"=":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801}},"=":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.006864988558352402}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801}}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.028070175438596492}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.007017543859649123}},"=":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615}}}},"=":{"docs":{},"=":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":1.2549019607843137},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.29254267744833784}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.007751937984496124},"variables.html":{"ref":"variables.html","tf":0.01171875}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},";":{"docs":{"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":3.769230769230769},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0017543859649123},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":4.35978835978836}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.007751937984496124}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.007017543859649123}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842}},"=":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}},">":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}}}}}}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":3.769230769230769},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.6831002331002332},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":4.35978835978836}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.01744186046511628},"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.0038461538461538464}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.005128205128205128}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564}}},"/":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}},"=":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.005128205128205128}},"=":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}}},">":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}}}}}}}},"docs":{}},"6":{"4":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":3.769230769230769},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7513262599469496},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":4.35978835978836}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.009689922480620155},"variables.html":{"ref":"variables.html","tf":0.00390625}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.011627906976744186}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.005305039787798408}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}}},"/":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}},"=":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}},"=":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}}},">":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}}}}}}}},"docs":{}},"docs":{}}}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":1.367246471939613},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.05555555555555555},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.8350664355863662},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":7.576923076923077}},"e":{"docs":{},"s":{"docs":{},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":1.3636363636363638},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":4.166666666666666},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6521739130434783}}},",":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},";":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0034662045060658577}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.008665511265164644}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},";":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":15.0625},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":3.7884615384615383}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":1.3672205930270447},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.835093896713615},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":7.576923076923077}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.005813953488372093},"variables.html":{"ref":"variables.html","tf":0.01171875}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},";":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0035211267605633804}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.008802816901408451}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},";":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":15.0625},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":3.7884615384615383}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.39817326822210164},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.45700245700245706},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":7.5588235294117645}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},";":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914}},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457}}}}},"o":{"docs":{},"r":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.012285012285012284}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.014742014742014743}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.0171990171990172}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457}}}}}}},"~":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},",":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":3.791095890410959},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":3.8055555555555554},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.838409475465313},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":5.052631578947368}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{},";":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6556103391603167},"time_8hpp.html":{"ref":"time_8hpp.html","tf":3.0434782608695654}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"m":{"docs":{},"s":{"docs":{},";":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.010309278350515464}},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},";":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}}}}}},"i":{"docs":{},"n":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.020618556701030927}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}},"=":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":3.013157894736842},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":3.016949152542373},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":3.016949152542373},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":3.7884615384615383}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},";":{"docs":{"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288}}}}}}}}},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{},";":{"docs":{"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00744301442084044}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}},">":{"docs":{},">":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002946193208249341}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"2":{"5":{"6":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"functions.html":{"ref":"functions.html","tf":0.06912442396313365},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":1.3636363636363638},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":6.3106060606060606},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6521739130434783}},";":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"docs":{}},"docs":{}},"docs":{}}}},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":1.4020979020979023}},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":15.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.05555555555555555},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6983277591973245}},"s":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},"<":{"docs":{"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":2.5},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":3.75},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":1.3043478260869565}}},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":15.0625},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.6675585284280936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":5.011363636363637}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364}}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}},"_":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}},"(":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":2.1468412066021627},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":2.1471861471861473},"system_8h.html":{"ref":"system_8h.html","tf":2.1459821428571426}},"(":{"1":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}},"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005812746522731991},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":2.1468412066021627},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":2.1471861471861473},"system_8h.html":{"ref":"system_8h.html","tf":2.1459821428571426}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":2.1468412066021627},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":2.1471861471861473},"system_8h.html":{"ref":"system_8h.html","tf":2.1459821428571426}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":3.7644927536231885}},"(":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004567157982146564},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}}},";":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":3.778985507246377}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":3.778985507246377}},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":2.1468412066021627},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":2.1471861471861473},"system_8h.html":{"ref":"system_8h.html","tf":2.1459821428571426}},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"1":{"docs":{},")":{"docs":{},";":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"docs":{}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"files.html":{"ref":"files.html","tf":0.33333333333333337}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":11.67121212121212}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"r":{"docs":{},"k":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545}}}}}}}}}}}},"/":{"docs":{"files.html":{"ref":"files.html","tf":0.018518518518518517},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":10}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.3687910028116215},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":3.7605263157894737}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":3.7605263157894737}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.837150127226463}},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6746987951807228},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.6753623188405795},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.837150127226463}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},"e":{"docs":{},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.837150127226463}}},"y":{"docs":{},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}},"f":{"docs":{},"w":{"docs":{},"d":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.837150127226463}},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":1.6706827309236947},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":1.671014492753623},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.837150127226463}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},";":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}},"o":{"docs":{},"p":{"docs":{"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":3.7710526315789474}},";":{"docs":{"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"2":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},"e":{"docs":{},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}},"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.837150127226463}},"e":{"docs":{},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.8409669211195928}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"o":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}}}}}}}}}},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.018957345971563982},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0192},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.024875621890547265},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.011286681715575621},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.018050541516245487},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.01483679525222552}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01625},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.005354200988467875},"group__database.html":{"ref":"group__database.html","tf":0.0019064124783362219},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0019080659150043364},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.010245901639344262},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.010526315789473684},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007692307692307693},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007957559681697613},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.002075980900975711},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023255813953488372},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.026442307692307692},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.02631578947368421},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005164622336991607},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.012670565302144249},"db_8h.html":{"ref":"db_8h.html","tf":0.0015288394718554553},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},":":{"docs":{"./":{"ref":"./","tf":0.002328830926874709},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0125},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0037067545304777594},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.026525198938992044},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"group__database.html":{"ref":"group__database.html","tf":0.0008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0008673026886383347},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010554089709762533},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0010854396030392309},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.007017543859649123},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.005128205128205128},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.006631299734748011},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002905100064557779},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.009746588693957114},"db_8h.html":{"ref":"db_8h.html","tf":0.0006949270326615705},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"print_8h.html":{"ref":"print_8h.html","tf":0.019455252918287938},"system_8h.html":{"ref":"system_8h.html","tf":0.00625},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.007984031936127744}}},"s":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.013793103448275862},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.01443298969072165},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.014035087719298246},"group__database.html":{"ref":"group__database.html","tf":0.006239168110918544},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00624457935819601},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.008096325513805272},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.8975988700564972},"action_8h.html":{"ref":"action_8h.html","tf":0.020089285714285716},"db_8h.html":{"ref":"db_8h.html","tf":0.005003474635163308}},"s":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}}},".":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}},"*":{"docs":{},"*":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}}},".":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588}}}}},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}},"p":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.007898894154818325},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.008},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.009029345372460496},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.008902077151335312},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801}},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}},"y":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}}}},"i":{"docs":{},"r":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.5105540897097625},"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.895},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.5099800399201597}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},",":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077}}}}}}}},"t":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.006872852233676976},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914}},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"n":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__types.html":{"ref":"group__types.html","tf":0.023809523809523808},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":5.0034364261168385},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223}}}}}}}}}}},"d":{"docs":{"group__assetapi.html":{"ref":"group__assetapi.html","tf":3.0384615384615383},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":3.0555555555555554},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0032948929159802307},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.317239336492891},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3173},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"struct_extended.html":{"ref":"struct_extended.html","tf":20.11111111111111},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.06407322654462243},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.014925373134328358},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0032278889606197547}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.639218009478673},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.6394},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.011441647597254004},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":8.059701492537313}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":7.446224256292906}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.01932367149758454},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}},")":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914}}}},"c":{"docs":{},"e":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.004098360655737705},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}},"p":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.022988505747126436},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.02702702702702703},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.036939313984168866},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.03792415169660679}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":7.511494252873563},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":7.513513513513513},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.005454545454545455},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00375},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.005758157389635317},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.005628517823639775},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0029239766081871343}}}}},"e":{"docs":{},"n":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},"_":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010379904504878555},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.013745704467353952}}}}}}}}},"a":{"docs":{},"s":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.9687799259343588},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},")":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}}},"f":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012911555842479018},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.036243822075782535},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.028405422853453842}}}}}}},"i":{"docs":{},"l":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"u":{"docs":{},"r":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"system_8h.html":{"ref":"system_8h.html","tf":0.00625},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"s":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.01444043321299639},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.014336917562724014},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.00819672131147541},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.006932409012131715},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.007042253521126761},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.0038461538461538464},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.014423076923076924},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.014354066985645933},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}},"e":{"docs":{},")":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112}}}}}},"s":{"docs":{},"t":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.005454545454545455},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00375},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.005758157389635317},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.005628517823639775},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0029239766081871343}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}},"e":{"docs":{},".":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}}},"w":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.004807692307692308},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.004784688995215311}}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"action_8h.html":{"ref":"action_8h.html","tf":0.006696428571428571}}}}}},"l":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0069864927806241265},"files.html":{"ref":"files.html","tf":10.037037037037036},"dir_f4c96640472432942b3fc30ed441ca04.html":{"ref":"dir_f4c96640472432942b3fc30ed441ca04.html","tf":0.25},"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":0.2},"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":0.2},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.021739130434782608},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.058823529411764705},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.05263157894736842},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.08333333333333333},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},"\"":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.038461538461538464},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.03225806451612903},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":0.0625},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.012048192771084338},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.006578947368421052},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.058823529411764705},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.05263157894736842},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.08333333333333333},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"s":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},".":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.058823529411764705},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.05263157894736842},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.08333333333333333},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"l":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__database.html":{"ref":"group__database.html","tf":0.0008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0008673026886383347},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"db_8h.html":{"ref":"db_8h.html","tf":0.0006949270326615705},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.012131715771230503},"group__databasec.html":{"ref":"group__databasec.html","tf":0.012142237640936688},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4851165562825209},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.958118556701031},"db_8h.html":{"ref":"db_8h.html","tf":0.014593467685892982}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"d":{"docs":{},"t":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"a":{"docs":{},"l":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0027945971122496508},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.02759472817133443},"group__database.html":{"ref":"group__database.html","tf":0.0058925476603119585},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005897658282740676},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.021660649819494584},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021505376344086023},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00186075360521011},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.011270491803278689},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.010398613518197574},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01056338028169014},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005397550342536849},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.007211538461538462},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007177033492822967},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.022918011620400257},"db_8h.html":{"ref":"db_8h.html","tf":0.00472550382209868}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}}}}}}}},"e":{"docs":{},".":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}}}}},"x":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__datastream.html":{"ref":"group__datastream.html","tf":0.005952380952380952},"group__types.html":{"ref":"group__types.html","tf":0.047619047619047616},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":5.003610108303249},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":5.003584229390681},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002946193208249341},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0034662045060658577},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0035211267605633804},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.04736842105263158},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.026923076923076925},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.033156498673740056},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}},"e":{"docs":{},"d":{"6":{"4":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}},"docs":{}},"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":1.4899901542500822},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.08347322694676852},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":6.774119006354708},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":0.0625}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":13.788461538461538}}}}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.018050541516245487}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.0036101083032490976}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},";":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":1.4890843923101988},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.08238778734372929},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":6.775821596244131},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.017921146953405017}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.0035842293906810036}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":13.788461538461538}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07339414491854708},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":9.063157894736841},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009283819628647215}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}},".":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.008771929824561403},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}},"&":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842}}},",":{"6":{"4":{"docs":{},",":{"3":{"2":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.01929824561403509},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":7.118531468531468},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007957559681697613}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}},"docs":{}},"docs":{}}}}}}}}}}}}}},".":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.010256410256410256},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}}},"&":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564}}},"(":{"1":{"3":{"1":{"3":{"1":{"3":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"3":{"2":{"3":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"q":{"docs":{},"r":{"docs":{},")":{"docs":{},"?":{"docs":{},"q":{"docs":{},":":{"docs":{},"q":{"docs":{},"r":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.010256410256410256}}}}}}}}}}},"docs":{}},"6":{"4":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0732390821181129},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.015789473684210527},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.017948717948717947},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":7.318965517241379}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}},">":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}},"v":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}},".":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.00641025641025641},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011936339522546418}}},"&":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}}},"(":{"1":{"3":{"1":{"3":{"1":{"3":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"3":{"2":{"3":{"docs":{},")":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"q":{"docs":{},"r":{"docs":{},")":{"docs":{},"?":{"docs":{},"q":{"docs":{},":":{"docs":{},"q":{"docs":{},"r":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.010610079575596816}}}}}}}}}}},"docs":{}},"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.14554778743362076}},"e":{"docs":{},"(":{"1":{"3":{"1":{"3":{"1":{"3":{"docs":{},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":13.76923076923077}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":12.179894179894179}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"t":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.003401360544217687},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015506280043417584}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.004530477759472817},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.023872679045092837},"group__database.html":{"ref":"group__database.html","tf":0.008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.008673026886383347},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015506280043417584},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012455885405854266},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004519044544867657},"db_8h.html":{"ref":"db_8h.html","tf":0.010284920083391245},"print_8h.html":{"ref":"print_8h.html","tf":0.023346303501945526}},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006455777921239509}}},")":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876}}}}},"w":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"n":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0032603632976245926}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__database.html":{"ref":"group__database.html","tf":0.004159445407279029},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.038461538461538464},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.03225806451612903},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":0.0625},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.012048192771084338},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.013157894736842105},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012422360248447204},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.058823529411764705},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.004308547602501737},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.05263157894736842},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.08333333333333333},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}}}}}},"r":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.011450381679389313}}}}}},"m":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525}},"a":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.03365384615384615},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0319634703196347},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067}}}}},".":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.016637781629116118},"group__databasec.html":{"ref":"group__databasec.html","tf":0.01665221162185603},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"db_8h.html":{"ref":"db_8h.html","tf":0.013342599027102154},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005203816131830009},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"db_8h.html":{"ref":"db_8h.html","tf":0.004169562195969423}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}}}}}}}},"o":{"docs":{},"(":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},",":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.04819277108433735}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":3.0338983050847457}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}},"e":{"docs":{},"e":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":3.005952380952381},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":3.00625},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007731958762886598},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6757575757575756},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":2.504201680672269},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.014545454545454545},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.015355086372360844},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0150093808630394},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.02843601895734597},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0288},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.03790983606557377},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.06407322654462243},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.04975124378109453},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.03292894280762565},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.03345070422535211},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.053763440860215055},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.0873015873015873},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.06578947368421052},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.006872852233676976},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.062111801242236024},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.022573363431151242},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023255813953488372},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.05263157894736842},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.0707070707070707},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.07692307692307693},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.036101083032490974},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.02967359050445104},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.07093821510297482},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.051682692307692304},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.05143540669856459}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0035087719298246},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.6843822843822844},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7526525198938993}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"n":{"docs":{},"c":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.022988505747126436},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.02702702702702703},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.007918025151374011},"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.02413793103448276},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.02268041237113402},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.02456140350877193},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01818181818181818},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.019193857965451054},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.012355848434925865},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.029177718832891247},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0136986301369863},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.01876172607879925},"group__database.html":{"ref":"group__database.html","tf":0.010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010407632263660017},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.04597701149425287},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.04054054054054054},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.026360544217687076},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.037914691943127965},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0384},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0225},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.023746701846965697},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.08934707903780069},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.021660649819494584},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021505376344086023},"functions.html":{"ref":"functions.html","tf":5.003875968992248},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.02232904326252132},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.05555555555555555},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.06060606060606061},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.01804123711340206},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.049019607843137254},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.01331967213114754},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.06142506142506143},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.058419243986254296},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.04716981132075472},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.024752475247524754},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.02981651376146789},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.03515625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.028846153846153848},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.016018306636155607},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.029850746268656716},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.012131715771230503},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01056338028169014},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.02456140350877193},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.02564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.023872679045092837},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.0625},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.04285714285714286},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.06629834254143646},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.07262569832402235},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.03968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006227942702927133},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.046052631578947366},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.04982817869415808},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.049689440993788817},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.029345372460496615},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.06779661016949153},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.01744186046511628},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.022598870056497175},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.039711191335740074},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.02967359050445104},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.056140350877192984},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.041189931350114416},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.03333333333333333},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.049019607843137254},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.007211538461538462},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.005980861244019139},"action_8h.html":{"ref":"action_8h.html","tf":0.024553571428571428},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.009683666881859263},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.009746588693957114},"db_8h.html":{"ref":"db_8h.html","tf":0.008339124391938846},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.022727272727272728},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.02100840336134454},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"print_8h.html":{"ref":"print_8h.html","tf":0.021400778210116732},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01675977653631285},"system_8h.html":{"ref":"system_8h.html","tf":0.01875},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.017964071856287425},"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}},")":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006455777921239509},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}},"g":{"docs":{"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.011178388448998603},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.014545454545454545},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0275},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.015355086372360844},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0150093808630394},"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002015816405644286},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.038461538461538464},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.03225806451612903},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":0.0625},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.03614457831325301},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.006578947368421052},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.058823529411764705},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.02729044834307992},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.05263157894736842},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.08333333333333333},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}}}}}}},"t":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.021108179419525065},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"chain_8h.html":{"ref":"chain_8h.html","tf":0.04040404040404041},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.023952095808383235}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.31407977883096366},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3141},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":1.5099502487562189}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.5026385224274406},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.501996007984032}}}}}}}}}}}}}}}}},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":1.88490099009901},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.8806497175141244}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.8806497175141244}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.31407977883096366},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3141},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":1.5099502487562189}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}},"3":{"docs":{},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}},"4":{"docs":{},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}},"5":{"docs":{},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}},"docs":{}},"(":{"docs":{},")":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}}}}}}}},"l":{"docs":{},"f":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":1.88490099009901}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":3.013157894736842},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.5026385224274406},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":3.016949152542373},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.501996007984032}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":7.5131578947368425},"chain_8h.html":{"ref":"chain_8h.html","tf":7.51010101010101}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":3.0029411764705882}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.34531772575250835}},"s":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.34531772575250835}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":3.7636986301369864},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":3.7685185185185186},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.33570234113712377},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":5.033333333333333}},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"classes.html":{"ref":"classes.html","tf":0.14355499527261267},"annotated.html":{"ref":"annotated.html","tf":0.1386793377094151},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.34531772575250835},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":5.033333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333}},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.32608695652173914},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":1.4285714285714284}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":1.88490099009901}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.7940503432494279}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.9685723278442613}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":1.2598039215686274},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":1.2598039215686274}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":3.0029411764705882}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"v":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},"n":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01090909090909091},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.011516314779270634},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.01125703564727955},"group__database.html":{"ref":"group__database.html","tf":0.006239168110918544},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00624457935819601},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0013955652039075825},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.015463917525773196},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0026987751712684244},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.014423076923076924},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.014354066985645933},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00682261208576998},"db_8h.html":{"ref":"db_8h.html","tf":0.006671299513551077},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.02727272727272727},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.025210084033613446},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"n":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"o":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.058823529411764705},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.05263157894736842},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.08333333333333333},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"e":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007692307692307693},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007957559681697613}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.004530477759472817},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.006147540983606557},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.0038461538461538464},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.010817307692307692},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.01076555023923445},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004196255648805681}}}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.038461538461538464},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__singleton.html":{"ref":"group__singleton.html","tf":0.09090909090909091},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.0036101083032490976},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.0035842293906810036},"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.09090909090909091},"group__signaturetype.html":{"ref":"group__signaturetype.html","tf":0.1},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"h":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.004942339373970346},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.003873466752743706}},"a":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00700164744645799},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005487411233053583}},"v":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.08045977011494253},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.08108108108108109},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}},",":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},".":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.028985507246376812}}}}}}}},"s":{"docs":{},"h":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.05818181818181818},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.08875},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.061420345489443376},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0600375234521576},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0062025120173670335},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.07797270955165692},"types_8h.html":{"ref":"types_8h.html","tf":0.07086614173228346}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01125},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.011695906432748537}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925}}}}},"\"":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}},")":{"docs":{},";":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}}}}},",":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.007797270955165692}}},";":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.007797270955165692}}}},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.3670846394984326},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.252061855670103},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.3671451355661883},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"action_8h.html":{"ref":"action_8h.html","tf":1.2522321428571428}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.39817326822210164},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.4594594594594595}}}}}}}},"r":{"docs":{},"d":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00700164744645799},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.010974822466107165}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}}},"p":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}},")":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"p":{"docs":{"./":{"ref":"./","tf":0.0055891942244993015},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125}},"e":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025}}}}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"r":{"docs":{},"e":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216},"annotated.html":{"ref":"annotated.html","tf":0.005780346820809248},"files.html":{"ref":"files.html","tf":0.018518518518518517}}}},"n":{"docs":{},"c":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}},"x":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00186075360521011}}}}}}}}}},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012911555842479018}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0027945971122496508}}}}}},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0025823111684958036}}},"g":{"docs":{},"h":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.018121911037891267},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.014202711426726921}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004151961801951422}}}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}},"m":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}}},"l":{"docs":{},"d":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.010309278350515464},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.007371007371007371},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}}},"s":{"docs":{},"t":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032}}}}},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"d":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"/":{"docs":{},"v":{"1":{"docs":{},".":{"4":{"docs":{},".":{"0":{"docs":{},"/":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"d":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.01400329489291598},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.010974822466107165}},")":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005487411233053583}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.001936733376371853}}}},"i":{"docs":{},".":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}}}}},"=":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__database.html":{"ref":"group__database.html","tf":0.004159445407279029},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0158311345646438},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"db_8h.html":{"ref":"db_8h.html","tf":0.0033356497567755385},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.011976047904191617}},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}}},"x":{"docs":{},",":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812}}}},")":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__datastream.html":{"ref":"group__datastream.html","tf":0.002551020408163265},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07385933331984962},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":5.0843373493975905},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.03571428571428571},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}},"e":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":9.15340909090909}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},":":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}},"d":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}}}}}}}},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"functions.html":{"ref":"functions.html","tf":0.06912442396313365},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.32608695652173914},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":4.166666666666666},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":1.3636363636363638},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283}}},")":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}}},",":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":15.052631578947368}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"y":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"!":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.004191895668374476},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.03614457831325301},"system_8h.html":{"ref":"system_8h.html","tf":0.015625}},"e":{"docs":{},"=":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"d":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"o":{"docs":{},"m":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.003321569441561138}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.01015228426395939}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.03125}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.008413461538461538}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"x":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__database.html":{"ref":"group__database.html","tf":0.021663778162911613},"group__databasec.html":{"ref":"group__databasec.html","tf":0.02168256721595837},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.06896551724137931},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.024752475247524754},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.039473684210526314},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013192612137203167},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.05084745762711865},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.0035842293906810036},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":5.003875968992248},"variables.html":{"ref":"variables.html","tf":5.00390625},"enumerations.html":{"ref":"enumerations.html","tf":5.043478260869565},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0035211267605633804},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.4940432741567165},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":5.001718213058419},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":1.0900621118012421},"db_8h.html":{"ref":"db_8h.html","tf":0.02571230020847811},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.00998003992015968}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.019801980198019802},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":5.0144927536231885}}}}}}},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.007984031936127744}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},".":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012455885405854266}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}},";":{"docs":{"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.019801980198019802},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.02631578947368421},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.03389830508474576},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.01932367149758454},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.002283578991073282},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.005988023952095809}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}}},"a":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}},"c":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}},"_":{"docs":{},"s":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__producertype.html":{"ref":"group__producertype.html","tf":0.026490066225165563},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.015463917525773196},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.030456852791878174},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.02857142857142857}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes.html":{"ref":"classes.html","tf":0.14355499527261267},"annotated.html":{"ref":"annotated.html","tf":0.1386793377094151},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":5.071428571428571},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285}},"e":{"docs":{},"r":{"docs":{},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"functions.html":{"ref":"functions.html","tf":0.06912442396313365},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07246376811594203},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":2}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.30206648697214733}},"e":{"docs":{},"r":{"2":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.30206648697214733}},";":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525}}}},"3":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.30206648697214733}},";":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525}}}},"docs":{},";":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008237232289950577},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006455777921239509}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.004191895668374476}}},"n":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"t":{"docs":{},"i":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"i":{"docs":{},"d":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.022988505747126436},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.03389830508474576},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0625}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}},"t":{"1":{"2":{"8":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}},"_":{"docs":{},"t":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.014035087719298246},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}},",":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807}}},".":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615}}}}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"group__database.html":{"ref":"group__database.html","tf":0.013344887348353552},"group__databasec.html":{"ref":"group__databasec.html","tf":0.013356461405030355},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"functions.html":{"ref":"functions.html","tf":0.07106240845925768},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.006872852233676976},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.010256410256410256},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.057971014492753624},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.06451612903225806},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.6690008361204014},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"db_8h.html":{"ref":"db_8h.html","tf":0.010701876302988186},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},".":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564}}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.02},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.014344262295081968},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.006872852233676976},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.010610079575596816},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.027777777777777776},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0260707635009311}},".":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}},"\\":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}}}}}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0025},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0032948929159802307},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.018469656992084433},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.013157894736842105},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012422360248447204},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.004807692307692308},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007177033492822967},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0025823111684958036},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.001949317738791423},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.013972055888223553}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"d":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.01288659793814433},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525}}}},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"annotated.html":{"ref":"annotated.html","tf":0.005780346820809248},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}},"v":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.01771004942339374},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.021220159151193633},"group__database.html":{"ref":"group__database.html","tf":0.012651646447140381},"group__databasec.html":{"ref":"group__databasec.html","tf":0.012662619254119687},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__types.html":{"ref":"group__types.html","tf":0.023809523809523808},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0031012560086835167},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.007017543859649123},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.005128205128205128},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.005305039787798408},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.021634615384615384},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0215311004784689},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.016785022595222725},"db_8h.html":{"ref":"db_8h.html","tf":0.015010423905489923},"print_8h.html":{"ref":"print_8h.html","tf":0.01556420233463035}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0032948929159802307},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.010610079575596816},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0024810048069468134},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.003873466752743706},"print_8h.html":{"ref":"print_8h.html","tf":0.01556420233463035}}},"s":{"docs":{},")":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.013179571663920923},"group__database.html":{"ref":"group__database.html","tf":0.0006932409012131716},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0006938421509106678},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.01872175597159458},"db_8h.html":{"ref":"db_8h.html","tf":0.0005559416261292564}}},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006455777921239509}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"t":{"docs":{"./":{"ref":"./","tf":10}}}}}}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0035087719298246},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.6843822843822844},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7526525198938993}}}}}}},"c":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48407856583203307},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":5.019230769230769}}},")":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}}},".":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.009478672985781991},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0096},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008237232289950577},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.008413461538461538},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.008373205741626795},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0009683666881859264}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.0321285140562249},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.034782608695652174},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.006578947368421052},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.030534351145038167},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.031578947368421054}}}}}}},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555}}}}}},"/":{"docs":{"files.html":{"ref":"files.html","tf":0.018518518518518517},"dir_f4c96640472432942b3fc30ed441ca04.html":{"ref":"dir_f4c96640472432942b3fc30ed441ca04.html","tf":10}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"d":{"docs":{},"t":{"docs":{"dir_f4c96640472432942b3fc30ed441ca04.html":{"ref":"dir_f4c96640472432942b3fc30ed441ca04.html","tf":15},"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":0.2}},"/":{"docs":{"dir_f4c96640472432942b3fc30ed441ca04.html":{"ref":"dir_f4c96640472432942b3fc30ed441ca04.html","tf":0.25}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":15},"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":0.2}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":0.2}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":15},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.021739130434782608}},"/":{"docs":{"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":0.2}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"h":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684}}}}}}}}}}}}}},"t":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"p":{"docs":{},"p":{"docs":{"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}},"p":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.03225806451612903},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664}}}}}}}}}}}}}}},"b":{"docs":{},".":{"docs":{},"h":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.038461538461538464},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.006578947368421052},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705}},"p":{"docs":{},"p":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"h":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}},"p":{"docs":{},"p":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}},"p":{"docs":{},"p":{"docs":{"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}},"p":{"docs":{},"p":{"docs":{"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"h":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}},"p":{"docs":{},"p":{"docs":{"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":0.0625},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.012048192771084338},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.05263157894736842}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545}}}}}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.6281595576619273},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.6282},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4707991803278688},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.9447202166064982},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":1.0059347181008902}},",":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.3670846394984326},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.252061855670103},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.3671451355661883},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"action_8h.html":{"ref":"action_8h.html","tf":1.2522321428571428}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4707991803278688}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}},")":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":5.0227272727272725}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":5.0227272727272725}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes.html":{"ref":"classes.html","tf":0.14954301922470847},"annotated.html":{"ref":"annotated.html","tf":0.14445968453022434},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.354933110367893},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":5.033333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333}},"e":{"docs":{},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.2631578947368421},"annotated.html":{"ref":"annotated.html","tf":0.2542372881355932},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.6521739130434783},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":2},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":2}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}}},"i":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":5.0588235294117645}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":5.0588235294117645}}}}}}}}}},"s":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"y":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"=":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}},"t":{"docs":{},"'":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"e":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.03240901213171577},"group__databasec.html":{"ref":"group__databasec.html","tf":0.03243712055507372},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00954951214448827},"db_8h.html":{"ref":"db_8h.html","tf":0.026824183460736624}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.003292894280762565},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003295750216825672},"db_8h.html":{"ref":"db_8h.html","tf":0.005281445448227936}}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}}}}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}},")":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}}}}}},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48407856583203307},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":8.043478260869565}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48407856583203307},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":8.048387096774194}}}}}}}},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006020344612829562},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012455885405854266}}}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07339414491854708},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":5.05}},"&":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},".":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}}}}}}}}}},",":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.32608695652173914},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":4.166666666666666},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.010817307692307692},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.01076555023923445},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"k":{"1":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099}}},"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}},"e":{"docs":{},"y":{"2":{"5":{"6":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07370427051941544}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}}},"docs":{}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.016363636363636365},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.02125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.01727447216890595},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.016885553470919325},"group__database.html":{"ref":"group__database.html","tf":0.0440207972270364},"group__databasec.html":{"ref":"group__databasec.html","tf":0.044058976582827404},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"group__types.html":{"ref":"group__types.html","tf":0.05952380952380952},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":5.003584229390681},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.09090909090909091},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0034113816095518684},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0035211267605633804},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014492753623188406},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.014947062487025119},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.039473684210526314},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.03614457831325301},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020202020202020204},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.05},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.01949317738791423},"db_8h.html":{"ref":"db_8h.html","tf":0.03808200138985406},"permission_8h.html":{"ref":"permission_8h.html","tf":0.029411764705882353}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102}}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"group__database.html":{"ref":"group__database.html","tf":0.003986135181975737},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00398959236773634},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.06060606060606061},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.005397550342536849},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.050505050505050504},"db_8h.html":{"ref":"db_8h.html","tf":0.0063933287004864486}}},"s":{"docs":{},")":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"\"":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.006872852233676976}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.006872852233676976}}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569}}}}}}}},"l":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002471169686985173},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.001936733376371853}},"=":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672}}},"a":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00700164744645799},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005487411233053583}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__database.html":{"ref":"group__database.html","tf":0.003119584055459272},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003122289679098005},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"db_8h.html":{"ref":"db_8h.html","tf":0.0033356497567755385},"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}}}}}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00700164744645799},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.010974822466107165}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"8":{"7":{"6":{"5":{"4":{"3":{"2":{"3":{"4":{"5":{"6":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}}}}},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0018683828108781398},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}},"d":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.012371134020618556},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"group__database.html":{"ref":"group__database.html","tf":0.0022530329289428075},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0022549869904596705},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"action_8h.html":{"ref":"action_8h.html","tf":0.013392857142857142},"db_8h.html":{"ref":"db_8h.html","tf":0.0018068102849200835},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.03636363636363636},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.025},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.03838771593090211},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0375234521575985},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.31881911532385465},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3189},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__types.html":{"ref":"group__types.html","tf":0.023809523809523808},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.003256318809117693},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.7567720090293454},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":1.0148367952522255},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554},"action_8h.html":{"ref":"action_8h.html","tf":0.008928571428571428},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.01949317738791423},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007272727272727273},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.02},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.007677543186180422},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0075046904315197},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.023391812865497075}}},";":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}}}}},"=":{"docs":{},"=":{"0":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}},"docs":{}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.004530477759472817},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.014218009478672985},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0144},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.006147540983606557},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.014925373134328358},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.0038461538461538464},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.006772009029345372},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.010830324909747292},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.008902077151335312},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.010817307692307692},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.01076555023923445},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004196255648805681}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.040697674418604654},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"s":{"docs":{},".":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}}}},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.021660649819494584},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.025089605734767026},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00186075360521011},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.012131715771230503},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.014084507042253521},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.0036101083032490976},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.001936733376371853},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"x":{"docs":{},"x":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"files.html":{"ref":"files.html","tf":0.33333333333333337}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{"files.html":{"ref":"files.html","tf":0.018518518518518517},"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":10}}}}}},"y":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"n":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"k":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"u":{"docs":{},"x":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004191895668374476},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216},"annotated.html":{"ref":"annotated.html","tf":5.005780346820809},"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.038461538461538464},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":0.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.015463917525773196},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.004901960784313725},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.009433962264150943},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.009615384615384616},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.03225806451612903},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":0.0625},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":0.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.012048192771084338},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":0.07142857142857142},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.006578947368421052},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.01694915254237288},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.03614457831325301},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.004901960784313725},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"files.html":{"ref":"files.html","tf":0.037037037037037035}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.03},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0297951582867784}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.015228426395939087}}}}}}},"k":{"docs":{},"e":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608}}}}}},"l":{"docs":{},"d":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"v":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"o":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012911555842479018}},"n":{"docs":{},"g":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.012355848434925865},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.010610079575596816},"group__database.html":{"ref":"group__database.html","tf":0.0019064124783362219},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0019080659150043364},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"action_8h.html":{"ref":"action_8h.html","tf":0.006696428571428571},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.01355713363460297},"db_8h.html":{"ref":"db_8h.html","tf":0.00236275191104934},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}}}}},"g":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}}}}},"i":{"docs":{},"c":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.001936733376371853}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714}}}}}}}},"k":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0025823111684958036}}},"w":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.018121911037891267},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.014202711426726921}},"e":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004159445407279029},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"db_8h.html":{"ref":"db_8h.html","tf":0.004169562195969423}}}}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.944372852233677}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}},"s":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":2.5555555555555554},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":3.8106060606060606},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004151961801951422},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}}}}}},"o":{"docs":{},"k":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}},"u":{"docs":{},"p":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0008673026886383347},"db_8h.html":{"ref":"db_8h.html","tf":0.0006949270326615705}}}}}},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0037261294829995344}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002471169686985173},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.007936507936507936},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.003873466752743706}}},"b":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00700164744645799},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005487411233053583}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00700164744645799},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.010974822466107165}}}},"h":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.0038461538461538464},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806}},"s":{"docs":{},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}}}},"u":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133}}}}},"m":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.003401360544217687},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0013955652039075825},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.021052631578947368},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.02288329519450801}},"a":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}},"r":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.006520726595249185},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.043478260869565216},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"types_8h.html":{"ref":"types_8h.html","tf":0.015748031496062992}},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}}},",":{"docs":{"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}}}}}},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.682943143812709}},";":{"docs":{"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"a":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.012345679012345678},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.07692307692307693},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}}},"r":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0027945971122496508}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.014545454545454545},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.015355086372360844},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0150093808630394},"group__database.html":{"ref":"group__database.html","tf":0.006239168110918544},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00624457935819601},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00186075360521011},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.01364522417153996},"db_8h.html":{"ref":"db_8h.html","tf":0.006671299513551077}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":3.005952380952381},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":3.00625},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":2.5053763440860215},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6757575757575756},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":2.504201680672269}},"(":{"docs":{},")":{"docs":{},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}}}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}}}}}}}},"p":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00510204081632653},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00186075360521011},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02631578947368421}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067}}}},"x":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.004098360655737705},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.838409475465313}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4697745901639344}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.8434856175972927}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.8434856175972927}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.838409475465313}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}},"s":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.838409475465313}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.8434856175972927}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.8434856175972927}}}}}}},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.838409475465313}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.8434856175972927}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.885}},"s":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.895}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.052980132450331126},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6590467652771552},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.04060913705583756},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.43314808761033013}}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01},"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.07738095238095238},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.06875},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":2.553763440860215},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":6.170420739481513},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.011695906432748537},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.04090909090909091},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.046218487394957986},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}}},"y":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":13.005952380952381}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952}}}}}}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":13.00625}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625}}}}}}}}}}}}}}}}},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}},".":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.022727272727272728},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.029411764705882353}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"memory_8h.html":{"ref":"memory_8h.html","tf":25.058823529411764}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":12.504201680672269}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"r":{"docs":{},"k":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07292895651724456},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":7.516129032258065},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685}}},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"_":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}},"s":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"i":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__serialize.html":{"ref":"group__serialize.html","tf":0.04819277108433735},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.05217391304347826},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0014531866306829978},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.030534351145038167},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.042105263157894736}},":":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216}}}}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},",":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"r":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"_":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0037261294829995344},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.010526315789473684},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.005454545454545455},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00375},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.005758157389635317},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.005628517823639775},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0029239766081871343},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"a":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}},".":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0025},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0029239766081871343}}}}}}}}},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6590467652771552},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.43314808761033013}},"i":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.8434856175972927}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0030737704918032786},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006864988558352402}},"t":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07432452172115214},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":5.948412698412698},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.05263157894736842},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.018306636155606407},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}},"(":{"docs":{},")":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615}},")":{"docs":{"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.006872852233676976}}}}}}}}}}}},"k":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.005454545454545455},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00375},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.005758157389635317},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.005628517823639775},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0029239766081871343}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.970648308745237},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.038461538461538464},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196}}}}},"a":{"docs":{},"r":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.001936733376371853}}}},"u":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008237232289950577},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006455777921239509}}}}}},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}},")":{"docs":{"./":{"ref":"./","tf":0.0027945971122496508}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.012048192771084338},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"v":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.06896551724137931},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.024752475247524754},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.0035842293906810036},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0035211267605633804},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.008096325513805272}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":5.484493762012229},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":1.173582995951417},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4739046391752577},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.057971014492753624},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":3.75}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.20737327188940094}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685}},":":{"docs":{},":":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":3.75}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"_":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":3.75}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.006578947368421052},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}},"*":{"docs":{"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":10.667558528428094}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__multiindex.html":{"ref":"group__multiindex.html","tf":17.504950495049506}}}}}}},"p":{"docs":{},"l":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009221311475409836},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007692307692307693},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.007957559681697613},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}},"i":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.007172131147540984},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.001936733376371853}}}}}}}}},"s":{"docs":{},"g":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"action_8h.html":{"ref":"action_8h.html","tf":0.006696428571428571},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"action_8h.html":{"ref":"action_8h.html","tf":0.006696428571428571},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}},")":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}},")":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}}},",":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}},":":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.021052631578947368},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.013729977116704805}}}},"n":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.03103448275862069},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.031578947368421054},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0023259420065126378},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}},";":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.011178388448998603},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.04827586206896552},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.041237113402061855},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.04912280701754386},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.038461538461538464},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.013262599469496022},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__database.html":{"ref":"group__database.html","tf":0.011091854419410746},"group__databasec.html":{"ref":"group__databasec.html","tf":0.011101474414570685},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485},"group__singleton.html":{"ref":"group__singleton.html","tf":0.09090909090909091},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.022988505747126436},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.02702702702702703},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__serialize.html":{"ref":"group__serialize.html","tf":0.012048192771084338},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.013043478260869565},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.011058451816745656},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0112},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0125},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.010309278350515464},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.07142857142857142},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.0036101083032490976},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.0035842293906810036},"group__producertype.html":{"ref":"group__producertype.html","tf":0.026490066225165563},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.09090909090909091},"group__signaturetype.html":{"ref":"group__signaturetype.html","tf":0.1},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"classes.html":{"ref":"classes.html","tf":0.2691459186889379},"functions.html":{"ref":"functions.html","tf":0.07106240845925768},"variables.html":{"ref":"variables.html","tf":0.00390625},"annotated.html":{"ref":"annotated.html","tf":0.26001763495640245},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.15066485984794856},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.011363636363636364},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.038461538461538464},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.4229147141518277},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0196078431372549},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009221311475409836},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.013745704467353952},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.018867924528301886},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.1485148514851485},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.028846153846153848},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.046511627906976744},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.03225806451612903},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.018306636155606407},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.029850746268656716},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.010398613518197574},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01056338028169014},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.024154589371980676},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":4.542857142857143},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.015873015873015872},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.007058335063317417},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.013157894736842105},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4807774914089347},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012422360248447204},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":8.067720090293454},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.05084745762711865},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.10465116279069768},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.07894736842105263},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020202020202020204},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.02197802197802198},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.022598870056497175},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.010830324909747292},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.007017543859649123},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.009153318077803204},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.044444444444444446},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0196078431372549},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833},"action_8h.html":{"ref":"action_8h.html","tf":0.049107142857142856},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.3211141060197664},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.058823529411764705},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.008895066018068103},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.028985507246376812},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.05263157894736842},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.03076923076923077},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.06521739130434782},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00931098696461825},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.015267175572519083},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.031496062992125984},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},"(":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010379904504878555}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569}}}}}}}}}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010309278350515464},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"annotated.html":{"ref":"annotated.html","tf":0.023121387283236993},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":5.000310125600868},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":5.011363636363637},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":5.038461538461538},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":5.009615384615385},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.009964708324683413},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.043478260869565216}}}}},".":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.024096385542168676},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.02608695652173913},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.015267175572519083},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368}}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"s":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":3.75},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"action_8h.html":{"ref":"action_8h.html","tf":0.008928571428571428},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866}}}}},".":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"name_8hpp.html":{"ref":"name_8hpp.html","tf":13.771739130434783}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608}}}}}}}}}}}}}}}}}}}},"{":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{},"}":{"docs":{"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"n":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0037067545304777594},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002905100064557779}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008237232289950577},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0009683666881859264}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0111731843575419}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}}}}},"w":{"docs":{"./":{"ref":"./","tf":0.0055891942244993015},"group__database.html":{"ref":"group__database.html","tf":0.0022530329289428075},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0022549869904596705},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.015},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.020618556701030927},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.010245901639344262},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.019801980198019802},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.02734375},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.02517162471395881},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.01929824561403509},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011538461538461539},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011936339522546418},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.029069767441860465},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.031073446327683617},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.004807692307692308},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007177033492822967},"db_8h.html":{"ref":"db_8h.html","tf":0.0018068102849200835},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0186219739292365}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"l":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}}},"x":{"docs":{},"t":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6590467652771552},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}}}}},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.015228426395939087},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"_":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.8434856175972927}}}}}}}}}}}}}}}},"g":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__datastream.html":{"ref":"group__datastream.html","tf":0.003401360544217687},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00186075360521011},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}},"t":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}},":":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"s":{"docs":{},":":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.02413793103448276},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.02456140350877193},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714}}}}}},"y":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.010344827586206896},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.010526315789473684},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}}},"h":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}},"w":{"docs":{"./":{"ref":"./","tf":0.006520726595249185},"group__systemapi.html":{"ref":"group__systemapi.html","tf":2.1468412066021627},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":2.1471861471861473},"system_8h.html":{"ref":"system_8h.html","tf":2.1459821428571426}}}},"u":{"docs":{},"m":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0034113816095518684}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.038461538461538464},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010554089709762533},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0013955652039075825},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.011270491803278689},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.03669724770642202},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.010398613518197574},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01056338028169014},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.008771929824561403},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.007692307692307693},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.010610079575596816},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.04819277108433735},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012911555842479018},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815},"print_8h.html":{"ref":"print_8h.html","tf":0.017509727626459144},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.00998003992015968}},":":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}},".":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.004098360655737705},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.007017543859649123},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.005305039787798408}}},",":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.8367995378393991},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.8368544600938966}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.005199306759098787},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.00528169014084507}},">":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0017056908047759342}}}},"l":{"docs":{},"l":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},",":{"docs":{"classes.html":{"ref":"classes.html","tf":0.2631578947368421},"annotated.html":{"ref":"annotated.html","tf":0.2542372881355932},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010309278350515464},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.6521739130434783},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":7.142857142857142},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.5660377358490566}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}},"o":{"3":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031}},"=":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}},"b":{"docs":{},"j":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0014531866306829978},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00510204081632653},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.04332129963898917},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.043010752688172046},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.005892386416498682},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.015463917525773196},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.036395147313691506},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.03697183098591549},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.02456140350877193},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011538461538461539},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011936339522546418},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.015362258667220262},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.04447115384615385},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.041866028708133975}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.013729977116704805},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.01386481802426343},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.014084507042253521},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0014531866306829978},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023255813953488372},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.004807692307692308},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007177033492822967}}},")":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}},"\\":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006643138883122276}}}}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569}}}}}},"'":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077}}}}}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},".":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}}}}},"d":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"n":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__database.html":{"ref":"group__database.html","tf":0.003986135181975737},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00398959236773634},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.00847457627118644},"db_8h.html":{"ref":"db_8h.html","tf":0.0031966643502432243}},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"e":{"docs":{},".":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":5.0508474576271185}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}},"p":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.005454545454545455},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00375},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.005758157389635317},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.005628517823639775},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0029239766081871343}},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0032603632976245926},"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.432207792207792},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":1.4324102001645187},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0032948929159802307},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":1.4323237737871883},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.057692307692307696},"group__datastream.html":{"ref":"group__datastream.html","tf":1.8157312925170066},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":1.5751382306477093},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":1.5753},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":2.7872128775547114},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":4.108959632425337},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":4.108830237862496},"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"functions.html":{"ref":"functions.html","tf":0.03875968992248062},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":1.1018425505808112},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":2.8381147540983607},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":3.2162162162162167},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":2.649932765575975},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":2.389016018306636},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":1.5149253731343284},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":2.5138648180242633},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":2.5140845070422535},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.008771929824561403},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":2.0685314685314684},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":2.273872679045093},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":2.762987012987013},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":1.6984126984126982},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":5.83502024291498},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":5.419254658385094},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":3.7884615384615383},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":2.268058690744921},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02631578947368421},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":2.5202020202020203},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":2.521978021978022},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":1.8930505415162455},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":2.0148367952522257},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":4.341854636591479},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":4.773782281791435},"structsigned__int.html":{"ref":"structsigned__int.html","tf":1.3163670568561874},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":1.3732057416267944},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0025823111684958036},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6590467652771552},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":3.0105263157894737},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":2.7375291375291377},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":1.5053050397877985},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.43314808761033013},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.6545777591973244},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.6842105263157895}},"=":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.432207792207792},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":1.4324102001645187},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":1.4323237737871883},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.942239336492891},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.9423},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":1.367246471939613},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":1.3672205930270447},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.14554778743362076},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4697745901639344},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6590467652771552},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.7917620137299771},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":1.5049751243781095},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.8350664355863662},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.835093896713615},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0035087719298246},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.6843822843822844},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7526525198938993},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":1.167004048582996},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":1.0838509316770186},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.7522573363431151},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":2.505813953488372},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":2.5202020202020203},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":2.521978021978022},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.9411101083032491},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":1.002967359050445},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7213032581453633},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.43314808761033013},"structsigned__int.html":{"ref":"structsigned__int.html","tf":1.960127508361204},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":2.049043062200957}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093}}}}}}}}},"<":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.9375},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.9375},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":1.3636363636363638},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":1.3636363636363638},"group__producertype.html":{"ref":"group__producertype.html","tf":0.6818181818181819},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.14492753623188406},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.46875},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6521739130434783},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.7894736842105263},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":1.5},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.8333333333333333},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.8333333333333333},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.6818181818181819},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.75},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8333333333333333},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.75},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":3.75},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.9375},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":1},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7142857142857142},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.42857142857142855},"structsigned__int.html":{"ref":"structsigned__int.html","tf":1.9565217391304348},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":2.0454545454545454}},"<":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":2.5},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":2.5},"group__datastream.html":{"ref":"group__datastream.html","tf":5.6000000000000005},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":2.101449275362319},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.6521739130434783},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.6818181818181819}}},"=":{"docs":{"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":1.3636363636363638},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":1.3636363636363638},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.14492753623188406},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.46875},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6521739130434783},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.7894736842105263},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.8333333333333333},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.8333333333333333},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8333333333333333},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7142857142857142},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.42857142857142855}}}},">":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4697745901639344},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0035087719298246},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.6843822843822844},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7526525198938993},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412}},">":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":3.808078231292517},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":1.3827039806193973}}},"=":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4697745901639344},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.7917620137299771},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"structsigned__int.html":{"ref":"structsigned__int.html","tf":1.960127508361204},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":2.049043062200957}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}}}}}},".":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.02843601895734597},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0288},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.02459016393442623},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.05034324942791762},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.04477611940298507},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.02631578947368421},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.02564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.026525198938992044},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.020316027088036117},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.032490974729241874},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.026706231454005934},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.038461538461538464},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.03349282296650718}}},"!":{"docs":{},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4697745901639344},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.7917620137299771},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"structsigned__int.html":{"ref":"structsigned__int.html","tf":1.960127508361204},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":2.049043062200957}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}}}}},"(":{"docs":{},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":10.075471698113208}}}},"+":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4697745901639344},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.7917620137299771},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":1.3687645687645689},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":1.5053050397877985},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":1.4426065162907267},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.8662961752206603}},"+":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":2.334008097165992},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":2.1677018633540373},"structsigned__int.html":{"ref":"structsigned__int.html","tf":1.3091555183946488}}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4707991803278688},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.7917620137299771},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7213032581453633},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":1.2994442628309906}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}}}},"/":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.9395491803278688},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.6843822843822844},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7526525198938993}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4707991803278688}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526}}}}}}}},",":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.01639344262295082}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0034662045060658577},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0035211267605633804}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}}}},"\"":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{"name_8hpp.html":{"ref":"name_8hpp.html","tf":3.7934782608695654}}}}}}}}}}}},"t":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.003401360544217687},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067}},"=":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"i":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0037261294829995344},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.005454545454545455},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00375},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.005758157389635317},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.005628517823639775},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0029239766081871343}}},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.004657661853749418},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},"s":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0032603632976245926}}}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}},"a":{"docs":{},"q":{"docs":{},"u":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}}}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}},",":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676}}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}},"u":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}},"p":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"t":{"docs":{"./":{"ref":"./","tf":0.004657661853749418},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}},"=":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0037067545304777594},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.026525198938992044},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002905100064557779},"print_8h.html":{"ref":"print_8h.html","tf":0.019455252918287938}}},".":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},":":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0136986301369863},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}}},"w":{"docs":{},"n":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023255813953488372}},"e":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0050259965337954935},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005030355594102341},"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.013729977116704805},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"db_8h.html":{"ref":"db_8h.html","tf":0.004030576789437109},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},";":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.01444043321299639},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.014336917562724014},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.00819672131147541},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.006932409012131715},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.007042253521126761},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.0038461538461538464},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.014423076923076924},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.014354066985645933},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}},")":{"docs":{"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914}}}}}}},"f":{"docs":{},":":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004576659038901602}},")":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004576659038901602}}}}}}}}},"p":{"docs":{"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.011467889908256881},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.019230769230769232},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186}},"=":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__datastream.html":{"ref":"group__datastream.html","tf":0.20467687074829932},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.02},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07463464732202049},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010309278350515464},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0148975791433892},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.2004251700680272},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}}}}},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0684931506849315},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.09259259259259259},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0410958904109589},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.015},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.05555555555555555},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0148975791433892}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},":":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.02413793103448276},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.016494845360824743},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.02456140350877193},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01818181818181818},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.019193857965451054},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.011943986820428337},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.026525198938992044},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.01876172607879925},"group__database.html":{"ref":"group__database.html","tf":0.010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010407632263660017},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.022988505747126436},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.02702702702702703},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"group__serialize.html":{"ref":"group__serialize.html","tf":0.0321285140562249},"group__datastream.html":{"ref":"group__datastream.html","tf":0.05442176870748299},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.034782608695652174},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.0199203187250996},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0225},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.021645021645021644},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013192612137203167},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.021660649819494584},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021505376344086023},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.029151806481625058},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.01288659793814433},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.018442622950819672},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.020642201834862386},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.015625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.01559792027729636},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01584507042253521},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.028070175438596492},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.026923076923076925},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.027851458885941646},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0029063732613659955},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.014124293785310734},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.02283653846153846},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.025119617224880382},"action_8h.html":{"ref":"action_8h.html","tf":0.017857142857142856},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00936087798579729},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.009746588693957114},"db_8h.html":{"ref":"db_8h.html","tf":0.008339124391938846},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"print_8h.html":{"ref":"print_8h.html","tf":0.019455252918287938},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01675977653631285},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.022900763358778626},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.021052631578947368},"system_8h.html":{"ref":"system_8h.html","tf":0.015625},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.00998003992015968}}},".":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}},".":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.005354200988467875},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004196255648805681},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}}},"i":{"docs":{},"s":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}}}}}},"s":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.014035087719298246},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.005128205128205128},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.010610079575596816}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714}}}}}},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.02631578947368421},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0079155672823219},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"chain_8h.html":{"ref":"chain_8h.html","tf":0.020202020202020204},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.005988023952095809}}},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654}}}},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0027945971122496508}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}}}}}},"y":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428}},".":{"docs":{"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428}}}}}}},"e":{"docs":{},"r":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.003119584055459272},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003122289679098005},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004567157982146564},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},")":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0024911770811708533},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"db_8h.html":{"ref":"db_8h.html","tf":0.0033356497567755385},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}}}}}},"d":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.006932409012131715},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.007042253521126761}},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.8367995378393991},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.8368544600938966}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.004942339373970346},"group__serialize.html":{"ref":"group__serialize.html","tf":0.040160642570281124},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.043478260869565216},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005810200129115558},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.03816793893129771}}}}}},"m":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0196078431372549},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0196078431372549}},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.008247422680412371},"variables.html":{"ref":"variables.html","tf":0.0078125},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00186075360521011},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.01288659793814433},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":1.2598039215686274},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":2.5872093023255816},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":1.2598039215686274},"action_8h.html":{"ref":"action_8h.html","tf":0.006696428571428571},"permission_8h.html":{"ref":"permission_8h.html","tf":0.05}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07292895651724456},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":10.040697674418604}},"[":{"docs":{},"]":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}},"s":{"docs":{},".":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941}}},",":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732}}}},".":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.023255813953488372},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"permission_8h.html":{"ref":"permission_8h.html","tf":13.00294117647059}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":25.058823529411764}}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093}}}}},")":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}},"s":{"docs":{},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857}}},")":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.00980392156862745},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.00980392156862745}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706}},"e":{"docs":{},")":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}}}},")":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.00980392156862745},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.00980392156862745}}},",":{"docs":{"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857}}}}},"n":{"docs":{},"d":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"system_8h.html":{"ref":"system_8h.html","tf":0.028125}}}}},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"t":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}},")":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.016129032258064516}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"o":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.3682235195996666}},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.01929824561403509}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011538461538461539}}},"docs":{}},"6":{"4":{"docs":{"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011936339522546418}}},"docs":{}},"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__database.html":{"ref":"group__database.html","tf":0.01559792027729636},"group__databasec.html":{"ref":"group__databasec.html","tf":0.015611448395490026},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.038461538461538464},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0013955652039075825},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.014035087719298246},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.01282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.010610079575596816},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.009134315964293128},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.011695906432748537},"db_8h.html":{"ref":"db_8h.html","tf":0.01584433634468381},"print_8h.html":{"ref":"print_8h.html","tf":0.017509727626459144}},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.008247422680412371},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.010610079575596816},"group__database.html":{"ref":"group__database.html","tf":0.010571923743500867},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010581092801387684},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.02976190476190476},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.03125},"group__datastream.html":{"ref":"group__datastream.html","tf":0.004251700680272109},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.02},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00186075360521011},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"action_8h.html":{"ref":"action_8h.html","tf":0.008928571428571428},"chain_8h.html":{"ref":"chain_8h.html","tf":0.030303030303030304},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846},"db_8h.html":{"ref":"db_8h.html","tf":0.00847810979847116},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.01818181818181818},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.02100840336134454},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176},"print_8h.html":{"ref":"print_8h.html","tf":0.007782101167315175},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0148975791433892},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728}}},")":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.005766062602965404},"group__database.html":{"ref":"group__database.html","tf":0.010571923743500867},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010581092801387684},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.004098360655737705},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004567157982146564},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004519044544867657},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557},"db_8h.html":{"ref":"db_8h.html","tf":0.00847810979847116},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0030737704918032786},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554}},"e":{"docs":{},".":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554}}}}}}}},"i":{"docs":{},"t":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.02981651376146789}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__database.html":{"ref":"group__database.html","tf":0.008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.008673026886383347},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.31881911532385465},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3189},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0013955652039075825},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.010526315789473684},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011538461538461539},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011936339522546418},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.9555505415162455},"db_8h.html":{"ref":"db_8h.html","tf":0.010284920083391245},"print_8h.html":{"ref":"print_8h.html","tf":0.017509727626459144}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},")":{"docs":{"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"group__database.html":{"ref":"group__database.html","tf":0.005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005203816131830009},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00631911532385466},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0064},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.007172131147540984},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.009029345372460496},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.011869436201780416},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"action_8h.html":{"ref":"action_8h.html","tf":0.006696428571428571},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557},"db_8h.html":{"ref":"db_8h.html","tf":0.004169562195969423},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004159445407279029},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"db_8h.html":{"ref":"db_8h.html","tf":0.004169562195969423}}},"e":{"docs":{},"d":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"i":{"docs":{},"x":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0079155672823219},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.007984031936127744}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}},"s":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}}}}},"i":{"docs":{},"m":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__database.html":{"ref":"group__database.html","tf":0.03500866551126516},"group__databasec.html":{"ref":"group__databasec.html","tf":0.035039028620988726},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.02055221091965954},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.05},"db_8h.html":{"ref":"db_8h.html","tf":0.031966643502432245}},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":5.025}},"(":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}}}}}},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227}}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"db_8h.html":{"ref":"db_8h.html","tf":0.004447533009034051}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}},"i":{"docs":{},"t":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.005952380952380952},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0024810048069468134},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.045454545454545456},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077}}}}},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":2.543269230769231},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.329575596816976},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":2.545662100456621},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.634478672985782},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.6346},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":1.7609942896438275},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4738729508196721},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.8009153318077803},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":1.5248756218905473},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0087719298245614},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.6882284382284383},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.756631299734748},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.9555505415162455},"print_8h.html":{"ref":"print_8h.html","tf":1.3278210116731517}},"f":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"/":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"(":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}}}}}}}},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"i":{"1":{"2":{"8":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"&":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0037067545304777594},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002905100064557779}}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"_":{"docs":{},"f":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":2.5048076923076925},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":2.5045662100456623},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.14554778743362076}},"(":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}},"d":{"docs":{},"f":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}}}}},"n":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}}}}},"q":{"docs":{},"f":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}},"_":{"docs":{},"l":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}},"f":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}},"u":{"docs":{},"i":{"1":{"2":{"8":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"docs":{},"&":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":1.2526525198938991},"print_8h.html":{"ref":"print_8h.html","tf":1.2519455252918288}},"(":{"1":{"docs":{},"e":{"docs":{},"+":{"1":{"8":{"docs":{},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"docs":{}},"docs":{}}}},"docs":{}}}},".":{"docs":{},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"print_8h.html":{"ref":"print_8h.html","tf":11.251945525291829}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"print_8hpp.html":{"ref":"print_8hpp.html","tf":17.545454545454547}}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}},"d":{"docs":{},"f":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"i":{"1":{"2":{"8":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"docs":{}},"docs":{}},"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"n":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"q":{"docs":{},"f":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"s":{"docs":{},"_":{"docs":{},"l":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"f":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"u":{"docs":{},"i":{"1":{"2":{"8":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"docs":{}},"docs":{}},"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0684931506849315},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.02},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0186219739292365}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":13.763698630136986}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":11.5025}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":13.768518518518519}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"privileged_8h.html":{"ref":"privileged_8h.html","tf":11.501862197392924}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":15.052631578947368}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"system_8h.html":{"ref":"system_8h.html","tf":0.028125}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.039603960396039604}}}}}}}},"e":{"docs":{},"d":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.004098360655737705}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0175},"group__types.html":{"ref":"group__types.html","tf":0.023809523809523808},"group__producertype.html":{"ref":"group__producertype.html","tf":0.019867549668874173},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.06578947368421052},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":5.048192771084337},"chain_8h.html":{"ref":"chain_8h.html","tf":0.030303030303030304},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01675977653631285}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__producertype.html":{"ref":"group__producertype.html","tf":10.688440698374473}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.020202020202020204}}},".":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.039473684210526314},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"chain_8h.html":{"ref":"chain_8h.html","tf":0.04040404040404041},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}},"[":{"2":{"1":{"docs":{},"]":{"docs":{},";":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}},"docs":{}},"docs":{}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}}}}}}},"\\":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}},"\\":{"docs":{},"_":{"docs":{},"s":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}},"_":{"docs":{},"s":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":3.763157894736842}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":5.0131578947368425}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":5.0120481927710845}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":17.558823529411764}}}}}}}}}}}}}}},".":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.05263157894736842}}}},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}},"t":{"docs":{},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.009472817133443162},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.007424144609425436}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0027945971122496508}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.010309278350515464},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.014545454545454545},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.025},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.015355086372360844},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0150093808630394},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.01579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.016},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00372150721042022},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.011286681715575621},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.020771513353115726},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"action_8h.html":{"ref":"action_8h.html","tf":0.013392857142857142},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.023391812865497075},"permission_8h.html":{"ref":"permission_8h.html","tf":0.04411764705882353},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}},"s":{"docs":{},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"_":{"docs":{},"u":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}}}}}}}}}}},")":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.022988505747126436},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514}},"l":{"docs":{},"y":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}},"i":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}}}},"t":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}},"y":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012455885405854266}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}},"s":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}},"u":{"docs":{},"b":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.02181818181818182},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.023032629558541268},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0225140712945591},"group__types.html":{"ref":"group__types.html","tf":0.03571428571428571},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.09090909090909091},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.09090909090909091},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002015816405644286},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0196078431372549},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0030737704918032786},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.013745704467353952},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.018867924528301886},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.046511627906976744},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.03571428571428571},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.03225806451612903},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.006932409012131715},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.007042253521126761},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.0055248618784530384},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.011904761904761904},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.006578947368421052},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.005154639175257732},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.009029345372460496},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.05084745762711865},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.09090909090909091},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.029411764705882353},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.007017543859649123},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.006864988558352402},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0196078431372549},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.010721247563352826},"permission_8h.html":{"ref":"permission_8h.html","tf":0.01764705882352941}},":":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007272727272727273},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.007677543186180422},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0075046904315197},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07292895651724456},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02631578947368421},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":5.05050505050505}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":25.083333333333332}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":17.59090909090909}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.2561855670103093},"action_8h.html":{"ref":"action_8h.html","tf":1.2566964285714286}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}},"e":{"docs":{},"n":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}},";":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},")":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.001949317738791423}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"group__datastream.html":{"ref":"group__datastream.html","tf":0.003401360544217687},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015506280043417584}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792}}},"s":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941}}}}}}},"s":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941}}}}}}}}}}}},",":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00375},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}}},";":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.3682235195996666},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3714488636363638}}}},"t":{"docs":{},"r":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":1.165019338203696},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}},",":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.005952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.00625},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0223463687150838},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}},"k":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625}}}}}}},",":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903}}}},")":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.019230769230769232},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093}}}},"q":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"variables.html":{"ref":"variables.html","tf":0.00390625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.7940503432494279}}}}}}},"d":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"group__database.html":{"ref":"group__database.html","tf":0.004332755632582322},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004336513443191674},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"db_8h.html":{"ref":"db_8h.html","tf":0.005142460041695622},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}}}}}}}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015432098765432098},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.010344827586206896},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105}}}}}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.010526315789473684},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011538461538461539},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011936339522546418}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}},"r":{"1":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099}}},"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.031578947368421054},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.03076923076923077},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.029177718832891247},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.007936507936507936},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.006772009029345372},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.008902077151335312},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"w":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.6313191153238547},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.6314},"functions.html":{"ref":"functions.html","tf":0.07300039295538172},"enumerations.html":{"ref":"enumerations.html","tf":0.043478260869565216},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":1.5112866817155757},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.9483303249097473},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":1.0089020771513353}},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"n":{"docs":{},"g":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}}}},")":{"docs":{"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}},"m":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946}}}}}}}}}}},"e":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.015650741350906095},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.012265978050355068}},"a":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.013605442176870748},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.004806946813459451},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.395746455379483},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"m":{"docs":{},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.252061855670103},"action_8h.html":{"ref":"action_8h.html","tf":1.2522321428571428}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.5026385224274406},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.501996007984032}}}}}}}}}}},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}},"/":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":3.0297619047619047},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":3.03125},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":2.5268817204301075},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6984848484848483},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":2.5252100840336134}},"(":{"docs":{},")":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":1.16489587760306}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.005376344086021506}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.022988505747126436},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.02702702702702703},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"action_8h.html":{"ref":"action_8h.html","tf":0.008928571428571428}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010309278350515464},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0035291675316587085},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423}}},")":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"o":{"docs":{},"v":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.005454545454545455},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.005758157389635317},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.005628517823639775},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.716103896103896},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3648863636363637},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.7162051000822593},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.7161618868935942},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3646110225057595}}}}}},"i":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}}},"r":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0029462738301559792},"group__databasec.html":{"ref":"group__databasec.html","tf":0.002948829141370338},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569},"db_8h.html":{"ref":"db_8h.html","tf":0.0029186935371785963}},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010379904504878555}}}}}}},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"u":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.025510204081632654},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.009458830826484726},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.004098360655737705},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0014531866306829978},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.004807692307692308},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833},"dir_f4c96640472432942b3fc30ed441ca04.html":{"ref":"dir_f4c96640472432942b3fc30ed441ca04.html","tf":0.25},"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"ref":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","tf":0.2},"dir_aec5bb64676d64f4f6eae682e441225e.html":{"ref":"dir_aec5bb64676d64f4f6eae682e441225e.html","tf":0.2},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.021739130434782608}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.012478336221837088},"group__databasec.html":{"ref":"group__databasec.html","tf":0.01248915871639202},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"db_8h.html":{"ref":"db_8h.html","tf":0.011674774148714385}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__serialize.html":{"ref":"group__serialize.html","tf":0.07228915662650602},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.0782608695652174},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.08396946564885496}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.015267175572519083}}}}}},"o":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":5.029411764705882}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":10.837150127226463}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012455885405854266},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}}},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.895}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":1.895}}}}}}}}}}}}}}}},"l":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},"e":{"docs":{},".":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"a":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}},"x":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.012575687005123428},"group__database.html":{"ref":"group__database.html","tf":0.004332755632582322},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004336513443191674},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0031139713514635667},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.8891242937853108},"db_8h.html":{"ref":"db_8h.html","tf":0.004308547602501737}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.377397831526272},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3714488636363638},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},"s":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0037261294829995344},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.015238879736408566},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"group__database.html":{"ref":"group__database.html","tf":0.010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.010407632263660017},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.011943189154293092},"db_8h.html":{"ref":"db_8h.html","tf":0.008339124391938846}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}}}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.005988023952095809}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.008649093904448105},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.007017543859649123},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.0038461538461538464},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.01355713363460297},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0027945971122496508},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.010344827586206896},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.010526315789473684},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":2.7341692789968652},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.252061855670103},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":2.7342902711323767},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.14554778743362076},"action_8h.html":{"ref":"action_8h.html","tf":1.2522321428571428}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},",":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}},"docs":{}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.252061855670103},"action_8h.html":{"ref":"action_8h.html","tf":1.2522321428571428}}},"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":2.7341692789968652},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.252061855670103},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":2.7342902711323767},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.14554778743362076},"action_8h.html":{"ref":"action_8h.html","tf":1.2522321428571428}},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}},"b":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.944372852233677}}}}}}},"d":{"docs":{},".":{"docs":{"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.014415156507413509},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0013955652039075825},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.006147540983606557},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.020512820512820513},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.021220159151193633},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.011297611362169141},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.011695906432748537}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":2.518867924528302}}}}}}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0037067545304777594},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005810200129115558}}},"i":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.006065857885615251},"group__databasec.html":{"ref":"group__databasec.html","tf":0.006071118820468344},"db_8h.html":{"ref":"db_8h.html","tf":0.004864489228630994}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.02},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0223463687150838}}}}},"l":{"docs":{},"v":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}},"u":{"docs":{},"t":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}},"t":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.39817326822210164},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.4594594594594595}}}}},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0032948929159802307},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0025823111684958036}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.034653465346534656},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.020537124802527645},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0208},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.01444043321299639},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.014336917562724014},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.014925373134328358},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.010398613518197574},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01056338028169014},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014492753623188406},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.015985052937512977},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.013544018058690745},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.018050541516245487},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.01483679525222552},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"system_8h.html":{"ref":"system_8h.html","tf":0.00625},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}},"s":{"docs":{},":":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.008247422680412371},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00909090909090909},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.009596928982725527},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.014415156507413509},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.009380863039399626},"group__database.html":{"ref":"group__database.html","tf":0.008318890814558059},"group__databasec.html":{"ref":"group__databasec.html","tf":0.008326105810928014},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"group__datastream.html":{"ref":"group__datastream.html","tf":0.027210884353741496},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.018957345971563982},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0192},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.021108179419525065},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.021660649819494584},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021505376344086023},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.013490463637773299},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.045454545454545456},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.027663934426229508},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.01485148514851485},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.022935779816513763},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.02734375},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.009153318077803204},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.014925373134328358},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.010398613518197574},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01056338028169014},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.01929824561403509},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.016666666666666666},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.01856763925729443},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0043595598920489935},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.011286681715575621},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.014124293785310734},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.010830324909747292},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.017804154302670624},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.036057692307692304},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.03349282296650718},"action_8h.html":{"ref":"action_8h.html","tf":0.008928571428571428},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.011297611362169141},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"db_8h.html":{"ref":"db_8h.html","tf":0.006671299513551077},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0074487895716946},"system_8h.html":{"ref":"system_8h.html","tf":0.00625},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.015968063872255488}}}},".":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0008673026886383347},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0410958904109589},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.01},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.05555555555555555},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0158311345646438},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007731958762886598},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"db_8h.html":{"ref":"db_8h.html","tf":0.0006949270326615705},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0111731843575419},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.015968063872255488}}}}}},",":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002471169686985173},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.003873466752743706}}}},"u":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"g":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569}}}}}}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0027945971122496508}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.7197402597402597},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3648863636363637},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.7200438716753496},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.719914232109354},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0732390821181129},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3646110225057595}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}}},"docs":{}},"docs":{}},"docs":{}},"o":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00682261208576998}},"(":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}},"docs":{}},"docs":{}},"docs":{}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.001936733376371853}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}},"w":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.07400346620450607},"group__databasec.html":{"ref":"group__databasec.html","tf":0.07406764960971379},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.877824858757062},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":5.0125},"db_8h.html":{"ref":"db_8h.html","tf":0.06740792216817235}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}},"p":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"n":{"docs":{"./":{"ref":"./","tf":0.0037261294829995344}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}}},"h":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.00641025641025641},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.006631299734748011}},"s":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"*":{"docs":{},")":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}},")":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.015789473684210527},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.016666666666666666},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.014588859416445624},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}}},"s":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.003401360544217687},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0023259420065126378},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.006872852233676976},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.01834862385321101},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0234375},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}},"(":{"4":{"docs":{},",":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"docs":{}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"modules.html":{"ref":"modules.html","tf":0.012345679012345678},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288}},"t":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"y":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"m":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.009478672985781991},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0096},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.009221311475409836},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208}},")":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}}}}}}}},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}},",":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__database.html":{"ref":"group__database.html","tf":0.012131715771230503},"group__databasec.html":{"ref":"group__databasec.html","tf":0.012142237640936688},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006850736973219846},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"db_8h.html":{"ref":"db_8h.html","tf":0.009728978457261988}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.006065857885615251},"group__databasec.html":{"ref":"group__databasec.html","tf":0.006071118820468344},"db_8h.html":{"ref":"db_8h.html","tf":0.009728978457261988}}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},",":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.025},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.013157894736842105},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0186219739292365}},"e":{"docs":{},",":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.03614457831325301}}},".":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.03614457831325301}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0026987751712684244}},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672}},".":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.01729818780889621},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.021660649819494584},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.021505376344086023},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07463464732202049},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.011270491803278689},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.010398613518197574},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01056338028169014},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010379904504878555},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004576659038901602},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.007211538461538462},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007177033492822967},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.014848289218850872},"system_8h.html":{"ref":"system_8h.html","tf":0.00625},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.04922010398613518},"group__databasec.html":{"ref":"group__databasec.html","tf":0.049262792714657416},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.01932367149758454},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.024054982817869417},"db_8h.html":{"ref":"db_8h.html","tf":0.049895760945100766}}},"y":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0027729636048526864},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0027753686036426713},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.013745704467353952},"db_8h.html":{"ref":"db_8h.html","tf":0.004447533009034051}}},"_":{"1":{"docs":{},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901}}}},"2":{"docs":{},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901}}}},"3":{"docs":{},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901}}}},"4":{"docs":{},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901}}}},"5":{"docs":{},";":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":1.4020979020979023},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":5.0625}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes.html":{"ref":"classes.html","tf":0.14954301922470847},"annotated.html":{"ref":"annotated.html","tf":0.14445968453022434},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":1.4790209790209792},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":5.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304}},"s":{"docs":{},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.2631578947368421},"functions.html":{"ref":"functions.html","tf":0.06912442396313365},"annotated.html":{"ref":"annotated.html","tf":0.2542372881355932},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":2.7272727272727275},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":1.6666666666666665},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":2.5}}}}}}}},"y":{"docs":{},"p":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.49795962199312716}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":5.009661835748792},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}}}}}}}}}}}},";":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227}}},")":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.010309278350515464},"db_8h.html":{"ref":"db_8h.html","tf":0.0011118832522585128}}}}}},")":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}},"s":{"docs":{},")":{"docs":{"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801}}}}}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7213032581453633},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.43314808761033013}}}}}}}}}}}}}}},"e":{"docs":{"./":{"ref":"./","tf":0.004191895668374476},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771}},"k":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.3682235195996666},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3714488636363638}}}}},"n":{"docs":{},"d":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015432098765432098},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.017241379310344827},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.010526315789473684},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.02631578947368421},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0079155672823219},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.015463917525773196},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":1.2598039215686274},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":2.522222222222222},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":1.2598039215686274},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.01904761904761905},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.005988023952095809}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.252061855670103},"action_8h.html":{"ref":"action_8h.html","tf":1.2522321428571428}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.3670846394984326},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.3671451355661883},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.29254267744833784}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":1.3687910028116215},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":1.2598039215686274},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":1.2598039215686274}},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":1.252061855670103},"action_8h.html":{"ref":"action_8h.html","tf":1.2522321428571428}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.5026385224274406},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.501996007984032}}}}}},"e":{"docs":{},"r":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.010554089709762533},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":3.0338983050847457},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.007984031936127744}},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}}},")":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":3.0338983050847457}}}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.020689655172413793},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.012371134020618556},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.021052631578947368},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.02631578947368421},"group__database.html":{"ref":"group__database.html","tf":0.006412478336221837},"group__databasec.html":{"ref":"group__databasec.html","tf":0.006418039895923678},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0410958904109589},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.025},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.05555555555555555},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.004031632811288572},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0030737704918032786},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":1.8919491525423728},"action_8h.html":{"ref":"action_8h.html","tf":0.020089285714285716},"chain_8h.html":{"ref":"chain_8h.html","tf":0.030303030303030304},"db_8h.html":{"ref":"db_8h.html","tf":0.005142460041695622},"permission_8h.html":{"ref":"permission_8h.html","tf":0.011764705882352941},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0335195530726257}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792}}},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":3.7636986301369864},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":3.7685185185185186},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4707991803278688}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":1.5025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":1.5018621973929236}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.328408195429472},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.008247422680412371},"group__serialize.html":{"ref":"group__serialize.html","tf":11.714859437751004},"group__datastream.html":{"ref":"group__datastream.html","tf":0.03784013605442177},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.0391304347826087},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.017987284850364396},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.006009615384615385},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.004784688995215311},"action_8h.html":{"ref":"action_8h.html","tf":0.008928571428571428},"permission_8h.html":{"ref":"permission_8h.html","tf":0.029411764705882353},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.11578947368421053},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"i":{"docs":{},"z":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":11.671014492753622}}}}},"d":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714}}}}}}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"action_8h.html":{"ref":"action_8h.html","tf":0.008928571428571428}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}}}}}}}}}}}}}}},",":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}},"a":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":13.760526315789473}}}}}}}}},"u":{"docs":{},"z":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}}}}}},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},")":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0014531866306829978}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.04417670682730924},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.04782608695652174},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.030534351145038167},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.031578947368421054}}},"t":{"docs":{},"i":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608}}}}}}},"w":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195}}}}}}}}}}},"a":{"1":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.7197402597402597},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3723863636363638},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.7200438716753496},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.719914232109354},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0732390821181129},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3724082934609252}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}},"(":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}},"2":{"5":{"6":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.7197402597402597},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3711363636363638},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.7200438716753496},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.719914232109354},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0732390821181129},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3714336345915294}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}},"(":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.7197402597402597},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":1.3711363636363638},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.7200438716753496},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.719914232109354},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0732390821181129},"crypto_8h.html":{"ref":"crypto_8h.html","tf":1.3714336345915294}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}},"(":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}},"docs":{}},"docs":{}},"docs":{}},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.006589785831960461},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.006455777921239509}},".":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0016474464579901153},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012911555842479018}}},")":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0012911555842479018}}}}}}},"i":{"docs":{},"g":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.005454545454545455},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0025},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.005758157389635317},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.005628517823639775},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0010854396030392309},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.001949317738791423}},"n":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0031012560086835167},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.06578947368421052},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.060240963855421686},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.010817307692307692},"print_8h.html":{"ref":"print_8h.html","tf":0.01556420233463035}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.016363636363636365},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0075},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.01727447216890595},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.016885553470919325},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__signaturetype.html":{"ref":"group__signaturetype.html","tf":0.1},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07339414491854708},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":5.076923076923077},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.00682261208576998}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__signaturetype.html":{"ref":"group__signaturetype.html","tf":17.6}}}}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},".":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.007272727272727273},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0025},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.007677543186180422},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0075046904315197},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.06451612903225806},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.054945054945054944},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0029239766081871343}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.005988023952095809}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__types.html":{"ref":"group__types.html","tf":5.011904761904762},"group__varint.html":{"ref":"group__varint.html","tf":5.055555555555555},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"structsigned__int.html":{"ref":"structsigned__int.html","tf":6.380068979933111},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":5.041666666666667}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}},",":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.007211538461538462}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{},"+":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154}}}},"!":{"docs":{},"=":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231}}}},"=":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077}},"=":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231}}}},">":{"docs":{},"=":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077}}}}}}}}}}}}}}}}},",":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00375},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}}},";":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0025},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.001949317738791423}},",":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00375},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}}},";":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"i":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672}}}}},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}},"u":{"docs":{},"l":{"docs":{"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules.html":{"ref":"modules.html","tf":0.32532177567638565},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.06896551724137931},"group__singleton.html":{"ref":"group__singleton.html","tf":17.681818181818183},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":6.948446327683616},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.075}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}},"p":{"docs":{},"k":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":15.052631578947368}}}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.02268041237113402},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__database.html":{"ref":"group__database.html","tf":0.0008665511265164644},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0008673026886383347},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.05952380952380952},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0625},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00977891156462585},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.015},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.047493403693931395},"group__types.html":{"ref":"group__types.html","tf":0.047619047619047616},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.0036101083032490976},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.0035842293906810036},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0046518840130252755},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.015228426395939087},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.07421875},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.01386481802426343},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.014084507042253521},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.05913978494623656},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.022099447513812154},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":2.330038676407392},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.006772009029345372},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.008902077151335312},"action_8h.html":{"ref":"action_8h.html","tf":0.022321428571428572},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"db_8h.html":{"ref":"db_8h.html","tf":0.0006949270326615705},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.045454545454545456},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.046218487394957986},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0111731843575419},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.03792415169660679}},"_":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0075},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.023809523809523808},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.025},"group__datastream.html":{"ref":"group__datastream.html","tf":0.20127551020408163},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0158311345646438},"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"functions.html":{"ref":"functions.html","tf":0.5529953917050692},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0732390821181129},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.02981651376146789},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":3.9105113636363638},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.006932409012131715},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.007042253521126761},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.021505376344086023},"action_8h.html":{"ref":"action_8h.html","tf":0.008928571428571428},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.009746588693957114},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":3},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.031818181818181815},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.029411764705882353},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.01996007984031936}}}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},"*":{"2":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},".":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.015625},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}},",":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.005988023952095809}}},"=":{"docs":{},"=":{"0":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}},"docs":{}}},")":{"docs":{"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.022099447513812154},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.013636363636363636},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.005988023952095809}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"modules.html":{"ref":"modules.html","tf":3.333333333333333},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.038461538461538464}}}},"s":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.005199306759098787},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.00528169014084507}}}}}}}},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.02631578947368421},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.015384615384615385},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.015915119363395226},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.058823529411764705},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8cpp.html":{"ref":"crypto_8cpp.html","tf":0.058823529411764705},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.05263157894736842},"memory_8h.html":{"ref":"memory_8h.html","tf":0.058823529411764705},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.021739130434782608},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"permission_8hpp.html":{"ref":"permission_8hpp.html","tf":0.058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"public__key_8hpp.html":{"ref":"public__key_8hpp.html","tf":0.08333333333333333},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.010526315789473684},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":0.08333333333333333},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.007874015748031496},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}}}}},"r":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__types.html":{"ref":"group__types.html","tf":0.023809523809523808},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.0036101083032490976},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.0035842293906810036},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0034662045060658577},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0035211267605633804}}},"u":{"docs":{},"c":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525}},"i":{"docs":{"./":{"ref":"./","tf":0.0027945971122496508},"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.02413793103448276},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.01443298969072165},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.02456140350877193},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"group__types.html":{"ref":"group__types.html","tf":0.03571428571428571},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.09090909090909091},"group__signaturetype.html":{"ref":"group__signaturetype.html","tf":0.1},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002015816405644286},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.016055045871559634},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.01694915254237288},"action_8h.html":{"ref":"action_8h.html","tf":0.024553571428571428},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.009523809523809525},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}},"d":{"docs":{},".":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227}}}}}}},"a":{"docs":{},"l":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01953125},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.013591433278418451},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.012588766946417043}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},",":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195}}}},"t":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0037261294829995344}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}}}}}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}},"i":{"docs":{},"c":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.08333333333333333},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.09090909090909091},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.024509803921568627},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.027491408934707903},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.046511627906976744},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.06666666666666667},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.0625},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.008665511265164644},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.008802816901408451},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.07142857142857142},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.011904761904761904},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.015463917525773196},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.006772009029345372},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.05084745762711865},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.011441647597254004},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.024509803921568627}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00931098696461825}}}},"r":{"docs":{},"t":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.011904761904761904},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0125},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.006880733944954129},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.010752688172043012},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.004545454545454545},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.008403361344537815},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},",":{"docs":{"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525}}}}}},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}}}}}},"u":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0010854396030392309}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"(":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.005122950819672131},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.07142857142857142},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.07142857142857142},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208}},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0010854396030392309},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.05714285714285714}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00186075360521011},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010309278350515464},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.014705882352941176},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.03389830508474576},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.014705882352941176}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.014705882352941176},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.002577319587628866},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0021258503401360546},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0012755102040816326},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.012131715771230503},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01232394366197183},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020202020202020204},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.02197802197802198}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},",":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.006872852233676976}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0012755102040816326},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0007753140021708792}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.006578947368421052},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.006211180124223602}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.03773584905660377}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.04838709677419355}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.11764705882352941}}}}}}}}}}}}},"=":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"stdlib_8hpp.html":{"ref":"stdlib_8hpp.html","tf":25.083333333333332}}}}}}}}}},"e":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"r":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}},"l":{"docs":{},"i":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}},"n":{"docs":{},"g":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00186075360521011},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.024911770811708533},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.009029345372460496},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.011869436201780416},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}},".":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.003256318809117693},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"print_8h.html":{"ref":"print_8h.html","tf":0.011673151750972763}}},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},")":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.007452258965999069},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.010344827586206896},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.010526315789473684},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.15384615384615385},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.2222222222222222},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.057692307692307696},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__types.html":{"ref":"group__types.html","tf":0.023809523809523808},"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.09090909090909091},"group__signaturetype.html":{"ref":"group__signaturetype.html","tf":0.1},"group__varint.html":{"ref":"group__varint.html","tf":0.1111111111111111},"annotated.html":{"ref":"annotated.html","tf":0.3236994219653179},"struct_extended.html":{"ref":"struct_extended.html","tf":5.055555555555555},"struct_stores.html":{"ref":"struct_stores.html","tf":5.052631578947368},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":5.03030303030303},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":5.032258064516129},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00372150721042022},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.15384615384615385},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","tf":5.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","tf":5.0625},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":1.6944444444444442},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":2.5303030303030303},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":5.033505154639175},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":5.004901960784314},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":5.001024590163935},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":5.00507614213198},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":5.009433962264151},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.1346153846153846},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":5.023255813953488},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":1.7},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":5.035714285714286},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":2.0357142857142856},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":1.7023809523809523},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":5.033333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":5.033333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":1.4619047619047618},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":5.033333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":2.033333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":2.033333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":5.03125},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":5.035714285714286},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":1.6989247311827955},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":5.002288329519451},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__bytes_1_1bool__pack.html","tf":5.0625},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__key_1_1bool__pack.html":{"ref":"structeosio_1_1fixed__key_1_1bool__pack.html","tf":5.0625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":5.0017543859649125},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":5.001282051282051},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":5.00132625994695},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":5.0120481927710845},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":5.008928571428571},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":5.019323671497585},"structeosio_1_1inline__dispatcher.html":{"ref":"structeosio_1_1inline__dispatcher.html","tf":5.071428571428571},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":2.0142857142857142},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006435540793024704},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":5.006578947368421},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":5.005154639175258},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":5.0186335403726705},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":5.038461538461538},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":5.0144927536231885},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":5.016129032258065},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":5.002257336343115},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":5.016949152542373},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":5.005813953488372},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":5.0131578947368425},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":5.0120481927710845},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":5.01010101010101},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":5.029411764705882},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":5.010989010989011},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":5.0125},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":5.004901960784314},"structsigned__int.html":{"ref":"structsigned__int.html","tf":5.001201923076923},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":5.001196172248804},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.18095238095238095},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.10526315789473684},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.08333333333333333},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.2222222222222222},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.10526315789473684},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.18461538461538463},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.043478260869565216},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.10526315789473684},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.003816793893129771},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.06299212598425197},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.08333333333333333}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010309278350515464}}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},",":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.005780346820809248}}}},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025}},"e":{"docs":{},":":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}},",":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732}}}}}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__datastream.html":{"ref":"group__datastream.html","tf":0.05144557823129252},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.018762598852535277},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0389908256880734},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.03211009174311927}}}}},"m":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"e":{"docs":{},"t":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}}}},")":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"classeosio_1_1iostream.html":{"ref":"classeosio_1_1iostream.html","tf":0.05}},")":{"docs":{"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.006772009029345372}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__assetapi.html":{"ref":"group__assetapi.html","tf":3.0384615384615383},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":3.0555555555555554},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01},"group__database.html":{"ref":"group__database.html","tf":0.003639514731369151},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003469210754553339},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.31407977883096366},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3141},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555},"struct_stores.html":{"ref":"struct_stores.html","tf":20.157894736842106},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0010854396030392309},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.03672316384180791},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0375},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.011695906432748537},"db_8h.html":{"ref":"db_8h.html","tf":0.003613620569840167}}},"a":{"docs":{},"g":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.003119584055459272},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003122289679098005},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.007473531243512559},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008237232289950577},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.012295081967213115},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.018306636155606407},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.008974358974358974},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009283819628647215},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0009683666881859264}}}}}}},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288}},")":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288}}},",":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0034662045060658577}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}}}},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.7567720090293454}}}}}},"m":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}}}}}},"y":{"docs":{},"m":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0032603632976245926},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0017006802721088435},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":1.6130529225908372},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":1.6121},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"struct_extended.html":{"ref":"struct_extended.html","tf":0.05555555555555555},"struct_stores.html":{"ref":"struct_stores.html","tf":0.05263157894736842},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07339414491854708},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.48616803278688525},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.011441647597254004},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.029850746268656716},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.006772009029345372},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":8.82942238267148},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.011869436201780416}},"\"":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"(":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{},",":{"4":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},")":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":13.788461538461538}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.9596169036334913},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.9599},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07308401931767873},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.010830324909747292},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":8.050445103857566}},"e":{"docs":{},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":10.314079778830964}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.01263823064770932}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00631911532385466}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":10.3141}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0128}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0064}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016}}}},"'":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976}}},"t":{"docs":{},"h":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263}}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}},"e":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}}}}}}},",":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__systemapi.html":{"ref":"group__systemapi.html","tf":12.146841206602163}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":12.147186147186147}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329}}}}}}}}}}},".":{"docs":{},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"system_8h.html":{"ref":"system_8h.html","tf":12.145982142857143}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.377397831526272},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3714488636363638}},"(":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}}}},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6590467652771552}},"s":{"docs":{},".":{"docs":{"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0013955652039075825},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.009174311926605505},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}},".":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0234375}}},"b":{"docs":{},"r":{"docs":{},"k":{"docs":{"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":1.6757575757575756},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":2.504201680672269}}}}}},"t":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__datastream.html":{"ref":"group__datastream.html","tf":0.017006802721088437},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.06872852233676977},"classes.html":{"ref":"classes.html","tf":0.2691459186889379},"functions.html":{"ref":"functions.html","tf":0.14212481691851536},"variables.html":{"ref":"variables.html","tf":0.00390625},"annotated.html":{"ref":"annotated.html","tf":0.2542372881355932},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.008993642425182198},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.11363636363636363},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.02577319587628866},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.07862407862407862},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.024054982817869417},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.011467889908256881},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.6521739130434783},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":4.166666666666666},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.07142857142857142},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.07142857142857142},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":4.231182795698924},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":2.798701298701299},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0018683828108781398},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.02631578947368421},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.013745704467353952},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.024844720496894408},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.014492753623188406},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.04519774011299435},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.014035087719298246},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004576659038901602},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.6925837320574163},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.5660377358490566}},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"b":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"l":{"docs":{"./":{"ref":"./","tf":0.002328830926874709},"group__database.html":{"ref":"group__database.html","tf":0.12720970537261697},"group__databasec.html":{"ref":"group__databasec.html","tf":0.12732003469210754},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.06896551724137931},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0297029702970297},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.009757110234585841},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.031073446327683617},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"db_8h.html":{"ref":"db_8h.html","tf":0.113273106323836},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":3.798780487804878}},"e":{"1":{"docs":{},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423}}}},"docs":{},"_":{"docs":{},"a":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"b":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488}}}}}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__database.html":{"ref":"group__database.html","tf":0.006412478336221837},"group__databasec.html":{"ref":"group__databasec.html","tf":0.006418039895923678},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.06896551724137931},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__singleton.html":{"ref":"group__singleton.html","tf":0.09090909090909091},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.0035842293906810036},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.01141789495536641},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.025423728813559324},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0375},"db_8h.html":{"ref":"db_8h.html","tf":0.010284920083391245}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},")":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0050259965337954935},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005030355594102341},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.004774756072244135},"db_8h.html":{"ref":"db_8h.html","tf":0.008061153578874217}}},"(":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}},"'":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}}},";":{"docs":{"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025}}}}}},"g":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0037261294829995344},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}},"n":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}},"o":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0158311345646438},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.015968063872255488}},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.5026385224274406},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.501996007984032}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.5026385224274406},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.501996007984032}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.8434856175972927}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.6884406983744733},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.8434856175972927}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.002328830926874709},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.038461538461538464},"group__serialize.html":{"ref":"group__serialize.html","tf":0.0321285140562249},"group__datastream.html":{"ref":"group__datastream.html","tf":0.027210884353741496},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.034782608695652174},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.010234144828655605},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007731958762886598},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.012280701754385965},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.011538461538461539},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.011936339522546418},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.004784688995215311},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.03816793893129771}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"group__serialize.html":{"ref":"group__serialize.html","tf":0.008032128514056224},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.008695652173913044},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542}}}}}},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0037261294829995344},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01818181818181818},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.0125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.019193857965451054},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.01876172607879925},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.006872852233676976},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0023259420065126378},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.014619883040935672},"system_8h.html":{"ref":"system_8h.html","tf":0.01875}},",":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"system_8h.html":{"ref":"system_8h.html","tf":0.01875}}},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}}}}}}}}}}}}},"a":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},"(":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},",":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"b":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"l":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.014423076923076924},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}},"l":{"docs":{},"l":{"docs":{"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676}},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.3682235195996666},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3714488636363638}}}}}},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"o":{"docs":{},"w":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714}}}}},"u":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"permission_8h.html":{"ref":"permission_8h.html","tf":0.01764705882352941},"system_8h.html":{"ref":"system_8h.html","tf":0.025}},"s":{"docs":{},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}}}}},".":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"time_8hpp.html":{"ref":"time_8hpp.html","tf":13.043478260869565}}}}}},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.07300039295538172},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6831017480950247},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":5.809022556390977},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.45374305328538733}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.006872852233676976},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":6.386400784570121},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.03}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}},"i":{"docs":{},"n":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.20737327188940094}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"6":{"0":{"docs":{},")":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}},")":{"docs":{"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.011111111111111112},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.01}}}}},"docs":{}},"docs":{}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.20737327188940094}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"<":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}},"=":{"docs":{},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}},";":{"docs":{"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7213032581453633}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884}}}}}}}},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}},"_":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.005},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0037243947858473}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.31407977883096366},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3141},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4707991803278688},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.7545146726862303},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":1.0059347181008902}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8412698412698412}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.33570234113712377},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":5.03125}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":1.2598039215686274},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":1.2598039215686274}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6590467652771552}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.06578947368421052},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0395778364116095},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.03389830508474576},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07416945892071797},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.015228426395939087},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.03389830508474576},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":7.533333333333333},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.04},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"permission_8h.html":{"ref":"permission_8h.html","tf":0.014705882352941176},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.029940119760479042}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"s":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":1.5026385224274406},"transaction_8h.html":{"ref":"transaction_8h.html","tf":1.501996007984032}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":6.905}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":2.522222222222222}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":13.013157894736842}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":11.502638522427441}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":13.016949152542374}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633}}}},".":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.04221635883905013},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.04790419161676647}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"transaction_8h.html":{"ref":"transaction_8h.html","tf":11.501996007984031}},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":13.788461538461538}}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695}},".":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.01015228426395939}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"i":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"u":{"docs":{},"e":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.03317535545023697},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0336},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01195219123505976},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.012987012987012988},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.00819672131147541},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.013761467889908258},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01953125},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.03482587064676617},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.0038461538461538464},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.013544018058690745},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.02527075812274368},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.020771513353115726},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.014423076923076924},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.014354066985645933},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}},",":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00625},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.01444043321299639},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.014336917562724014},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.006932409012131715},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.007042253521126761},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.004873294346978557}}},")":{"docs":{"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976}}}},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.0008237232289950577},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.0006455777921239509}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}}}}}}}}},"x":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},",":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}},",":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"w":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.03212520593080725},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.04332129963898917},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.043010752688172046},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.006667700418669561},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.03119584055459272},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.03169014084507042},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.008974358974358974},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009283819628647215},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.01744186046511628},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.03776630083925113}},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.008383791336748951},"modules.html":{"ref":"modules.html","tf":0.3407538744418177},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.013793103448275862},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.014035087719298246},"group__assetapi.html":{"ref":"group__assetapi.html","tf":0.038461538461538464},"group__assetcppapi.html":{"ref":"group__assetcppapi.html","tf":0.05555555555555555},"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.441298701298701},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":1.442007129147244},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0228310502283105},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":1.4417046368265878},"group__databasecpp.html":{"ref":"group__databasecpp.html","tf":0.034482758620689655},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485},"group__singleton.html":{"ref":"group__singleton.html","tf":0.09090909090909091},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__serialize.html":{"ref":"group__serialize.html","tf":0.05220883534136546},"group__datastream.html":{"ref":"group__datastream.html","tf":0.04634353741496599},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.05652173913043478},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0136986301369863},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.018518518518518517},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.039473684210526314},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.05084745762711865},"group__types.html":{"ref":"group__types.html","tf":15.107142857142858},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.01718213058419244},"group__contracttype.html":{"ref":"group__contracttype.html","tf":0.14285714285714285},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.0036101083032490976},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.0035842293906810036},"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.09090909090909091},"group__signaturetype.html":{"ref":"group__signaturetype.html","tf":0.1},"group__varint.html":{"ref":"group__varint.html","tf":0.1111111111111111},"variables.html":{"ref":"variables.html","tf":0.00390625},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.01829741045123275},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.125},"namespaceeosio_1_1__multi__index__detail.html":{"ref":"namespaceeosio_1_1__multi__index__detail.html","tf":0.038461538461538464},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","tf":0.027777777777777776},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"ref":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","tf":0.030303030303030304},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.01288659793814433},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0196078431372549},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.004098360655737705},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.014742014742014743},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.013745704467353952},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.005076142131979695},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.08490566037735849},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.028846153846153848},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":5.116279069767442},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":7.642857142857143},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":3.142857142857143},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":2.642857142857143},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":7.642857142857143},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":2.629032258064516},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006864988558352402},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.019064124783362217},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.01936619718309859},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.04819277108433735},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.024154589371980676},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.014285714285714285},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.011049723756906077},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.015873015873015872},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0031139713514635667},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.013157894736842105},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.010309278350515464},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.012422360248447204},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.057692307692307696},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.013544018058690745},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.05084745762711865},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.01744186046511628},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02631578947368421},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":2.5505050505050506},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.058823529411764705},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":2.5549450549450547},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.00847457627118644},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.025},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.007017543859649123},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.009153318077803204},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0196078431372549},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.007211538461538462},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.009569377990430622},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.01904761904761905},"asset_8hpp.html":{"ref":"asset_8hpp.html","tf":0.05263157894736842},"binary__extension_8hpp.html":{"ref":"binary__extension_8hpp.html","tf":0.058823529411764705},"contract_8hpp.html":{"ref":"contract_8hpp.html","tf":0.058823529411764705},"crypto_8hpp.html":{"ref":"crypto_8hpp.html","tf":0.041666666666666664},"datastream_8hpp.html":{"ref":"datastream_8hpp.html","tf":0.041666666666666664},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.028985507246376812},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"fixed__bytes_8hpp.html":{"ref":"fixed__bytes_8hpp.html","tf":0.038461538461538464},"fixed__key_8hpp.html":{"ref":"fixed__key_8hpp.html","tf":0.038461538461538464},"fixedpoint_8hpp.html":{"ref":"fixedpoint_8hpp.html","tf":0.037037037037037035},"ignore_8hpp.html":{"ref":"ignore_8hpp.html","tf":0.05263157894736842},"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.03076923076923077},"name_8hpp.html":{"ref":"name_8hpp.html","tf":0.043478260869565216},"print_8hpp.html":{"ref":"print_8hpp.html","tf":0.045454545454545456},"privileged_8hpp.html":{"ref":"privileged_8hpp.html","tf":0.05263157894736842},"producer__schedule_8hpp.html":{"ref":"producer__schedule_8hpp.html","tf":0.058823529411764705},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.061068702290076333},"serialize_8hpp.html":{"ref":"serialize_8hpp.html","tf":0.031578947368421054},"singleton_8hpp.html":{"ref":"singleton_8hpp.html","tf":0.05263157894736842},"symbol_8hpp.html":{"ref":"symbol_8hpp.html","tf":0.038461538461538464},"time_8hpp.html":{"ref":"time_8hpp.html","tf":0.043478260869565216},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936},"transaction_8hpp.html":{"ref":"transaction_8hpp.html","tf":0.038461538461538464},"types_8h.html":{"ref":"types_8h.html","tf":0.05511811023622047},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":0.041666666666666664}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00510204081632653},"group__serializecpp.html":{"ref":"group__serializecpp.html","tf":0.004347826086956522},"group__types.html":{"ref":"group__types.html","tf":0.03571428571428571},"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"group__publickeytype.html":{"ref":"group__publickeytype.html","tf":0.09090909090909091},"group__signaturetype.html":{"ref":"group__signaturetype.html","tf":0.1},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0031012560086835167},"namespaceeosio_1_1__datastream__detail.html":{"ref":"namespaceeosio_1_1__datastream__detail.html","tf":0.022727272727272728},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"reflect_8hpp.html":{"ref":"reflect_8hpp.html","tf":0.007633587786259542}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.0037261294829995344},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.003256318809117693},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.02830188679245283},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.057692307692307696},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.046511627906976744},"structeosio_1_1detail_1_1convert.html":{"ref":"structeosio_1_1detail_1_1convert.html","tf":0.10714285714285714},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","tf":0.10714285714285714},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"ref":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","tf":0.10714285714285714},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":0.10714285714285714},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.0967741935483871},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.005199306759098787},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.00528169014084507},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014492753623188406},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0056051484326344195},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.015463917525773196},"structeosio_1_1reflector.html":{"ref":"structeosio_1_1reflector.html","tf":0.17647058823529413},"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__types.html":{"ref":"group__types.html","tf":0.011904761904761904}}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0034662045060658577},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0035211267605633804},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}},"h":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"types_8h.html":{"ref":"types_8h.html","tf":11.882874015748031}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"types_8h.html":{"ref":"types_8h.html","tf":0.023622047244094488}}}}}}}}}}},"/":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}},",":{"docs":{"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.024096385542168676},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.003992015968063872}}},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.34531772575250835}}}}}}}},":":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.010101010101010102},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.01098901098901099}}}}}}}},".":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.010344827586206896},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.010526315789473684},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732}}},"(":{"docs":{},"&":{"docs":{},")":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275}}}},")":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}},")":{"docs":{"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.002551020408163265},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055}},"e":{"docs":{},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.01015228426395939}}}}}}},"b":{"docs":{},"n":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}},"p":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}},"m":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}},";":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457}}},",":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.32608695652173914},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":5},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.009153318077803204},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.030927835051546393},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.021052631578947368},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.004576659038901602}}}},"u":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.32608695652173914},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":5},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283}},"=":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0004651884013025275},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0034662045060658577},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0035211267605633804},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.03389830508474576},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"db_8h.html":{"ref":"db_8h.html","tf":0.0033356497567755385},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.007984031936127744}}}},"\\":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0012131715771230502},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0012142237640936687},"db_8h.html":{"ref":"db_8h.html","tf":0.0009728978457261987}}}}}},"docs":{}},"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.02030456852791878},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}}}}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.01485148514851485}}}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.010309278350515464},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.014545454545454545},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.05263157894736842},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.015},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.015355086372360844},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.002059308072487644},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0150093808630394},"group__database.html":{"ref":"group__database.html","tf":0.001559792027729636},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0015611448395490026},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.0199203187250996},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0125},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.021645021645021644},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.02631578947368421},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.0158311345646438},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.03389830508474576},"group__producertype.html":{"ref":"group__producertype.html","tf":0.09271523178807947},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0035664444099860445},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.010309278350515464},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.14213197969543148},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.08839779005524862},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.03910614525139665},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0018683828108781398},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.005934718100890208},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.007017543859649123},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.020594965675057208},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.014354066985645933},"action_8h.html":{"ref":"action_8h.html","tf":0.008928571428571428},"chain_8h.html":{"ref":"chain_8h.html","tf":0.050505050505050504},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.002905100064557779},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.01949317738791423},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654},"permission_8h.html":{"ref":"permission_8h.html","tf":0.029411764705882353},"print_8h.html":{"ref":"print_8h.html","tf":0.007782101167315175},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.01675977653631285},"system_8h.html":{"ref":"system_8h.html","tf":0.01875},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.015968063872255488}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.004657661853749418},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.036655683690280064},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.005305039787798408},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0182648401826484},"group__database.html":{"ref":"group__database.html","tf":0.014558058925476604},"group__databasec.html":{"ref":"group__databasec.html","tf":0.014570685169124024},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0297029702970297},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.014218009478672985},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0144},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__producertype.html":{"ref":"group__producertype.html","tf":0.006622516556291391},"functions.html":{"ref":"functions.html","tf":0.07106240845925768},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0024810048069468134},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.01015228426395939},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.014492753623188406},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.013493875856342121},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.010309278350515464},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":3.8076923076923075},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.06451612903225806},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.011286681715575621},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0375},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.01444043321299639},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.008902077151335312},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.052614590058102},"db_8h.html":{"ref":"db_8h.html","tf":0.022237665045170257},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"print_8h.html":{"ref":"print_8h.html","tf":0.0038910505836575876},"system_8h.html":{"ref":"system_8h.html","tf":0.009375},"types_8h.html":{"ref":"types_8h.html","tf":0.015748031496062992}},")":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.002328830926874709}}}},",":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},".":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506}}},":":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}},"\\":{"docs":{},"_":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004506065857885615},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004509973980919341},"db_8h.html":{"ref":"db_8h.html","tf":0.003613620569840167}}}}}},"docs":{}},"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.06451612903225806},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.009029345372460496},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.021660649819494584},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}}}}},"docs":{}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0018630647414997672}}}}}}},"x":{"docs":{"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}},"o":{"docs":{},"n":{"docs":{"annotated.html":{"ref":"annotated.html","tf":0.005780346820809248}}}},"t":{"3":{"2":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}},"docs":{}},"6":{"4":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055}}},"docs":{}},"docs":{"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}}},"q":{"docs":{},"u":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.006896551724137931},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.007017543859649123},"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.022988505747126436},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.02702702702702703},"group__datastream.html":{"ref":"group__datastream.html","tf":0.4042517006802721},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.1478737294401334},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.007731958762886598}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":1.3670846394984326},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":1.3671451355661883},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07277389371681038}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"x":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":3.0338983050847457}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.030065897858319604},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.015915119363395226},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0031012560086835167},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0022935779816513763},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.03349282296650718},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.03389283408650742},"print_8h.html":{"ref":"print_8h.html","tf":0.01556420233463035}},"e":{"docs":{},"d":{"docs":{},"_":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},",":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},",":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}}}}}}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0036363636363636364},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.003838771593090211},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.00375234521575985},"group__types.html":{"ref":"group__types.html","tf":5.011904761904762},"group__varint.html":{"ref":"group__varint.html","tf":5.055555555555555},"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020202020202020204},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.02197802197802198},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.04},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":7.114832535885167},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":5.041666666666667}},")":{"docs":{"functions.html":{"ref":"functions.html","tf":0.003875968992248062},"variables.html":{"ref":"variables.html","tf":0.00390625}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.007177033492822967}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}},"=":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833}}}},"!":{"docs":{},"=":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833}}}},">":{"docs":{},"=":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}},"e":{"docs":{},";":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}}}}}}}},"&":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},",":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0020797227036395147},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0020815264527320036},"db_8h.html":{"ref":"db_8h.html","tf":0.0016678248783877692}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.02390438247011952},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.025974025974025976},"system_8h.html":{"ref":"system_8h.html","tf":0.028125}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes.html":{"ref":"classes.html","tf":0.14355499527261267},"annotated.html":{"ref":"annotated.html","tf":0.1386793377094151},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.34531772575250835},"structeosio_1_1detail_1_1unwrap.html":{"ref":"structeosio_1_1detail_1_1unwrap.html","tf":5.035714285714286},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":0.03225806451612903}},"<":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.32608695652173914},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"ref":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","tf":1.6666666666666665}}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0030737704918032786},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.006864988558352402}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.005813953488372093},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.018164881229622728},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.01818181818181818},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01625},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.019193857965451054},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.019230769230769232},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0228310502283105},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.01876172607879925},"group__database.html":{"ref":"group__database.html","tf":0.003986135181975737},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00398959236773634},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00398406374501992},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.004329004329004329},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.018469656992084433},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0034113816095518684},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0010245901639344263},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.003436426116838488},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.009900990099009901},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.019230769230769232},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.01932367149758454},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.013909072036537264},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.05263157894736842},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.018518518518518517},"db_8h.html":{"ref":"db_8h.html","tf":0.0031966643502432243},"dispatcher_8hpp.html":{"ref":"dispatcher_8hpp.html","tf":0.014492753623188406},"permission_8h.html":{"ref":"permission_8h.html","tf":0.008823529411764706},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.017964071856287425}},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__producertype.html":{"ref":"group__producertype.html","tf":0.013245033112582781},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.015228426395939087},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0031139713514635667},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}},":":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}}}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"d":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}},"p":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"action_8h.html":{"ref":"action_8h.html","tf":0.004464285714285714},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0034662045060658577},"group__databasec.html":{"ref":"group__databasec.html","tf":0.003469210754553339},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0037367656217562797},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"db_8h.html":{"ref":"db_8h.html","tf":0.003613620569840167}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}},"r":{"docs":{},")":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004159445407279029},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"db_8h.html":{"ref":"db_8h.html","tf":0.004169562195969423}}}}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.48428616392213064},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.944372852233677}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"variables.html":{"ref":"variables.html","tf":0.00390625},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.43314808761033013}}}}}}}}}}}},"v":{"1":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},")":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}},"docs":{}}},"4":{"docs":{},".":{"0":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"docs":{}}},"docs":{}}},"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.012329931972789115},"classes.html":{"ref":"classes.html","tf":0.005988023952095809},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0046518840130252755},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.003978779840848806},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.039663461538461536},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.041866028708133975}},"a":{"docs":{},"l":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0012755102040816326},"variables.html":{"ref":"variables.html","tf":0.00390625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0021708792060784617},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":1.0017543859649123},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.6831002331002332},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.7513262599469496},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__database.html":{"ref":"group__database.html","tf":0.0005199306759098787},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0005203816131830009},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.007898894154818325},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.008},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.3682235195996666},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3753551136363638},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.011869436201780416},"action_8h.html":{"ref":"action_8h.html","tf":0.006696428571428571},"db_8h.html":{"ref":"db_8h.html","tf":0.0004169562195969423},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.4721864261168385}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}}}}}}}}}}}}}}},".":{"docs":{"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0030737704918032786}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.01171875}}}}}}}},"u":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.005354200988467875},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.04807692307692308},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.08222811671087533},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.045662100456621},"group__database.html":{"ref":"group__database.html","tf":0.00537261698440208},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005377276669557675},"group__datastream.html":{"ref":"group__datastream.html","tf":0.029336734693877552},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.6313191153238547},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.6314},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.8135286670283958},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"variables.html":{"ref":"variables.html","tf":0.00390625},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.012405024034734067},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010309278350515464},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0020491803278688526},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.9312039312039313},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":5.046511627906977},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":2.566666666666667},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":7.566666666666666},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":7.566666666666666},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":2.2095238095238097},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":7.566666666666666},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":3.066666666666667},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":3.066666666666667},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":7.5625},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.007017543859649123},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.005128205128205128},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.005305039787798408},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":1.3814935064935066},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.008096325513805272},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.7590293453724605},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.07344632768361582},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":5.0375},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.6593854515050167},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.6866028708133972},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.004196255648805681},"db_8h.html":{"ref":"db_8h.html","tf":0.004308547602501737},"print_8h.html":{"ref":"print_8h.html","tf":0.07392996108949416}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}},",":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.005649717514124294},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"[":{"5":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"docs":{}},"docs":{}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554}}},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":1.990866341110508},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":2.2972972972972974}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.39817326822210164},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.4594594594594595}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"print_8h.html":{"ref":"print_8h.html","tf":0.013618677042801557}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}}}}}}}}},",":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0010854396030392309},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.00558659217877095}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.001282051282051282},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.001326259946949602}}}}}}},"r":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00909090909090909},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.009596928982725527},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.009380863039399626},"group__database.html":{"ref":"group__database.html","tf":0.00537261698440208},"group__databasec.html":{"ref":"group__databasec.html","tf":0.005377276669557675},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.007898894154818325},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.008},"group__types.html":{"ref":"group__types.html","tf":0.023809523809523808},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.010309278350515464},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.04332129963898917},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.043010752688172046},"group__producertype.html":{"ref":"group__producertype.html","tf":0.13245033112582782},"group__varint.html":{"ref":"group__varint.html","tf":0.05555555555555555},"variables.html":{"ref":"variables.html","tf":5.0078125},"structcapi__public__key.html":{"ref":"structcapi__public__key.html","tf":0.030303030303030304},"structcapi__signature.html":{"ref":"structcapi__signature.html","tf":0.03225806451612903},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.007753140021708792},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010309278350515464},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.014705882352941176},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.0030737704918032786},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.010309278350515464},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.08629441624365482},"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.01485148514851485},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"ref":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth.html":{"ref":"structeosio_1_1detail_1_1get__nth.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"ref":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same.html":{"ref":"structeosio_1_1detail_1_1is__same.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"ref":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","tf":0.03333333333333333},"structeosio_1_1detail_1_1to__const__char__arr.html":{"ref":"structeosio_1_1detail_1_1to__const__char__arr.html","tf":0.03125},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.03466204506065858},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.035211267605633804},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0017543859649122807},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.010256410256410256},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009283819628647215},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.008928571428571428},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.003968253968253968},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.043478260869565216},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.04838709677419355},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structeosio_1_1onerror.html":{"ref":"structeosio_1_1onerror.html","tf":0.03389830508474576},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"structeosio_1_1producer__key.html":{"ref":"structeosio_1_1producer__key.html","tf":0.02631578947368421},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.024096385542168676},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.020202020202020204},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.02197802197802198},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147},"structeosio_1_1singleton_1_1row.html":{"ref":"structeosio_1_1singleton_1_1row.html","tf":0.0125},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.0035087719298245615},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.002288329519450801},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.03333333333333333},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.06},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.014705882352941176},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.003605769230769231},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0035885167464114833},"db_8h.html":{"ref":"db_8h.html","tf":0.004308547602501737}}}},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13756697132051685},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"annotated.html":{"ref":"annotated.html","tf":0.13289899088860585},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0726188309163762},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":10.044117647058824}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"functions.html":{"ref":"functions.html","tf":0.06912442396313365}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"variables.html":{"ref":"variables.html","tf":0.1530612244897959}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}},"o":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.005263157894736842},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}},"n":{"docs":{},"t":{"3":{"2":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077}}},"docs":{}},"docs":{"modules.html":{"ref":"modules.html","tf":0.3222353559232992},"group__varint.html":{"ref":"group__varint.html","tf":15.055555555555555}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"files.html":{"ref":"files.html","tf":0.35185185185185186},"dir_1134efb280eb12b0569be244927e10ce.html":{"ref":"dir_1134efb280eb12b0569be244927e10ce.html","tf":0.3788819875776397},"varint_8hpp.html":{"ref":"varint_8hpp.html","tf":15.041666666666666}}}}}}}}},",":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}},"docs":{}},"docs":{}}}}}}},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"eosio_8hpp.html":{"ref":"eosio_8hpp.html","tf":0.024390243902439025}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.007452258965999069},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__fixedpoint.html":{"ref":"group__fixedpoint.html","tf":0.019230769230769232},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0025},"variables.html":{"ref":"variables.html","tf":0.00390625},"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":5.048192771084337},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"structeosio_1_1producer__schedule.html":{"ref":"structeosio_1_1producer__schedule.html","tf":0.012048192771084338}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.03103448275862069},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.026804123711340205},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.031578947368421054},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00186075360521011},"action_8h.html":{"ref":"action_8h.html","tf":0.03794642857142857}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.003401360544217687},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0015506280043417584},"permission_8h.html":{"ref":"permission_8h.html","tf":0.023529411764705882}},".":{"docs":{"group__datastream.html":{"ref":"group__datastream.html","tf":0.0008503401360544217},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0006202512017367033}}}}}}}},"i":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554}},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"a":{"docs":{"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"structeosio_1_1blockchain__parameters.html":{"ref":"structeosio_1_1blockchain__parameters.html","tf":0.01015228426395939}}},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.013793103448275862},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.012371134020618556},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.014035087719298246},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.00909090909090909},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01125},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.009596928982725527},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.006589785831960461},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.03183023872679045},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.009380863039399626},"group__database.html":{"ref":"group__database.html","tf":0.0025996533795493936},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0026019080659150044},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.03571428571428571},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.0375},"group__datastream.html":{"ref":"group__datastream.html","tf":0.00042517006802721087},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.01593625498007968},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.015},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.017316017316017316},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.012094898433865716},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0196078431372549},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.004098360655737705},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.004914004914004914},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.006872852233676976},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.0045871559633027525},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.0035087719298245615},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.002564102564102564},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.002652519893899204},"structeosio_1_1ignore.html":{"ref":"structeosio_1_1ignore.html","tf":0.04819277108433735},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.05714285714285714},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.03763440860215054},"classeosio_1_1memory__manager_1_1memory.html":{"ref":"classeosio_1_1memory__manager_1_1memory.html","tf":0.03314917127071823},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"ref":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","tf":0.0446927374301676},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006227942702927133},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0196078431372549},"action_8h.html":{"ref":"action_8h.html","tf":0.013392857142857142},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.005164622336991607},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.008771929824561403},"db_8h.html":{"ref":"db_8h.html","tf":0.002501737317581654},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.05454545454545454},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.029411764705882353},"print_8h.html":{"ref":"print_8h.html","tf":0.02529182879377432},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0111731843575419},"system_8h.html":{"ref":"system_8h.html","tf":0.0125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"(":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"*":{"docs":{},")":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"group__dispatcher.html":{"ref":"group__dispatcher.html","tf":0.011494252873563218},"group__dispatchercpp.html":{"ref":"group__dispatchercpp.html","tf":0.013513513513513514},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}},",":{"docs":{"classes.html":{"ref":"classes.html","tf":0.13157894736842105},"functions.html":{"ref":"functions.html","tf":0.06912442396313365},"annotated.html":{"ref":"annotated.html","tf":0.1271186440677966},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.07246376811594203},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":4.5},"action_8hpp.html":{"ref":"action_8hpp.html","tf":0.2830188679245283}}}}}}}}}}}}}}}}}},"*":{"docs":{"group__memoryapi.html":{"ref":"group__memoryapi.html","tf":0.017857142857142856},"group__memorycppapi.html":{"ref":"group__memorycppapi.html","tf":0.01875},"classeosio_1_1memory__manager.html":{"ref":"classeosio_1_1memory__manager.html","tf":0.016129032258064516},"eosiolib_8cpp.html":{"ref":"eosiolib_8cpp.html","tf":0.00909090909090909},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.012605042016806723}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"u":{"docs":{},"l":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002015816405644286},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554}}},",":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.004576659038901602}}},"l":{"docs":{},"q":{"docs":{"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277}}}}},"w":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418},"functions.html":{"ref":"functions.html","tf":0.001937984496124031}},"=":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.014545454545454545},"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.01},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.015355086372360844},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.0150093808630394},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0012405024034734067},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.007797270955165692}}}},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}},"s":{"docs":{},"m":{"2":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"t":{"2":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}},"docs":{}}},"y":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},"\"":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006020344612829562}}}}}},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__database.html":{"ref":"group__database.html","tf":0.0010398613518197574},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0010407632263660018},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.020642201834862386},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133},"db_8h.html":{"ref":"db_8h.html","tf":0.0008339124391938846}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"system_8h.html":{"ref":"system_8h.html","tf":0.009375}}}}}}},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0058823529411764705}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"l":{"docs":{},"d":{"docs":{},"!":{"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"8":{"7":{"6":{"5":{"4":{"3":{"2":{"3":{"4":{"5":{"6":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}},"\"":{"docs":{},";":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.009615384615384616},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0091324200913242},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}},")":{"docs":{},";":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},",":{"docs":{"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.002652519893899204},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},",":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}}}}},"d":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.01386481802426343},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.014084507042253521},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02}},"_":{"docs":{},"t":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.8437319468515309},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.8438967136150234}},".":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0034662045060658577},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0035211267605633804}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.004657661853749418},"modules.html":{"ref":"modules.html","tf":0.0030864197530864196},"group__serialize.html":{"ref":"group__serialize.html","tf":0.004016064257028112},"group__datastream.html":{"ref":"group__datastream.html","tf":0.012755102040816327},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.004496821212591099},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":1.3911592994161803},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":1.3714488636363638},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.009029345372460496},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.011869436201780416},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0011961722488038277},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},"r":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.31407977883096366},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.3141},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.7545146726862303},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":1.0059347181008902}}}}}}}}},"(":{"docs":{"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.00390625}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.002638522427440633},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}},".":{"docs":{"./":{"ref":"./","tf":0.0004657661853749418}}}}}}}},"a":{"docs":{},"p":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248}},"e":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.006172839506172839},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.0018181818181818182},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.0019193857965451055},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.001876172607879925}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.009259259259259259},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__transactionapi.html":{"ref":"group__transactionapi.html","tf":0.013157894736842105},"group__transactioncppapi.html":{"ref":"group__transactioncppapi.html","tf":0.01694915254237288},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0010854396030392309},"structeosio_1_1ignore__wrapper.html":{"ref":"structeosio_1_1ignore__wrapper.html","tf":0.017857142857142856},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.002824858757062147}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.682943143812709}},"e":{"docs":{},";":{"docs":{"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.682943143812709}},"e":{"docs":{},";":{"docs":{"multi__index_8hpp.html":{"ref":"multi__index_8hpp.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"group__privilegedcapi.html":{"ref":"group__privilegedcapi.html","tf":0.0075},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00558659217877095}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517}}}}}}}}},"x":{"8":{"6":{"docs":{},"_":{"6":{"4":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0013972985561248254},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.03773584905660377}},")":{"docs":{"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.03773584905660377}}}},"y":{"docs":{},"u":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0009315323707498836},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}}},",":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}},"i":{"docs":{},"p":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010379904504878555}},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0010379904504878555}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0006227942702927133}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00041519618019514223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}}}}}}},"g":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077}}}},"a":{"docs":{},"g":{"docs":{"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.001201923076923077}}}}},"{":{"docs":{"./":{"ref":"./","tf":0.0055891942244993015},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.006185567010309278},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.04455445544554455},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.033816425120772944},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.027402947892879385},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.003436426116838488},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.004514672686230248}},"}":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065}}}},"}":{"docs":{"./":{"ref":"./","tf":0.002328830926874709},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.039603960396039604},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.024154589371980676},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.015985052937512977},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}},";":{"docs":{"./":{"ref":"./","tf":0.0037261294829995344},"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.0049504950495049506},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.00966183574879227},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.019230769230769232},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124}}},"]":{"docs":{},",":{"docs":{"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.002061855670103093}}}},")":{"docs":{},";":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.006435540793024704}}}}},"&":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__chainapi.html":{"ref":"group__chainapi.html","tf":0.03090909090909091},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":0.03262955854126679},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.006177924217462933},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":0.03189493433395872},"group__datastream.html":{"ref":"group__datastream.html","tf":0.06505102040816327},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.018957345971563982},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0192},"group__privilegedapi.html":{"ref":"group__privilegedapi.html","tf":0.0273972602739726},"group__privilegedcppapi.html":{"ref":"group__privilegedcppapi.html","tf":0.037037037037037035},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.005277044854881266},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.037800687285223365},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.04332129963898917},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.043010752688172046},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.06450612498061715},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.0196078431372549},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.02971311475409836},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.0343980343980344},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.054982817869415807},"structeosio_1_1const__mem__fun.html":{"ref":"structeosio_1_1const__mem__fun.html","tf":0.07547169811320754},"classeosio_1_1datastream.html":{"ref":"classeosio_1_1datastream.html","tf":0.009174311926605505},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.041189931350114416},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.01990049751243781},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.024263431542461005},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.02464788732394366},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.042105263157894736},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.04871794871794872},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.03978779840848806},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"ref":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","tf":0.02857142857142857},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.07936507936507936},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":0.06578947368421052},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.037800687285223365},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":0.062111801242236024},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.009029345372460496},"structeosio_1_1permission__level.html":{"ref":"structeosio_1_1permission__level.html","tf":0.011627906976744186},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":0.04040404040404041},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":0.04395604395604396},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.01694915254237288},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.01444043321299639},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.011869436201780416},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.09824561403508772},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.07322654462242563},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.022222222222222223},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.0196078431372549},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.036057692307692304},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.03110047846889952},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.009683666881859263},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.007984031936127744}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846}}}}}}}}}}},"&":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.024054982817869417},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.000930376802605055},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.010309278350515464},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.058823529411764705},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.0343980343980344},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0012455885405854266},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.020618556701030927},"structeosio_1_1multi__index_1_1item.html":{"ref":"structeosio_1_1multi__index_1_1item.html","tf":0.028985507246376812},"structeosio_1_1multi__index_1_1item__ptr.html":{"ref":"structeosio_1_1multi__index_1_1item__ptr.html","tf":0.03225806451612903},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.058823529411764705}},".":{"docs":{},".":{"docs":{},".":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.006872852233676976},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"structeosio_1_1action__wrapper.html":{"ref":"structeosio_1_1action__wrapper.html","tf":0.029411764705882353},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.009828009828009828},"structeosio_1_1variant__action__wrapper.html":{"ref":"structeosio_1_1variant__action__wrapper.html","tf":0.029411764705882353}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}}}}}}}},"=":{"docs":{"group__actionapi.html":{"ref":"group__actionapi.html","tf":0.0034482758620689655},"group__actioncapi.html":{"ref":"group__actioncapi.html","tf":0.004123711340206186},"group__actioncppapi.html":{"ref":"group__actioncppapi.html","tf":0.0035087719298245615},"group__chaincapi.html":{"ref":"group__chaincapi.html","tf":0.013157894736842105},"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.009472817133443162},"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.028846153846153848},"group__consolecapi.html":{"ref":"group__consolecapi.html","tf":0.007957559681697613},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0273972602739726},"group__database.html":{"ref":"group__database.html","tf":0.0013864818024263432},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0013876843018213356},"group__multiindex.html":{"ref":"group__multiindex.html","tf":0.009900990099009901},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.00315955766192733},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0032},"group__transactioncapi.html":{"ref":"group__transactioncapi.html","tf":0.013192612137203167},"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.003436426116838488},"functions.html":{"ref":"functions.html","tf":0.14212481691851536},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.002791130407815165},"structeosio_1_1action.html":{"ref":"structeosio_1_1action.html","tf":0.005154639175257732},"structeosio_1_1asset.html":{"ref":"structeosio_1_1asset.html","tf":0.4718237704918033},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.002457002457002457},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.006872852233676976},"classeosio_1_1datastream_3_01size__t_01_4.html":{"ref":"classeosio_1_1datastream_3_01size__t_01_4.html","tf":0.0078125},"namespaceeosio_1_1detail.html":{"ref":"namespaceeosio_1_1detail.html","tf":0.019230769230769232},"structeosio_1_1detail_1_1check__types.html":{"ref":"structeosio_1_1detail_1_1check__types.html","tf":0.023255813953488372},"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.7986270022883295},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.009950248756218905},"structeosio_1_1fixed__point128.html":{"ref":"structeosio_1_1fixed__point128.html","tf":0.008771929824561403},"structeosio_1_1fixed__point32.html":{"ref":"structeosio_1_1fixed__point32.html","tf":0.008974358974358974},"structeosio_1_1fixed__point64.html":{"ref":"structeosio_1_1fixed__point64.html","tf":0.009283819628647215},"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.01932367149758454},"classeosio_1_1microseconds.html":{"ref":"classeosio_1_1microseconds.html","tf":0.8531746031746031},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.04691716836205107},"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.027491408934707903},"structeosio_1_1multi__index_1_1intc.html":{"ref":"structeosio_1_1multi__index_1_1intc.html","tf":0.038461538461538464},"classeosio_1_1singleton.html":{"ref":"classeosio_1_1singleton.html","tf":0.011299435028248588},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.007220216606498195},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.731829573934837},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":1.306309251389343},"classeosio_1_1transaction.html":{"ref":"classeosio_1_1transaction.html","tf":0.044444444444444446},"classeosio_1_1transaction__header.html":{"ref":"classeosio_1_1transaction__header.html","tf":0.02},"structsigned__int.html":{"ref":"structsigned__int.html","tf":0.002403846153846154},"structunsigned__int.html":{"ref":"structunsigned__int.html","tf":0.0023923444976076554},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.007424144609425436},"db_8h.html":{"ref":"db_8h.html","tf":0.0011118832522585128},"print_8h.html":{"ref":"print_8h.html","tf":0.005836575875486381},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.011976047904191617}},"=":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.005},"group__database.html":{"ref":"group__database.html","tf":0.0001733102253032929},"group__databasec.html":{"ref":"group__databasec.html","tf":0.00017346053772766696},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.004739336492890996},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0048},"group__systemapi.html":{"ref":"group__systemapi.html","tf":0.00796812749003984},"group__systemcapi.html":{"ref":"group__systemcapi.html","tf":0.008658008658008658},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":0.0036101083032490976},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":0.0035842293906810036},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.0003101256008683517},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0049823541623417065},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.003898635477582846},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"system_8h.html":{"ref":"system_8h.html","tf":0.00625}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"structeosio_1_1extended__asset.html":{"ref":"structeosio_1_1extended__asset.html","tf":0.002288329519450801}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{"group__chainapi.html":{"ref":"group__chainapi.html","tf":1.4358441558441557},"group__cryptocppapi.html":{"ref":"group__cryptocppapi.html","tf":1.4362489717576088},"group__cryptoapi.html":{"ref":"group__cryptoapi.html","tf":1.436076119002948},"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.951718009478673},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.9519},"group__fixed__bytes.html":{"ref":"group__fixed__bytes.html","tf":1.374466688546111},"group__fixed__key.html":{"ref":"group__fixed__key.html","tf":1.3743890518084068},"functions.html":{"ref":"functions.html","tf":0.07106240845925768},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.14616803863535746},"classeosio_1_1block__timestamp.html":{"ref":"classeosio_1_1block__timestamp.html","tf":0.6624831913939937},"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":1.5149253731343284},"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.838532640092432},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.8386150234741784},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.001660784720780569},"structeosio_1_1multi__index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1const__iterator.html","tf":1.173582995951417},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"ref":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","tf":1.0900621118012421},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.7567720090293454},"structeosio_1_1public__key.html":{"ref":"structeosio_1_1public__key.html","tf":2.5303030303030303},"structeosio_1_1signature.html":{"ref":"structeosio_1_1signature.html","tf":2.532967032967033},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.9483303249097473},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":1.0089020771513353},"classeosio_1_1time__point.html":{"ref":"classeosio_1_1time__point.html","tf":0.7248120300751879},"classeosio_1_1time__point__sec.html":{"ref":"classeosio_1_1time__point__sec.html","tf":0.43543641712978093}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"classeosio_1_1extended__symbol.html":{"ref":"classeosio_1_1extended__symbol.html","tf":0.004975124378109453},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol.html":{"ref":"classeosio_1_1symbol.html","tf":0.0036101083032490976},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1fixed__key.html":{"ref":"classeosio_1_1fixed__key.html","tf":0.0017605633802816902}}}}}}}}}},"`":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}},"`":{"docs":{"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621}},"`":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"group__cryptocapi.html":{"ref":"group__cryptocapi.html","tf":0.00125},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}}},",":{"docs":{"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.00020759809009757111}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"`":{"docs":{},".":{"docs":{"structeosio_1_1indexed__by.html":{"ref":"structeosio_1_1indexed__by.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"@":{"docs":{"classeosio_1_1contract.html":{"ref":"classeosio_1_1contract.html","tf":0.0049504950495049506}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"1":{"docs":{"group__compilerbuiltinsapi.html":{"ref":"group__compilerbuiltinsapi.html","tf":0.00041186161449752884},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}}}},"%":{"docs":{},"\"":{"docs":{},",":{"docs":{"group__consoleapi.html":{"ref":"group__consoleapi.html","tf":0.004807692307692308},"group__consolecppapi.html":{"ref":"group__consolecppapi.html","tf":0.0045662100456621},"namespaceeosio.html":{"ref":"namespaceeosio.html","tf":0.00015506280043417584}}}}},"\\":{"docs":{},"*":{"docs":{},"(":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"t":{"docs":{},"\\":{"docs":{},"*":{"docs":{},")":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.0003466204506065858},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0003469210754553339},"db_8h.html":{"ref":"db_8h.html","tf":0.0002779708130646282}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.006759098786828423},"group__databasec.html":{"ref":"group__databasec.html","tf":0.0067649609713790115},"db_8h.html":{"ref":"db_8h.html","tf":0.00542043085476025}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"group__database.html":{"ref":"group__database.html","tf":0.004159445407279029},"group__databasec.html":{"ref":"group__databasec.html","tf":0.004163052905464007},"db_8h.html":{"ref":"db_8h.html","tf":0.0033356497567755385}}}}}}}}}}}}},"+":{"docs":{"group__symbolapi.html":{"ref":"group__symbolapi.html","tf":0.001579778830963665},"group__symbolcppapi.html":{"ref":"group__symbolcppapi.html","tf":0.0016},"structeosio_1_1name.html":{"ref":"structeosio_1_1name.html","tf":0.002257336343115124},"classeosio_1_1symbol__code.html":{"ref":"classeosio_1_1symbol__code.html","tf":0.002967359050445104}}},"~":{"docs":{"functions.html":{"ref":"functions.html","tf":0.001937984496124031}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"group__binary__extension.html":{"ref":"group__binary__extension.html","tf":0.39817326822210164},"functions.html":{"ref":"functions.html","tf":0.001937984496124031},"classeosio_1_1binary__extension.html":{"ref":"classeosio_1_1binary__extension.html","tf":0.4594594594594595}}}}}}}}}}}}}}}},";":{"docs":{"classeosio_1_1fixed__bytes.html":{"ref":"classeosio_1_1fixed__bytes.html","tf":0.0017331022530329288},"classeosio_1_1multi__index.html":{"ref":"classeosio_1_1multi__index.html","tf":0.0008303923603902845}}},"|":{"docs":{"structeosio_1_1multi__index_1_1index.html":{"ref":"structeosio_1_1multi__index_1_1index.html","tf":0.001718213058419244},"action_8h.html":{"ref":"action_8h.html","tf":0.03125},"chain_8h.html":{"ref":"chain_8h.html","tf":0.04040404040404041},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.01065203357004519},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.012670565302144249},"db_8h.html":{"ref":"db_8h.html","tf":0.008756080611535788},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.03361344537815126},"permission_8h.html":{"ref":"permission_8h.html","tf":0.020588235294117647},"print_8h.html":{"ref":"print_8h.html","tf":0.027237354085603113},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.0223463687150838},"system_8h.html":{"ref":"system_8h.html","tf":0.028125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.023952095808383235}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"|":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"|":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"|":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"|":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857},"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102},"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545},"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114},"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141},"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907},"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353},"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938},"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365},"system_8h.html":{"ref":"system_8h.html","tf":0.003125},"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{},"|":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"s":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"chain_8h.html":{"ref":"chain_8h.html","tf":0.010101010101010102}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"s":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{},"|":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}},"_":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.01680672268907563}},"|":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}},"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"action_8h.html":{"ref":"action_8h.html","tf":0.002232142857142857}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"1":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"2":{"5":{"6":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"docs":{}}}},"_":{"docs":{},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"s":{"docs":{},"f":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}}}}}}},"l":{"docs":{},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"f":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"3":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"d":{"1":{"6":{"0":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"1":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"2":{"5":{"6":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"docs":{}},"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{"memory_8hpp.html":{"ref":"memory_8hpp.html","tf":0.004201680672268907}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}},"d":{"docs":{},"f":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}},"i":{"1":{"2":{"8":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"docs":{}},"docs":{}},"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"n":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"q":{"docs":{},"f":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"s":{"docs":{},"_":{"docs":{},"l":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"f":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}},"u":{"docs":{},"i":{"1":{"2":{"8":{"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}},"docs":{}},"docs":{}},"docs":{"print_8h.html":{"ref":"print_8h.html","tf":0.0019455252918287938}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"system_8h.html":{"ref":"system_8h.html","tf":0.003125}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"|":{"docs":{},"_":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"|":{"docs":{},"_":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"s":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{},"|":{"docs":{},"_":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"s":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}}}}},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"1":{"2":{"8":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}},"docs":{}},"docs":{}},"2":{"5":{"6":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}},"docs":{}},"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"6":{"4":{"docs":{"db_8h.html":{"ref":"db_8h.html","tf":0.0001389854065323141}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{},"|":{"docs":{},"_":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{"permission_8h.html":{"ref":"permission_8h.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"privileged_8h.html":{"ref":"privileged_8h.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{},"|":{"docs":{},"_":{"docs":{},"_":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}},"e":{"docs":{},"q":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}},"t":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"t":{"docs":{},"f":{"2":{"docs":{"compiler__builtins_8h.html":{"ref":"compiler__builtins_8h.html","tf":0.00032278889606197545}}},"docs":{}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"crypto_8h.html":{"ref":"crypto_8h.html","tf":0.0009746588693957114}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"|":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{"transaction_8h.html":{"ref":"transaction_8h.html","tf":0.001996007984031936}}}}}}}}}}}}}}}}}}}}}}}},"length":14818},"corpusTokens":["!=","!=compar","!=invert","\"\"_n","\");","\",","\".\"","\".\",","\".\".","\"1","\"abcde\"_n;","\"account\":","\"account2\"_n,","\"account3\"_n);","\"active\"","\"address","\"alic","\"alice\"_n);","\"amount\":","\"authorization\":","\"blacksburg\";","\"blumer\";","\"brendan\";","\"brendan\"_n;","\"ca\";","\"charlie\"_n);","\"code","\"code\":","\"contract\"","\"core","\"couldn't","\"dan\"_n);","\"dan\"_n,","\"dan\"_n;","\"daniel\",","\"daniel\";","\"data\":","\"eos\",","\"eosiolib/public_key.hpp\")","\"evert","\"foo\"_n","\"foo\"_n,","\"from\":","\"hello","\"hk\";","\"hong","\"how","\"inita\",","\"initb\",","\"invalid","\"larimer\";","\"lock","\"one","\"onli","\"pending\"","\"permission\":","\"record","\"resource\"","\"san","\"scope","\"to\":","\"transfer\",","\"type\":","\"unabl","\"va\";","###","#includ","$","%\",","&","&&","&&...","&calc_hash","&prim);","'.cpp'","(","(\"action_member1_name\",","()","(./examples/hello).","(1/2)","(1/24)","(1/3)","(1/4)","(10/24)","(11/24)","(12/24)","(13/24)","(14/24)","(15/24)","(16/24)","(17/24)","(18/24)","(19/24)","(2/2)","(2/24)","(2/3)","(2/4)","(20/24)","(21/24)","(22/24)","(23/24)","(24/24)","(3/24)","(3/3)","(3/4)","(4/24)","(4/4)","(5/24)","(6/24)","(7/24)","(8/24)","(87654323456);","(9/24)","(;","(__int128","(_multi_index_detail)","(a","(a)(b)(c)","(account)(name)(authorization)(data)","(account)(name)(authorization)(data))","(acta)","(action","(action,","(and","(are","(arg","(args1)(args2)(args3)","(asset","(authorization)","(b","(basea)(baseb)(basec)","(begin","(binary_extens","(bool","(boost","(build","(can","(cannot","(capi_checksum160)","(capi_checksum256)","(capi_checksum512)","(capi_nam","(capi_public_key,","(char","(char)","(code","(const","(const_iter","(contract","(datastream","(defin","(detail)","(doubl","(e.g.","(empti","(eosio","(eosio)","(eosio::_multi_index_detail::secondary_key_trait","(eosio::action)","(eosio::action,","(eosio::action_wrapper)","(eosio::action_wrapper,","(eosio::asset)","(eosio::asset,","(eosio::binary_extension)","(eosio::binary_extension,","(eosio::block_timestamp)","(eosio::block_timestamp,","(eosio::blockchain_paramet","(eosio::blockchain_parameters)","(eosio::const_mem_fun)","(eosio::contract)","(eosio::contract,","(eosio::datastream)","(eosio::datastream,","(eosio::detail::check_types,","(eosio::extended_asset)","(eosio::extended_asset,","(eosio::extended_symbol)","(eosio::fixed_bytes)","(eosio::fixed_bytes,","(eosio::fixed_key)","(eosio::fixed_point128)","(eosio::fixed_point128,","(eosio::fixed_point32)","(eosio::fixed_point32,","(eosio::fixed_point64)","(eosio::ignore_wrapper)","(eosio::ignore_wrapper,","(eosio::indexed_by,","(eosio::inline_dispatcher)","(eosio::memory_manager)","(eosio::memory_manager,","(eosio::memory_manager::memory)","(eosio::memory_manager::memory::buffer_ptr)","(eosio::memory_manager::memory::buffer_ptr,","(eosio::microseconds)","(eosio::multi_index)","(eosio::multi_index,","(eosio::multi_index::const_iterator,","(eosio::multi_index::index)","(eosio::multi_index::index,","(eosio::multi_index::index::const_iterator)","(eosio::multi_index::intc)","(eosio::multi_index::item)","(eosio::multi_index::item_ptr)","(eosio::nam","(eosio::name)","(eosio::name,","(eosio::onerror)","(eosio::permission_level)","(eosio::producer_key)","(eosio::producer_schedule)","(eosio::public_key,","(eosio::singleton)","(eosio::singleton::row)","(eosio::symbol)","(eosio::symbol,","(eosio::symbol_cod","(eosio::symbol_code)","(eosio::time_point)","(eosio::time_point,","(eosio::time_point_sec)","(eosio::transaction)","(eosio::transaction_header)","(eosio::variant_action_wrapper)","(explicitli","(field1)(field2)(field3)","(fixed_byt","(fixed_key","(float","(four","(hello.abi)","(hello.wasm)","(i.e.","(i.e.,","(identifier)","(idx128),","(idx256),","(idx64),","(ignor","(impli","(in","(int","(int)","(int128_t","(int32_t","(int64_t","(iostream","(it","(long","(microsecond","(myaction)","(n)","(name","(name::raw","(now","(number","(o0","(or","(period)","(post","(primary)(secondary)","(quadruple)","(quantity)","(r(act::*)(args...)","(replac","(return","(round","(secondary_key_typ","(setpriv)(setalimits)(setglimits)(setprods)(reqauth)","(signed_int)","(size_t","(static_cast(tablename)","(std::in_place_t,","(std::string","(std::string_view","(std::unique_ptr","(std::vectorpermission_level","(symbol","(symbol_cod","(t","(testact)","(the","(time_point_sec","(truncat","(two","(u","(uint128_t","(uint32_t","(uint64_t","(unsign","(unsigned_int)","(unused)","(use","(usual","(void","(wasm)","(webassembl","(weight","(which",")",").",");","){","*","*,","*/","*=","*const","*itr,","*multipl","*s","*|calloc","*|malloc","*|realloc","*|sbrk","+",",",",size_t","..","...","./build.sh","./eosio.cdt","./examples/abigen_test/test.cpp.","./examples/hello/hello.clauses.md.","./examples/hello/hello.contracts.md","./install.sh",".clauses.md.",".contracts.md",".wasm","/","/)","/*","/.","//","//1","//4","//8","//if","0","0)","0);","0,","0.","0.5","0.x86_64.rpm","0;","0x000000000000000full)","0x000000000000000full),","0xfffffffffffffff0ull)","0xffffffffffffffff","1","1);","1,","1.","1.0.0)","1.2.x","1.3.x","1.4.0","1.4.0.x86_64","1.4.0.x86_64.deb","10);","10.0;","1000","10000","1000000000000000000","100;","11","12","128","13","13)","13th","16","160","1970","1970)","1e+18);","1e+18;","2","2,","2323)","256","2^62","3","3.5)","32","32,64,128,256","34","3;","4","4)","5","5);","5,","5.0","512","64","64));","64),","66","7)","7,","8","87654323456","87654323456);","8;","93445;","93446;",":","::","::eosio::ignor","::eosio::ignore)","::eosio::ignore_wrapp","::free","::public_key)",";","=","==","=subtract",">",">())",">(),",">,",">::call",">::datastream",">::lowest",">::put",">::remain",">::seekp",">::skip",">::tellp",">::type;",">::valid",">::write",">=",">=compar",">>",">>deseri",">account_nam",">citi",">compar","@","@return1","[&](","[&](auto&","[...","[[eosio::action(\"\")]]","[[eosio::action]]","[[eosio::contract(\"somecontract\")]]).","[[eosio::contract]]","[[eosio::contract]].","[[eosio::ignore]]","[[eosio::table(\"\")]].","[[eosio::table,","[[eosio::table]]","[[eosio::table]].","[begin,","[options]","[{","\\*((uint64\\_t\\*)data)","\\*primari","\\*secondari","]","_","__addtf3","__ashlti3","__ashlti3(res,","__ashrti3","__ashrti3(res,","__attribute__((eosio_action))","__attribute__((eosio_table))","__break_point","__cmptf2","__cxa_pure_virtu","__divtf3","__divti3","__divti3(res,","__eqtf2","__extenddftf2","__extendsftf2","__fixtfdi","__fixtfsi","__fixunstfdi","__fixunstfsi","__getf2","__gttf2","__idx","__int128","__iter","__letf2","__lshlti3","__lshlti3(res,","__lshrti3","__lshrti3(res,","__lttf2","__modti3","__modti3(res,","__multf3","__multi3","__multi3(res,","__netf2","__primary_itr","__subtf3","__trunctfdf2","__trunctfsf2","__udivti3","__udivti3(res,","__umodti3","__umodti3(res,","__unordtf2","_active_free_heap","_active_heap","_alloc_memory_mask","_available_heap","_code","_codeth","_count","_d","_data","_datastream_detail","_end","_get","_has_valu","_heap","_heap_end","_heap_siz","_heaps_actual_s","_heaps_siz","_idx","_indic","_initial_heap","_initial_heap_s","_item","_items_vector","_mem_block","_multi_index_detail","_multidx","_next_primary_key","_offset","_po","_primary_itr","_primary_key","_ptr","_rem_mem_block_mask","_scope","_self","_self.value);","_self;","_selfth","_size","_size_mark","_start","_t","`","``","``,","```","```cpp","`boost::multi\\_index::const\\_mem\\_fun`.","a(123232.455667233)","a(1234.455667)","a(1234.455667);","a(123424)","a)","a*b;","a+b+c;","a,","a;","aa","abcd","abi","abi,","abi.","abi.act","abigen","abigen,","abigen:","abort","abort,","aborted.","abov","above:","absolut","abstract","accepts,","access","accident","accordingly.","account","account)","account,","account.","account_nam","account_name;","account_permiss","accountnam","accounts.","accounts...","accur","act","act)","act,","acta(){}","action","action'","action(ignore)","action)","action,","action.","action.cod","action.h","action.h::action_data_s","action.h::current_receiv","action.h::has_auth","action.h::is_account","action.h::publication_tim","action.h::read_action_data","action.h::require_auth","action.h::require_auth2","action.h::require_recipi","action.h::send_context_free_inlin","action.h::send_inlin","action.hpp","action::account","action::act","action::author","action::data_a","action::eoslib_seri","action::nam","action;","action_data_s","action_member1_value)(\"action_member2_name\",","action_member2_value)","action_nam","action_name;","action_size();","action_wrapp","action_wrapper::action_wrapp","actionapi","actionapi::has_auth","actionapi::is_account","actionapi::require_auth","actionapi::require_recipi","actionapi::unpack_action_data","actioncapi","actioncapi::action_data_s","actioncapi::current_receiv","actioncapi::has_auth","actioncapi::is_account","actioncapi::publication_tim","actioncapi::read_action_data","actioncapi::require_auth","actioncapi::require_auth2","actioncapi::require_recipi","actioncapi::send_context_free_inlin","actioncapi::send_inlin","actioncppapi","actioncppapi::has_auth","actioncppapi::is_account","actioncppapi::require_auth","actioncppapi::require_recipi","actioncppapi::unpack_action_data","actionnam","actions.","actiontyp","activ","activate_featur","actor","actornam","actual","ad","add","add_contract(","add_contract.","add_executable.","addend","addit","address","address)","address.account_nam","address.c","address.find(\"dan\"_n);","address.first_nam","address.key","address.last_nam","address.st","address.street","address.zip","address_index","address_index;","addressbook(nam","addressbook,","addressbook:","addresses(\"dan\"_n,","addresses(_self,","addresses.available_primary_key();","addresses.begin(),","addresses.cbegin(),","addresses.cend(),","addresses.crbegin();","addresses.crend();","addresses.emplace(_self,","addresses.emplace(payer,","addresses.end(),","addresses.erase(","addresses.erase(*itr);","addresses.find(\"dan\"_n);","addresses.get(\"dan\"_n);","addresses.get_index();","addresses.modify(","addresses.rbegin();","addresses.rend();","adjust_to_mem_block","advanc","against","agreement","alia","aliases.","align","align/overalign","aligned.","aligned;","alignedmacro","alloc","allow","allowed.","alon","along","alreadi","also:","alway","amount","amount.","amountth","analys","analysi","and,","anoth","anyth","api","api.","appear","append","apples:","appli","approach","appropri","apt","ar","arbitrari","area","arf,","arg","arg,","arg=","args)","args.","args...","argument","arithmet","around","arr","arr)","arr_itr","arr_itrconstructor","array","assembl","assert","assert.","assert160","assert256","assert512","assert\\_recover\\_key","assert_recover_key","assert_recover_key(","assert_ripemd160","assert_ripemod160(","assert_sha1","assert_sha1(","assert_sha256","assert_sha256(","assert_sha512","assert_sha512(","asset","asset&","asset'","asset.","asset.hpp","asset::amount","asset::asset","asset::is_amount_within_rang","asset::max_amount","asset::oper","asset::operator/=","asset::set_amount","assetapi","assetcppapi","assets.","assign","assignhelp","associ","assum","ast","atom","attach","attribut","attribute,","attribute.","auth","auth,","auth.","author","authorization;","authorizationlist","authorized,","auths,","auths.","auto","auto&","autoincr","automat","automatically.","avail","available_primary_key","b","b(13324.32323);","b(9.654);","b(a);","b,","b/a;","b;","bad","bake","base","base32","base_per_transaction_net_usag","base_per_transaction_net_usageth","basic","be","be)","becom","befor","before=","begin","begin,","behav","below","better","between","bill","bill_to_account","bill_to_account)","bill_to_account,","binari","binary_extens","binary_extension.","binary_extension.hpp","binary_extension::_get","binary_extension::_has_valu","binary_extension::binary_extens","binary_extension::emplac","binary_extension::has_valu","binary_extension::oper","binary_extension::reset","binary_extension::valu","binary_extension::value_or","binary_extension::~binary_extens","bit","block","block_id_typ","block_interval_m","block_signing_key","block_signing_keyblock","block_timestamp","block_timestamp::block_interval_m","block_timestamp::block_timestamp","block_timestamp::block_timestamp_epoch","block_timestamp::next","block_timestamp::set_time_point","block_timestamp::slot","block_timestamp::to_time_point","block_timestamp_epoch","block_timestamp_typ","blockchain","blockchain.","blockchain_paramet","blockchain_parameters::base_per_transaction_net_usag","blockchain_parameters::context_free_discount_net_usage_den","blockchain_parameters::context_free_discount_net_usage_num","blockchain_parameters::deferred_trx_expiration_window","blockchain_parameters::max_authority_depth","blockchain_parameters::max_block_cpu_usag","blockchain_parameters::max_block_net_usag","blockchain_parameters::max_inline_action_depth","blockchain_parameters::max_inline_action_s","blockchain_parameters::max_transaction_cpu_usag","blockchain_parameters::max_transaction_delay","blockchain_parameters::max_transaction_lifetim","blockchain_parameters::max_transaction_net_usag","blockchain_parameters::min_transaction_cpu_usag","blockchain_parameters::net_usage_leeway","blockchain_parameters::target_block_cpu_usage_pct","blockchain_parameters::target_block_net_usage_pct","blolckchain","bodi","body.","bool","bool,","bool.","bool_pack","boolean","boost","boost::container::flat_map","boost::container::flat_set","boost::multi_index::const_mem_fun.","both","bound","break","brew","brew,","brief","brows","buff","buff,","buff_size,","buffer","buffer,","buffer.","buffer[128];","buffer_ptr","build","built","builtin","by_zip()","bypass","byte","bytes)","bytes.","bytes_popul","c","c(a);","c)","c++","c++11","c++17","c1","c1,","c2","c2)","c2,","c2.","c;","calc_hash","calc_hash;","calcul","call","called.","calloc","calloc(),","callocalloc","cancel","cancel/replac","cancel_def","cancel_deferred(","canceled,","canceled.","cap","capi\\_checksum160\\*","capi\\_checksum256\\*","capi\\_checksum512\\*","capi_checksum160","capi_checksum256","capi_checksum512","capi_nam","capi_name;","capi_public_key","capi_public_key::data[34];","capi_signatur","capi_signature,","capi_signature::data[66];","capsiz","case","cast","caus","caveat","cbegin","cc","cd","cdt","cend","cfl","chain","chain.h","chain.h::get_active_produc","chainapi","chainapi::assert_recover_key","chainapi::assert_ripemd160","chainapi::assert_sha1","chainapi::assert_sha256","chainapi::assert_sha512","chainapi::oper","chainapi::operator==","chainapi::recover_key","chainapi::ripemd160","chainapi::sha1","chainapi::sha256","chainapi::sha512","chaincapi","chaincapi::get_active_produc","chainedptr","chang","change,","changed.","changes.","char","char*","char.","char_to_valu","charact","character,","characters,","charg","charli","charlie_itr","check","check_permission_author","check_transaction_author","check_typ","check_types;","check_types<","checksum","checksum.","checksum160","checksum256","checksum256.","checksum512","city;","clang","class","class,","class.","classes,","classes.","classes:","claus","clause.","clauseid","cleanup","cleanup_remain","clone","cmake","cmake$","cmake_minimum_required(vers","cmakelists.txt","cmakelists.txt:","code","code)","code,","code.","code/typ","code_nam","command","comment","common","compar","comparison","compat","compil","compile,","compiler$","compiler)","compiler_builtins.h","compiler_builtins.h::__addtf3","compiler_builtins.h::__ashlti3","compiler_builtins.h::__ashrti3","compiler_builtins.h::__break_point","compiler_builtins.h::__cmptf2","compiler_builtins.h::__divtf3","compiler_builtins.h::__divti3","compiler_builtins.h::__eqtf2","compiler_builtins.h::__extenddftf2","compiler_builtins.h::__extendsftf2","compiler_builtins.h::__fixtfdi","compiler_builtins.h::__fixtfsi","compiler_builtins.h::__fixunstfdi","compiler_builtins.h::__fixunstfsi","compiler_builtins.h::__getf2","compiler_builtins.h::__gttf2","compiler_builtins.h::__letf2","compiler_builtins.h::__lshlti3","compiler_builtins.h::__lshrti3","compiler_builtins.h::__lttf2","compiler_builtins.h::__modti3","compiler_builtins.h::__multf3","compiler_builtins.h::__multi3","compiler_builtins.h::__netf2","compiler_builtins.h::__subtf3","compiler_builtins.h::__trunctfdf2","compiler_builtins.h::__trunctfsf2","compiler_builtins.h::__udivti3","compiler_builtins.h::__umodti3","compiler_builtins.h::__unordtf2","compilerbuiltinsapi","compilerbuiltinsapi::__addtf3","compilerbuiltinsapi::__ashlti3","compilerbuiltinsapi::__ashrti3","compilerbuiltinsapi::__break_point","compilerbuiltinsapi::__cmptf2","compilerbuiltinsapi::__divtf3","compilerbuiltinsapi::__divti3","compilerbuiltinsapi::__eqtf2","compilerbuiltinsapi::__extenddftf2","compilerbuiltinsapi::__extendsftf2","compilerbuiltinsapi::__fixtfdi","compilerbuiltinsapi::__fixtfsi","compilerbuiltinsapi::__fixunstfdi","compilerbuiltinsapi::__fixunstfsi","compilerbuiltinsapi::__getf2","compilerbuiltinsapi::__gttf2","compilerbuiltinsapi::__letf2","compilerbuiltinsapi::__lshlti3","compilerbuiltinsapi::__lshrti3","compilerbuiltinsapi::__lttf2","compilerbuiltinsapi::__modti3","compilerbuiltinsapi::__multf3","compilerbuiltinsapi::__multi3","compilerbuiltinsapi::__netf2","compilerbuiltinsapi::__subtf3","compilerbuiltinsapi::__trunctfdf2","compilerbuiltinsapi::__trunctfsf2","compilerbuiltinsapi::__udivti3","compilerbuiltinsapi::__umodti3","compilerbuiltinsapi::__unordtf2","complet","compress","comput","con","con)","concept","condit","condition","config.cmak","configur","conform","conjunct","connect","consensu","consensus.","consid","consol","consoleapi","consoleapi::oper","consoleapi::print","consoleapi::print_f","consolecapi","consolecapi::print","consolecapi::printdf","consolecapi::printhex","consolecapi::printi","consolecapi::printi128","consolecapi::printn","consolecapi::printqf","consolecapi::prints_l","consolecapi::printsf","consolecapi::printui","consolecapi::printui128","consolecppapi","consolecppapi::oper","consolecppapi::print","consolecppapi::print_f","const","const_iter","const_mem_fun","const_mem_fun::operator()","const_reverse_iter","const_reverse_iteratorstruct","constant","constexpr","constexpr.","construct","constructor","constructor)","contain","container.","content","context","context_free_act","context_free_data","context_free_data[index]","context_free_data[index].size()","context_free_discount_net_usage_den","context_free_discount_net_usage_num","continu","contract","contract,","contract.","contract.hpp","contract::_d","contract::_self","contract::contract","contract::contract;","contract::get_datastream","contract::get_self","contract::on(","contract;","contract=hello","contracts.","contractth","contracttyp","control","conveni","convers","convert","convert<","copi","copied,","copyright","core","coroutin","correct","correpond","correspond","cost","count","count,","cout","cover","cpp","cpp/eosio","cpu","cpu_weight","cpu_weight)","crbegin","creat","created,","created.","creation","creation.","crend","crypto.cpp","crypto.h","crypto.h::assert_recover_key","crypto.h::assert_ripemd160","crypto.h::assert_sha1","crypto.h::assert_sha256","crypto.h::assert_sha512","crypto.h::recover_key","crypto.h::ripemd160","crypto.h::sha1","crypto.h::sha256","crypto.h::sha512","crypto.hpp","cryptoapi","cryptoapi::assert_recover_key","cryptoapi::assert_ripemd160","cryptoapi::assert_sha1","cryptoapi::assert_sha256","cryptoapi::assert_sha512","cryptoapi::oper","cryptoapi::operator==","cryptoapi::recover_key","cryptoapi::ripemd160","cryptoapi::sha1","cryptoapi::sha256","cryptoapi::sha512","cryptocapi","cryptocapi::assert_recover_key","cryptocapi::assert_ripemd160","cryptocapi::assert_sha1","cryptocapi::assert_sha256","cryptocapi::assert_sha512","cryptocapi::recover_key","cryptocapi::ripemd160","cryptocapi::sha1","cryptocapi::sha256","cryptocapi::sha512","cryptocppapi","cryptocppapi::assert_recover_key","cryptocppapi::assert_ripemd160","cryptocppapi::assert_sha1","cryptocppapi::assert_sha256","cryptocppapi::assert_sha512","cryptocppapi::oper","cryptocppapi::operator==","cryptocppapi::recover_key","cryptocppapi::ripemd160","cryptocppapi::sha1","cryptocppapi::sha256","cryptocppapi::sha512","cs","cs)","cstr","cstr)","cstr,","current","current_receiv","current_tim","custom","d","d)","d,","d=","data","data,","data.","data;","data_a","data_len","data_len)","data_len,","databas","database.","database::db_end_i64","database::db_find_i64","database::db_get_i64","database::db_idx128_end","database::db_idx128_find_primari","database::db_idx128_find_secondari","database::db_idx128_lowerbound","database::db_idx128_next","database::db_idx128_previ","database::db_idx128_remov","database::db_idx128_stor","database::db_idx128_upd","database::db_idx128_upperbound","database::db_idx256_end","database::db_idx256_find_primari","database::db_idx256_find_secondari","database::db_idx256_lowerbound","database::db_idx256_next","database::db_idx256_previ","database::db_idx256_remov","database::db_idx256_stor","database::db_idx256_upd","database::db_idx256_upperbound","database::db_idx64_end","database::db_idx64_find_primari","database::db_idx64_find_secondari","database::db_idx64_lowerbound","database::db_idx64_next","database::db_idx64_previ","database::db_idx64_remov","database::db_idx64_stor","database::db_idx64_upd","database::db_idx64_upperbound","database::db_idx_double_end","database::db_idx_double_find_primari","database::db_idx_double_find_secondari","database::db_idx_double_lowerbound","database::db_idx_double_next","database::db_idx_double_previ","database::db_idx_double_remov","database::db_idx_double_stor","database::db_idx_double_upd","database::db_idx_double_upperbound","database::db_idx_long_double_end","database::db_idx_long_double_find_primari","database::db_idx_long_double_find_secondari","database::db_idx_long_double_lowerbound","database::db_idx_long_double_next","database::db_idx_long_double_previ","database::db_idx_long_double_remov","database::db_idx_long_double_stor","database::db_idx_long_double_upd","database::db_idx_long_double_upperbound","database::db_lowerbound_i64","database::db_next_i64","database::db_previous_i64","database::db_remove_i64","database::db_store_i64","database::db_update_i64","database::db_upperbound_i64","databasec","databasec::db_end_i64","databasec::db_find_i64","databasec::db_get_i64","databasec::db_idx128_end","databasec::db_idx128_find_primari","databasec::db_idx128_find_secondari","databasec::db_idx128_lowerbound","databasec::db_idx128_next","databasec::db_idx128_previ","databasec::db_idx128_remov","databasec::db_idx128_stor","databasec::db_idx128_upd","databasec::db_idx128_upperbound","databasec::db_idx256_end","databasec::db_idx256_find_primari","databasec::db_idx256_find_secondari","databasec::db_idx256_lowerbound","databasec::db_idx256_next","databasec::db_idx256_previ","databasec::db_idx256_remov","databasec::db_idx256_stor","databasec::db_idx256_upd","databasec::db_idx256_upperbound","databasec::db_idx64_end","databasec::db_idx64_find_primari","databasec::db_idx64_find_secondari","databasec::db_idx64_lowerbound","databasec::db_idx64_next","databasec::db_idx64_previ","databasec::db_idx64_remov","databasec::db_idx64_stor","databasec::db_idx64_upd","databasec::db_idx64_upperbound","databasec::db_idx_double_end","databasec::db_idx_double_find_primari","databasec::db_idx_double_find_secondari","databasec::db_idx_double_lowerbound","databasec::db_idx_double_next","databasec::db_idx_double_previ","databasec::db_idx_double_remov","databasec::db_idx_double_stor","databasec::db_idx_double_upd","databasec::db_idx_double_upperbound","databasec::db_idx_long_double_end","databasec::db_idx_long_double_find_primari","databasec::db_idx_long_double_find_secondari","databasec::db_idx_long_double_lowerbound","databasec::db_idx_long_double_next","databasec::db_idx_long_double_previ","databasec::db_idx_long_double_remov","databasec::db_idx_long_double_stor","databasec::db_idx_long_double_upd","databasec::db_idx_long_double_upperbound","databasec::db_lowerbound_i64","databasec::db_next_i64","databasec::db_previous_i64","databasec::db_remove_i64","databasec::db_store_i64","databasec::db_update_i64","databasec::db_upperbound_i64","databasecpp","databyt","datalen","datalen)","datapayload","datastream","datastream&","datastream.hpp","datastream::_end","datastream::_po","datastream::_start","datastream::deseri","datastream::oper","datastream::operator>>","datastream::pack","datastream::pack_s","datastream::po","datastream::read","datastream::unpack","datastream<","day","db.h","db.h::db_end_i64","db.h::db_find_i64","db.h::db_get_i64","db.h::db_idx128_end","db.h::db_idx128_find_primari","db.h::db_idx128_find_secondari","db.h::db_idx128_lowerbound","db.h::db_idx128_next","db.h::db_idx128_previ","db.h::db_idx128_remov","db.h::db_idx128_stor","db.h::db_idx128_upd","db.h::db_idx128_upperbound","db.h::db_idx256_end","db.h::db_idx256_find_primari","db.h::db_idx256_find_secondari","db.h::db_idx256_lowerbound","db.h::db_idx256_next","db.h::db_idx256_previ","db.h::db_idx256_remov","db.h::db_idx256_stor","db.h::db_idx256_upd","db.h::db_idx256_upperbound","db.h::db_idx64_end","db.h::db_idx64_find_primari","db.h::db_idx64_find_secondari","db.h::db_idx64_lowerbound","db.h::db_idx64_next","db.h::db_idx64_previ","db.h::db_idx64_remov","db.h::db_idx64_stor","db.h::db_idx64_upd","db.h::db_idx64_upperbound","db.h::db_idx_double_end","db.h::db_idx_double_find_primari","db.h::db_idx_double_find_secondari","db.h::db_idx_double_lowerbound","db.h::db_idx_double_next","db.h::db_idx_double_previ","db.h::db_idx_double_remov","db.h::db_idx_double_stor","db.h::db_idx_double_upd","db.h::db_idx_double_upperbound","db.h::db_idx_long_double_end","db.h::db_idx_long_double_find_primari","db.h::db_idx_long_double_find_secondari","db.h::db_idx_long_double_lowerbound","db.h::db_idx_long_double_next","db.h::db_idx_long_double_previ","db.h::db_idx_long_double_remov","db.h::db_idx_long_double_stor","db.h::db_idx_long_double_upd","db.h::db_idx_long_double_upperbound","db.h::db_lowerbound_i64","db.h::db_next_i64","db.h::db_previous_i64","db.h::db_remove_i64","db.h::db_store_i64","db.h::db_update_i64","db.h::db_upperbound_i64","db_end_i64","db_find_i64","db_find_i64(receiver,","db_get_i64","db_get_i64(itr,","db_idx128_end","db_idx128_find_primari","db_idx128_find_secondari","db_idx128_lowerbound","db_idx128_next","db_idx128_previ","db_idx128_remov","db_idx128_stor","db_idx128_upd","db_idx128_upperbound","db_idx256_end","db_idx256_find_primari","db_idx256_find_secondari","db_idx256_lowerbound","db_idx256_next","db_idx256_previ","db_idx256_remov","db_idx256_stor","db_idx256_upd","db_idx256_upperbound","db_idx64_end","db_idx64_find_primari","db_idx64_find_secondari","db_idx64_lowerbound","db_idx64_next","db_idx64_previ","db_idx64_remov","db_idx64_stor","db_idx64_upd","db_idx64_upperbound","db_idx_double_end","db_idx_double_find_primari","db_idx_double_find_secondari","db_idx_double_lowerbound","db_idx_double_next","db_idx_double_previ","db_idx_double_remov","db_idx_double_stor","db_idx_double_upd","db_idx_double_upperbound","db_idx_long_double_end","db_idx_long_double_find_primari","db_idx_long_double_find_secondari","db_idx_long_double_lowerbound","db_idx_long_double_next","db_idx_long_double_previ","db_idx_long_double_remov","db_idx_long_double_stor","db_idx_long_double_upd","db_idx_long_double_upperbound","db_lowerbound_i64","db_next_i64","db_next_i64(charlie_itr,","db_previous_i64","db_previous_i64(itr,","db_remove_i64","db_remove_i64(itr);","db_store_i64","db_update_i64","db_upperbound_i64","dd","deal","dealloc","debian","decid","decim","decis","declar","decltype(get_args(action))","decltype(get_args(action));","decltype(get_args_nounwrap(action))","decltype(get_args_nounwrap(action));","deduc","deduced_nounwrap","deductions.","def","def)","default","defer","deferred_trx_expiration_window","defin","defined.","definit","definition);","definition,","defn","delay","delay,","delay_sec","delay_secnumb","delay_u","delay_us)","deleted\");","depend","depth","depth.","deriv","describ","descript","descriptions:","deseri","deserializer.","desir","destin","destructor","detail","details.","detect","determin","develop","developers.eos.io","devoid","di","differ","different)","digest","digest\");","digest,","digest.","digest;","digit","direct","directli","directori","disabl","dispatch","dispatch_inlin","dispatcher.hpp","dispatcher::execute_act","dispatchercpp","dispatchercpp::execute_act","display","disrupt","disruptive,","divid","dividend","divis","divisor","dm","document","does.","doesn't","don't","done","done.","doubl","double)","double,","double.","down","download","drastic","ds","ds)","ds):contract(receiver,","ds){}","ds,","due","dummy_act","dummy_action,","dynam","e","each","easi","effici","elaps","element","elements,","elid","elis","emit","emplac","empti","empty.","enabl","encod","end","end)","end_itr","ensur","entri","enum","enum'","enumer","eo","eos.io","eos/license.txt","eos_assert(","eosio","eosio,","eosio.cdt","eosio.cdt)","eosio.cdt,","eosio.cdt.","eosio.cdt/","eosio.cdt/examples/hello","eosio.cdt/examples/templ","eosio.cdt/examples/template.","eosio.contracts/cmakelists.txt","eosio.hpp","eosio.ld","eosio.token)","eosio/eosio.cdt","eosio::_datastream_detail","eosio::_datastream_detail::is_point","eosio::_datastream_detail::is_primit","eosio::_multi_index_detail","eosio::_multi_index_detail::secondary_index_db_funct","eosio::_multi_index_detail::secondary_key_trait","eosio::_multi_index_detail::secondary_key_traits)","eosio::_multi_index_detail::secondary_key_traits::lowest","eosio::_multi_index_detail::secondary_key_traits<","eosio::act","eosio::action,","eosio::action::account;","eosio::action::act","eosio::action::authorization;","eosio::action::data;","eosio::action::data_a","eosio::action::eoslib_seri","eosio::action::name;","eosio::action::send_context_fre","eosio::action_wrapp","eosio::action_wrapper,","eosio::action_wrapper::action_name;","eosio::action_wrapper::action_wrapp","eosio::action_wrapper::code_name;","eosio::action_wrapper::get_mem_ptr","eosio::action_wrapper::permissions;","eosio::action_wrapper::send","eosio::action_wrapper::send_context_fre","eosio::action_wrapper::to_act","eosio::assert_recover_key","eosio::assert_ripemd160","eosio::assert_sha1","eosio::assert_sha256","eosio::assert_sha512","eosio::asset","eosio::asset()","eosio::asset(0,","eosio::asset::amount;","eosio::asset::asset","eosio::asset::is_amount_within_rang","eosio::asset::is_valid","eosio::asset::max_amount;","eosio::asset::oper","eosio::asset::operator!=","eosio::asset::operator+","eosio::asset::operator+=","eosio::asset::operator/","eosio::asset::operator/=","eosio::asset::operator==","eosio::asset::operator>","eosio::asset::operator>=","eosio::asset::print","eosio::asset::set_amount","eosio::asset::symbol;","eosio::asset::to_str","eosio::assignhelp","eosio::binary_extens","eosio::binary_extension::_data;","eosio::binary_extension::_has_value;","eosio::binary_extension::binary_extens","eosio::binary_extension::emplac","eosio::binary_extension::has_valu","eosio::binary_extension::oper","eosio::binary_extension::reset","eosio::binary_extension::valu","eosio::binary_extension::value_or","eosio::binary_extension::value_typ","eosio::binary_extension::~binary_extens","eosio::bios,","eosio::block_timestamp","eosio::block_timestamp::block_interval_ms;","eosio::block_timestamp::block_timestamp","eosio::block_timestamp::block_timestamp_epoch;","eosio::block_timestamp::maximum","eosio::block_timestamp::min","eosio::block_timestamp::next","eosio::block_timestamp::oper","eosio::block_timestamp::operator=","eosio::block_timestamp::operator==","eosio::block_timestamp::slot;","eosio::block_timestamp::to_time_point","eosio::block_timestamp_type;","eosio::blockchain_paramet","eosio::blockchain_parameters::base_per_transaction_net_usage;","eosio::blockchain_parameters::context_free_discount_net_usage_den;","eosio::blockchain_parameters::context_free_discount_net_usage_num;","eosio::blockchain_parameters::deferred_trx_expiration_window;","eosio::blockchain_parameters::max_authority_depth;","eosio::blockchain_parameters::max_block_cpu_usage;","eosio::blockchain_parameters::max_block_net_usage;","eosio::blockchain_parameters::max_inline_action_depth;","eosio::blockchain_parameters::max_inline_action_size;","eosio::blockchain_parameters::max_transaction_cpu_usage;","eosio::blockchain_parameters::max_transaction_delay;","eosio::blockchain_parameters::max_transaction_lifetime;","eosio::blockchain_parameters::max_transaction_net_usage;","eosio::blockchain_parameters::min_transaction_cpu_usage;","eosio::blockchain_parameters::net_usage_leeway;","eosio::blockchain_parameters::target_block_cpu_usage_pct;","eosio::blockchain_parameters::target_block_net_usage_pct;","eosio::char_to_symbol,","eosio::check_permission_author","eosio::check_transaction_author","eosio::checksum160","eosio::checksum256","eosio::checksum512","eosio::const_mem_fun","eosio::const_mem_fun::operator()","eosio::const_mem_fun::result_type;","eosio::contract","eosio::contract(\"test\")]]","eosio::contract.","eosio::contract::_code;","eosio::contract::_ds;","eosio::contract::_self;","eosio::contract::contract","eosio::contract::get_cod","eosio::contract::get_datastream","eosio::contract::get_self","eosio::cout;","eosio::datastream","eosio::datastream)","eosio::datastream::datastream","eosio::datastream::get","eosio::datastream::po","eosio::datastream::put","eosio::datastream::read","eosio::datastream::remain","eosio::datastream::seekp","eosio::datastream::skip","eosio::datastream::tellp","eosio::datastream::valid","eosio::datastream::writ","eosio::datastream<","eosio::day","eosio::deseri","eosio::detail","eosio::detail::check_typ","eosio::detail::check_types,","eosio::detail::check_types::typ","eosio::detail::check_types::value;","eosio::detail::check_types<","eosio::detail::convert","eosio::detail::convert::type;","eosio::detail::convert<","eosio::detail::deduc","eosio::detail::deduced_nounwrap","eosio::detail::get_arg","eosio::detail::get_args_nounwrap","eosio::detail::get_nth","eosio::detail::get_nth,","eosio::detail::get_nth::value;","eosio::detail::get_nth_impl","eosio::detail::get_nth_impl,","eosio::detail::get_nth_impl::value;","eosio::detail::get_nth_impl<","eosio::detail::is_sam","eosio::detail::is_same,","eosio::detail::is_same::value;","eosio::detail::is_same<","eosio::detail::to_const_char_arr","eosio::detail::to_const_char_arr,","eosio::detail::to_const_char_arr::value[];","eosio::detail::type_check","eosio::detail::unwrap","eosio::detail::unwrap::type;","eosio::detail::unwrap<","eosio::dispatch","eosio::dispatch_inlin","eosio::execute_act","eosio::extended_asset","eosio::extended_asset,","eosio::extended_asset::contract;","eosio::extended_asset::extended_asset","eosio::extended_asset::get_extended_symbol","eosio::extended_asset::oper","eosio::extended_asset::operator!=","eosio::extended_asset::operator+","eosio::extended_asset::operator+=","eosio::extended_asset::operator==","eosio::extended_asset::operator>=","eosio::extended_asset::print","eosio::extended_asset::quantity;","eosio::extended_symbol","eosio::extended_symbol)","eosio::extended_symbol,","eosio::extended_symbol:","eosio::extended_symbol::contract;","eosio::extended_symbol::extended_symbol","eosio::extended_symbol::get_contract","eosio::extended_symbol::get_symbol","eosio::extended_symbol::oper","eosio::extended_symbol::operator==","eosio::extended_symbol::print","eosio::extended_symbol::symbol;","eosio::extension;","eosio::extensions_typ","eosio::extensions_type;","eosio::fixed_byt","eosio::fixed_bytes,","eosio::fixed_bytes::arr;","eosio::fixed_bytes::arr_itr;","eosio::fixed_bytes::bool_pack","eosio::fixed_bytes::fixed_byt","eosio::fixed_bytes::for","eosio::fixed_bytes::num_word","eosio::fixed_bytes::oper","eosio::fixed_bytes::operator==","eosio::fixed_bytes::padded_byt","eosio::fixed_bytes::word_t;","eosio::fixed_bytes<","eosio::fixed_divid","eosio::fixed_key","eosio::fixed_key)","eosio::fixed_key::arr;","eosio::fixed_key::arr_itr;","eosio::fixed_key::bool_pack","eosio::fixed_key::fixed_key","eosio::fixed_key::num_word","eosio::fixed_key::oper","eosio::fixed_key::operator==","eosio::fixed_key::padded_byt","eosio::fixed_key::word_t;","eosio::fixed_point128","eosio::fixed_point128,","eosio::fixed_point128::fixed_point128","eosio::fixed_point128::frac_part","eosio::fixed_point128::int_part","eosio::fixed_point128::oper","eosio::fixed_point128::operator=","eosio::fixed_point128::operator==","eosio::fixed_point128::operator>","eosio::fixed_point128::print","eosio::fixed_point128::val;","eosio::fixed_point32","eosio::fixed_point32,","eosio::fixed_point32::fixed_point32","eosio::fixed_point32::frac_part","eosio::fixed_point32::int_part","eosio::fixed_point32::oper","eosio::fixed_point32::operator+","eosio::fixed_point32::operator/","eosio::fixed_point32::operator=","eosio::fixed_point32::operator==","eosio::fixed_point32::operator>","eosio::fixed_point32::print","eosio::fixed_point32::val;","eosio::fixed_point64","eosio::fixed_point64)","eosio::fixed_point64,","eosio::fixed_point64::fixed_point64","eosio::fixed_point64::frac_part","eosio::fixed_point64::int_part","eosio::fixed_point64::oper","eosio::fixed_point64::operator+","eosio::fixed_point64::operator/","eosio::fixed_point64::operator=","eosio::fixed_point64::operator==","eosio::fixed_point64::operator>","eosio::fixed_point64::print","eosio::fixed_point64::val;","eosio::get_act","eosio::get_blockchain_paramet","eosio::has_auth","eosio::has_auth.","eosio::hour","eosio::ignor","eosio::ignore_wrapp","eosio::ignore_wrapper,","eosio::ignore_wrapper::get","eosio::ignore_wrapper::ignore_wrapp","eosio::ignore_wrapper::oper","eosio::ignore_wrapper::value;","eosio::indexed_bi","eosio::indexed_by::const","eosio::indexed_by::secondary_extractor_type;","eosio::inline_dispatch","eosio::inline_dispatcher::cal","eosio::inline_dispatcher<","eosio::iostream","eosio::is_account","eosio::is_account.","eosio::is_valid_symbol,","eosio::key256","eosio::key256;","eosio::memory_heap;","eosio::memory_manag","eosio::memory_manager::calloc","eosio::memory_manager::malloc","eosio::memory_manager::memori","eosio::memory_manager::memory)","eosio::memory_manager::memory::buffer_ptr","eosio::memory_manager::memory::buffer_ptr)","eosio::memory_manager::memory::buffer_ptr::buffer_ptr","eosio::memory_manager::memory::buffer_ptr::end","eosio::memory_manager::memory::buffer_ptr::is_alloc","eosio::memory_manager::memory::buffer_ptr::mark_alloc","eosio::memory_manager::memory::buffer_ptr::mark_fre","eosio::memory_manager::memory::buffer_ptr::merge_contigu","eosio::memory_manager::memory::buffer_ptr::merge_contiguous_if_avail","eosio::memory_manager::memory::buffer_ptr::next_ptr","eosio::memory_manager::memory::buffer_ptr::ptr","eosio::memory_manager::memory::buffer_ptr::s","eosio::memory_manager::memory::cleanup_remain","eosio::memory_manager::memory::expand_memori","eosio::memory_manager::memory::fre","eosio::memory_manager::memory::init","eosio::memory_manager::memory::is_capacity_remain","eosio::memory_manager::memory::is_in_heap","eosio::memory_manager::memory::is_init","eosio::memory_manager::memory::malloc","eosio::memory_manager::memory::malloc_from_fre","eosio::memory_manager::memory::memori","eosio::memory_manager::memory::realloc_in_plac","eosio::memory_manager::memory_manag","eosio::memory_manager::realloc","eosio::microsecond","eosio::microseconds)","eosio::microseconds,","eosio::microseconds::_count;","eosio::microseconds::count","eosio::microseconds::maximum","eosio::microseconds::microsecond","eosio::microseconds::oper","eosio::microseconds::operator!=","eosio::microseconds::operator+","eosio::microseconds::operator+=","eosio::microseconds::operator==","eosio::microseconds::operator>","eosio::microseconds::operator>=","eosio::microseconds::to_second","eosio::millisecond","eosio::minut","eosio::multi_index","eosio::multi_index)","eosio::multi_index,","eosio::multi_index::available_primary_key","eosio::multi_index::begin","eosio::multi_index::cbegin","eosio::multi_index::cend","eosio::multi_index::const_iter","eosio::multi_index::const_iterator,","eosio::multi_index::const_iterator::oper","eosio::multi_index::const_iterator::operator++","eosio::multi_index::const_iterator::operator==","eosio::multi_index::const_reverse_iterator;","eosio::multi_index::crbegin","eosio::multi_index::crend","eosio::multi_index::emplac","eosio::multi_index::end","eosio::multi_index::eras","eosio::multi_index::find","eosio::multi_index::get","eosio::multi_index::get_cod","eosio::multi_index::get_index","eosio::multi_index::get_scop","eosio::multi_index::index","eosio::multi_index::index)","eosio::multi_index::index,","eosio::multi_index::index::begin","eosio::multi_index::index::cbegin","eosio::multi_index::index::cend","eosio::multi_index::index::const","eosio::multi_index::index::const_iter","eosio::multi_index::index::const_iterator)","eosio::multi_index::index::const_iterator,","eosio::multi_index::index::const_iterator::const_iter","eosio::multi_index::index::const_iterator::oper","eosio::multi_index::index::const_iterator::operator++","eosio::multi_index::index::const_iterator::operator==","eosio::multi_index::index::const_reverse_iterator;","eosio::multi_index::index::crbegin","eosio::multi_index::index::crend","eosio::multi_index::index::end","eosio::multi_index::index::eras","eosio::multi_index::index::extract_secondary_key","eosio::multi_index::index::find","eosio::multi_index::index::get","eosio::multi_index::index::get_cod","eosio::multi_index::index::get_scop","eosio::multi_index::index::iterator_to","eosio::multi_index::index::lower_bound","eosio::multi_index::index::modifi","eosio::multi_index::index::nam","eosio::multi_index::index::numb","eosio::multi_index::index::rbegin","eosio::multi_index::index::rend","eosio::multi_index::index::require_find","eosio::multi_index::index::secondary_extractor_type;","eosio::multi_index::index::secondary_key_type;","eosio::multi_index::index::upper_bound","eosio::multi_index::index::validate_index_nam","eosio::multi_index::intc","eosio::multi_index::intc::","eosio::multi_index::intc::oper","eosio::multi_index::item","eosio::multi_index::item::__idx;","eosio::multi_index::item::__iters[sizeof...(indices)+(sizeof...(indices)==0)];","eosio::multi_index::item::__primary_itr;","eosio::multi_index::item::item","eosio::multi_index::item_ptr","eosio::multi_index::item_ptr)","eosio::multi_index::item_ptr::_item;","eosio::multi_index::item_ptr::_primary_itr;","eosio::multi_index::item_ptr::_primary_key;","eosio::multi_index::item_ptr::item_ptr","eosio::multi_index::iterator_to","eosio::multi_index::lower_bound","eosio::multi_index::modifi","eosio::multi_index::multi_index","eosio::multi_index::rbegin","eosio::multi_index::rend","eosio::multi_index::require_find","eosio::multi_index::upper_bound","eosio::nam","eosio::name)","eosio::name,","eosio::name.","eosio::name::char_to_valu","eosio::name::length","eosio::name::nam","eosio::name::oper","eosio::name::operator==","eosio::name::raw","eosio::name::suffix","eosio::name::suffix.","eosio::name::to_str","eosio::name::value;","eosio::name::write_as_str","eosio::name_suffix","eosio::onerror","eosio::onerror::from_current_act","eosio::onerror::sender_id;","eosio::onerror::sent_trx;","eosio::onerror::unpack_sent_trx","eosio::oper","eosio::operator==","eosio::operator>>","eosio::pack","eosio::pack_s","eosio::permission_level","eosio::permission_level::actor;","eosio::permission_level::operator==","eosio::permission_level::permission;","eosio::permission_level::permission_level","eosio::print","eosio::print(\"pub","eosio::print(\"ripemod160","eosio::print(\"sha1","eosio::print(\"sha256","eosio::print(\"sha512","eosio::print_f","eosio::producer_key","eosio::producer_key::block_signing_key;","eosio::producer_key::oper","eosio::producer_key::producer_name;","eosio::producer_schedul","eosio::producer_schedule::producers;","eosio::producer_schedule::version;","eosio::public_key","eosio::public_key,","eosio::public_key.","eosio::public_key::data;","eosio::public_key::oper","eosio::public_key::operator==","eosio::public_key::type;","eosio::raw","eosio::recover_key","eosio::reflector","eosio::reflector::is_enum;","eosio::reflector::is_reflected;","eosio::require_auth","eosio::require_auth.","eosio::require_recipi","eosio::ripemd160","eosio::same_payer;","eosio::second","eosio::set_blockchain_paramet","eosio::sha1","eosio::sha256","eosio::sha512","eosio::signatur","eosio::signature)","eosio::signature.","eosio::signature::data;","eosio::signature::oper","eosio::signature::operator==","eosio::signature::type;","eosio::singleton","eosio::singleton)","eosio::singleton::exist","eosio::singleton::get","eosio::singleton::get_or_cr","eosio::singleton::get_or_default","eosio::singleton::remov","eosio::singleton::row","eosio::singleton::row,","eosio::singleton::row::primary_key","eosio::singleton::row::value;","eosio::singleton::set","eosio::singleton::singleton","eosio::string_to_name,","eosio::string_to_symbol,","eosio::symbol","eosio::symbol)","eosio::symbol,","eosio::symbol.","eosio::symbol:","eosio::symbol::cod","eosio::symbol::is_valid","eosio::symbol::oper","eosio::symbol::operator==","eosio::symbol::precis","eosio::symbol::print","eosio::symbol::raw","eosio::symbol::symbol","eosio::symbol::value;","eosio::symbol_cod","eosio::symbol_code)","eosio::symbol_code,","eosio::symbol_code:","eosio::symbol_code::is_valid","eosio::symbol_code::length","eosio::symbol_code::oper","eosio::symbol_code::operator==","eosio::symbol_code::raw","eosio::symbol_code::symbol_cod","eosio::symbol_code::to_str","eosio::symbol_code::value;","eosio::symbol_code::write_as_str","eosio::symbol_name_length","eosio::symbol_typ","eosio::t","eosio::time_point","eosio::time_point)","eosio::time_point,","eosio::time_point::elapsed;","eosio::time_point::oper","eosio::time_point::operator+","eosio::time_point::operator+=","eosio::time_point::operator==","eosio::time_point::sec_since_epoch","eosio::time_point::time_point","eosio::time_point::time_since_epoch","eosio::time_point_sec","eosio::time_point_sec)","eosio::time_point_sec,","eosio::time_point_sec::maximum","eosio::time_point_sec::min","eosio::time_point_sec::oper","eosio::time_point_sec::operator+","eosio::time_point_sec::operator+=","eosio::time_point_sec::operator=","eosio::time_point_sec::operator==","eosio::time_point_sec::sec_since_epoch","eosio::time_point_sec::time_point_sec","eosio::time_point_sec::utc_seconds;","eosio::transact","eosio::transaction,","eosio::transaction::actions;","eosio::transaction::context_free_actions;","eosio::transaction::send","eosio::transaction::transact","eosio::transaction::transaction_extensions;","eosio::transaction_head","eosio::transaction_header::delay_sec;","eosio::transaction_header::expiration;","eosio::transaction_header::max_cpu_usage_ms;","eosio::transaction_header::max_net_usage_words;","eosio::transaction_header::ref_block_num;","eosio::transaction_header::ref_block_prefix;","eosio::transaction_header::transaction_head","eosio::unpack","eosio::unpack_action_data","eosio::variant_action_wrapp","eosio::variant_action_wrapper)","eosio::variant_action_wrapper::action_name;","eosio::variant_action_wrapper::code_name;","eosio::variant_action_wrapper::get_mem_ptr","eosio::variant_action_wrapper::permissions;","eosio::variant_action_wrapper::send","eosio::variant_action_wrapper::send_context_fre","eosio::variant_action_wrapper::to_act","eosio::variant_action_wrapper::variant_action_wrapp","eosio::vector","eosio;","eosio_abi","eosio_abi(","eosio_assert","eosio_assert(1","eosio_assert(addresses.get_code()","eosio_assert(end_itr","eosio_assert(iterator_to(user)","eosio_assert(itr","eosio_assert(len","eosio_assert(user.first_nam","eosio_assert_cod","eosio_assert_messag","eosio_dispatch","eosio_dispatch(","eosio_dispatch;","eosio_dispatch_help","eosio_dispatch_helper;","eosio_dispatch_intern","eosio_dispatch_internal;","eosio_dispatchconveni","eosio_exit","eosio_exit(0);","eosio_exit(1);","eosio_exit(2);","eosio_exit(3);","eosio_print(tm);","eosiolib","eosiolib.","eosiolib.cpp","eosiolib.cpp::calloc","eosiolib.cpp::fre","eosiolib.cpp::malloc","eosiolib.cpp::realloc","eosiolib.cpp::sbrk","eosiolib/","eosiolib/action.hpp","eosiolib/asset.hpp","eosiolib/contract.hpp","eosiolib/core_symbol.hpp.","eosiolib/dispatcher.hpp","eosiolib/ignore.hpp","eosiolib/multi_index.hpp","eosiolib/name.hpp","eosiolib/name.hpp.","eosiolib/optional.hpp.","eosiolib/permission.hpp","eosiolib/singleton.hpp","eosiolib/symbol.hpp","eosiolib/transaction.hpp.","eosiolib/types.hpp","eosiolib/types.hpp.","eosiolib/vector.hpp:","eoslib_reflect","eoslib_reflect;","eoslib_reflect_base_member_count","eoslib_reflect_base_member_count;","eoslib_reflect_deriv","eoslib_reflect_derived;","eoslib_reflect_derived_impl","eoslib_reflect_derived_impl;","eoslib_reflect_derived_impl_ext","eoslib_reflect_derived_impl_ext;","eoslib_reflect_derived_impl_inlin","eoslib_reflect_derived_impl_inline;","eoslib_reflect_derived_templ","eoslib_reflect_derived_template;","eoslib_reflect_derived_templateperform","eoslib_reflect_derivedspeci","eoslib_reflect_empti","eoslib_reflect_empty;","eoslib_reflect_emptyperform","eoslib_reflect_fwd","eoslib_reflect_fwd;","eoslib_reflect_fwdperform","eoslib_reflect_impl","eoslib_reflect_impl;","eoslib_reflect_member_count","eoslib_reflect_member_count;","eoslib_reflect_member_op","eoslib_reflect_member_op;","eoslib_reflect_templ","eoslib_reflect_template;","eoslib_reflect_templateperform","eoslib_reflect_visit2_bas","eoslib_reflect_visit2_base;","eoslib_reflect_visit2_memb","eoslib_reflect_visit2_member;","eoslib_reflect_visit_bas","eoslib_reflect_visit_base;","eoslib_reflect_visit_baseeosio","eoslib_reflect_visit_memb","eoslib_reflect_visit_member;","eoslib_reflectspeci","eoslib_seri","eoslib_serialize(","eoslib_serialize;","eoslib_serialize_deriv","eoslib_serialize_derived;","eoslib_serialize_deriveddefin","eoslib_serializedefin","epoch","epoch)","equal","equival","equivalence,","eras","error","error_msg","essenti","establish","evalu","even","exactli","exampl","example.","example:","examples:","exce","except","exceptions:","execut","execute_act","exist","exist\");","exist**","exist,","exist.","exists,","exists.","exit","exp","exp_mem,","expand_memori","expect","experimental,","expir","expiration();","explain","explicit","explicitli","explicitly.","ext","ext)","extend","extended_asset","extended_asset::extended_asset","extended_asset::get_extended_symbol","extended_asset::quant","extended_symbol","extended_symbol::contract","extended_symbol::extended_symbol","extended_symbol::get_contract","extended_symbol::get_symbol","extended_symbol::symbol","extens","extensions_typ","extern","extra","extract_secondary_key","extractor","f","f)","facilit","factor","factor.","fail","fail)","fail.","failur","falign","fall","fals","false)","fast","fcoroutin","featur","feature.","few","field","field.","file","file\"","file.","file:","filenam","files:","fill","filter","final","find","find_package(eosio.cdt)","find_package(eosio.cdt).","finlin","fire.","first","first_name;","fix","fixed64","fixed_byt","fixed_bytes.","fixed_bytes.hpp","fixed_bytes::bool_pack","fixed_bytes::fixed_byt","fixed_bytes::for","fixed_bytes::oper","fixed_bytes::operator==","fixed_bytes;","fixed_divid","fixed_divide(131313,","fixed_key","fixed_key.hpp","fixed_key::_data","fixed_key::arr","fixed_key::arr_itr","fixed_key::bool_pack","fixed_key::fixed_key","fixed_key::num_word","fixed_key::oper","fixed_key::operator==","fixed_key::padded_byt","fixed_key::set_from_word_sequ","fixed_point","fixed_point128","fixed_point128&","fixed_point128,64,32","fixed_point128.","fixed_point128::fixed_point128","fixed_point32","fixed_point32&","fixed_point32(131313)","fixed_point32(2323)","fixed_point32.","fixed_point32::fixed_point32","fixed_point32qr)?q:qr","fixed_point64","fixed_point64&","fixed_point64(131313)","fixed_point64(2323)","fixed_point64.","fixed_point64::fixed_point64","fixed_point64::frac_part","fixed_point64::int_part","fixed_point64::oper","fixed_point64::operator/","fixed_point64::operator>","fixed_point64::v","fixed_point64qr)?q:qr","fixedpoint","fixedpoint.hpp","flag","flat","flat_set","flat_set.","flight","float","float)","float.","flow","fmerg","fno","folder","folder.","follow","foo(float,","for.","forc","form","format","forward","found","found\");","found,","found.","frac_part","fraction","free","friend","from,","from_current_act","front.\");","fstack","fstrict","full","fullpath","func","func)","function","functions.","futur","g","gener","generation):","get","get_account_creation_tim","get_act","get_active_produc","get_active_producers(producers,","get_arg","get_args_nounwrap","get_blockchain_paramet","get_blockchain_parameters_pack","get_cod","get_context_free_data","get_contract","get_contract.","get_datastream","get_extended_symbol","get_index","get_mem_ptr","get_nth","get_nth_impl","get_nth_impl<","get_or_cr","get_or_default","get_permission_last_us","get_resource_limit","get_scop","get_secondary()","get_secondary_1()","get_secondary_2()","get_secondary_3()","get_secondary_4()","get_secondary_5()","get_self","get_symbol","git","give","given","global","gnu","go","goe","good","greater","group","guid","h","h)","ha","ha,","handler","handler,","handler.","hard","has_auth","has_valu","hash","hash\"","hash\");","hash)","hash,","hash.","hash;","hashes.","have","hb","hb)","header","heap_end","heap_end)","hello","hello.cpp","hello.wasm","help","helper","henc","here","heurist","hexidecim","hi","hi,","hidden","hierarchi","high","highest","him.\");","hint","hold","host","hour","hous","html","https://github.com/eosio/eosio.cdt","https://github.com/eosio/eosio.cdt/releases/download/v1.4.0/eosio.cdt","i)","i,","i.","i.e.","i=","id","id)","id,","ideal","identifi","idx,","ignor","ignore)","ignore,","ignore.hpp","ignore:","ignore<","ignore_wrapp","ignore_wrapper(some_value)","ignore_wrapper:","ignore_wrapper::ignore_wrapp","ignore_wrapper::oper","ignored_wrapp","ignored_wrapper'","implement","implicit","implicitli","implicitly)","import","important!","in.","in/","in/eosio.cdt","in/eosio.cdt/","in/eosio.cdt/librari","in/eosio.cdt/libraries/","in/eosio.cdt/libraries/eosiolib","in/eosio.cdt/libraries/eosiolib/","in/eosio.cdt/libraries/eosiolib/action.h","in/eosio.cdt/libraries/eosiolib/action.hpp","in/eosio.cdt/libraries/eosiolib/asset.hpp","in/eosio.cdt/libraries/eosiolib/binary\\_extension.hpp","in/eosio.cdt/libraries/eosiolib/chain.h","in/eosio.cdt/libraries/eosiolib/compiler\\_builtins.h","in/eosio.cdt/libraries/eosiolib/contract.hpp","in/eosio.cdt/libraries/eosiolib/crypto.cpp","in/eosio.cdt/libraries/eosiolib/crypto.h","in/eosio.cdt/libraries/eosiolib/crypto.hpp","in/eosio.cdt/libraries/eosiolib/datastream.hpp","in/eosio.cdt/libraries/eosiolib/db.h","in/eosio.cdt/libraries/eosiolib/dispatcher.hpp","in/eosio.cdt/libraries/eosiolib/eosio.hpp","in/eosio.cdt/libraries/eosiolib/eosiolib.cpp","in/eosio.cdt/libraries/eosiolib/fixed\\_bytes.hpp","in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp","in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp","in/eosio.cdt/libraries/eosiolib/ignore.hpp","in/eosio.cdt/libraries/eosiolib/memory.h","in/eosio.cdt/libraries/eosiolib/memory.hpp","in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp","in/eosio.cdt/libraries/eosiolib/name.hpp","in/eosio.cdt/libraries/eosiolib/permission.h","in/eosio.cdt/libraries/eosiolib/permission.hpp","in/eosio.cdt/libraries/eosiolib/print.h","in/eosio.cdt/libraries/eosiolib/print.hpp","in/eosio.cdt/libraries/eosiolib/privileged.h","in/eosio.cdt/libraries/eosiolib/privileged.hpp","in/eosio.cdt/libraries/eosiolib/producer\\_schedule.hpp","in/eosio.cdt/libraries/eosiolib/public\\_key.hpp","in/eosio.cdt/libraries/eosiolib/reflect.hpp","in/eosio.cdt/libraries/eosiolib/serialize.hpp","in/eosio.cdt/libraries/eosiolib/singleton.hpp","in/eosio.cdt/libraries/eosiolib/stdlib.hpp","in/eosio.cdt/libraries/eosiolib/symbol.hpp","in/eosio.cdt/libraries/eosiolib/system.h","in/eosio.cdt/libraries/eosiolib/time.hpp","in/eosio.cdt/libraries/eosiolib/transaction.h","in/eosio.cdt/libraries/eosiolib/transaction.hpp","in/eosio.cdt/libraries/eosiolib/types.h","in/eosio.cdt/libraries/eosiolib/varint.hpp","inabl","incident","incidentals.","includ","include=","included.","inclus","incom","incomplete.","incorrect","increas","increment","incrementing,","indepth","indeterministic,","index","index)","index,","index.","index;","index_nam","index_numb","index_table_nam","indexed_bi","indexnam","indic","indices.","indices_typ","inequ","inflight","inform","inherit","init","init_s","inita","initc","initi","inlin","inline_action_send","inline_action_sender2","inline_action_sender2;","inline_action_sender3","inline_action_sender3;","inline_action_sender;","inline_dispatch","inline_dispatcher<","input","insid","inspect","instal","instanc","instances.","instanti","instead","instead,","instead.","int","int)","int.","int128","int128_t","int128_t,","int128_t.","int32_t","int32_t.","int64\\_t","int64_max)","int64_t","int64_t.","int_part","intc","integ","integer.","integers)","integers.","intend","intent","interact","interfac","intern","interpret","interv","intrins","intrinsics.","introduc","introduct","invalid","invalid.","invert","iostream","iostream&","iostream.","irreversible,","irrreversible.","is_account","is_alloc","is_amount_within_rang","is_capacity_remain","is_enum","is_in_heap","is_init","is_point","is_primit","is_priv","is_priv)","is_privileg","is_reflect","is_sam","is_same<","is_valid","is_valid,","issu","issues.","isysroot=","it'","it.","item","item_ptr","iter","iterator\");","iterator)","iterator,","iterator.","iterator_to","itr","itr)","itr++;","itr,","itr_prev","itself.","json,","k","k1","key","key\"","key\")","key,","key.","key256","key256.","key;","keys)","keys,","knowledg","kong\";","l","l,","l=","la","la,","lambda","languag","large_int(","large_int(87654323456);","last","last_name;","later","lb","lb,","ld","ld)","learn","left","left.","len","len)","len==0","length","length)","length,","length;","less","letters,","level","level)","levels.","lexicograph","lexicographically.","lh","lhs,","libc","libcxx","librari","libraries/","library.","licens","lifetim","like","limit","line","link","linker)","linux","list","liter","lld.","llvm","llvm,","lo","lo,","load_object_by_primary_iter","locat","location.","lock","log/print","logic","long","long,","longer","look","lookup","low","lower","lower_bound","lowerbound","lowercas","lowest","lto","lui","m","m)","mac","macro","macro,","macro.","made","main","make","make_traits_for_arithmetic_secondary_key","make_traits_for_arithmetic_secondary_key;","malloc","malloc(),","malloc_from_fre","mallocnamespac","manag","mani","manual","manually.","map","map.","mark","mark_alloc","mark_fre","match","match\");","match.\");","mathemat","max","max_amount","max_amountmaximum","max_authority_depth","max_authority_depthmaximum","max_block_cpu_usag","max_block_net_usag","max_cpu_usage_m","max_cpu_usage_msnumb","max_inline_action_depth","max_inline_action_depthmaximum","max_inline_action_s","max_inline_action_sizemaximum","max_net_usage_word","max_stack_buffer_s","max_transaction_cpu_usag","max_transaction_delay","max_transaction_lifetim","max_transaction_lifetimemaximum","max_transaction_net_usag","maximum","mean","meant","mechan","mem_heap,","member","member:","memori","memory,","memory.","memory.h","memory.hpp","memory.hpp::calloc","memory.hpp::fre","memory.hpp::malloc","memory.hpp::realloc","memory.hpp::sbrk","memory_heap","memory_manag","memory_manager::_active_free_heap","memory_manager::_active_heap","memory_manager::_alloc_memory_mask","memory_manager::_available_heap","memory_manager::_heaps_actual_s","memory_manager::_heaps_s","memory_manager::_initial_heap","memory_manager::_initial_heap_s","memory_manager::_mem_block","memory_manager::_rem_mem_block_mask","memory_manager::_size_mark","memory_manager::adjust_to_mem_block","memory_manager::memori","memory_manager::memory::_heap","memory_manager::memory::_heap_s","memory_manager::memory::_offset","memory_manager::memory::buffer_ptr","memory_manager::memory::buffer_ptr::_heap_end","memory_manager::memory::buffer_ptr::_ptr","memory_manager::memory::buffer_ptr::_s","memory_manager::memory::buffer_ptr::buffer_ptr","memory_manager::memory::buffer_ptr::is_alloc","memory_manager::memory::buffer_ptr::mark_alloc","memory_manager::memory::buffer_ptr::mark_fre","memory_manager::memory::buffer_ptr::merge_contigu","memory_manager::memory::buffer_ptr::merge_contiguous_if_avail","memory_manager::memory::buffer_ptr::next_ptr","memory_manager::memory::buffer_ptr::ptr","memory_manager::memory::buffer_ptr::s","memory_manager::memory::cleanup_remain","memory_manager::memory::expand_memori","memory_manager::memory::fre","memory_manager::memory::init","memory_manager::memory::is_capacity_remain","memory_manager::memory::is_in_heap","memory_manager::memory::is_init","memory_manager::memory::malloc","memory_manager::memory::malloc_from_fre","memory_manager::memory::memori","memory_manager::memory::realloc_in_plac","memory_manager::memory_manag","memory_manager::next_active_heap","memory_manager::realloc","memory_manager::void","memoryapi","memoryapi::calloc","memoryapi::fre","memoryapi::malloc","memoryapi::realloc","memorycppapi","memorycppapi::calloc","memorycppapi::fre","memorycppapi::malloc","memorycppapi::realloc","mention","merg","merge_contigu","merge_contiguous_if_avail","messag","message.","messages.","meta","method","method.","microsecond","microseconds()","microseconds())","microseconds::_count","microseconds::count","microseconds::microsecond","microseconds::oper","microseconds::operator!=","microseconds::to_second","millisecond","min","min_transaction_cpu_usag","minim","minu","minuend","minut","mit","mkdir","mode","mode.","modifi","modified\");","modul","modular","modules:","modulu","more","more)","more...","move","msg","msg)","msg,","msg_len","msg_len)","msgsize","multi","multi_index","multi_index*","multi_index.hpp","multi_index::_cod","multi_index::_indic","multi_index::_items_vector","multi_index::_next_primary_key","multi_index::_scop","multi_index::available_primary_key","multi_index::const_iter","multi_index::emplac","multi_index::get_index","multi_index::index","multi_index::index::_multidx","multi_index::index::begin","multi_index::index::cbegin","multi_index::index::cend","multi_index::index::const","multi_index::index::const_iter","multi_index::index::const_iterator::_idx","multi_index::index::const_iterator::const_iter","multi_index::index::const_iterator::oper","multi_index::index::crbegin","multi_index::index::crend","multi_index::index::end","multi_index::index::eras","multi_index::index::extract_secondary_key","multi_index::index::find","multi_index::index::get_cod","multi_index::index::get_scop","multi_index::index::index","multi_index::index::numb","multi_index::index::validate_index_nam","multi_index::indices_typ","multi_index::intc","multi_index::intc::","multi_index::intc::oper","multi_index::item","multi_index::item::__idx","multi_index::item::__it","multi_index::item::__primary_itr","multi_index::item::item","multi_index::item_ptr","multi_index::item_ptr::_item","multi_index::item_ptr::_primary_itr","multi_index::item_ptr::_primary_key","multi_index::item_ptr::item_ptr","multi_index::iterator_to","multi_index::load_object_by_primary_iter","multi_index::lower_bound","multi_index::max_stack_buffer_s","multi_index::modifi","multi_index::multi_index","multi_index::next_primary_key_tag","multi_index::rbegin","multi_index::rend","multi_index::require_find","multi_index::transform_indic","multi_index::upper_bound","multi_index::validate_table_nam","multi_index;","multiindex","multipl","multipli","myaction()","mycontract(nam","mycontract,","mycontract:","n","n(foo)","n)","n,","n;","name","name(\"brendan\"),","name(\"dan\"),","name(\"foo\").","name)","name,","name.","name.hpp","name.hpp::operator\"\"_n","name::char_to_valu","name::nam","name::oper","name::raw","name::suffix","namenam","names.","namespac","name{\"foo\"}","nan","nan,","nativ","navig","nearest","necessary)","need","needed_s","needed_size)","neg","negative).","net","net_usage_leeway","net_weight","net_weight,","never","new","newest","newli","next","next_active_heap","next_primary_key_tag","next_ptr","non","normal","note","note:","notes:","noth","notifi","notified.","notify_account","notify_account)","notify_account,","now","null","num","num)","num_byt","num_bytes)","num_word","num_words()","num_words()>","number","number,","number.","number:","o","o3)","o=","obispo\",","obispo\";","obj","obj)","obj,","objdump","object","object'","object).","object,","object.","object\\_typ","object_typ","occur","occur.","odd","of:","offset","offset)","old","omitted)","on","onc","once.","one.","one.\");","onerror","onerror::from_current_act","onerror::sender_id","onerror::sent_trx","onerror::unpack_sent_trx","op","opaqu","oper","operator!=","operator!=comparison","operator!=equ","operator!=inequ","operator\"\"_n","operator()","operator+","operator++","operator+=","operator+=addit","operator+addit","operator,","operator.","operator/","operator/=","operator/divis","operator<","operator<<","operator<=","operator=","operator==","operator==check","operator==compar","operator==comparison","operator==equ","operator==equival","operator>","operator>=","operator>=comparison","operator>=great","operator>>","operator>great","operatorcompar","operatorcomparison","operatorless","operatorseri","opt","opt)","opt=","optim","option","optional.","options:","order","order,","orig_ptr_s","orig_ptr_size)","origin","os","other)","otherwis","ouput:","out","out,","outpu","output","output.","output:","output=","output=hello.abi","output=test.abi.","outsid","over","over,","overflow","overflows.","overhead","overhead.","overload","overview:","overwrit","own","owner","owner;","p","p)","p=","pack","pack(...)","pack_siz","packag","packages,","packages.","pad","padded_byt","param","paramet","parameter.","parameteris","parameters).","parameters,","parameters.","parameters:","params)","parent","pars","part","pass","past","path","paths.","pattern","pay","payer","payer)","payer,","payload","payload.","pend","perfect","perform","perm","perm)","perm,","permiss","permission)","permission,","permission.","permission.h","permission.h::check_permission_author","permission.h::check_transaction_author","permission.h::get_account_creation_tim","permission.h::get_permission_last_us","permission.hpp","permission_level","permission_level::actor","permission_level::permiss","permission_level::permission_level","permission_level[]","permission_nam","permissionnam","permissions,","permissions.","perms)","perms,","perms_data","perms_data,","perms_siz","perms_size)","perms_size,","piec","pitr","pitr)","pk,","pk_valu","place","placehold","platform.","pleas","plenti","po","point","point128","point32","point64","pointer","pointer)","pointer.","pointers/refer","polici","polymorph","popul","posit","possibl","possible.","post","potenti","pp","practic","preced","preceed","preceeding.","precis","precision)","precision,","precision.","precondit","precondition,","precondition:","prefer","prefix","prepend","preprocess","preprocess,","preprocessor","pretti","prevent","previou","previous","prim","primari","primarili","primary)","primary,","primary.","primary;","primary_key","primary_key()","primit","print","print(","print()","print(current_time());","print(msgsize);","print(total);","print.h","print.h::print","print.h::printdf","print.h::printhex","print.h::printi","print.h::printi128","print.h::printn","print.h::printqf","print.h::prints_l","print.h::printsf","print.h::printui","print.h::printui128","print.hpp","print_f","print_f(\"numb","printdf","printdf(value);","printf,","printf/","printhex","printi","printi(","printi128","printi128(&large_int);","printi128(&res);","printn","printn(\"abcde\"_n);","printqf","printqf(value);","prints(\"hello","prints_l","prints_l(\"hello","printsf","printsf(value);","printui","printui(1e+18);","printui128","printui128(&large_int);","prior","private.","privileg","privileged.","privileged.h","privileged.h::activate_featur","privileged.h::get_blockchain_parameters_pack","privileged.h::get_resource_limit","privileged.h::is_privileg","privileged.h::set_active_produc","privileged.h::set_blockchain_parameters_pack","privileged.h::set_privileg","privileged.h::set_proposed_produc","privileged.h::set_resource_limit","privileged.hpp","privilegedapi","privilegedapi::get_blockchain_paramet","privilegedapi::set_blockchain_paramet","privilegedcapi","privilegedcapi::activate_featur","privilegedcapi::get_blockchain_parameters_pack","privilegedcapi::get_resource_limit","privilegedcapi::is_privileg","privilegedcapi::set_active_produc","privilegedcapi::set_blockchain_parameters_pack","privilegedcapi::set_privileg","privilegedcapi::set_proposed_produc","privilegedcapi::set_resource_limit","privilegedcppapi","privilegedcppapi::get_blockchain_paramet","privilegedcppapi::set_blockchain_paramet","proceed","proceeding.","process","processing.","produc","produce_key","producer.","producer\\_data","producer\\_data\\_s","producer_data","producer_data,","producer_data_s","producer_data_size)","producer_key","producer_key::block_signing_key","producer_key::producer_nam","producer_nam","producer_namenam","producer_schedul","producer_schedule.hpp","producer_schedule::produc","producer_schedule::vers","producers,","producers.","producers[21];","producerslist","producertyp","producertype::oper","product.","program","project","project(test_exampl","promot","proper","properli","properly\");","properti","property.","proportion","propos","protect","protector","provid","provided)","provided_delay_u","provided_key","provided_keys,","provided_permiss","provided_permissions,","ptr","ptr)","ptr,","pub","pub,","pub;","pubkey","pubkey)","pubkeys_data","pubkeys_data,","pubkeys_s","pubkeys_size,","publen","publen)","publen;","public","public:","public_key","public_key.","public_key.hpp","publication_tim","publickeytyp","published.","pure","purpos","put","q","q,","qr","qr)","quadrupl","qualif","quantiti","queri","quit","r","r(act::*)(args...)","r)","r1","ram","ram_byt","ram_bytes,","rang","ranlib","raw","raw)","raw.","rawng","rbegin","re","read","read,","read/skip","read/skipped.","read_action(buffer,","read_action_data","read_transact","readelf","readme.","realiti","realloc","realloc()","realloc_in_plac","reallocrealloc","reason","receiv","receiver)","receiver,","reclaimed.","recommend","record","record\");","record,","recov","recover_key","recoveri","recurs","redefin","reduc","ref_block_num","ref_block_prefix","refer","referenc","reflect","reflect.hpp","reflection.","reflector","refund","region","rel","relat","relax","releas","release.","release.)","releases.","remain","remaining_account","remaining_accounts)","remov","removed,","renam","rend","replac","replace_exist","replacement.","report","repreresent","repres","represent","request","requir","require_auth","require_auth(\"inita\"_n);","require_auth(\"initb\"_n);","require_auth2","require_find","require_read_lock.","require_recipi","require_recipient(\"account1\"_n,","require_recipient(\"initc\"_n);","require_write_lock","required.","res,","reserv","reset","resid","resolut","resolv","resourc","respectively,","rest","rest)","restrict","result","result_typ","ret","ret,","retriev","return","return.","returns:","reus","revers","rh","rhs)","rhs_val,","ricardian","right","ripemd160","ripemd160.","ripemod160","ripemod160(","root","round","row","row)","rpm","rule","run","s","s(4,sys)","s)","s,","s.","safe","safeti","safety.","same","same)","same_pay","satisfied)","satisfied,","sbrk","sc,","schedul","schedule,","schedule.","scope","scope)","scope);","scope,","scope_nam","scratch)","script","search","search.","sec_since_epoch","second","second)","secondari","secondary)","secondary,","secondary;","secondary_1;","secondary_2;","secondary_3;","secondary_4;","secondary_5;","secondary_extractor_typ","secondary_index_db_funct","secondary_key_trait","secondary_key_traits<","secondary_key_typ","seconds)","section","section.)","see","seekp","self):contract(self)","self,","send","send_context_fre","send_context_free_inlin","send_def","send_inlin","send_inline_act","send_inline_action;","send_inline_actionsend","sender","sender_id","sender_id)","sender_id,","sent_trx","sequenc","sequenti","serial","serializ","serialization/.","serialize.hpp","serializea","serializecpp","serialized,","serialized\\_act","serialized_act","serialized_action,","serialized_transact","serialized_transaction,","serialuz","set","set,","set.","set_active_produc","set_amount","set_blockchain_paramet","set_blockchain_parameters_pack","set_from_word_sequ","set_privileg","set_proposed_produc","set_resource_limit","set_time_point","sha1","sha1(","sha1.","sha256","sha256(","sha256.","sha512","sha512(","sha512.","shift","shift)","shift.","shortcut","show","show_precis","sig","sig)","sig,","sig;","siglen","siglen,","siglen;","sign","signatur","signature,","signature.","signature::data","signature::typ","signaturetyp","signed_int","signed_int)","signed_int,","signed_int::oper","signed_int::operator!=","signed_int::operator++","signed_int::operator=","signed_int::operator==","signed_int::operator>=","signed_int::signed_int","signed_int::value;","signed_transaction.context_free_data[index].","similar","simpl","simpli","simul","singl","singleton","singleton.hpp","singleton::_t","singleton::exist","singleton::get","singleton::get_or_cr","singleton::get_or_default","singleton::pk_valu","singleton::remov","singleton::row","singleton::row::primary_key","singleton::set","singleton::singleton","singletonnam","size","size)","size,","size.","size==0","size_t","sizeof(capi_name)*21);","skip","skip(","slot","slots.","smaller","smart","smash","snprintf","some_typ","someth","sort","soruc","sourc","space","special","specif","specifi","specified.","specifier)","split","sprintf,","ss,","sstream","st;","stack","standard","start","start,","state.","state;","statement.","static","static_cast(indexname)","static_cast(indexname),","static_cast(std::numeric_limits::max())","static_cast(std::numeric_limits::max()))","static_cast(tablename),","statu","std::aligned_storage::typ","std::array","std::array.","std::arrayword_t,","std::cout","std::decay::typ","std::false_typ","std::in_place_t","std::iter","std::map","std::option","std::out","std::pair","std::pair.","std::reference_wrapp","std::remove_reference::typ","std::reverse_iter","std::reverse_iteratorconst_iter","std::set","std::set()","std::set(),","std::set.","std::setpermission_level","std::setpublic_key","std::string","std::string_view","std::string_view.","std::to_str","std::tupl","std::unique_ptr","std::variant","std::variant.","std::vector","std::vectoract","std::vectoreosio::permission_level","std::vectorextens","std::vectorpermission_level","std::vectorproducer_key","std;","std=","stdlib.hpp","step","still","stl","storag","store","str","str)","stream","stream.","street;","strem","strict","strictli","string","string.","string_as_unsigned_64_bit","string_as_unsigned_64_bit);","strong","struct","struct,","struct.","structs,","structs.","structur","structure:","style","style)","sub_words_left","sub_words_left)","sub_words_left,","subsequ","subtract","succe","sudo","suffic","suffix","suitabl","sum","support","suppress","sym","sym)","sym,","sym_cod","sym_code)","symbol","symbol\".","symbol'","symbol(\"sys\",","symbol(symbol_code(\"sys\"),","symbol(symbol_code(\"sys\"),4)","symbol(symbol_code(\"sys\"),4)).","symbol,","symbol.","symbol.hpp","symbol::cod","symbol::precis","symbol::print","symbol::symbol","symbol_cod","symbol_code.","symbol_code::is_valid","symbol_code::length","symbol_code::oper","symbol_code::raw","symbol_code::symbol_cod","symbol_code::to_str","symbol_code::write_as_str","symbol_nam","symbolapi","symbolapi::cod","symbolapi::extended_symbol","symbolapi::get_contract","symbolapi::get_symbol","symbolapi::is_valid","symbolapi::length","symbolapi::oper","symbolapi::operator==","symbolapi::precis","symbolapi::print","symbolapi::raw","symbolapi::symbol","symbolapi::symbol_cod","symbolapi::to_str","symbolapi::write_as_str","symbolcppapi","symbolcppapi::cod","symbolcppapi::extended_symbol","symbolcppapi::get_contract","symbolcppapi::get_symbol","symbolcppapi::is_valid","symbolcppapi::length","symbolcppapi::oper","symbolcppapi::operator==","symbolcppapi::precis","symbolcppapi::print","symbolcppapi::raw","symbolcppapi::symbol","symbolcppapi::symbol_cod","symbolcppapi::to_str","symbolcppapi::write_as_str","symbols.","symbolth","syntax","sysroot.","system","system.h","system.h::current_tim","system.h::eosio_assert","system.h::eosio_assert_cod","system.h::eosio_assert_messag","system.h::eosio_exit","system.h::now","systemapi","systemapi::current_tim","systemapi::eosio_assert","systemapi::eosio_assert_cod","systemapi::eosio_assert_messag","systemapi::eosio_exit","systemapi::now","systemcapi","systemcapi::current_tim","systemcapi::eosio_assert","systemcapi::eosio_assert_cod","systemcapi::eosio_assert_messag","systemcapi::eosio_exit","systemcapi::now","t","t(&)","t()","t())","t)","t,","t.","t;","taba","tabb","tabl","table\");","table'","table(","table)","table,","table.","table1,","table;","table_a;","table_b;","table_nam","tablenam","tables)","tables.","tables.#includ","tag","take","taken","tap","tapo","tapos_block_num","tapos_block_num();","tapos_block_prefix","tapos_block_prefix();","target","target,","target_block_cpu_usage_pct","target_block_net_usage_pct","tbn","tbp","tell","tellp","templat","template,","template_arg","termin","test","test,","test.","test.cpp","test.cpp:","test.wasm","test_contract,","test_contract.abi","test_contract.wasm","testa","testa(","testa,","testact(","testtaba","testtabb","testtabl","testtable_t;","text","them.","therefor","these,","thing","this,","those","three","throw","thu","time","time.","time.hpp","time_point","time_point::elaps","time_point::oper","time_point::operator<","time_point::operator<=","time_point::operator==","time_point::time_point","time_point::time_since_epoch","time_point;","time_point_sec","time_point_sec(now()+60)","time_point_sec(now()+60))","time_point_sec::maximum","time_point_sec::min","time_point_sec::oper","time_point_sec::operator+","time_point_sec::operator+=","time_point_sec::sec_since_epoch","time_point_sec::time_point_sec","time_point_sec::utc_second","time_since_epoch","times.","timestamp","tm","to.","to_act","to_const_char_arr","to_second","to_str","to_time_point","token","tool","tool,","toolchain","toolchain,","toolchain.","toolkit)","total","total_weight_of_all_accounts)","transact","transaction.","transaction.h","transaction.h::cancel_def","transaction.h::expir","transaction.h::get_act","transaction.h::get_context_free_data","transaction.h::read_transact","transaction.h::send_def","transaction.h::tapos_block_num","transaction.h::tapos_block_prefix","transaction.h::transaction_s","transaction.hpp","transaction::act","transaction::context_free_act","transaction::transact","transaction::transaction_extens","transaction_extens","transaction_head","transaction_header::delay_sec","transaction_header::expir","transaction_header::max_cpu_usage_m","transaction_header::max_net_usage_word","transaction_header::ref_block_num","transaction_header::ref_block_prefix","transaction_header::transaction_head","transaction_id_typ","transaction_s","transactionapi","transactionapi::get_act","transactioncapi","transactioncapi::cancel_def","transactioncapi::expir","transactioncapi::get_act","transactioncapi::get_context_free_data","transactioncapi::read_transact","transactioncapi::send_def","transactioncapi::tapos_block_num","transactioncapi::tapos_block_prefix","transactioncapi::transaction_s","transactioncppapi","transactioncppapi::get_act","transactions.","transacton","transacton.","transform_indic","treat","tri","true","true)","true,","truncat","truncated.","trx","trx,","trx_data","trx_data,","trx_size","trx_size,","ts","tunabl","tupl","tuple.","twelv","two","two.\");","type","type,","type.","type:","type_check","typedef","typedef:","typedefs.","typedefs:","types,","types.","types.h","types.h::align","types/funct","typetyp","u","u=","uint128\\_t","uint128_t","uint16_t","uint256_t","uint32_t","uint64\\_t","uint64_t","uint64_t).","uint64_t,","uint64_t.","uint64_t:","uint64_t;","uint8_t","unari","undefin","under","understand","undetermenist","unequ","uninstal","union","uniqu","unit","unit32","unit64","unix","unlik","unpack","unpack_action_data","unpack_action_data();","unpack_sent_trx","unreach","unsign","unsigned_128_bit_int","unsigned_128_bit_int,","unsigned_64_bit_int","unsigned_64_bit_int,","unsigned_int","unsigned_int&","unsigned_int)","unsigned_int::oper","unsigned_int::operator!=","unsigned_int::operator=","unsigned_int::operator==","unsigned_int::operator>=","unsigned_int::unsigned_int","unsigned_int::valu","unsigned_int::value;","unsuccessful,","untouch","unwind","unwrap","unwrap<","up","updat","updated.","updated;","updater)","upper","upper_bound","upperbound","us","usag","usage.","usage:","use.","used,","used.","user","utc_second","v","v)","v,","v1.3.1).","v1.4.0","val","val)","val,","valid","valid,","valid.","validate_index_nam","validate_table_nam","validity.","valu","value)","value,","value.","value[50];","value_or","value_typ","valuecontain","values.","valuevalu","valvalu","var","var)","var,","variabl","variad","variant_action_wrapp","variant_action_wrapper::action_nam","variant_action_wrapper::code_nam","variant_action_wrapper::get_mem_ptr","variant_action_wrapper::permiss","variant_action_wrapper::send","variant_action_wrapper::send_context_fre","variant_action_wrapper::to_act","variant_action_wrapper::variant_action_wrapp","variants.","varint","varint.hpp","varint32","variou","varuint32","vector","vector.","vein","verbos","verifi","version","versionvers","vi","via","violat","virtual","vlq","void","void(t::*)(args...)","void(t::*)(args...),","void*","void.","vtabl","vulner","w","w=","want","warn","wasm","wasm,","wasm2wast","wast2wasm","way","way\";","webassembl","weight_typ","wget","whether","whose","wildcard)","within","without","word","word_t","word_t.","work","work.","world!","world!\");","world!\",","world!\";","world!100000000000000000087654323456abcd","world,","wrap","wrap_secondary_array_typ","wrap_secondary_array_type;","wrap_secondary_simple_typ","wrap_secondary_simple_type;","wraper","wrapper","write","write(","write_as_str","writer","writer.","writing,","written","written.","x","x)","x86_64","yum","z,","zag","zero","zig","zip","zip;","zip_index","zip_index.end(),","zip_index.find(zipnumb);","zip_index.lower_bound(zipnumb);","zip_index.upper_bound(zipnumb);","zipnumb","{","{}","|","|bool|has_auth","|bool|is_account","|bool|is_privileg","|capi_name|current_receiv","|double|__trunctfdf2","|float|__trunctfsf2","|int32_t|__fixtfsi","|int32_t|check_permission_author","|int32_t|check_transaction_author","|int32_t|db_end_i64","|int32_t|db_find_i64","|int32_t|db_get_i64","|int32_t|db_idx128_end","|int32_t|db_idx128_find_primari","|int32_t|db_idx128_find_secondari","|int32_t|db_idx128_lowerbound","|int32_t|db_idx128_next","|int32_t|db_idx128_previ","|int32_t|db_idx128_stor","|int32_t|db_idx128_upperbound","|int32_t|db_idx256_end","|int32_t|db_idx256_find_primari","|int32_t|db_idx256_find_secondari","|int32_t|db_idx256_lowerbound","|int32_t|db_idx256_next","|int32_t|db_idx256_previ","|int32_t|db_idx256_stor","|int32_t|db_idx256_upperbound","|int32_t|db_idx64_end","|int32_t|db_idx64_find_primari","|int32_t|db_idx64_find_secondari","|int32_t|db_idx64_lowerbound","|int32_t|db_idx64_next","|int32_t|db_idx64_previ","|int32_t|db_idx64_stor","|int32_t|db_idx64_upperbound","|int32_t|db_idx_double_end","|int32_t|db_idx_double_find_primari","|int32_t|db_idx_double_find_secondari","|int32_t|db_idx_double_lowerbound","|int32_t|db_idx_double_next","|int32_t|db_idx_double_previ","|int32_t|db_idx_double_stor","|int32_t|db_idx_double_upperbound","|int32_t|db_idx_long_double_end","|int32_t|db_idx_long_double_find_primari","|int32_t|db_idx_long_double_find_secondari","|int32_t|db_idx_long_double_lowerbound","|int32_t|db_idx_long_double_next","|int32_t|db_idx_long_double_previ","|int32_t|db_idx_long_double_stor","|int32_t|db_idx_long_double_upperbound","|int32_t|db_lowerbound_i64","|int32_t|db_next_i64","|int32_t|db_previous_i64","|int32_t|db_store_i64","|int32_t|db_upperbound_i64","|int64_t|__fixtfdi","|int64_t|get_account_creation_tim","|int64_t|get_permission_last_us","|int64_t|set_proposed_produc","|int|__cmptf2","|int|__eqtf2","|int|__getf2","|int|__gttf2","|int|__letf2","|int|__lttf2","|int|__netf2","|int|__unordtf2","|int|cancel_def","|int|get_act","|int|get_context_free_data","|int|recover_key","|int|tapos_block_num","|int|tapos_block_prefix","|size_t|read_transact","|size_t|transaction_s","|type|name|","|uint32_t|__fixunstfsi","|uint32_t|action_data_s","|uint32_t|expir","|uint32_t|get_active_produc","|uint32_t|get_blockchain_parameters_pack","|uint32_t|now","|uint32_t|read_action_data","|uint64_t|__fixunstfdi","|uint64_t|current_tim","|uint64_t|publication_tim","|void","|void|__addtf3","|void|__ashlti3","|void|__ashrti3","|void|__break_point","|void|__divtf3","|void|__divti3","|void|__extenddftf2","|void|__extendsftf2","|void|__lshlti3","|void|__lshrti3","|void|__modti3","|void|__multf3","|void|__multi3","|void|__subtf3","|void|__udivti3","|void|__umodti3","|void|activate_featur","|void|assert_recover_key","|void|assert_ripemd160","|void|assert_sha1","|void|assert_sha256","|void|assert_sha512","|void|db_idx128_remov","|void|db_idx128_upd","|void|db_idx256_remov","|void|db_idx256_upd","|void|db_idx64_remov","|void|db_idx64_upd","|void|db_idx_double_remov","|void|db_idx_double_upd","|void|db_idx_long_double_remov","|void|db_idx_long_double_upd","|void|db_remove_i64","|void|db_update_i64","|void|eosio_assert","|void|eosio_assert_cod","|void|eosio_assert_messag","|void|eosio_exit","|void|fre","|void|get_resource_limit","|void|print","|void|printdf","|void|printhex","|void|printi","|void|printi128","|void|printn","|void|printqf","|void|prints_l","|void|printsf","|void|printui","|void|printui128","|void|require_auth","|void|require_auth2","|void|require_recipi","|void|ripemd160","|void|send_context_free_inlin","|void|send_def","|void|send_inlin","|void|set_active_produc","|void|set_blockchain_parameters_pack","|void|set_privileg","|void|set_resource_limit","|void|sha1","|void|sha256","|void|sha512","}","});","};","}],","~","~binary_extens"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"EOSIO.CDT (Contract Development Toolkit)\nVersion : 1.4.0\nEOSIO.CDT is a toolchain for WebAssembly (WASM) and set of tools to facilitate contract writing for the EOSIO platform.  In addition to being a general purpose WebAssembly toolchain, EOSIO specific optimizations are available to support building EOSIO smart contracts.  This new toolchain is built around Clang 7, which means that EOSIO.CDT has the most currently available optimizations and analyses from LLVM, but as the WASM target is still considered experimental, some optimizations are not available or incomplete.\nImportant!\nEOSIO.CDT Version 1.3.x introduced quite a few breaking changes.  To have binary releases we needed to remove the concept of a core symbol from EOSIO.CDT. This meant drastic changes to symbol, asset and other types/functions that were connected to them. Since these changes would be disruptive, we decided to add as many disruptive changes needed for future contract writing, so that disruption should only occur once. Please read the Differences between Version 1.2.x and Version 1.3.x section of this readme.\nBinary Releases\nEOSIO.CDT currently supports Mac OS X brew, Linux x86_64 Debian packages, and Linux x86_64 RPM packages.\nIf you have previously installed EOSIO.CDT, please run the uninstall script (it is in the directory where you cloned EOSIO.CDT) before downloading and using the binary releases.\nMac OS X Brew Install\n$ brew tap eosio/eosio.cdt\n$ brew install eosio.cdt\n\nMac OS X Brew Uninstall\n$ brew remove eosio.cdt\n\nDebian Package Install\n$ wget https://github.com/eosio/eosio.cdt/releases/download/v1.4.0/eosio.cdt-1.4.0.x86_64.deb\n$ sudo apt install ./eosio.cdt-1.4.0.x86_64.deb\n\nDebian Package Uninstall\n$ sudo apt remove eosio.cdt\n\nRPM Package Install\n$ wget https://github.com/eosio/eosio.cdt/releases/download/v1.4.0/eosio.cdt-1.4.0.x86_64-0.x86_64.rpm\n$ sudo yum install ./eosio.cdt-1.4.0.x86_64-0.x86_64.rpm\n\nRPM Package Uninstall\n$ sudo yum remove eosio.cdt\n\nGuided Installation (Building from Scratch)\n$ git clone --recursive https://github.com/eosio/eosio.cdt\n$ cd eosio.cdt\n$ ./build.sh\n$ sudo ./install.sh\n\nBuilding your first smart contract\n\nNavigate to the hello folder in examples (./examples/hello).\nYou should then see the hello.cpp file\nNow run the compiler$ eosio-cpp -abigen hello.cpp -o hello.wasm\n\n\nOr with CMake$ mkdir build\n$ cd build\n$ cmake ..\n$ make\n\nThis will generate two files:\nThe compiled binary wasm (hello.wasm)\nThe generated ABI file (hello.abi)\n\nusing eosio-abigen alone\nTo generate an ABI with eosio-abigen, only requires that you give the main '.cpp' file to compile and the output filename --output and generating against the contract name --contract.\nExample:\n$ eosio-abigen hello.cpp --contract=hello --output=hello.abi\n\nThis will generate one file:\n\nThe generated ABI file (hello.abi)\n\nDifferences between Version 1.2.x and Version 1.3.x\neosiolib C API\n\nRemoved the following typedefs to uint64_t:\naccount_name\npermission_name\nscope_name\ntable_name\naction_name\n\n\nAdded a uint64_t typedef called capi_name to replace the removed typedefs above:\nThese have been replaced by capi_name and as a practice should not be used when writing C++ contract code. Instead, the new version of the eosio::name type from the eosiolib C++ API should be used to replace these instances. This decision was made because of bad implicit casting issues with uint64_t and the new pattern should allow for better type safety.\n\n\nRemoved symbol_name typedef:\nThis has no C equivalent to replace it. When writing C++ contract code, the eosio::symbol_code struct should be used instead. As with the previously mentioned named types, this was removed and replaced with eosio::symbol_code to allow for better type safety in contracts.  To use a symbol, i.e. symbol name and precision, use the eosio::symbol class.\n\n\nRemoved time and weight_type typedefs.\nRemoved the transaction_id_type and block_id_type typedefs.\nRemoved the account_permission struct.\nRenamed the following typedefs:\nchecksum160 -> capi_checksum160\nchecksum256 -> capi_checksum256\nchecksum512 -> capi_checksum512\npublic_key  -> capi_public_key\nsignature   -> capi_signature\n\n\nRemoved the non-existent intrinsics declarations require_write_lock and require_read_lock.\n\neosiolib C++ API\n\nRemoved eosiolib/vector.hpp:\nRemoved alias eosio::vector and typedef bytes.\nGoing forward contract writers should include  from the STL and use std::vector instead of bytes.\n\n\nRemoved eosiolib/types.hpp.\nRemoved eosiolib/optional.hpp. Use std::optional as a replacement.\nRemoved eosiolib/core_symbol.hpp. The contract writer should explicitly specify the symbol.\nAdded eosiolib/name.hpp.\n\neosiolib/types.hpp\n\nMoved the typedef eosio::extensions_types to eosiolib/transaction.hpp.\nRemoved comparison functions for checksum structs.\nRemoval of eosio::char_to_symbol, eosio::string_to_name, eosio::name_suffix functions\nRemoval of the N macro. The \"\"_n operator or the name constructor should be used as a type safe replacement. Example: N(foo) -> \"foo\"_n, or N(foo) -> name(\"foo\").\nMoved eosio::name struct definition and \"\"_n operator to eosiolib/name.hpp.\n\neosiolib/name.hpp\n\nRemoved implicit and explicit conversions to uint64_t.\nAdded enum class eosio::name::raw which is implicitly converted from an eosio::name (used for template non-type parameters).\nAdded bool conversion operator for conditionally testing if a name is empty.\nAll constructors are now constexpr. These take either a uint64_t, an eosio::name::raw or a std::string_view.\nAdded constexpr methods eosio::name::length and eosio::name::suffix.\nAdded equivalence, inverted equivalence and less than operators to eosio::name.\n\neosiolib/symbol.hpp\n\nRemoved eosio::symbol_type struct and replaced with eosio::symbol class.\nAdded struct eosio::symbol_code:\nAdded two constexpr constructors that take either a raw uint64_t or an std::string_view.\nAdded constexpr methods is_valid, length and raw.\nAdded a print method.\nAdded bool conversion operator to test is symbol_code is empty.\n\n\nRemoved eosio::string_to_symbol, eosio::is_valid_symbol, eosio::symbol_name_length functions.\nRemoved the S macro. The symbol constructor should be used as a type safe replacement. Example: S(4,SYS) -> symbol(symbol_code(\"SYS\"), 4) (or simply symbol(\"SYS\", 4) as of v1.3.1).\nAdded struct eosio::symbol:\nAdded three constexpr constructors that take either a raw uint64_t, symbol_code and a uint8_t precision or an std::string_view and a uint8_t precision.\nAdded constexpr methods is_valid, precision, code, and raw. These, respectively, check if the symbol is valid, get the uint8_t precision, get the symbol_code part of the symbol, and get the raw uint64_t representation of symbol.\nAdded equivalence, inverted equivalence and less than operators to eosio::symbol.\n\n\nModified struct eosio::extended_symbol:\nRestricted fields to private.\nAdded constexpr constructor that takes a eosio::symbol and an eosio::name.\nAdded constexpr methods get_symbol and get_contract.\nMade existing comparison operators constexpr.\n\n\n\neosiolib/asset.hpp\n\nThe main constructor now requires a int64_t (quantity) and eosio::symbol explicitly.\nThe default constructor no longer initializes the instance to a valid zero quantity asset with a symbol equivalent to \"core symbol\". Instead the default constructed eosio::asset is a bit representation of all zeros (which will cause is_valid to fail) so that check is bypassed to allow for multi_index and datastream to work.\nOld contracts that use eosio::asset() should be changed to either use the core symbol of the specific chain they are targeting i.e. eosio::asset(0, symbol(symbol_code(\"SYS\"),4)). To reduce writing symbol(symbol_code(\"SYS\"),4) over and over, a constexpr function to return the symbol or constexpr global variable should be used.\n\neosiolib/contract.hpp\n\nThe constructor for eosio::contract now takes an eosio::name for the receiver, an eosio::name for the code, and a eosio::datastream for the datastream used for the contract.  The last argument is for manually unpacking an action, see the section on eosio::ignore for a more indepth usage.\n\neosiolib/dispatcher.hpp\n\nRenamed the macro EOSIO_ABI to EOSIO_DISPATCH as this is more descriptive of what this macro actually does.\nModified the definition of EOSIO_DISPATCH to work with the new constructor for eosio::contract.\n\neosiolib/multi_index.hpp\n\nThe first template parameter for indexed_by now requires the argument be convertible to eosio::name::raw (replacing uint64_t).\nThe first template parameter for multi_index now requires the argument be convertible to eosio::name::raw (replacing uint64_t).\nThe constructor now takes an eosio::name type for the code (replacing uint64_t). Scope is still uint64_t.\nVarious other replacements of uint64_t to eosio::name.\n\neosiolib/singleton.hpp\n\nThe first template parameter for eosio::singleton now requires the argument be convertible to eosio::name::raw (replacing uint64_t).\nThe constructor now takes an eosio::name type for the code.\nIn the methods get_or_create and set, the argument bill_to_account is now of type eosio::name (replacing uint64_t).\n\neosiolib/action.hpp\n\nAdded C++ function eosio::require_auth.\nAdded C++ function eosio::has_auth.\nAdded C++ function eosio::is_account.\nRedefined eosio::permission_level to use eosio::name in place of uint64_t.\nRemoved the macro ACTION. (The identifier ACTION has been reused for another macro described below in the Macros section.)\n\neosiolib/permission.hpp\n\nThe optional provided_keys argument of the function eosio::check_transaction_authorization is now of the type std::set rather than the type std::set. C++ contract code should most likely be using the eosio::public_key struct (defined in \"eosiolib/public_key.hpp\") if they need to deal with EOSIO-compatible public keys rather than the capi_public_key struct (now renamed from its original name of ::public_key) from the eosiolib C API. Note that existing contract code that just referred to the type public_key without namespace qualification may have accidentally been using the capi_public_key struct and therefore should ideally be modified to use the eosio::public_key C++ type.\nThe account and permission arguments of eosio::check_transaction_authorization are both eosio::name now instead of uint64_t.\n\neosiolib/ignore.hpp\n\nAdded new type ignore:\nThis type acts as a placeholder for actions that don't want to deserialize their fields but want the types to be reflected in the ABI.ACTION action(ignore) { some_type st; _ds >> st; }\n\n\n\n\nAdded new type ignore_wrapper:\nThis allows for calling SEND_INLINE_ACTION with ignore_wrapper(some_value) against an action with an ignore of matching types.\n\n\n\nMacros\n\nAdded ACTION macro which is simply a shortcut for [[eosio::action]] void.\nAdded TABLE macro which is simply a shortcut for struct [[eosio::table]].\nAdded CONTRACT macro which is simply a shortcut for class [[eosio::contract]].\n\nCMake\n\nAdded eosio.cdt-config.cmake to allow for find_package(eosio.cdt). See eosio.cdt/examples/hello or eosio.cdt/examples/template for an example.\nAdded new macro add_contract. This new contract takes a contract name, cmake target, then any normal arguments you would give to add_executable. See eosio.cdt/examples/hello or eosio.cdt/examples/template.\nNew version checking mechanism is included. See eosio.contracts/CMakeLists.txt to see this in use.\n\nlibc\n\nReplaced printf, sprintf, and snprintf with new minimal variants. This allows contracts to use these functions without causing stack overflow issues.\n\nlibcxx\n\nRemoved sstream with the intent to return this after more has been done.\nAdded __cxa_pure_virtual to allow for pure virtual methods in contract classes.\nstd::to_string now works without the issues of stack overflows.\n\nattributes\n\nAdded [[eosio::ignore]] attribute to flag a type as being ignored by the deserializer. This attribute is primarily only used for internal use within eosiolib.\nAdded [[eosio::contract]] attribute. This new attribute is used to mark a contract class as \"contract\" with the name being either the C++ name of the class or a user specified name (i.e. [[eosio::contract(\"somecontract\")]]). This attribute can also be used in conjunction with the eosio::action and eosio::table attributes for tables that you would like to define outside of the eosio::contract class.  This is used in conjunction with either the raw eosio-cpp option --contract , -o .wasm or with CMake add_contract.  It acts as a filter enabling contract developers to include a header file with attributes from another contract (e.g. eosio.token) while generating an ABI devoid of those actions and tables.#include \nusing namespace eosio;\nCONTRACT test : public eosio::contract {\npublic:\n   using contract::contract;\n   ACTION acta(){}\n   TABLE taba {\n      uint64_t a;\n      float b;\n      uint64_t primary_key() const { return a; }\n   };\n};\nstruct [[eosio::table, eosio::contract(\"test\")]]\ntabb {\n   uint64_t a;\n   int b;\n};\ntypedef eosio::multi_index table_a;\ntypedef eosio::multi_index table_b;\nEOSIO_DISPATCH( test, (acta) )\n\nThe above code will produce the tables testtaba and testtabb in your ABI. Example: eosio-cpp -abigen test.cpp -o test.wasm will mark this compilation and ABI generation for the eosio::contract test. The same thing can be done with eosio-cpp -abigen test.cpp -o test_contract.wasm --contract test or with the CMake command add_contract( test, test_contract, test.cpp ). Either of the previous two approaches will produce a test_contract.wasm and test_contract.abi generated under the context of the contract name of test.\n\nBoost\n\nBoost is now part of the library. No more external dependence on Boost and all system inclusion are within it's sysroot. (Boost will be removed in a future release.)\n\nABI generator attributes\nUnlike the old ABI generator tool, the new tool uses C++11 or GNU style attributes to mark actions and tables.\n[[eosio::action]]\nThis attribute marks either a struct or a method as an action.\nExample (four ways to declare an action for ABI generation):\n// this is the C++11 and greater style attribute\n[[eosio::action]]\nvoid testa( name n ) {\n   // do something\n}\n\n// this is the GNU style attribute, this can be used in C code and prior to C++ 11\n__attribute__((eosio_action))\nvoid testa( name n ){\n   // do something\n}\n\nstruct [[eosio::action]] testa {\n   name n;\n   EOSLIB_SERIALIZE( testa, (n) )\n};\n\nstruct __attribute__((eosio_action)) testa {\n   name n;\n   EOSLIB_SERIALIZE( testa, (n) )\n};\n\nIf your action name is not a valid EOSIO name you can explicitly specify the name in the attribute c++ [[eosio::action(\"\")]]\nExample (two ways to declare a table for ABI generation):\nstruct [[eosio::table]] testtable {\n   uint64_t owner;\n   /* all other fields */\n};\n\nstruct __attribute__((eosio_table)) testtable {\n   uint64_t owner;\n   /* all other fields */\n};\n\ntypedef eosio::multi_index testtable_t;\n\nIf you don't want to use the multi-index you can explicitly specify the name in the attribute c++ [[eosio::table(\"\")]].\nFor an example contract of ABI generation please see the file ./examples/abigen_test/test.cpp. You can generate the ABI for this file with eosio-abigen test.cpp --output=test.abi.\nFixing an ABI or Writing an ABI Manually\n\nThe sections to the ABI are pretty simple to understand and the syntax is purely JSON, so it is reasonable to write an ABI file manually.\nThe ABI generation will never be completely perfect for every contract written. Advanced features of the newest version of the ABI will require manual construction of the ABI, and odd and advanced C++ patterns could capsize the generators type deductions. So having a good knowledge of how to write an ABI should be an essential piece of knowledge of a smart contract writer.\nPlease refer to developers.eos.io \"How to Write an ABI File\" to learn about the different sections of an ABI.\n\nAdding Ricardian Contracts and Clauses to ABI\n\nAs of EOSIO.CDT v1.4.0 the ABI generator will try to automatically import contracts and clauses into the generated ABI.  There are a few caveats to this, one is a strict naming policy of the files and an HTML tag used to mark each Ricardian contract and each clause.\nThe Ricardian contracts should be housed in a file with the name .contracts.md and the clauses should be in a file named .clauses.md.\nFor each Ricardian contract the header ActionName should be used, as this directs the ABI generator to attach this Ricardian contract to the specified action.\nFor each Ricardian clause the header ClauseID should be used, as this directs the ABI generator to the clause id and the subsequent body.\nThe option -R has been added to eosio-cpp and eosio-abigen to add \"resource\" paths to search from, so you can place these files in any directory structure you like and use -R in the same vein as -I for include paths.\nTo see these in use please see ./examples/hello/hello.contracts.md and ./examples/hello/hello.clauses.md.\n\n\n\nInstalled Tools\n\n\neosio-cpp\neosio-cc\neosio-ld\neosio-abigen\neosio-pp (post processing pass for WASM, automatically runs with eosio-cpp and eosio-ld)\neosio-wasm2wast\neosio-wast2wasm\neosio-ranlib\neosio-ar\neosio-objdump\neosio-readelf\n\nUsage\n\nTo compile an EOSIO smart contract, the preferred method is to use the template CMakeLists.txt in the examples folder.\nFor example:\nIn CMakeLists.txt:\ncmake_minimum_required(VERSION 3.5)\nproject(test_example VERSION 1.0.0)\n\nfind_package(eosio.cdt)\n\nadd_contract( test test test.cpp )\nIn test.cpp:\n#include \nusing namespace eosio;\n\nCONTRACT test : public eosio::contract {\npublic:\n   using contract::contract;\n\n   ACTION testact( name test ) {\n   }\n};\n\nEOSIO_DISPATCH( test, (testact) )\nTo manually compile the source code, use eosio-cpp/eosio-cc and eosio-ld as if it were clang and lld. All the includes and options specific to EOSIO and CDT are baked in.\neosio-cpp\n\nOVERVIEW: eosio-cpp (Eosio C++ -> WebAssembly compiler)\nUSAGE: eosio-cpp [options]  ...\n\nOPTIONS:\n  -C                       - Include comments in preprocessed output\n  -CC                      - Include comments from within macros in preprocessed output\n  -D=              - Define  to  (or 1 if  omitted)\n  -E                       - Only run the preprocessor\n  -I=              - Add directory to include search path\n  -L=              - Add directory to library search path\n  -O=              - Optimization level s, 0-3\n  -S                       - Only run preprocess and compilation steps\n  -U=              - Undefine macro \n  -W=              - Enable the specified warning\n  -c                       - Only run preprocess, compile, and assemble steps\n  -dD                      - Print macro definitions in -E mode in addition to normal output\n  -dI                      - Print include directives in -E mode in addition to normal outpu\n  -dM                      - Print macro definitions in -E mode instead to normal output\n  -emit-ast                - Emit Clang AST files for source inputs\n  -emit-llvm               - Use the LLVM representation for assembler and object files\n  -faligned-allocation     - Enable C++17 aligned allocation functions\n  -fcoroutine-ts           - Enable support for the C++ Coroutines TS\n  -finline-functions       - Inline suitable functions\n  -finline-hint-functions  - Inline functions which are (explicitly or implicitly) marked inline\n  -fmerge-all-constants    - Allow merging of constants\n  -fno-cfl-aa              - Disable CFL Alias Analysis\n  -fno-elide-constructors  - Disable C++ copy constructor elision\n  -fno-lto                 - Disable LTO\n  -fstack-protector        - Enable stack protectors for functions potentially vulnerable to stack smashing\n  -fstack-protector-all    - Force the usage of stack protectors for all functions\n  -fstack-protector-strong - Use a strong heuristic to apply stack protectors to functions\n  -fstrict-enums           - Enable optimizations based on the strict definition of an enum's value range\n  -fstrict-return          - Always treat control flow paths that fall off the end of a non-void function as unreachable\n  -fstrict-vtable-pointers - Enable optimizations based on the strict rules for overwriting polymorphic C++ objects\n  -include=        - Include file before parsing\n  -isysroot=       - Set the system root directory (usually /)\n  -l=              - Root name of library to link\n  -lto-opt=        - LTO Optimization level (O0-O3)\n  -o=              - Write output to \n  -std=            - Language standard to compile for\n  -v                       - Show commands to run and use verbose output\n  -w                       - Suppress all warnings\n\nGeneric Options:\n\n  -help                    - Display available options (-help-hidden for more)\n  -help-list               - Display list of available options (-help-list-hidden for more)\n  -version                 - Display the version of this program\n\neosio-ld\n\nOVERVIEW: eosio-ld (WebAssembly linker)\nUSAGE: eosio-ld [options]  ...\n\nOPTIONS:\n\nGeneric Options:\n\n  -help             - Display available options (-help-hidden for more)\n  -help-list        - Display list of available options (-help-list-hidden for more)\n  -version          - Display the version of this program\n\neosio.ld options:\n\n  -L=       - Add directory to library search path\n  -fno-cfl-aa       - Disable CFL Alias Analysis\n  -fno-lto          - Disable LTO\n  -fno-post-pass    - Don't run post processing pass\n  -fno-stack-first  - Don't set the stack first in memory\n  -l=       - Root name of library to link\n  -lto-opt= - LTO Optimization level (O0-O3)\n  -o=       - Write output to \n\neosio-abigen\n\nUSAGE: eosio-abigen [options]  [... ]\n\nOPTIONS:\n\nGeneric Options:\n\n  -help                      - Display available options (-help-hidden for more)\n  -help-list                 - Display list of available options (-help-list-hidden for more)\n  -version                   - Display the version of this program\n\neosio-abigen:\ngenerates an ABI from C++ project input\n\n  -extra-arg=        - Additional argument to append to the compiler command line\n  -extra-arg-before= - Additional argument to prepend to the compiler command line\n  -output=           - Set the output filename and fullpath\n  -p=                - Build path\n\nLicense\nMIT\n"},"modules.html":{"url":"modules.html","title":"Smart Contract API","keywords":"actionapi actioncapi actioncppapi assetapi assetcppapi chainapi chaincapi cryptocapi cryptocppapi compilerbuiltinsapi consoleapi consolecapi consolecppapi cryptoapi cryptocppapi database databasec databasecpp multiindex singleton dispatcher dispatchercpp fixedpoint memoryapi memorycppapi serialize datastream serializecpp symbolapi symbolcppapi systemapi privilegedapi privilegedcapi privilegedcppapi systemcapi transactionapi transactioncapi transactioncppapi types binary_extension contracttype fixed_bytes fixed_key producertype publickeytype signaturetype varint","body":"Modules\nHere is a list of all modules:\n\nactionapi Defines API for for querying action and sending action. \nactioncapi Defines API for querying action and sending action. \nactioncppapi Defines type-safe C++ wrappers for querying action and sending action. \n\n\nassetapi Defines API for managing assets. \nassetcppapi Defines CPP API for managing assets. \n\n\nchainapi Defines API for querying internal chain state. \nchaincapi Defines C API for querying internal chain state. \ncryptocapi Defines C API for calculating and checking hash. \ncryptocppapi Defines type-safe C++ wrapers for calculating and checking hashes. \n\n\ncompilerbuiltinsapi Declares int128 helper builtins generated by the toolchain. \nconsoleapi Defines APIs to log/print text messages. \nconsolecapi Defnes C API to log/print text messages. \nconsolecppapi Defines C++ wrapper to log/print text messages. \n\n\ncryptoapi Defines API for calculating and checking hash. \ncryptocppapi Defines type-safe C++ wrapers for calculating and checking hashes. \n\n\ndatabase Defines APIs that store and retrieve data on the blockchain. \ndatabasec Defines C APIs for interfacing with the database. \ndatabasecpp Defines an interface to EOSIO database. \nmultiindex Defines EOSIO Multi Index Table. \nsingleton Defines EOSIO Singleton Table. \n\n\n\n\ndispatcher Defines functions to dispatch action to proper action handler inside a contract. \ndispatchercpp Defines C++ functions to dispatch action to proper action handler inside a contract. \n\n\nfixedpoint 32,64,128,256 bits version of fixed point variables \nmemoryapi Defines common memory functions. \nmemorycppapi Defines common memory functions. \n\n\nserialize Defines functions to serialize and deserialize object. \ndatastream Defines data stream for reading and writing data in the form of bytes. \nserializecpp Defines C++ API to serialize and deserialize object. \n\n\nsymbolapi Defines API for managing symbols. \nsymbolcppapi Defines CPP API for managing symbols. \n\n\nsystemapi Defines API for interacting with system level intrinsics. \nprivilegedapi Defines an API for accessing configuration of the chain that can only be done by privileged accounts. \nprivilegedcapi Defines C Privileged API. \nprivilegedcppapi Defines C++ Privileged API. \n\n\nsystemcapi Defines API for interacting with system level intrinsics. \n\n\ntransactionapi Defines API for sending transactions and inline actions. \ntransactioncapi Defines API for sending transactions. \ntransactioncppapi Type-safe C++ wrappers for transaction C API. \n\n\ntypes Specifies builtin types, typedefs and aliases. \nbinary_extension container to hold a binary payload for an extension \ncontracttype Defines contract type which is base class for every EOSIO contract. \nfixed_bytes Fixed size array of bytes sorted lexicographically. \nfixed_key Fixed size key sorted lexicographically for Multi Index Table. \nproducertype Defines producer type. \npublickeytype Specifies public key type. \nsignaturetype Specifies signature type. \nvarint Defines variable length integer type which provides more efficient serialization/. \n\n\n\n"},"group__actionapi.html":{"url":"group__actionapi.html","title":"Actionapi","keywords":"actionapi eosio::permission_level eosio::action unpack_action_data require_recipient require_recipient require_auth require_auth has_auth is_account SEND_INLINE_ACTION","body":"group actionapi\nDefines API for for querying action and sending action. \nModules\n\nAction C API Defines API for querying action and sending action. \nAction C++ API Defines type-safe C++ wrappers for querying action and sending action. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::permission_level\n\n\nstruct\neosio::action\n\n\n\nDefines\nfunction unpack_action_data\nT actionapi::unpack_action_data ()\n\nInterpret the action body as type T. \nThis method unpacks the current action at type T.\nReturns:\nUnpacked action data casted as T.\nExample:\nstruct dummy_action {\n  char a; //1\n  unsigned long long b; //8\n  int  c; //4\n\n  EOSLIB_SERIALIZE( dummy_action, (a)(b)(c) )\n};\ndummy_action msg = unpack_action_data();\n\nfunction require_recipient\nvoid actionapi::require_recipient (\n    name notify_account\n)\n\nAdd the specified account to set of accounts to be notified. \nAdd the specified account to set of accounts to be notified\nParameters:\n\nnotify_account - name of the account to be verified \n\nfunction require_recipient\nvoid actionapi::require_recipient (\n    name notify_account,\n    accounts... remaining_accounts\n)\n\nNotify an account for this action. \nAll of the listed accounts will be added to the set of accounts to be notified\nThis helper method enables you to add multiple accounts to accounts to be notified list with a single call rather than having to call the similar C API multiple times.\nNote:\naction.code is also considered as part of the set of notified accounts\nParameters:\n\nnotify_account account to be notified \nremaining_accounts accounts to be notified\n\nExample:\nrequire_recipient(\"Account1\"_n, \"Account2\"_n, \"Account3\"_n); // throws exception if any of them not in set.\n\nfunction require_auth\nvoid actionapi::require_auth (\n    name n\n)\n\nVerify specified account exists in the set of provided auths. \nVerifies that name exists in the set of provided auths on a action. Fails if not found.\nParameters:\n\nname - name of the account to be verified \n\nfunction require_auth\nvoid actionapi::require_auth (\n    const permission_level & level\n)\n\nRequire the specified authorization for this action. \nRequire the specified authorization for this action. If this action doesn't contain the specified auth, it will fail.\nParameters:\n\nlevel - Authorization to be required \n\nfunction has_auth\nbool actionapi::has_auth (\n    name n\n)\n\nVerifies that n has auth. \nVerifies that n has auth.\nParameters:\n\nn - name of the account to be verified \n\nfunction is_account\nbool actionapi::is_account (\n    name n\n)\n\nVerifies that n is an existing account. \nVerifies that n is an existing account.\nParameters:\n\nn - name of the account to check \n\ndefine SEND_INLINE_ACTION\ndefine SEND_INLINE_ACTION;\n\nSend inline action. \nSend inline action\nParameters:\n\nCONTRACT - The account this action is intended for \nNAME - The name of the action \n... - The member of the action specified as (\"action_member1_name\", action_member1_value)(\"action_member2_name\", action_member2_value) \n\n"},"group__actioncapi.html":{"url":"group__actioncapi.html","title":"Actioncapi","keywords":"actioncapi read_action_data action_data_size require_recipient require_auth has_auth require_auth2 is_account send_inline send_context_free_inline publication_time current_receiver","body":"group actioncapi\nDefines API for querying action and sending action. More...\nDetailed Description\nA EOS.IO action has the following abstract structure:\nstruct action {\n  capi_name  account_name; // the contract defining the primary code to execute for code/type\n  capi_name  action_name; // the action to be taken\n  permission_level[] authorization; // the accounts and permission levels provided\n  bytes data; // opaque data processed by code\n};\n\nThis API enables your contract to inspect the fields on the current action and act accordingly.\nExample: \n// Assume this action is used for the following examples:\n// {\n//  \"code\": \"eos\",\n//  \"type\": \"transfer\",\n//  \"authorization\": [{ \"account\": \"inita\", \"permission\": \"active\" }],\n//  \"data\": {\n//    \"from\": \"inita\",\n//    \"to\": \"initb\",\n//    \"amount\": 1000\n//  }\n// }\n\nchar buffer[128];\nuint32_t total = read_action(buffer, 5); // buffer contains the content of the action up to 5 bytes\nprint(total); // Output: 5\n\nuint32_t msgsize = action_size();\nprint(msgsize); // Output: size of the above action's data field\n\n\nrequire_recipient(\"initc\"_n); // initc account will be notified for this action\n\nrequire_auth(\"inita\"_n); // Do nothing since inita exists in the auth list\nrequire_auth(\"initb\"_n); // Throws an exception\n\nprint(current_time()); // Output: timestamp (in microseconds since 1970) of current block\n\nfunction read_action_data\nuint32_t actioncapi::read_action_data (\n    void * msg,\n    uint32_t len\n)\n\nCopy current action data to the specified location. \nCopy up to len bytes of current action data to the specified location\nParameters:\n\nmsg - a pointer where up to len bytes of the current action data will be copied \nlen - len of the current action data to be copied, 0 to report required size \n\nReturns:\nthe number of bytes copied to msg, or number of bytes that can be copied if len==0 passed \nPrecondition:\nmsg is a valid pointer to a range of memory at least len bytes long \nPost\nmsg is filled with packed action data \nfunction action_data_size\nuint32_t actioncapi::action_data_size ()\n\nGet the length of current action's data field. \nGet the length of the current action's data field. This method is useful for dynamically sized actions\nReturns:\nthe length of the current action's data field \nfunction require_recipient\nvoid actioncapi::require_recipient (\n    capi_name name\n)\n\nAdd the specified account to set of accounts to be notified. \nAdd the specified account to set of accounts to be notified\nParameters:\n\nname - name of the account to be verified \n\nfunction require_auth\nvoid actioncapi::require_auth (\n    capi_name name\n)\n\nVerify specified account exists in the set of provided auths. \nVerifies that name exists in the set of provided auths on a action. Throws if not found.\nParameters:\n\nname - name of the account to be verified \n\nfunction has_auth\nbool actioncapi::has_auth (\n    capi_name name\n)\n\nVerifies that name has auth. \nVerifies that name has auth.\nParameters:\n\nname - name of the account to be verified \n\nfunction require_auth2\nvoid actioncapi::require_auth2 (\n    capi_name name,\n    capi_name permission\n)\n\nVerify specified account exists in the set of provided auths. \nVerifies that name exists in the set of provided auths on a action. Throws if not found.\nParameters:\n\nname - name of the account to be verified \npermission - permission level to be verified \n\nfunction is_account\nbool actioncapi::is_account (\n    capi_name name\n)\n\nVerifies that name is an existing account. \nVerifies that name is an existing account.\nParameters:\n\nname - name of the account to check \n\nfunction send_inline\nvoid actioncapi::send_inline (\n    char * serialized_action,\n    size_t size\n)\n\nSend an inline action in the context of this action's parent transaction\nParameters:\n\nserialized_action - serialized action \nsize - size of serialized action in bytes \n\nPrecondition:\nserialized\\_action is a valid pointer to an array at least size bytes long \nfunction send_context_free_inline\nvoid actioncapi::send_context_free_inline (\n    char * serialized_action,\n    size_t size\n)\n\nSend an inline context free action in the context of this action's parent transaction\nParameters:\n\nserialized_action - serialized action \nsize - size of serialized action in bytes \n\nPrecondition:\nserialized\\_action is a valid pointer to an array at least size bytes long \nfunction publication_time\nuint64_t actioncapi::publication_time ()\n\nGet the publication time. \nReturns the time in microseconds from 1970 of the publication_time \nReturns:\nthe time in microseconds from 1970 of the publication_time \nfunction current_receiver\ncapi_name actioncapi::current_receiver ()\n\nGet the current receiver of the action. \nGet the current receiver of the action \nReturns:\nthe account which specifies the current receiver of the action \n"},"group__actioncppapi.html":{"url":"group__actioncppapi.html","title":"Actioncppapi","keywords":"actioncppapi eosio::permission_level eosio::action unpack_action_data require_recipient require_recipient require_auth require_auth has_auth is_account SEND_INLINE_ACTION","body":"group actioncppapi\nDefines type-safe C++ wrappers for querying action and sending action. More...\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::permission_level\n\n\nstruct\neosio::action\n\n\n\nDefines\nDetailed Description\nNote:\nThere are some methods from the Action C API that can be used directly from C++\nAdditional documentation for group \nfunction unpack_action_data\nT actioncppapi::unpack_action_data ()\n\nInterpret the action body as type T. \nThis method unpacks the current action at type T.\nReturns:\nUnpacked action data casted as T.\nExample:\nstruct dummy_action {\n  char a; //1\n  unsigned long long b; //8\n  int  c; //4\n\n  EOSLIB_SERIALIZE( dummy_action, (a)(b)(c) )\n};\ndummy_action msg = unpack_action_data();\n\nfunction require_recipient\nvoid actioncppapi::require_recipient (\n    name notify_account\n)\n\nAdd the specified account to set of accounts to be notified. \nAdd the specified account to set of accounts to be notified\nParameters:\n\nnotify_account - name of the account to be verified \n\nfunction require_recipient\nvoid actioncppapi::require_recipient (\n    name notify_account,\n    accounts... remaining_accounts\n)\n\nNotify an account for this action. \nAll of the listed accounts will be added to the set of accounts to be notified\nThis helper method enables you to add multiple accounts to accounts to be notified list with a single call rather than having to call the similar C API multiple times.\nNote:\naction.code is also considered as part of the set of notified accounts\nParameters:\n\nnotify_account account to be notified \nremaining_accounts accounts to be notified\n\nExample:\nrequire_recipient(\"Account1\"_n, \"Account2\"_n, \"Account3\"_n); // throws exception if any of them not in set.\n\nfunction require_auth\nvoid actioncppapi::require_auth (\n    name n\n)\n\nVerify specified account exists in the set of provided auths. \nVerifies that name exists in the set of provided auths on a action. Fails if not found.\nParameters:\n\nname - name of the account to be verified \n\nfunction require_auth\nvoid actioncppapi::require_auth (\n    const permission_level & level\n)\n\nRequire the specified authorization for this action. \nRequire the specified authorization for this action. If this action doesn't contain the specified auth, it will fail.\nParameters:\n\nlevel - Authorization to be required \n\nfunction has_auth\nbool actioncppapi::has_auth (\n    name n\n)\n\nVerifies that n has auth. \nVerifies that n has auth.\nParameters:\n\nn - name of the account to be verified \n\nfunction is_account\nbool actioncppapi::is_account (\n    name n\n)\n\nVerifies that n is an existing account. \nVerifies that n is an existing account.\nParameters:\n\nn - name of the account to check \n\ndefine SEND_INLINE_ACTION\ndefine SEND_INLINE_ACTION;\n\nSend inline action. \nSend inline action\nParameters:\n\nCONTRACT - The account this action is intended for \nNAME - The name of the action \n... - The member of the action specified as (\"action_member1_name\", action_member1_value)(\"action_member2_name\", action_member2_value) \n\n"},"group__assetapi.html":{"url":"group__assetapi.html","title":"Assetapi","keywords":"assetapi eosio::asset eosio::extended_asset Stores Extended","body":"group assetapi\nDefines API for managing assets. \nModules\n\nAsset CPP API Defines CPP API for managing assets. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::asset\n\n\nstruct\neosio::extended_asset\n\n\nstruct\nStores\n\n\nstruct\nExtended\n\n\n\n"},"group__assetcppapi.html":{"url":"group__assetcppapi.html","title":"Assetcppapi","keywords":"assetcppapi eosio::asset eosio::extended_asset Stores Extended","body":"group assetcppapi\nDefines CPP API for managing assets. \nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::asset\n\n\nstruct\neosio::extended_asset\n\n\nstruct\nStores\n\n\nstruct\nExtended\n\n\n\n"},"group__chainapi.html":{"url":"group__chainapi.html","title":"Chainapi","keywords":"chainapi type data type data operator== operator != operator== operator != assert_sha256 assert_sha1 assert_sha512 assert_ripemd160 sha256 sha1 sha512 ripemd160 recover_key assert_recover_key","body":"group chainapi\nDefines API for querying internal chain state. \nModules\n\nChain C API Defines C API for querying internal chain state. \nChain C API Defines C API for calculating and checking hash. \nChain C API Defines type-safe C++ wrapers for calculating and checking hashes. \n\nVariables\nvariable type\nunsigned_int eosio::public_key::type;\n\nType of the public key. \nType of the public key, could be either K1 or R1 \nvariable data\nstd::array eosio::public_key::data;\n\nBytes of the public key. \nBytes of the public key \nvariable type\nunsigned_int eosio::signature::type;\n\nType of the signature. \nType of the signature, could be either K1 or R1 \nvariable data\nstd::array eosio::signature::data;\n\nBytes of the signature. \nBytes of the signature \nfriend operator==\nfriend bool chainapi::operator== (\n    const public_key & a,\n    const public_key & b\n)\n\nfriend operator !=\nfriend bool chainapi::operator != (\n    const public_key & a,\n    const public_key & b\n)\n\nfriend operator==\nfriend bool chainapi::operator== (\n    const signature & a,\n    const signature & b\n)\n\nfriend operator !=\nfriend bool chainapi::operator != (\n    const signature & a,\n    const signature & b\n)\n\nfunction assert_sha256\nvoid chainapi::assert_sha256 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum256 & hash\n)\n\nTests if the sha256 hash generated from data matches the provided digest. \nTests if the SHA256 hash generated from data matches the provided digest. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction assert_sha1\nvoid chainapi::assert_sha1 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum160 & hash\n)\n\nTests if the sha1 hash generated from data matches the provided digest. \nTests if the SHA1 hash generated from data matches the provided digest. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction assert_sha512\nvoid chainapi::assert_sha512 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum512 & hash\n)\n\nTests if the sha512 hash generated from data matches the provided digest. \nTests if the SHA512 hash generated from data matches the provided digest. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction assert_ripemd160\nvoid chainapi::assert_ripemd160 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum160 & hash\n)\n\nTests if the ripemd160 hash generated from data matches the provided digest. \nTests if the RIPEMD160 hash generated from data matches the provided digest. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction sha256\neosio::checksum256 chainapi::sha256 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using SHA256. \nHashes data using SHA256. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum256 - Computed digest \nfunction sha1\neosio::checksum160 chainapi::sha1 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using SHA1. \nHashes data using SHA1. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum160 - Computed digest \nfunction sha512\neosio::checksum512 chainapi::sha512 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using SHA512. \nHashes data using SHA512. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum512 - Computed digest \nfunction ripemd160\neosio::checksum160 chainapi::ripemd160 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using RIPEMD160. \nHashes data using RIPEMD160. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum160 - Computed digest \nfunction recover_key\neosio::public_key chainapi::recover_key (\n    const eosio::checksum256 & digest,\n    const eosio::signature & sig\n)\n\nCalculates the public key used for a given signature on a given digest. \nCalculates the public key used for a given signature on a given digest. \nParameters:\n\ndigest - Digest of the message that was signed \nsig - Signature \n\nReturns:\neosio::public_key - Recovered public key \nfunction assert_recover_key\nvoid chainapi::assert_recover_key (\n    const eosio::checksum256 & digest,\n    const eosio::signature & sig,\n    const eosio::public_key & pubkey\n)\n\nTests a given public key with the recovered public key from digest and signature. \nTests a given public key with the recovered public key from digest and signature. \nParameters:\n\ndigest - Digest of the message that was signed \nsig - Signature \npubkey - Public key \n\n"},"group__chaincapi.html":{"url":"group__chaincapi.html","title":"Chaincapi","keywords":"chaincapi get_active_producers","body":"group chaincapi\nDefines C API for querying internal chain state. \nfunction get_active_producers\nuint32_t chaincapi::get_active_producers (\n    capi_name * producers,\n    uint32_t datalen\n)\n\nGets the set of active producers. \nGets the set of active producers. \nParameters:\n\nproducers - Pointer to a buffer of account names \ndatalen - Byte length of buffer, when passed 0 will return the size required to store full output.\n\nReturns:\nuint32_t - Number of bytes actually populated \nPrecondition:\nproducers is a pointer to a range of memory at least datalen bytes long \nPost\nthe passed in producers pointer gets the array of active producers.\nExample:\ncapi_name producers[21];\nuint32_t bytes_populated = get_active_producers(producers, sizeof(capi_name)*21);\n\n"},"group__cryptocapi.html":{"url":"group__cryptocapi.html","title":"Cryptocapi","keywords":"cryptocapi assert_sha256 assert_sha1 assert_sha512 assert_ripemd160 sha256 sha1 sha512 ripemd160 recover_key assert_recover_key","body":"group cryptocapi\nDefines C API for calculating and checking hash. \nfunction assert_sha256\nvoid cryptocapi::assert_sha256 (\n    const char * data,\n    uint32_t length,\n    const capi_checksum256 * hash\n)\n\nTests if the sha256 hash generated from data matches the provided checksum. \nTests if the sha256 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - capi\\_checksum256\\* hash to compare to\n\nPrecondition:\nassert256 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha256( data, length, hash )\n//If the sha256 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha256 hash generated from data equals provided hash\");\n\nfunction assert_sha1\nvoid cryptocapi::assert_sha1 (\n    const char * data,\n    uint32_t length,\n    const capi_checksum160 * hash\n)\n\nTests if the sha1 hash generated from data matches the provided checksum. \nTests if the sha1 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - capi\\_checksum160\\* hash to compare to\n\nPrecondition:\nsha1 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha1( data, length, hash )\n//If the sha1 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha1 hash generated from data equals provided hash\");\n\nfunction assert_sha512\nvoid cryptocapi::assert_sha512 (\n    const char * data,\n    uint32_t length,\n    const capi_checksum512 * hash\n)\n\nTests if the sha512 hash generated from data matches the provided checksum. \nTests if the sha512 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - capi\\_checksum512\\* hash to compare to\n\nPrecondition:\nassert512 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha512( data, length, hash )\n//If the sha512 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha512 hash generated from data equals provided hash\");\n\nfunction assert_ripemd160\nvoid cryptocapi::assert_ripemd160 (\n    const char * data,\n    uint32_t length,\n    const capi_checksum160 * hash\n)\n\nTests if the ripemod160 hash generated from data matches the provided checksum. \nTests if the ripemod160 hash generated from data matches the provided checksum. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - capi\\_checksum160\\* hash to compare to\n\nPrecondition:\nassert160 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_ripemod160( data, length, hash )\n//If the ripemod160 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"ripemod160 hash generated from data equals provided hash\");\n\nfunction sha256\nvoid cryptocapi::sha256 (\n    const char * data,\n    uint32_t length,\n    capi_checksum256 * hash\n)\n\nHashes data using sha256 and stores result in memory pointed to by hash. \nHashes data using sha256 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha256( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction sha1\nvoid cryptocapi::sha1 (\n    const char * data,\n    uint32_t length,\n    capi_checksum160 * hash\n)\n\nHashes data using sha1 and stores result in memory pointed to by hash. \nHashes data using sha1 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha1( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction sha512\nvoid cryptocapi::sha512 (\n    const char * data,\n    uint32_t length,\n    capi_checksum512 * hash\n)\n\nHashes data using sha512 and stores result in memory pointed to by hash. \nHashes data using sha512 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha512( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction ripemd160\nvoid cryptocapi::ripemd160 (\n    const char * data,\n    uint32_t length,\n    capi_checksum160 * hash\n)\n\nHashes data using ripemod160 and stores result in memory pointed to by hash. \nHashes data using ripemod160 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nripemod160( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction recover_key\nint cryptocapi::recover_key (\n    const capi_checksum256 * digest,\n    const char * sig,\n    size_t siglen,\n    char * pub,\n    size_t publen\n)\n\nCalculates the public key used for a given signature and hash used to create a message. \nCalculates the public key used for a given signature and hash used to create a message. \nParameters:\n\ndigest - Hash used to create a message \nsig - Signature \nsiglen - Signature length \npub - Public key \npublen - Public key length \n\nReturns:\nint - number of bytes written to pub\nExample:\n```\n\n\n\n### function assert\\_recover\\_key\n\n```cpp\nvoid cryptocapi::assert_recover_key (\n    const capi_checksum256 * digest,\n    const char * sig,\n    size_t siglen,\n    const char * pub,\n    size_t publen\n)\n\nTests a given public key with the generated key from digest and the signature. \nTests a given public key with the generated key from digest and the signature. \nParameters:\n\ndigest - What the key will be generated from \nsig - Signature \nsiglen - Signature length \npub - Public key \npublen - Public key length\n\nPrecondition:\nassert recovery key of pub equals the key generated from the digest parameter \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum digest;\nchar sig;\nsize_t siglen;\nchar pub;\nsize_t publen;\nassert_recover_key( digest, sig, siglen, pub, publen )\n// If the given public key does not match with the generated key from digest and the signature, anything below will never fire.\neosio::print(\"pub key matches the pub key generated from digest\");\n\n"},"group__cryptocppapi.html":{"url":"group__cryptocppapi.html","title":"Cryptocppapi","keywords":"cryptocppapi type data type data operator== operator != operator== operator != assert_sha256 assert_sha1 assert_sha512 assert_ripemd160 sha256 sha1 sha512 ripemd160 recover_key assert_recover_key","body":"group cryptocppapi\nDefines type-safe C++ wrapers for calculating and checking hashes. \nVariables\nvariable type\nunsigned_int eosio::public_key::type;\n\nType of the public key. \nType of the public key, could be either K1 or R1 \nvariable data\nstd::array eosio::public_key::data;\n\nBytes of the public key. \nBytes of the public key \nvariable type\nunsigned_int eosio::signature::type;\n\nType of the signature. \nType of the signature, could be either K1 or R1 \nvariable data\nstd::array eosio::signature::data;\n\nBytes of the signature. \nBytes of the signature \nfriend operator==\nfriend bool cryptocppapi::operator== (\n    const public_key & a,\n    const public_key & b\n)\n\nfriend operator !=\nfriend bool cryptocppapi::operator != (\n    const public_key & a,\n    const public_key & b\n)\n\nfriend operator==\nfriend bool cryptocppapi::operator== (\n    const signature & a,\n    const signature & b\n)\n\nfriend operator !=\nfriend bool cryptocppapi::operator != (\n    const signature & a,\n    const signature & b\n)\n\nfunction assert_sha256\nvoid cryptocppapi::assert_sha256 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum256 & hash\n)\n\nTests if the sha256 hash generated from data matches the provided digest. \nTests if the SHA256 hash generated from data matches the provided digest. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction assert_sha1\nvoid cryptocppapi::assert_sha1 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum160 & hash\n)\n\nTests if the sha1 hash generated from data matches the provided digest. \nTests if the SHA1 hash generated from data matches the provided digest. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction assert_sha512\nvoid cryptocppapi::assert_sha512 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum512 & hash\n)\n\nTests if the sha512 hash generated from data matches the provided digest. \nTests if the SHA512 hash generated from data matches the provided digest. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction assert_ripemd160\nvoid cryptocppapi::assert_ripemd160 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum160 & hash\n)\n\nTests if the ripemd160 hash generated from data matches the provided digest. \nTests if the RIPEMD160 hash generated from data matches the provided digest. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction sha256\neosio::checksum256 cryptocppapi::sha256 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using SHA256. \nHashes data using SHA256. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum256 - Computed digest \nfunction sha1\neosio::checksum160 cryptocppapi::sha1 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using SHA1. \nHashes data using SHA1. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum160 - Computed digest \nfunction sha512\neosio::checksum512 cryptocppapi::sha512 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using SHA512. \nHashes data using SHA512. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum512 - Computed digest \nfunction ripemd160\neosio::checksum160 cryptocppapi::ripemd160 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using RIPEMD160. \nHashes data using RIPEMD160. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum160 - Computed digest \nfunction recover_key\neosio::public_key cryptocppapi::recover_key (\n    const eosio::checksum256 & digest,\n    const eosio::signature & sig\n)\n\nCalculates the public key used for a given signature on a given digest. \nCalculates the public key used for a given signature on a given digest. \nParameters:\n\ndigest - Digest of the message that was signed \nsig - Signature \n\nReturns:\neosio::public_key - Recovered public key \nfunction assert_recover_key\nvoid cryptocppapi::assert_recover_key (\n    const eosio::checksum256 & digest,\n    const eosio::signature & sig,\n    const eosio::public_key & pubkey\n)\n\nTests a given public key with the recovered public key from digest and signature. \nTests a given public key with the recovered public key from digest and signature. \nParameters:\n\ndigest - Digest of the message that was signed \nsig - Signature \npubkey - Public key \n\n"},"group__compilerbuiltinsapi.html":{"url":"group__compilerbuiltinsapi.html","title":"Compilerbuiltinsapi","keywords":"compilerbuiltinsapi __multi3 __divti3 __udivti3 __modti3 __umodti3 __lshlti3 __lshrti3 __ashlti3 __ashrti3 __addtf3 __subtf3 __multf3 __divtf3 __eqtf2 __netf2 __getf2 __gttf2 __letf2 __lttf2 __cmptf2 __unordtf2 __extendsftf2 __extenddftf2 __fixtfdi __fixtfsi __fixunstfdi __fixunstfsi __trunctfdf2 __trunctfsf2 __break_point","body":"group compilerbuiltinsapi\nDeclares int128 helper builtins generated by the toolchain. \nfunction __multi3\nvoid compilerbuiltinsapi::__multi3 (\n    __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nMultiply two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers. \nMultiply two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of multiplication Example: \n__int128 res = 0;\n__int128 a = 100;\n__int128 b = 100;\n__multi3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 10000\n\nfunction __divti3\nvoid compilerbuiltinsapi::__divti3 (\n    __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nDivide two 128 bit integers (which are represented as two 64 bit unsigned integers) \nDivide two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of division Example: \n__int128 res = 0;\n__int128 a = 100;\n__int128 b = 100;\n__divti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\nfunction __udivti3\nvoid compilerbuiltinsapi::__udivti3 (\n    unsigned __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nDivide two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) \nDivide two 128 bit unsigned integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. Example: unsigned __int128 res = 0;\nunsigned __int128 a = 100;\nunsigned __int128 b = 100;\n__udivti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\n\n\nfunction __modti3\nvoid compilerbuiltinsapi::__modti3 (\n    __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nPerform modular arithmetic on two 128 bit integers (which are represented as two 64 bit unsigned integers) \nPerform modular arithmetic on two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of modulus Example: \n__int128 res = 0;\n__int128 a = 100;\n__int128 b = 3;\n__modti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\nfunction __umodti3\nvoid compilerbuiltinsapi::__umodti3 (\n    unsigned __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nPerform modular arithmetic on two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) \nPerform modular arithmetic on two 128 unsigned bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of modulus Example: \nunsigned __int128 res = 0;\nunsigned __int128 a = 100;\nunsigned __int128 b = 3;\n__umodti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\nfunction __lshlti3\nvoid compilerbuiltinsapi::__lshlti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform logical shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform logical shift left on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = 8;\n__lshlti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: 16\n\nfunction __lshrti3\nvoid compilerbuiltinsapi::__lshrti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform logical shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform logical shift right on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = 8;\n__lshrti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: 4\n\nfunction __ashlti3\nvoid compilerbuiltinsapi::__ashlti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform arithmetic shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform arithmetic shift left on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = 8;\n__ashlti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: 16\n\nfunction __ashrti3\nvoid compilerbuiltinsapi::__ashrti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform arithmetic shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform arithmetic shift right on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = -8;\n__ashrti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: -4\n\nfunction __addtf3\nvoid compilerbuiltinsapi::__addtf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nAdd two long doubles (which are represented as two 64 bit unsigned integers) \nAdd two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __subtf3\nvoid compilerbuiltinsapi::__subtf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nSubtract two long doubles (which are represented as two 64 bit unsigned integers) \nSubtract two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __multf3\nvoid compilerbuiltinsapi::__multf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nMultiply two long doubles (which are represented as two 64 bit unsigned integers) \nMultiply two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __divtf3\nvoid compilerbuiltinsapi::__divtf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nDivide two long doubles (which are represented as two 64 bit unsigned integers) \nDivide two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __eqtf2\nint compilerbuiltinsapi::__eqtf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck equality between two doubles (which are represented as two 64 bit unsigned integers) \nCheck equality between two doubles split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n1 if either a or b is NaN \nfunction __netf2\nint compilerbuiltinsapi::__netf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck inequality between two doubles (which are represented as two 64 bit unsigned integers) \nCheck inequality between two doubles split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b @return1 if either a or b is NaN \nfunction __getf2\nint compilerbuiltinsapi::__getf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is greater or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is greater or equal to the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n-1 if either a or b is NaN \nfunction __gttf2\nint compilerbuiltinsapi::__gttf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is greater than the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is greater than the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n0 if either a or b is NaN \nfunction __letf2\nint compilerbuiltinsapi::__letf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is less or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is less or equal to the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n1 if either a or b is NaN \nfunction __lttf2\nint compilerbuiltinsapi::__lttf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is less than the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is less than the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n0 if either a or b is NaN \nfunction __cmptf2\nint compilerbuiltinsapi::__cmptf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCompare two doubles (the doubles are represented as two 64 bit unsigned integers) \nCompare two doubles which are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n1 if either a or b is NaN \nfunction __unordtf2\nint compilerbuiltinsapi::__unordtf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if either of the doubles is NaN, (the doubles are represented as two 64 bit unsigned integers) \nCheck if either of the doubles is NaN, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if either a or b is NaN \nReturns:\n0 if either a or b is not NaN \nfunction __extendsftf2\nvoid compilerbuiltinsapi::__extendsftf2 (\n    long double & ret,\n    float f\n)\n\nExtend float to long double. \nExtend float to long double \nParameters:\n\nret It will be replaced with the result product. \nf Input float to be extended \n\nPost\nret is replaced with the extended float \nfunction __extenddftf2\nvoid compilerbuiltinsapi::__extenddftf2 (\n    long double & ret,\n    double f\n)\n\nExtend float to long double. \nExtend double to long double \nParameters:\n\nret It will be replaced with the result product. \nf Input float to be extended \n\nPost\nret is replaced with the extended float \nfunction __fixtfdi\nint64_t compilerbuiltinsapi::__fixtfdi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 64 bit integer. \nfunction __fixtfsi\nint32_t compilerbuiltinsapi::__fixtfsi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 32 bit integer. \nfunction __fixunstfdi\nuint64_t compilerbuiltinsapi::__fixunstfdi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit unsigned integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit unsigned integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 64 bit unsigned integer. \nfunction __fixunstfsi\nuint32_t compilerbuiltinsapi::__fixunstfsi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit unsigned integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit unsigned integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 32 bit unsigned integer. \nfunction __trunctfdf2\ndouble compilerbuiltinsapi::__trunctfdf2 (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into double. \nTruncate long double (which are split as two 64 bit unsigned integers) into double \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted double \nfunction __trunctfsf2\nfloat compilerbuiltinsapi::__trunctfsf2 (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into float. \nTruncate long double (which are split as two 64 bit unsigned integers) into float \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted float \nfunction __break_point\nvoid compilerbuiltinsapi::__break_point ()\n\n"},"group__consoleapi.html":{"url":"group__consoleapi.html","title":"Consoleapi","keywords":"consoleapi eosio::iostream cout print_f print operator<<","body":"group consoleapi\nDefines APIs to log/print text messages. \nModules\n\nConsole C API Defnes C API to log/print text messages. \nConsole C++ API Defines C++ wrapper to log/print text messages. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::iostream\n\n\n\nVariables\n\n\n\nType\nName\n\n\n\n\nstatic iostream\ncout\n\n\n\nvariable cout\niostream eosio::cout;\n\nfunction print_f\nvoid consoleapi::print_f (\n    const char * s,\n    Arg val,\n    Args... rest\n)\n\nPrints formatted string. \nPrints formatted string. It behaves similar to C printf/\nTemplate parameters:\n\nArg - Type of the value used to replace the format specifier \nArgs - Type of the value used to replace the format specifier \n\nParameters:\n\ns - Null terminated string with to be printed (it can contains format specifier) \nval - The value used to replace the format specifier \nrest - The values used to replace the format specifier\n\nExample: \nprint_f(\"Number of apples: %\", 10);\n\nfunction print\nvoid consoleapi::print (\n    Arg && a,\n    Args &&... args\n)\n\nPrint out value / list of values. \nPrint out value / list of values \nParameters:\n\na - The value to be printed \nargs - The other values to be printed\n\nExample:\nconst char *s = \"Hello World!\";\nuint64_t unsigned_64_bit_int = 1e+18;\nuint128_t unsigned_128_bit_int (87654323456);\nuint64_t string_as_unsigned_64_bit = \"abcde\"_n;\nprint(s , unsigned_64_bit_int, unsigned_128_bit_int, string_as_unsigned_64_bit);\n// Ouput: Hello World!100000000000000000087654323456abcde\n\nfunction operator\niostream & consoleapi::operator\nOverload c++ iostream. \nOverload c++ iostream \nParameters:\n\nout - Output strem \nv - The value to be printed \n\nReturns:\niostream& - Reference to the input output stream\nExample:\nconst char *s = \"Hello World!\";\nuint64_t unsigned_64_bit_int = 1e+18;\nuint128_t unsigned_128_bit_int (87654323456);\nuint64_t string_as_unsigned_64_bit = \"abcde\"_n;\nstd::out \n"},"group__consolecapi.html":{"url":"group__consolecapi.html","title":"Consolecapi","keywords":"consolecapi prints prints_l printi printui printi128 printui128 printsf printdf printqf printn printhex","body":"group consolecapi\nDefnes C API to log/print text messages. \nfunction prints\nvoid consolecapi::prints (\n    const char * cstr\n)\n\nPrints string. \nPrints string \nParameters:\n\ncstr - a null terminated string\n\nExample:\nprints(\"Hello World!\"); // Output: Hello World!\n\nfunction prints_l\nvoid consolecapi::prints_l (\n    const char * cstr,\n    uint32_t len\n)\n\nPrints string. \nPrints string up to given length \nParameters:\n\ncstr - pointer to string \nlen - len of string to be printed\n\nExample:\nprints_l(\"Hello World!\", 5); // Output: Hello\n\nfunction printi\nvoid consolecapi::printi (\n    int64_t value\n)\n\nPrints value as a 64 bit signed integer. \nPrints value as a 64 bit signed integer \nParameters:\n\nvalue of 64 bit signed integer to be printed\n\nExample:\nprinti(-1e+18); // Output: -1000000000000000000\n\nfunction printui\nvoid consolecapi::printui (\n    uint64_t value\n)\n\nPrints value as a 64 bit unsigned integer. \nPrints value as a 64 bit unsigned integer \nParameters:\n\nvalue of 64 bit unsigned integer to be printed\n\nExample:\nprintui(1e+18); // Output: 1000000000000000000\n\nfunction printi128\nvoid consolecapi::printi128 (\n    const int128_t * value\n)\n\nPrints value as a 128 bit signed integer. \nPrints value as a 128 bit signed integer \nParameters:\n\nvalue is a pointer to the 128 bit signed integer to be printed\n\nExample:\nint128_t large_int(-87654323456);\nprinti128(&large_int); // Output: -87654323456\n\nfunction printui128\nvoid consolecapi::printui128 (\n    const uint128_t * value\n)\n\nPrints value as a 128 bit unsigned integer. \nPrints value as a 128 bit unsigned integer \nParameters:\n\nvalue is a pointer to the 128 bit unsigned integer to be printed\n\nExample:\nuint128_t large_int(87654323456);\nprintui128(&large_int); // Output: 87654323456\n\nfunction printsf\nvoid consolecapi::printsf (\n    float value\n)\n\nPrints value as single-precision floating point number (i.e. float) \nPrints value as single-precision floating point number \nParameters:\n\nvalue of float to be printed\n\nExample:\nfloat value = 5.0 / 10.0;\nprintsf(value); // Output: 0.5\n\nfunction printdf\nvoid consolecapi::printdf (\n    double value\n)\n\nPrints value as double-precision floating point number (i.e. double) \nPrints value as double-precision floating point number \nParameters:\n\nvalue of double to be printed\n\nExample:\ndouble value = 5.0 / 10.0;\nprintdf(value); // Output: 0.5\n\nfunction printqf\nvoid consolecapi::printqf (\n    const long double * value\n)\n\nPrints value as quadruple-precision floating point number (i.e. long double) \nPrints value as quadruple-precision floating point number \nParameters:\n\nvalue is a pointer to the long double to be printed\n\nExample:\nlong double value = 5.0 / 10.0;\nprintqf(value); // Output: 0.5\n\nfunction printn\nvoid consolecapi::printn (\n    uint64_t name\n)\n\nPrints a 64 bit names as base32 encoded string. \nPrints a 64 bit names as base32 encoded string \nParameters:\n\nname - 64 bit name to be printed\n\nExample: \nprintn(\"abcde\"_n); // Output: abcde\n\nfunction printhex\nvoid consolecapi::printhex (\n    const void * data,\n    uint32_t datalen\n)\n\n"},"group__consolecppapi.html":{"url":"group__consolecppapi.html","title":"Consolecppapi","keywords":"consolecppapi eosio::iostream cout print_f print operator<<","body":"group consolecppapi\nDefines C++ wrapper to log/print text messages. More...\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::iostream\n\n\n\nVariables\n\n\n\nType\nName\n\n\n\n\nstatic iostream\ncout\n\n\n\nDetailed Description\nThis API uses C++ variadic templates and type detection to make it easy to print any native type. You can even overload the `` method for your own custom types.\nExample: \nprint( \"hello world, this is a number: \", 5 );\n\nvariable cout\niostream eosio::cout;\n\nfunction print_f\nvoid consolecppapi::print_f (\n    const char * s,\n    Arg val,\n    Args... rest\n)\n\nPrints formatted string. \nPrints formatted string. It behaves similar to C printf/\nTemplate parameters:\n\nArg - Type of the value used to replace the format specifier \nArgs - Type of the value used to replace the format specifier \n\nParameters:\n\ns - Null terminated string with to be printed (it can contains format specifier) \nval - The value used to replace the format specifier \nrest - The values used to replace the format specifier\n\nExample: \nprint_f(\"Number of apples: %\", 10);\n\nfunction print\nvoid consolecppapi::print (\n    Arg && a,\n    Args &&... args\n)\n\nPrint out value / list of values. \nPrint out value / list of values \nParameters:\n\na - The value to be printed \nargs - The other values to be printed\n\nExample:\nconst char *s = \"Hello World!\";\nuint64_t unsigned_64_bit_int = 1e+18;\nuint128_t unsigned_128_bit_int (87654323456);\nuint64_t string_as_unsigned_64_bit = \"abcde\"_n;\nprint(s , unsigned_64_bit_int, unsigned_128_bit_int, string_as_unsigned_64_bit);\n// Ouput: Hello World!100000000000000000087654323456abcde\n\nfunction operator\niostream & consolecppapi::operator\nOverload c++ iostream. \nOverload c++ iostream \nParameters:\n\nout - Output strem \nv - The value to be printed \n\nReturns:\niostream& - Reference to the input output stream\nExample:\nconst char *s = \"Hello World!\";\nuint64_t unsigned_64_bit_int = 1e+18;\nuint128_t unsigned_128_bit_int (87654323456);\nuint64_t string_as_unsigned_64_bit = \"abcde\"_n;\nstd::out \n"},"group__cryptoapi.html":{"url":"group__cryptoapi.html","title":"Cryptoapi","keywords":"cryptoapi type data type data operator== operator != operator== operator != assert_sha256 assert_sha1 assert_sha512 assert_ripemd160 sha256 sha1 sha512 ripemd160 recover_key assert_recover_key","body":"group cryptoapi\nDefines API for calculating and checking hash. More...\nModules\n\nChain C API Defines type-safe C++ wrapers for calculating and checking hashes. \n\nVariables\nDetailed Description\nvariable type\nunsigned_int eosio::public_key::type;\n\nType of the public key. \nType of the public key, could be either K1 or R1 \nvariable data\nstd::array eosio::public_key::data;\n\nBytes of the public key. \nBytes of the public key \nvariable type\nunsigned_int eosio::signature::type;\n\nType of the signature. \nType of the signature, could be either K1 or R1 \nvariable data\nstd::array eosio::signature::data;\n\nBytes of the signature. \nBytes of the signature \nfriend operator==\nfriend bool cryptoapi::operator== (\n    const public_key & a,\n    const public_key & b\n)\n\nfriend operator !=\nfriend bool cryptoapi::operator != (\n    const public_key & a,\n    const public_key & b\n)\n\nfriend operator==\nfriend bool cryptoapi::operator== (\n    const signature & a,\n    const signature & b\n)\n\nfriend operator !=\nfriend bool cryptoapi::operator != (\n    const signature & a,\n    const signature & b\n)\n\nfunction assert_sha256\nvoid cryptoapi::assert_sha256 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum256 & hash\n)\n\nTests if the sha256 hash generated from data matches the provided digest. \nTests if the SHA256 hash generated from data matches the provided digest. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction assert_sha1\nvoid cryptoapi::assert_sha1 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum160 & hash\n)\n\nTests if the sha1 hash generated from data matches the provided digest. \nTests if the SHA1 hash generated from data matches the provided digest. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction assert_sha512\nvoid cryptoapi::assert_sha512 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum512 & hash\n)\n\nTests if the sha512 hash generated from data matches the provided digest. \nTests if the SHA512 hash generated from data matches the provided digest. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction assert_ripemd160\nvoid cryptoapi::assert_ripemd160 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum160 & hash\n)\n\nTests if the ripemd160 hash generated from data matches the provided digest. \nTests if the RIPEMD160 hash generated from data matches the provided digest. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction sha256\neosio::checksum256 cryptoapi::sha256 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using SHA256. \nHashes data using SHA256. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum256 - Computed digest \nfunction sha1\neosio::checksum160 cryptoapi::sha1 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using SHA1. \nHashes data using SHA1. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum160 - Computed digest \nfunction sha512\neosio::checksum512 cryptoapi::sha512 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using SHA512. \nHashes data using SHA512. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum512 - Computed digest \nfunction ripemd160\neosio::checksum160 cryptoapi::ripemd160 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using RIPEMD160. \nHashes data using RIPEMD160. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum160 - Computed digest \nfunction recover_key\neosio::public_key cryptoapi::recover_key (\n    const eosio::checksum256 & digest,\n    const eosio::signature & sig\n)\n\nCalculates the public key used for a given signature on a given digest. \nCalculates the public key used for a given signature on a given digest. \nParameters:\n\ndigest - Digest of the message that was signed \nsig - Signature \n\nReturns:\neosio::public_key - Recovered public key \nfunction assert_recover_key\nvoid cryptoapi::assert_recover_key (\n    const eosio::checksum256 & digest,\n    const eosio::signature & sig,\n    const eosio::public_key & pubkey\n)\n\nTests a given public key with the recovered public key from digest and signature. \nTests a given public key with the recovered public key from digest and signature. \nParameters:\n\ndigest - Digest of the message that was signed \nsig - Signature \npubkey - Public key \n\n"},"group__database.html":{"url":"group__database.html","title":"Database","keywords":"database db_store_i64 db_update_i64 db_remove_i64 db_get_i64 db_next_i64 db_previous_i64 db_find_i64 db_lowerbound_i64 db_upperbound_i64 db_end_i64 db_idx64_store db_idx64_update db_idx64_remove db_idx64_next db_idx64_previous db_idx64_find_primary db_idx64_find_secondary db_idx64_lowerbound db_idx64_upperbound db_idx64_end db_idx128_store db_idx128_update db_idx128_remove db_idx128_next db_idx128_previous db_idx128_find_primary db_idx128_find_secondary db_idx128_lowerbound db_idx128_upperbound db_idx128_end db_idx256_store db_idx256_update db_idx256_remove db_idx256_next db_idx256_previous db_idx256_find_primary db_idx256_find_secondary db_idx256_lowerbound db_idx256_upperbound db_idx256_end db_idx_double_store db_idx_double_update db_idx_double_remove db_idx_double_next db_idx_double_previous db_idx_double_find_primary db_idx_double_find_secondary db_idx_double_lowerbound db_idx_double_upperbound db_idx_double_end db_idx_long_double_store db_idx_long_double_update db_idx_long_double_remove db_idx_long_double_next db_idx_long_double_previous db_idx_long_double_find_primary db_idx_long_double_find_secondary db_idx_long_double_lowerbound db_idx_long_double_upperbound db_idx_long_double_end","body":"group database\nDefines APIs that store and retrieve data on the blockchain. \nModules\n\nDatabase C++ API Defines an interface to EOSIO database. \nDatabase C API Defines C APIs for interfacing with the database. \n\nfunction db_store_i64\nint32_t database::db_store_i64 (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const void * data,\n    uint32_t len\n)\n\nStore a record in a primary 64-bit integer index table. \nStore a record in a primary 64-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - ID of the entry \ndata - Record to store \nlen - Size of data \n\nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPrecondition:\n\\*((uint64\\_t\\*)data) stores the primary key \nReturns:\niterator to the newly created table row \nPost\na new entry is created in the table \nfunction db_update_i64\nvoid database::db_update_i64 (\n    int32_t iterator,\n    capi_name payer,\n    const void * data,\n    uint32_t len\n)\n\nUpdate a record in a primary 64-bit integer index table. \nUpdate a record in a primary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row containing the record to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \ndata - New updated record \nlen - Size of data \n\nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPrecondition:\n\\*((uint64\\_t\\*)data) stores the primary key \nPrecondition:\niterator points to an existing table row in the table \nPost\nthe record contained in the table row pointed to by iterator is replaced with the new updated record \nfunction db_remove_i64\nvoid database::db_remove_i64 (\n    int32_t iterator\n)\n\nRemove a record from a primary 64-bit integer index table. \nRemove a record from a primary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer\nExample:\nint32_t itr = db_find_i64(receiver, receiver, table1, \"alice\"_n);\neosio_assert(itr >= 0, \"Alice cannot be removed since she was already not found in the table\");\ndb_remove_i64(itr);\n\nfunction db_get_i64\nint32_t database::db_get_i64 (\n    int32_t iterator,\n    const void * data,\n    uint32_t len\n)\n\nGet a record in a primary 64-bit integer index table. \nGet a record in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the record to retrieve \ndata - Pointer to the buffer which will be filled with the retrieved record \nlen - Size of the buffer \n\nReturns:\nsize of the data copied into the buffer if len > 0, or size of the retrieved record if len == 0. \nPrecondition:\niterator points to an existing table row in the table \nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPost\ndata will be filled with the retrieved record (truncated to the first len bytes if necessary)\nExample:\nchar value[50];\nauto len = db_get_i64(itr, value, 0);\neosio_assert(len \nfunction db_next_i64\nint32_t database::db_next_i64 (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a primary 64-bit integer index table. \nFind the table row following the referenced table row in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched\nExample:\nint32_t charlie_itr = db_find_i64(receiver, receiver, table1, \"charlie\"_n);\n// expect nothing after charlie\nuint64_t prim = 0\nint32_t  end_itr = db_next_i64(charlie_itr, &prim);\neosio_assert(end_itr \nfunction db_previous_i64\nint32_t database::db_previous_i64 (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a primary 64-bit integer index table. \nFind the table row preceding the referenced table row in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched\nExample:\nuint64_t prim = 0;\nint32_t  itr_prev = db_previous_i64(itr, &prim);\n\nfunction db_find_i64\nint32_t database::db_find_i64 (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t id\n)\n\nFind a table row in a primary 64-bit integer index table by primary key. \nFind a table row in a primary 64-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key of the table row to look up \n\nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found\nExample:\nint itr = db_find_i64(receiver, receiver, table1, \"charlie\"_n);\n\nfunction db_lowerbound_i64\nint32_t database::db_lowerbound_i64 (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t id\n)\n\nFind the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key. \nFind the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key The table row that matches the lowerbound condition is the first table row in the table with the lowest primary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key used to determine the lowerbound \n\nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_upperbound_i64\nint32_t database::db_upperbound_i64 (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t id\n)\n\nFind the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key. \nFind the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key The table row that matches the upperbound condition is the first table row in the table with the lowest primary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key used to determine the upperbound \n\nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_end_i64\nint32_t database::db_end_i64 (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table. \nGet an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx64_store\nint32_t database::db_idx64_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const uint64_t * secondary\n)\n\nStore an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. \nStore an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary 64-bit integer index table \nfunction db_idx64_update\nvoid database::db_idx64_update (\n    int32_t iterator,\n    capi_name payer,\n    const uint64_t * secondary\n)\n\nUpdate an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. \nUpdate an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx64_remove\nvoid database::db_idx64_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 64-bit integer index table. \nRemove a table row from a secondary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx64_next\nint32_t database::db_idx64_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 64-bit integer index table. \nFind the table row following the referenced table row in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx64_previous\nint32_t database::db_idx64_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 64-bit integer index table. \nFind the table row preceding the referenced table row in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx64_find_primary\nint32_t database::db_idx64_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary 64-bit integer index table by primary key. \nFind a table row in a secondary 64-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a uint64\\_t variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx64_find_secondary\nint32_t database::db_idx64_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 64-bit integer index table by secondary key. \nFind a table row in a secondary 64-bit integer index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx64_lowerbound\nint32_t database::db_idx64_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx64_upperbound\nint32_t database::db_idx64_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx64_end\nint32_t database::db_idx64_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx128_store\nint32_t database::db_idx128_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const uint128_t * secondary\n)\n\nStore an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. \nStore an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary 128-bit integer index table \nfunction db_idx128_update\nvoid database::db_idx128_update (\n    int32_t iterator,\n    capi_name payer,\n    const uint128_t * secondary\n)\n\nUpdate an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. \nUpdate an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx128_remove\nvoid database::db_idx128_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 128-bit integer index table. \nRemove a table row from a secondary 128-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx128_next\nint32_t database::db_idx128_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 128-bit integer index table. \nFind the table row following the referenced table row in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx128_previous\nint32_t database::db_idx128_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 128-bit integer index table. \nFind the table row preceding the referenced table row in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx128_find_primary\nint32_t database::db_idx128_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary 128-bit integer index table by primary key. \nFind a table row in a secondary 128-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a uint128\\_t variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx128_find_secondary\nint32_t database::db_idx128_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 128-bit integer index table by secondary key. \nFind a table row in a secondary 128-bit integer index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx128_lowerbound\nint32_t database::db_idx128_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx128_upperbound\nint32_t database::db_idx128_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx128_end\nint32_t database::db_idx128_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx256_store\nint32_t database::db_idx256_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const uint128_t * data,\n    uint32_t data_len\n)\n\nStore an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table. \nStore an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \ndata - Pointer to the secondary key data stored as an array of 2 uint128\\_t integers \ndata_len - Must be set to 2 \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and the specified secondary key is created in the secondary 256-bit index table \nfunction db_idx256_update\nvoid database::db_idx256_update (\n    int32_t iterator,\n    capi_name payer,\n    const uint128_t * data,\n    uint32_t data_len\n)\n\nUpdate an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table. \nUpdate an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \ndata - Pointer to the new secondary key data (which is stored as an array of 2 uint128\\_t integers) that will replace the existing one of the association \ndata_len - Must be set to 2 \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by the specified secondary key \nfunction db_idx256_remove\nvoid database::db_idx256_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 256-bit index table. \nRemove a table row from a secondary 256-bit index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx256_next\nint32_t database::db_idx256_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 256-bit index table. \nFind the table row following the referenced table row in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx256_previous\nint32_t database::db_idx256_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 256-bit index table. \nFind the table row preceding the referenced table row in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx256_find_primary\nint32_t database::db_idx256_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t primary\n)\n\nFind a table row in a secondary 128-bit integer index table by primary key. \nFind a table row in a secondary 256-bit index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the an array of 2 uint128\\_t integers which will act as the buffer to hold the retrieved secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx256_find_secondary\nint32_t database::db_idx256_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 256-bit index table by secondary key. \nFind a table row in a secondary 256-bit index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) used to lookup the table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to the specified secondary key or the end iterator of the table if the table row could not be found \nfunction db_idx256_lowerbound\nint32_t database::db_idx256_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key (uses lexicographical ordering on the 256-bit keys)\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx256_upperbound\nint32_t database::db_idx256_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key (uses lexicographical ordering on the 256-bit keys)\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) first used to determine the upperbound and which is then replaced with the secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx256_end\nint32_t database::db_idx256_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx_double_store\nint32_t database::db_idx_double_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const double * secondary\n)\n\nStore an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. \nStore an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary double-precision floating-point index table \nfunction db_idx_double_update\nvoid database::db_idx_double_update (\n    int32_t iterator,\n    capi_name payer,\n    const double * secondary\n)\n\nUpdate an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. \nUpdate an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx_double_remove\nvoid database::db_idx_double_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary double-precision floating-point index table. \nRemove a table row from a secondary double-precision floating-point index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx_double_next\nint32_t database::db_idx_double_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary double-precision floating-point index table. \nFind the table row following the referenced table row in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_double_previous\nint32_t database::db_idx_double_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary double-precision floating-point index table. \nFind the table row preceding the referenced table row in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_double_find_primary\nint32_t database::db_idx_double_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    double * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary double-precision floating-point index table by primary key. \nFind a table row in a secondary double-precision floating-point index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a double variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx_double_find_secondary\nint32_t database::db_idx_double_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const double * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary double-precision floating-point index table by secondary key. \nFind a table row in a secondary double-precision floating-point index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a double variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx_double_lowerbound\nint32_t database::db_idx_double_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_double_upperbound\nint32_t database::db_idx_double_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_double_end\nint32_t database::db_idx_double_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx_long_double_store\nint32_t database::db_idx_long_double_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const long double * secondary\n)\n\nStore an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. \nStore an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary quadruple-precision floating-point index table \nfunction db_idx_long_double_update\nvoid database::db_idx_long_double_update (\n    int32_t iterator,\n    capi_name payer,\n    const long double * secondary\n)\n\nUpdate an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. \nUpdate an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx_long_double_remove\nvoid database::db_idx_long_double_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary quadruple-precision floating-point index table. \nRemove a table row from a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx_long_double_next\nint32_t database::db_idx_long_double_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary quadruple-precision floating-point index table. \nFind the table row following the referenced table row in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_long_double_previous\nint32_t database::db_idx_long_double_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table. \nFind the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_long_double_find_primary\nint32_t database::db_idx_long_double_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    long double * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary quadruple-precision floating-point index table by primary key. \nFind a table row in a secondary quadruple-precision floating-point index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a long double variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_find_secondary\nint32_t database::db_idx_long_double_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const long double * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary quadruple-precision floating-point index table by secondary key. \nFind a table row in a secondary quadruple-precision floating-point index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a long double variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_lowerbound\nint32_t database::db_idx_long_double_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    long double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_upperbound\nint32_t database::db_idx_long_double_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    long double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_end\nint32_t database::db_idx_long_double_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \n"},"group__databasec.html":{"url":"group__databasec.html","title":"Databasec","keywords":"databasec db_store_i64 db_update_i64 db_remove_i64 db_get_i64 db_next_i64 db_previous_i64 db_find_i64 db_lowerbound_i64 db_upperbound_i64 db_end_i64 db_idx64_store db_idx64_update db_idx64_remove db_idx64_next db_idx64_previous db_idx64_find_primary db_idx64_find_secondary db_idx64_lowerbound db_idx64_upperbound db_idx64_end db_idx128_store db_idx128_update db_idx128_remove db_idx128_next db_idx128_previous db_idx128_find_primary db_idx128_find_secondary db_idx128_lowerbound db_idx128_upperbound db_idx128_end db_idx256_store db_idx256_update db_idx256_remove db_idx256_next db_idx256_previous db_idx256_find_primary db_idx256_find_secondary db_idx256_lowerbound db_idx256_upperbound db_idx256_end db_idx_double_store db_idx_double_update db_idx_double_remove db_idx_double_next db_idx_double_previous db_idx_double_find_primary db_idx_double_find_secondary db_idx_double_lowerbound db_idx_double_upperbound db_idx_double_end db_idx_long_double_store db_idx_long_double_update db_idx_long_double_remove db_idx_long_double_next db_idx_long_double_previous db_idx_long_double_find_primary db_idx_long_double_find_secondary db_idx_long_double_lowerbound db_idx_long_double_upperbound db_idx_long_double_end","body":"group databasec\nDefines C APIs for interfacing with the database. More...\nDetailed Description\nDatabase C API provides low level interface to EOSIO database.\nfunction db_store_i64\nint32_t databasec::db_store_i64 (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const void * data,\n    uint32_t len\n)\n\nStore a record in a primary 64-bit integer index table. \nStore a record in a primary 64-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - ID of the entry \ndata - Record to store \nlen - Size of data \n\nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPrecondition:\n\\*((uint64\\_t\\*)data) stores the primary key \nReturns:\niterator to the newly created table row \nPost\na new entry is created in the table \nfunction db_update_i64\nvoid databasec::db_update_i64 (\n    int32_t iterator,\n    capi_name payer,\n    const void * data,\n    uint32_t len\n)\n\nUpdate a record in a primary 64-bit integer index table. \nUpdate a record in a primary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row containing the record to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \ndata - New updated record \nlen - Size of data \n\nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPrecondition:\n\\*((uint64\\_t\\*)data) stores the primary key \nPrecondition:\niterator points to an existing table row in the table \nPost\nthe record contained in the table row pointed to by iterator is replaced with the new updated record \nfunction db_remove_i64\nvoid databasec::db_remove_i64 (\n    int32_t iterator\n)\n\nRemove a record from a primary 64-bit integer index table. \nRemove a record from a primary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer\nExample:\nint32_t itr = db_find_i64(receiver, receiver, table1, \"alice\"_n);\neosio_assert(itr >= 0, \"Alice cannot be removed since she was already not found in the table\");\ndb_remove_i64(itr);\n\nfunction db_get_i64\nint32_t databasec::db_get_i64 (\n    int32_t iterator,\n    const void * data,\n    uint32_t len\n)\n\nGet a record in a primary 64-bit integer index table. \nGet a record in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the record to retrieve \ndata - Pointer to the buffer which will be filled with the retrieved record \nlen - Size of the buffer \n\nReturns:\nsize of the data copied into the buffer if len > 0, or size of the retrieved record if len == 0. \nPrecondition:\niterator points to an existing table row in the table \nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPost\ndata will be filled with the retrieved record (truncated to the first len bytes if necessary)\nExample:\nchar value[50];\nauto len = db_get_i64(itr, value, 0);\neosio_assert(len \nfunction db_next_i64\nint32_t databasec::db_next_i64 (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a primary 64-bit integer index table. \nFind the table row following the referenced table row in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched\nExample:\nint32_t charlie_itr = db_find_i64(receiver, receiver, table1, \"charlie\"_n);\n// expect nothing after charlie\nuint64_t prim = 0\nint32_t  end_itr = db_next_i64(charlie_itr, &prim);\neosio_assert(end_itr \nfunction db_previous_i64\nint32_t databasec::db_previous_i64 (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a primary 64-bit integer index table. \nFind the table row preceding the referenced table row in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched\nExample:\nuint64_t prim = 0;\nint32_t  itr_prev = db_previous_i64(itr, &prim);\n\nfunction db_find_i64\nint32_t databasec::db_find_i64 (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t id\n)\n\nFind a table row in a primary 64-bit integer index table by primary key. \nFind a table row in a primary 64-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key of the table row to look up \n\nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found\nExample:\nint itr = db_find_i64(receiver, receiver, table1, \"charlie\"_n);\n\nfunction db_lowerbound_i64\nint32_t databasec::db_lowerbound_i64 (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t id\n)\n\nFind the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key. \nFind the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key The table row that matches the lowerbound condition is the first table row in the table with the lowest primary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key used to determine the lowerbound \n\nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_upperbound_i64\nint32_t databasec::db_upperbound_i64 (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t id\n)\n\nFind the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key. \nFind the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key The table row that matches the upperbound condition is the first table row in the table with the lowest primary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key used to determine the upperbound \n\nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_end_i64\nint32_t databasec::db_end_i64 (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table. \nGet an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx64_store\nint32_t databasec::db_idx64_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const uint64_t * secondary\n)\n\nStore an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. \nStore an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary 64-bit integer index table \nfunction db_idx64_update\nvoid databasec::db_idx64_update (\n    int32_t iterator,\n    capi_name payer,\n    const uint64_t * secondary\n)\n\nUpdate an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. \nUpdate an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx64_remove\nvoid databasec::db_idx64_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 64-bit integer index table. \nRemove a table row from a secondary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx64_next\nint32_t databasec::db_idx64_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 64-bit integer index table. \nFind the table row following the referenced table row in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx64_previous\nint32_t databasec::db_idx64_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 64-bit integer index table. \nFind the table row preceding the referenced table row in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx64_find_primary\nint32_t databasec::db_idx64_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary 64-bit integer index table by primary key. \nFind a table row in a secondary 64-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a uint64\\_t variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx64_find_secondary\nint32_t databasec::db_idx64_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 64-bit integer index table by secondary key. \nFind a table row in a secondary 64-bit integer index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx64_lowerbound\nint32_t databasec::db_idx64_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx64_upperbound\nint32_t databasec::db_idx64_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx64_end\nint32_t databasec::db_idx64_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx128_store\nint32_t databasec::db_idx128_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const uint128_t * secondary\n)\n\nStore an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. \nStore an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary 128-bit integer index table \nfunction db_idx128_update\nvoid databasec::db_idx128_update (\n    int32_t iterator,\n    capi_name payer,\n    const uint128_t * secondary\n)\n\nUpdate an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. \nUpdate an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx128_remove\nvoid databasec::db_idx128_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 128-bit integer index table. \nRemove a table row from a secondary 128-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx128_next\nint32_t databasec::db_idx128_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 128-bit integer index table. \nFind the table row following the referenced table row in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx128_previous\nint32_t databasec::db_idx128_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 128-bit integer index table. \nFind the table row preceding the referenced table row in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx128_find_primary\nint32_t databasec::db_idx128_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary 128-bit integer index table by primary key. \nFind a table row in a secondary 128-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a uint128\\_t variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx128_find_secondary\nint32_t databasec::db_idx128_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 128-bit integer index table by secondary key. \nFind a table row in a secondary 128-bit integer index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx128_lowerbound\nint32_t databasec::db_idx128_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx128_upperbound\nint32_t databasec::db_idx128_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx128_end\nint32_t databasec::db_idx128_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx256_store\nint32_t databasec::db_idx256_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const uint128_t * data,\n    uint32_t data_len\n)\n\nStore an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table. \nStore an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \ndata - Pointer to the secondary key data stored as an array of 2 uint128\\_t integers \ndata_len - Must be set to 2 \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and the specified secondary key is created in the secondary 256-bit index table \nfunction db_idx256_update\nvoid databasec::db_idx256_update (\n    int32_t iterator,\n    capi_name payer,\n    const uint128_t * data,\n    uint32_t data_len\n)\n\nUpdate an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table. \nUpdate an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \ndata - Pointer to the new secondary key data (which is stored as an array of 2 uint128\\_t integers) that will replace the existing one of the association \ndata_len - Must be set to 2 \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by the specified secondary key \nfunction db_idx256_remove\nvoid databasec::db_idx256_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 256-bit index table. \nRemove a table row from a secondary 256-bit index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx256_next\nint32_t databasec::db_idx256_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 256-bit index table. \nFind the table row following the referenced table row in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx256_previous\nint32_t databasec::db_idx256_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 256-bit index table. \nFind the table row preceding the referenced table row in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx256_find_primary\nint32_t databasec::db_idx256_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t primary\n)\n\nFind a table row in a secondary 128-bit integer index table by primary key. \nFind a table row in a secondary 256-bit index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the an array of 2 uint128\\_t integers which will act as the buffer to hold the retrieved secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx256_find_secondary\nint32_t databasec::db_idx256_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 256-bit index table by secondary key. \nFind a table row in a secondary 256-bit index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) used to lookup the table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to the specified secondary key or the end iterator of the table if the table row could not be found \nfunction db_idx256_lowerbound\nint32_t databasec::db_idx256_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key (uses lexicographical ordering on the 256-bit keys)\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx256_upperbound\nint32_t databasec::db_idx256_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key (uses lexicographical ordering on the 256-bit keys)\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) first used to determine the upperbound and which is then replaced with the secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx256_end\nint32_t databasec::db_idx256_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx_double_store\nint32_t databasec::db_idx_double_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const double * secondary\n)\n\nStore an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. \nStore an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary double-precision floating-point index table \nfunction db_idx_double_update\nvoid databasec::db_idx_double_update (\n    int32_t iterator,\n    capi_name payer,\n    const double * secondary\n)\n\nUpdate an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. \nUpdate an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx_double_remove\nvoid databasec::db_idx_double_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary double-precision floating-point index table. \nRemove a table row from a secondary double-precision floating-point index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx_double_next\nint32_t databasec::db_idx_double_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary double-precision floating-point index table. \nFind the table row following the referenced table row in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_double_previous\nint32_t databasec::db_idx_double_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary double-precision floating-point index table. \nFind the table row preceding the referenced table row in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_double_find_primary\nint32_t databasec::db_idx_double_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    double * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary double-precision floating-point index table by primary key. \nFind a table row in a secondary double-precision floating-point index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a double variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx_double_find_secondary\nint32_t databasec::db_idx_double_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const double * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary double-precision floating-point index table by secondary key. \nFind a table row in a secondary double-precision floating-point index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a double variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx_double_lowerbound\nint32_t databasec::db_idx_double_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_double_upperbound\nint32_t databasec::db_idx_double_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_double_end\nint32_t databasec::db_idx_double_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx_long_double_store\nint32_t databasec::db_idx_long_double_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const long double * secondary\n)\n\nStore an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. \nStore an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary quadruple-precision floating-point index table \nfunction db_idx_long_double_update\nvoid databasec::db_idx_long_double_update (\n    int32_t iterator,\n    capi_name payer,\n    const long double * secondary\n)\n\nUpdate an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. \nUpdate an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx_long_double_remove\nvoid databasec::db_idx_long_double_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary quadruple-precision floating-point index table. \nRemove a table row from a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx_long_double_next\nint32_t databasec::db_idx_long_double_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary quadruple-precision floating-point index table. \nFind the table row following the referenced table row in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_long_double_previous\nint32_t databasec::db_idx_long_double_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table. \nFind the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_long_double_find_primary\nint32_t databasec::db_idx_long_double_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    long double * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary quadruple-precision floating-point index table by primary key. \nFind a table row in a secondary quadruple-precision floating-point index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a long double variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_find_secondary\nint32_t databasec::db_idx_long_double_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const long double * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary quadruple-precision floating-point index table by secondary key. \nFind a table row in a secondary quadruple-precision floating-point index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a long double variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_lowerbound\nint32_t databasec::db_idx_long_double_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    long double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_upperbound\nint32_t databasec::db_idx_long_double_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    long double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_end\nint32_t databasec::db_idx_long_double_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \n"},"group__databasecpp.html":{"url":"group__databasecpp.html","title":"Databasecpp","keywords":"databasecpp eosio::singleton","body":"group databasecpp\nDefines an interface to EOSIO database. More...\nModules\n\nMulti Index Table Defines EOSIO Multi Index Table. \nSingleton Table Defines EOSIO Singleton Table. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::singleton\n\n\n\nDetailed Description\n"},"group__multiindex.html":{"url":"group__multiindex.html","title":"Multiindex","keywords":"multiindex eosio::multi_index","body":"group multiindex\nDefines EOSIO Multi Index Table. More...\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::multi_index\n\n\n\nDetailed Description\nEOSIO Multi-Index API provides a C++ interface to the EOSIO database. It is patterned after Boost Multi Index Container. EOSIO Multi-Index table requires exactly a uint64_t primary key. For the table to be able to retrieve the primary key, the object stored inside the table is required to have a const member function called primary_key() that returns uint64_t. EOSIO Multi-Index table also supports up to 16 secondary indices. The type of the secondary indices could be any of:\n\nuint64_t\nuint128_t\nuint256_t\ndouble\nlong double\n\nTemplate parameters:\n\nTableName - name of the table \nT - type of the data stored inside the table \nIndices - secondary indices for the table, up to 16 indices is supported here\n\nExample:\n#include \nusing namespace eosio;\nclass mycontract: contract {\n  struct record {\n    uint64_t    primary;\n    uint64_t    secondary_1;\n    uint128_t   secondary_2;\n    uint256_t   secondary_3;\n    double      secondary_4;\n    long double secondary_5;\n    uint64_t primary_key() const { return primary; }\n    uint64_t get_secondary_1() const { return secondary_1; }\n    uint128_t get_secondary_2() const { return secondary_2; }\n    uint256_t get_secondary_3() const { return secondary_3; }\n    double get_secondary_4() const { return secondary_4; }\n    long double get_secondary_5() const { return secondary_5; }\n  };\n  public:\n    mycontract(name receiver, name code, datastream ds):contract(receiver, code, ds){}\n    void myaction() {\n      auto code = _self;\n      auto scope = _self;\n      multi_index >,\n        indexed_by >,\n        indexed_by >,\n        indexed_by >,\n        indexed_by >\n      > table( code, scope);\n    }\n}\nEOSIO_DISPATCH( mycontract, (myaction) )\n\n"},"group__singleton.html":{"url":"group__singleton.html","title":"Singleton","keywords":"singleton eosio::singleton","body":"group singleton\nDefines EOSIO Singleton Table. \nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::singleton\n\n\n\n"},"group__dispatcher.html":{"url":"group__dispatcher.html","title":"Dispatcher","keywords":"dispatcher execute_action","body":"group dispatcher\nDefines functions to dispatch action to proper action handler inside a contract. \nModules\n\nDispatcher C++ API Defines C++ functions to dispatch action to proper action handler inside a contract. \n\nfunction execute_action\nbool dispatcher::execute_action (\n    name self,\n    name code,\n    void(T::*)(Args...) func\n)\n\nUnpack the received action and execute the correponding action handler. \nUnpack the received action and execute the correponding action handler\nTemplate parameters:\n\nT - The contract class that has the correponding action handler, this contract should be derived from eosio::contract \nQ - The namespace of the action handler function \nArgs - The arguments that the action handler accepts, i.e. members of the action \n\nParameters:\n\nobj - The contract object that has the correponding action handler \nfunc - The action handler \n\nReturns:\ntrue \n"},"group__dispatchercpp.html":{"url":"group__dispatchercpp.html","title":"Dispatchercpp","keywords":"dispatchercpp execute_action","body":"group dispatchercpp\nDefines C++ functions to dispatch action to proper action handler inside a contract. \nfunction execute_action\nbool dispatchercpp::execute_action (\n    name self,\n    name code,\n    void(T::*)(Args...) func\n)\n\nUnpack the received action and execute the correponding action handler. \nUnpack the received action and execute the correponding action handler\nTemplate parameters:\n\nT - The contract class that has the correponding action handler, this contract should be derived from eosio::contract \nQ - The namespace of the action handler function \nArgs - The arguments that the action handler accepts, i.e. members of the action \n\nParameters:\n\nobj - The contract object that has the correponding action handler \nfunc - The action handler \n\nReturns:\ntrue \n"},"group__fixedpoint.html":{"url":"group__fixedpoint.html","title":"Fixedpoint","keywords":"fixedpoint eosio::fixed_point32 eosio::fixed_point64 eosio::fixed_point128","body":"group fixedpoint\n32,64,128,256 bits version of fixed point variables More...\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::fixed_point32\n\n\nstruct\neosio::fixed_point64\n\n\nstruct\neosio::fixed_point128\n\n\n\nDetailed Description\nFloating point operations are indeterministic, hence is prevented in smart contract. The smart contract developers should use the appropriate Fixed_Point template class by passing the number to be represented in integer format and the number of decimals required. These template classes also support the arithmetic operations and basic comparison operators \n"},"group__memoryapi.html":{"url":"group__memoryapi.html","title":"Memoryapi","keywords":"memoryapi malloc calloc realloc free","body":"group memoryapi\nDefines common memory functions. \nModules\n\nMemory C++ API Defines common memory functions. \n\nfunction malloc\nvoid * memoryapi::malloc (\n    size_t size\n)\n\nAllocate additional memory. \nnamespace eosio\nAllocate additional memory\nParameters:\n\nsize - Number of additional bytes to be allocated \n\nReturns:\nvoid* - Pointer to start of the new allocated memory\nAllocate additional memory. \nfunction calloc\nvoid * memoryapi::calloc (\n    size_t count,\n    size_t size\n)\n\nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0. \nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0\nParameters:\n\ncount - Number of elements to allocate \nsize - Size of each element \n\nReturns:\nvoid* - Pointer to start of the new allocated memory \nfunction realloc\nvoid * memoryapi::realloc (\n    void * ptr,\n    size_t size\n)\n\nReallocate the given area of memory. \nReallocate the given area of memory, which is allocated by malloc(), calloc(), or realloc() previously\nParameters:\n\nptr - Pointer to the memory area to be reallocated \nsize - New size of the memory \n\nReturns:\nvoid* - Pointer to the new reallocated memory \nfunction free\nvoid memoryapi::free (\n    void * ptr\n)\n\nDeallocates the given area of memory. \nDeallocates the given area of memory which is previously allocated by malloc(), calloc(), or realloc() \nParameters:\n\nptr - Pointer to the memory to be deallocated \n\n"},"group__memorycppapi.html":{"url":"group__memorycppapi.html","title":"Memorycppapi","keywords":"memorycppapi malloc calloc realloc free","body":"group memorycppapi\nDefines common memory functions. \nfunction malloc\nvoid * memorycppapi::malloc (\n    size_t size\n)\n\nAllocate additional memory. \nnamespace eosio\nAllocate additional memory\nParameters:\n\nsize - Number of additional bytes to be allocated \n\nReturns:\nvoid* - Pointer to start of the new allocated memory\nAllocate additional memory. \nfunction calloc\nvoid * memorycppapi::calloc (\n    size_t count,\n    size_t size\n)\n\nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0. \nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0\nParameters:\n\ncount - Number of elements to allocate \nsize - Size of each element \n\nReturns:\nvoid* - Pointer to start of the new allocated memory \nfunction realloc\nvoid * memorycppapi::realloc (\n    void * ptr,\n    size_t size\n)\n\nReallocate the given area of memory. \nReallocate the given area of memory, which is allocated by malloc(), calloc(), or realloc() previously\nParameters:\n\nptr - Pointer to the memory area to be reallocated \nsize - New size of the memory \n\nReturns:\nvoid* - Pointer to the new reallocated memory \nfunction free\nvoid memorycppapi::free (\n    void * ptr\n)\n\nDeallocates the given area of memory. \nDeallocates the given area of memory which is previously allocated by malloc(), calloc(), or realloc() \nParameters:\n\nptr - Pointer to the memory to be deallocated \n\n"},"group__serialize.html":{"url":"group__serialize.html","title":"Serialize","keywords":"serialize EOSLIB_REFLECT EOSLIB_REFLECT_TEMPLATE EOSLIB_REFLECT_EMPTY EOSLIB_REFLECT_FWD EOSLIB_REFLECT_DERIVED EOSLIB_REFLECT_DERIVED_TEMPLATE EOSLIB_SERIALIZE EOSLIB_SERIALIZE_DERIVED","body":"group serialize\nDefines functions to serialize and deserialize object. \nModules\n\nData Stream Defines data stream for reading and writing data in the form of bytes. \nSerialize C++ API Defines C++ API to serialize and deserialize object. \n\nDefines\ndefine EOSLIB_REFLECT\ndefine EOSLIB_REFLECT;\n\nSpecializes eosio::reflector for TYPE. \nPerform class reflection\nParameters:\n\nTYPE - the class template to be reflected \nMEMBERS - a sequence of member names. (field1)(field2)(field3)\n\nSee also: EOSLIB_REFLECT_DERIVED \ndefine EOSLIB_REFLECT_TEMPLATE\ndefine EOSLIB_REFLECT_TEMPLATE;\n\nPerform class template reflection. \nPerform class template reflection\nParameters:\n\nTEMPLATE_ARGS - a sequence of template args. (args1)(args2)(args3) \nTYPE - the class template to be reflected \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_REFLECT_EMPTY\ndefine EOSLIB_REFLECT_EMPTY;\n\nPerform class reflection on empty class. \nPerform class reflection on empty class\nParameters:\n\nTYPE - the class to be reflected \n\ndefine EOSLIB_REFLECT_FWD\ndefine EOSLIB_REFLECT_FWD;\n\nPerform forward declaration of class reflection. \nPerform forward declaration of class reflection\nParameters:\n\nTYPE - the class to be reflected \n\ndefine EOSLIB_REFLECT_DERIVED\ndefine EOSLIB_REFLECT_DERIVED;\n\nSpecializes eosio::reflector for TYPE where type inherits other reflected classes. \nPerform class reflection where TYPE inherits other reflected classes\nParameters:\n\nTYPE - the class to be reflected \nINHERITS - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_REFLECT_DERIVED_TEMPLATE\ndefine EOSLIB_REFLECT_DERIVED_TEMPLATE;\n\nPerform class template reflection where TYPE inherits other reflected classes. \nPerform class template reflection where TYPE inherits other reflected classes\nParameters:\n\nTEMPLATE_ARGS - a sequence of template args. (args1)(args2)(args3) \nTYPE - the class to be reflected \nINHERITS - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_SERIALIZE\ndefine EOSLIB_SERIALIZE;\n\nDefines serialization and deserialization for a class. \nDefines serialization and deserialization for a class\nParameters:\n\nTYPE - the class to have its serialization and deserialization defined \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_SERIALIZE_DERIVED\ndefine EOSLIB_SERIALIZE_DERIVED;\n\nDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined. \nDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined\nParameters:\n\nTYPE - the class to have its serialization and deserialization defined \nBASE - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\n"},"group__datastream.html":{"url":"group__datastream.html","title":"Datastream","keywords":"datastream eosio::datastream eosio::datastream< size_t > operator<< operator>> operator<< deserialize operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator >> operator<< operator >> operator >> operator<< operator >> operator<< operator<< operator >> operator >> operator<< operator >> operator<< operator >> operator<< operator >> operator<< operator>> operator<< operator>> operator<< operator>> unpack unpack pack_size pack operator<< operator>> operator<< operator>>","body":"group datastream\nDefines data stream for reading and writing data in the form of bytes. \nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::datastream\n\n\nclass\neosio::datastream\n\n\n\nfunction operator\ndatastream & datastream::operator & ds,\n    const eosio::binary_extension & be\n)\n\nSerialize a binary_extension. \nSerialize a binary_extension into a stream\nParameters:\n\nds - The stream to write \nopt - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    eosio::binary_extension & be\n)\n\nDeserialize a binary_extension. \nDeserialize a binary_extension from a stream\nParameters:\n\nds - The stream to read \nopt - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const std::variant & var\n)\n\nSerialize an std::variant. \nSerialize an std::variant into a stream\nParameters:\n\nds - The stream to write \nopt - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction deserialize\nvoid datastream::deserialize (\n    datastream & ds,\n    std::variant & var,\n    int i\n)\n\nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    std::variant & var\n)\n\nDeserialize an std::variant. \nDeserialize an std::variant from a stream\nParameters:\n\nds - The stream to read \nopt - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & t\n)\n\nSerialize an std::pair. \nSerialize an std::pair\nParameters:\n\nds - The stream to write \nt - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nArgs - Type of the objects contained in the tuple \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    std::pair & t\n)\n\nDeserialize an std::pair. \nDeserialize an std::pair\nParameters:\n\nds - The stream to read \nt - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nArgs - Type of the objects contained in the tuple \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const std::optional & opt\n)\n\nSerialize an optional. \nSerialize an optional into a stream\nParameters:\n\nds - The stream to write \nopt - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    std::optional & opt\n)\n\nDeserialize an optional. \nDeserialize an optional from a stream\nParameters:\n\nds - The stream to read \nopt - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const eosio::symbol_code sym_code\n)\n\nSerialize a symbol_code. \nSerialize a symbol_code into a stream\nParameters:\n\nds - The stream to write \nsym - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    eosio::symbol_code & sym_code\n)\n\nDeserialize a symbol_code. \nDeserialize a symbol_code from a stream\nParameters:\n\nds - The stream to read \nsymbol - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const eosio::symbol sym\n)\n\nSerialize a symbol. \nSerialize a symbol into a stream\nParameters:\n\nds - The stream to write \nsym - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    eosio::symbol & sym\n)\n\nDeserialize a symbol. \nDeserialize a symbol from a stream\nParameters:\n\nds - The stream to read \nsymbol - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const ::eosio::ignore_wrapper & val\n)\n\nSerialize ignored_wrapper's T value. \nSerialize an ignored_wrapper type into a stream\nParameters:\n\nds - The stream to write \nval - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const ::eosio::ignore & val\n)\n\nSerialize an ignored type. \nSerialize an ignored type into a stream\nParameters:\n\nds - The stream to write \nignore - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    ::eosio::ignore \n)\n\nDeserialize an ignored type. \nDeserialize an ignored type from a stream\nParameters:\n\nds - The stream to read \nignored - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const capi_public_key & pubkey\n)\n\nSerialize a public_key. \nSerialize a public_key into a stream\nParameters:\n\nds - The stream to write \npubkey - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    capi_public_key & pubkey\n)\n\nDeserialize a public_key. \nDeserialize a public_key from a stream\nParameters:\n\nds - The stream to read \npubkey - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const eosio::public_key & pubkey\n)\n\nSerialize an eosio::public_key. \nSerialize an eosio::public_key into a stream\nParameters:\n\nds - The stream to write \npubkey - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    eosio::public_key & pubkey\n)\n\nDeserialize an eosio::public_key. \nDeserialize an eosio::public_key from a stream\nParameters:\n\nds - The stream to read \npubkey - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const eosio::signature & sig\n)\n\nSerialize an eosio::signature. \nSerialize an eosio::signature into a stream\nParameters:\n\nds - The stream to write \nsig - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    eosio::signature & sig\n)\n\nDeserialize an eosio::signature. \nDeserialize an eosio::signature from a stream\nParameters:\n\nds - The stream to read \nsig - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const key256 & d\n)\n\nSerialize a key256. \nSerialize a key256 into a stream\nParameters:\n\nds - The stream to write \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    key256 & d\n)\n\nDeserialize a key256. \nDeserialize a key256 from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const fixed_bytes & d\n)\n\nSerialize a fixed_bytes. \nSerialize a fixed_bytes into a stream\nParameters:\n\nds - The stream to write \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    fixed_bytes & d\n)\n\nDeserialize a fixed_bytes. \nDeserialize a fixed_bytes from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const bool & d\n)\n\nSerialize a bool into a stream. \nSerialize a bool into a stream\nParameters:\n\nds - The stream to read \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    bool & d\n)\n\nDeserialize a bool. \nDeserialize a bool from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const capi_checksum256 & d\n)\n\nSerialize a checksum256. \nSerialize a checksum256 into a stream\nParameters:\n\nds - The stream to write \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    capi_checksum256 & d\n)\n\nDeserialize a checksum256. \nDeserialize a checksum256 from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator\nSerialize a string. \nSerialize a string into a stream\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & datastream::operator >> (\n    DataStream & ds,\n    std::string & v\n)\n\nDeserialize a string. \nDeserialize a string from a stream\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & v\n)\n\nSerialize a fixed size std::array. \nSerialize a fixed size std::array\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the array \nN - Size of the array \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & datastream::operator >> (\n    DataStream & ds,\n    std::array & v\n)\n\nDeserialize a fixed size std::array. \nDeserialize a fixed size std::array\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the array \nN - Size of the array \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & datastream::operator >> (\n    DataStream & ds,\n    T \n)\n\nDeserialize a a pointer. \nPointer should not be serialized, so this function will always throws an error\nParameters:\n\nds - The stream to read \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the pointer \n\nReturns:\nDataStream& - Reference to the datastream \nPost\nThrow an exception if it is a pointer \nfunction operator\nDataStream & datastream::operator\nSerialize a fixed size C array of non-primitive and non-pointer type. \nSerialize a fixed size C array of primitive type.\nSerialize a fixed size C array of non-primitive and non-pointer type\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the pointer \n\nReturns:\nDataStream& - Reference to the datastream\nSerialize a fixed size C array of primitive type\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the pointer \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & datastream::operator >> (\n    DataStream & ds,\n    T(&) v\n)\n\nDeserialize a fixed size C array of non-primitive and non-pointer type. \nDeserialize a fixed size C array of primitive type.\nDeserialize a fixed size C array of non-primitive and non-pointer type\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nT - Type of the object contained in the array \nN - Size of the array \nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream\nDeserialize a fixed size C array of primitive type\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nT - Type of the object contained in the array \nN - Size of the array \nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & v\n)\n\nSerialize a vector of char. \nSerialize a vector of char\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & v\n)\n\nSerialize a vector. \nSerialize a vector\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the vector \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & datastream::operator >> (\n    DataStream & ds,\n    std::vector & v\n)\n\nDeserialize a vector of char. \nDeserialize a vector of char\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & datastream::operator >> (\n    DataStream & ds,\n    std::vector & v\n)\n\nDeserialize a vector. \nDeserialize a vector\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the vector \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & s\n)\n\nSerialize a set. \nSerialize a set\nParameters:\n\nds - The stream to write \ns - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the set \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & datastream::operator >> (\n    DataStream & ds,\n    std::set & s\n)\n\nDeserialize a set. \nDeserialize a set\nParameters:\n\nds - The stream to read \ns - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the set \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & m\n)\n\nSerialize a map. \nSerialize a map\nParameters:\n\nds - The stream to write \nm - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the map \nV - Type of the value contained in the map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & datastream::operator >> (\n    DataStream & ds,\n    std::map & m\n)\n\nDeserialize a map. \nDeserialize a map\nParameters:\n\nds - The stream to read \nm - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the map \nV - Type of the value contained in the map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & s\n)\n\nSerialize a flat_set. \nSerialize a flat_set\nParameters:\n\nds - The stream to write \ns - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the value contained in the flat_set \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & datastream::operator >> (\n    DataStream & ds,\n    boost::container::flat_set & s\n)\n\nDeserialize a flat_set. \nDeserialize a flat_set\nParameters:\n\nds - The stream to read \ns - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the value contained in the flat_set \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & m\n)\n\nSerialize a flat map. \nSerialize a flat map\nParameters:\n\nds - The stream to write \nm - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the flat map \nV - Type of the value contained in the flat map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    boost::container::flat_map & m\n)\n\nDeserialize a flat map. \nDeserialize a flat map\nParameters:\n\nds - The stream to read \nm - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the flat map \nV - Type of the value contained in the flat map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator & t\n)\n\nSerialize a tuple. \nSerialize a tuple\nParameters:\n\nds - The stream to write \nt - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nArgs - Type of the objects contained in the tuple \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    std::tuple & t\n)\n\nDeserialize a tuple. \nDeserialize a tuple\nParameters:\n\nds - The stream to read \nt - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nArgs - Type of the objects contained in the tuple \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & datastream::operator\nSerialize a class. \nSerialize a primitive type.\nSerialize a class\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of class \n\nReturns:\nDataStream& - Reference to the datastream\nSerialize a primitive type\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the primitive type \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & datastream::operator>> (\n    DataStream & ds,\n    T & v\n)\n\nDeserialize a class. \nDeserialize a primitive type.\nDeserialize a class\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of class \n\nReturns:\nDataStream& - Reference to the datastream\nDeserialize a primitive type\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the primitive type \n\nReturns:\nDataStream& - Reference to the datastream \nfunction unpack\nT datastream::unpack (\n    const char * buffer,\n    size_t len\n)\n\nUnpack data inside a fixed size buffer as T. \nUnpack data inside a fixed size buffer as T\nTemplate parameters:\n\nT - Type of the unpacked data \n\nParameters:\n\nbuffer - Pointer to the buffer \nlen - Length of the buffer \n\nReturns:\nT - The unpacked data \nfunction unpack\nT datastream::unpack (\n    const std::vector & bytes\n)\n\nUnpack data inside a variable size buffer as T. \nUnpack data inside a variable size buffer as T\nTemplate parameters:\n\nT - Type of the unpacked data \n\nParameters:\n\nbytes - Buffer \n\nReturns:\nT - The unpacked data \nfunction pack_size\nsize_t datastream::pack_size (\n    const T & value\n)\n\nGet the size of the packed data. \nGet the size of the packed data\nTemplate parameters:\n\nT - Type of the data to be packed \n\nParameters:\n\nvalue - Data to be packed \n\nReturns:\nsize_t - Size of the packed data \nfunction pack\nstd::vector datastream::pack (\n    const T & value\n)\n\nGet packed data. \nGet packed data\nTemplate parameters:\n\nT - Type of the data to be packed \n\nParameters:\n\nvalue - Data to be packed \n\nReturns:\nbytes - The packed data \nfunction operator\ndatastream & datastream::operator & ds,\n    const capi_checksum160 & cs\n)\n\nSerializea capi_checksum160 type. \nSerialize a capi_checksum160 type\nParameters:\n\nds - The stream to write \ncs - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    capi_checksum160 & cs\n)\n\nDeserialize a capi_checksum160 type. \nDeserialize a capi_checksum160 type\nParameters:\n\nds - The stream to read \ncs - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & datastream::operator & ds,\n    const capi_checksum512 & cs\n)\n\nSerialize a capi_checksum512 type. \nSerialize a capi_checksum512 type\nParameters:\n\nds - The stream to write \ncs - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & datastream::operator>> (\n    datastream & ds,\n    capi_checksum512 & cs\n)\n\nDeserialize a capi_checksum512 type. \nDeserialize a capi_checksum512 type\nParameters:\n\nds - The stream to read \ncs - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \n"},"group__serializecpp.html":{"url":"group__serializecpp.html","title":"Serializecpp","keywords":"serializecpp EOSLIB_REFLECT EOSLIB_REFLECT_TEMPLATE EOSLIB_REFLECT_EMPTY EOSLIB_REFLECT_FWD EOSLIB_REFLECT_DERIVED EOSLIB_REFLECT_DERIVED_TEMPLATE EOSLIB_SERIALIZE EOSLIB_SERIALIZE_DERIVED","body":"group serializecpp\nDefines C++ API to serialize and deserialize object. \nDefines\ndefine EOSLIB_REFLECT\ndefine EOSLIB_REFLECT;\n\nSpecializes eosio::reflector for TYPE. \nPerform class reflection\nParameters:\n\nTYPE - the class template to be reflected \nMEMBERS - a sequence of member names. (field1)(field2)(field3)\n\nSee also: EOSLIB_REFLECT_DERIVED \ndefine EOSLIB_REFLECT_TEMPLATE\ndefine EOSLIB_REFLECT_TEMPLATE;\n\nPerform class template reflection. \nPerform class template reflection\nParameters:\n\nTEMPLATE_ARGS - a sequence of template args. (args1)(args2)(args3) \nTYPE - the class template to be reflected \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_REFLECT_EMPTY\ndefine EOSLIB_REFLECT_EMPTY;\n\nPerform class reflection on empty class. \nPerform class reflection on empty class\nParameters:\n\nTYPE - the class to be reflected \n\ndefine EOSLIB_REFLECT_FWD\ndefine EOSLIB_REFLECT_FWD;\n\nPerform forward declaration of class reflection. \nPerform forward declaration of class reflection\nParameters:\n\nTYPE - the class to be reflected \n\ndefine EOSLIB_REFLECT_DERIVED\ndefine EOSLIB_REFLECT_DERIVED;\n\nSpecializes eosio::reflector for TYPE where type inherits other reflected classes. \nPerform class reflection where TYPE inherits other reflected classes\nParameters:\n\nTYPE - the class to be reflected \nINHERITS - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_REFLECT_DERIVED_TEMPLATE\ndefine EOSLIB_REFLECT_DERIVED_TEMPLATE;\n\nPerform class template reflection where TYPE inherits other reflected classes. \nPerform class template reflection where TYPE inherits other reflected classes\nParameters:\n\nTEMPLATE_ARGS - a sequence of template args. (args1)(args2)(args3) \nTYPE - the class to be reflected \nINHERITS - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_SERIALIZE\ndefine EOSLIB_SERIALIZE;\n\nDefines serialization and deserialization for a class. \nDefines serialization and deserialization for a class\nParameters:\n\nTYPE - the class to have its serialization and deserialization defined \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_SERIALIZE_DERIVED\ndefine EOSLIB_SERIALIZE_DERIVED;\n\nDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined. \nDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined\nParameters:\n\nTYPE - the class to have its serialization and deserialization defined \nBASE - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\n"},"group__symbolapi.html":{"url":"group__symbolapi.html","title":"Symbolapi","keywords":"symbolapi eosio::symbol_code eosio::symbol eosio::extended_symbol Stores Extended value value symbol contract symbol_code symbol_code symbol_code is_valid length raw operator bool write_as_string to_string symbol symbol symbol symbol is_valid precision code raw operator bool print extended_symbol extended_symbol get_symbol get_contract print operator== operator != operator< operator== operator != operator< operator== operator != operator<","body":"group symbolapi\nDefines API for managing symbols. \nModules\n\nSymbol CPP API Defines CPP API for managing symbols. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::symbol_code\n\n\nclass\neosio::symbol\n\n\nclass\neosio::extended_symbol\n\n\nstruct\nStores\n\n\nstruct\nExtended\n\n\n\nVariables\n\n\n\nType\nName\n\n\n\n\nuint64_t\nvalue\n\n\nuint64_t\nvalue\n\n\nsymbol\nsymbolthe symbol\n\n\nname\ncontractthe token contract hosting the symbol\n\n\n\nvariable value\nuint64_t eosio::symbol_code::value;\n\nvariable value\nuint64_t eosio::symbol::value;\n\nvariable symbol\nsymbol eosio::extended_symbol::symbol;\n\nthe symbol \nvariable contract\nname eosio::extended_symbol::contract;\n\nthe token contract hosting the symbol \nfunction symbol_code\nconstexpr symbolapi::symbol_code ()\n\nfunction symbol_code\nexplicit constexpr symbolapi::symbol_code (\n    uint64_t raw\n)\n\nfunction symbol_code\nexplicit constexpr symbolapi::symbol_code (\n    std::string_view str\n)\n\nfunction is_valid\nconstexpr bool symbolapi::is_valid () const\n\nChecks if the symbol code is valid \nReturns:\ntrue - if symbol is valid \nfunction length\nconstexpr uint32_t symbolapi::length () const\n\nReturns the character length of the provided symbol\nReturns:\nlength - character length of the provided symbol \nfunction raw\nconstexpr uint64_t symbolapi::raw () const\n\nfunction operator bool\nexplicit constexpr symbolapi::operator bool () const\n\nfunction write_as_string\nchar * symbolapi::write_as_string (\n    char * begin,\n    char * end\n) const\n\nWrites the symbol_code as a string to the provided char buffer. \nWrites the symbol_code as a string to the provided char buffer\nPrecondition:\nAppropriate Size Precondition: (begin + 7) \nPrecondition:\nValid Memory Region Precondition: The range [begin, end) must be a valid range of memory to write to. \nParameters:\n\nbegin - The start of the char buffer \nend - Just past the end of the char buffer \n\nReturns:\nchar* - Just past the end of the last character written (returns begin if the Appropriate Size Precondition is not satisfied) \nPost\nIf the Appropriate Size Precondition is satisfied, the range [begin, returned pointer) contains the string representation of the symbol_code. \nfunction to_string\nstd::string symbolapi::to_string () const\n\nfunction symbol\nconstexpr symbolapi::symbol ()\n\nfunction symbol\nexplicit constexpr symbolapi::symbol (\n    uint64_t raw\n)\n\nfunction symbol\nconstexpr symbolapi::symbol (\n    symbol_code sc,\n    uint8_t precision\n)\n\nfunction symbol\nconstexpr symbolapi::symbol (\n    std::string_view ss,\n    uint8_t precision\n)\n\nfunction is_valid\nconstexpr bool symbolapi::is_valid () const\n\nIs this symbol valid \nfunction precision\nconstexpr uint8_t symbolapi::precision () const\n\nThis symbol's precision \nfunction code\nconstexpr symbol_code symbolapi::code () const\n\nReturns representation of symbol name \nfunction raw\nconstexpr uint64_t symbolapi::raw () const\n\nReturns uint64_t repreresentation of the symbol \nfunction operator bool\nexplicit constexpr symbolapi::operator bool () const\n\nfunction print\nvoid symbolapi::print (\n    bool show_precision = true\n) const\n\nPrint the symbol \nPrint the symbol \nfunction extended_symbol\nconstexpr symbolapi::extended_symbol ()\n\nfunction extended_symbol\nconstexpr symbolapi::extended_symbol (\n    symbol sym,\n    name con\n)\n\nfunction get_symbol\nconstexpr symbol symbolapi::get_symbol () const\n\nfunction get_contract\nconstexpr name symbolapi::get_contract () const\n\nfunction print\nvoid symbolapi::print (\n    bool show_precision = true\n) const\n\nPrint the extended symbol \nPrint the extended symbol \nfriend operator==\nfriend constexpr bool symbolapi::operator== (\n    const symbol_code & a,\n    const symbol_code & b\n)\n\nEquivalency operator. \nEquivalency operator. Returns true if a == b (are the same)\nReturns:\nboolean - true if both provided symbol_codes are the same \nfriend operator !=\nfriend constexpr bool symbolapi::operator != (\n    const symbol_code & a,\n    const symbol_code & b\n)\n\nInverted equivalency operator. \nInverted equivalency operator. Returns true if a != b (are different)\nReturns:\nboolean - true if both provided symbol_codes are not the same \nfriend operator\nfriend constexpr bool symbolapi::operator\nLess than operator. \nLess than operator. Returns true if a \nReturns:\nboolean - true if symbol_code a is less than b \nfriend operator==\nfriend constexpr bool symbolapi::operator== (\n    const symbol & a,\n    const symbol & b\n)\n\nEquivalency operator. \nEquivalency operator. Returns true if a == b (are the same)\nReturns:\nboolean - true if both provided symbols are the same \nfriend operator !=\nfriend constexpr bool symbolapi::operator != (\n    const symbol & a,\n    const symbol & b\n)\n\nInverted equivalency operator. \nInverted equivalency operator. Returns true if a != b (are different)\nReturns:\nboolean - true if both provided symbols are not the same \nfriend operator\nfriend constexpr bool symbolapi::operator\nLess than operator. \nLess than operator. Returns true if a \nReturns:\nboolean - true if symbol a is less than b \nfriend operator==\nfriend constexpr bool symbolapi::operator== (\n    const extended_symbol & a,\n    const extended_symbol & b\n)\n\nEquivalency operator. \nEquivalency operator. Returns true if a == b (are the same)\nReturns:\nboolean - true if both provided extended_symbols are the same \nfriend operator !=\nfriend constexpr bool symbolapi::operator != (\n    const extended_symbol & a,\n    const extended_symbol & b\n)\n\nInverted equivalency operator. \nInverted equivalency operator. Returns true if a != b (are different)\nReturns:\nboolean - true if both provided extended_symbols are not the same \nfriend operator\nfriend constexpr bool symbolapi::operator\nLess than operator. \nLess than operator. Returns true if a \nReturns:\nboolean - true if extended_symbol a is less than b \n"},"group__symbolcppapi.html":{"url":"group__symbolcppapi.html","title":"Symbolcppapi","keywords":"symbolcppapi eosio::symbol_code eosio::symbol eosio::extended_symbol Stores Extended value value symbol contract symbol_code symbol_code symbol_code is_valid length raw operator bool write_as_string to_string symbol symbol symbol symbol is_valid precision code raw operator bool print extended_symbol extended_symbol get_symbol get_contract print operator== operator != operator< operator== operator != operator< operator== operator != operator<","body":"group symbolcppapi\nDefines CPP API for managing symbols. \nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::symbol_code\n\n\nclass\neosio::symbol\n\n\nclass\neosio::extended_symbol\n\n\nstruct\nStores\n\n\nstruct\nExtended\n\n\n\nVariables\n\n\n\nType\nName\n\n\n\n\nuint64_t\nvalue\n\n\nuint64_t\nvalue\n\n\nsymbol\nsymbolthe symbol\n\n\nname\ncontractthe token contract hosting the symbol\n\n\n\nvariable value\nuint64_t eosio::symbol_code::value;\n\nvariable value\nuint64_t eosio::symbol::value;\n\nvariable symbol\nsymbol eosio::extended_symbol::symbol;\n\nthe symbol \nvariable contract\nname eosio::extended_symbol::contract;\n\nthe token contract hosting the symbol \nfunction symbol_code\nconstexpr symbolcppapi::symbol_code ()\n\nfunction symbol_code\nexplicit constexpr symbolcppapi::symbol_code (\n    uint64_t raw\n)\n\nfunction symbol_code\nexplicit constexpr symbolcppapi::symbol_code (\n    std::string_view str\n)\n\nfunction is_valid\nconstexpr bool symbolcppapi::is_valid () const\n\nChecks if the symbol code is valid \nReturns:\ntrue - if symbol is valid \nfunction length\nconstexpr uint32_t symbolcppapi::length () const\n\nReturns the character length of the provided symbol\nReturns:\nlength - character length of the provided symbol \nfunction raw\nconstexpr uint64_t symbolcppapi::raw () const\n\nfunction operator bool\nexplicit constexpr symbolcppapi::operator bool () const\n\nfunction write_as_string\nchar * symbolcppapi::write_as_string (\n    char * begin,\n    char * end\n) const\n\nWrites the symbol_code as a string to the provided char buffer. \nWrites the symbol_code as a string to the provided char buffer\nPrecondition:\nAppropriate Size Precondition: (begin + 7) \nPrecondition:\nValid Memory Region Precondition: The range [begin, end) must be a valid range of memory to write to. \nParameters:\n\nbegin - The start of the char buffer \nend - Just past the end of the char buffer \n\nReturns:\nchar* - Just past the end of the last character written (returns begin if the Appropriate Size Precondition is not satisfied) \nPost\nIf the Appropriate Size Precondition is satisfied, the range [begin, returned pointer) contains the string representation of the symbol_code. \nfunction to_string\nstd::string symbolcppapi::to_string () const\n\nfunction symbol\nconstexpr symbolcppapi::symbol ()\n\nfunction symbol\nexplicit constexpr symbolcppapi::symbol (\n    uint64_t raw\n)\n\nfunction symbol\nconstexpr symbolcppapi::symbol (\n    symbol_code sc,\n    uint8_t precision\n)\n\nfunction symbol\nconstexpr symbolcppapi::symbol (\n    std::string_view ss,\n    uint8_t precision\n)\n\nfunction is_valid\nconstexpr bool symbolcppapi::is_valid () const\n\nIs this symbol valid \nfunction precision\nconstexpr uint8_t symbolcppapi::precision () const\n\nThis symbol's precision \nfunction code\nconstexpr symbol_code symbolcppapi::code () const\n\nReturns representation of symbol name \nfunction raw\nconstexpr uint64_t symbolcppapi::raw () const\n\nReturns uint64_t repreresentation of the symbol \nfunction operator bool\nexplicit constexpr symbolcppapi::operator bool () const\n\nfunction print\nvoid symbolcppapi::print (\n    bool show_precision = true\n) const\n\nPrint the symbol \nPrint the symbol \nfunction extended_symbol\nconstexpr symbolcppapi::extended_symbol ()\n\nfunction extended_symbol\nconstexpr symbolcppapi::extended_symbol (\n    symbol sym,\n    name con\n)\n\nfunction get_symbol\nconstexpr symbol symbolcppapi::get_symbol () const\n\nfunction get_contract\nconstexpr name symbolcppapi::get_contract () const\n\nfunction print\nvoid symbolcppapi::print (\n    bool show_precision = true\n) const\n\nPrint the extended symbol \nPrint the extended symbol \nfriend operator==\nfriend constexpr bool symbolcppapi::operator== (\n    const symbol_code & a,\n    const symbol_code & b\n)\n\nEquivalency operator. \nEquivalency operator. Returns true if a == b (are the same)\nReturns:\nboolean - true if both provided symbol_codes are the same \nfriend operator !=\nfriend constexpr bool symbolcppapi::operator != (\n    const symbol_code & a,\n    const symbol_code & b\n)\n\nInverted equivalency operator. \nInverted equivalency operator. Returns true if a != b (are different)\nReturns:\nboolean - true if both provided symbol_codes are not the same \nfriend operator\nfriend constexpr bool symbolcppapi::operator\nLess than operator. \nLess than operator. Returns true if a \nReturns:\nboolean - true if symbol_code a is less than b \nfriend operator==\nfriend constexpr bool symbolcppapi::operator== (\n    const symbol & a,\n    const symbol & b\n)\n\nEquivalency operator. \nEquivalency operator. Returns true if a == b (are the same)\nReturns:\nboolean - true if both provided symbols are the same \nfriend operator !=\nfriend constexpr bool symbolcppapi::operator != (\n    const symbol & a,\n    const symbol & b\n)\n\nInverted equivalency operator. \nInverted equivalency operator. Returns true if a != b (are different)\nReturns:\nboolean - true if both provided symbols are not the same \nfriend operator\nfriend constexpr bool symbolcppapi::operator\nLess than operator. \nLess than operator. Returns true if a \nReturns:\nboolean - true if symbol a is less than b \nfriend operator==\nfriend constexpr bool symbolcppapi::operator== (\n    const extended_symbol & a,\n    const extended_symbol & b\n)\n\nEquivalency operator. \nEquivalency operator. Returns true if a == b (are the same)\nReturns:\nboolean - true if both provided extended_symbols are the same \nfriend operator !=\nfriend constexpr bool symbolcppapi::operator != (\n    const extended_symbol & a,\n    const extended_symbol & b\n)\n\nInverted equivalency operator. \nInverted equivalency operator. Returns true if a != b (are different)\nReturns:\nboolean - true if both provided extended_symbols are not the same \nfriend operator\nfriend constexpr bool symbolcppapi::operator\nLess than operator. \nLess than operator. Returns true if a \nReturns:\nboolean - true if extended_symbol a is less than b \n"},"group__systemapi.html":{"url":"group__systemapi.html","title":"Systemapi","keywords":"systemapi eosio_assert eosio_assert_message eosio_assert_code eosio_exit current_time now","body":"group systemapi\nDefines API for interacting with system level intrinsics. \nModules\n\nPrivileged API Defines an API for accessing configuration of the chain that can only be done by privileged accounts. \nSystem C API Defines API for interacting with system level intrinsics. \n\nfunction eosio_assert\nvoid systemapi::eosio_assert (\n    uint32_t test,\n    const char * msg\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore\n\nExample:\neosio_assert(1 == 2, \"One is not equal to two.\");\neosio_assert(1 == 1, \"One is not equal to one.\");\n\nParameters:\n\nmsg - a null terminated string explaining the reason for failure \n\nfunction eosio_assert_message\nvoid systemapi::eosio_assert_message (\n    uint32_t test,\n    const char * msg,\n    uint32_t msg_len\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore \nmsg - a pointer to the start of string explaining the reason for failure \nmsg_len - length of the string \n\nfunction eosio_assert_code\nvoid systemapi::eosio_assert_code (\n    uint32_t test,\n    uint64_t code\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore \ncode - the error code \n\nfunction eosio_exit\nvoid systemapi::eosio_exit (\n    int32_t code\n)\n\nAborts execution of wasm without failing the contract. \nThis method will abort execution of wasm without failing the contract. This is used to bypass all cleanup / destructors that would normally be called. \nParameters:\n\ncode - the exit code Example:\n\neosio_exit(0);\neosio_exit(1);\neosio_exit(2);\neosio_exit(3);\n\nfunction current_time\nuint64_t systemapi::current_time ()\n\nGet time of the current block (i.e. the block including this action) \nReturns the time in microseconds from 1970 of the current block \nReturns:\ntime in microseconds from 1970 of the current block \nfunction now\nuint32_t systemapi::now ()\n\nGet time (rounded down to the nearest second) of the current block (i.e. the block including this action) \nReturns the time in seconds from 1970 of the block including this action \nReturns:\ntime in seconds from 1970 of the current block \n"},"group__privilegedapi.html":{"url":"group__privilegedapi.html","title":"Privilegedapi","keywords":"privilegedapi eosio::blockchain_parameters set_blockchain_parameters get_blockchain_parameters","body":"group privilegedapi\nDefines an API for accessing configuration of the chain that can only be done by privileged accounts. \nModules\n\nPrivileged C API Defines C Privileged API. \nPrivileged C++ API Defines C++ Privileged API. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::blockchain_parameters\n\n\n\nfunction set_blockchain_parameters\nvoid privilegedapi::set_blockchain_parameters (\n    const eosio::blockchain_parameters & params\n)\n\nSet the blockchain parameters Set the blockchain parameters. \nParameters:\n\nparams - New blockchain parameters to set \n\nfunction get_blockchain_parameters\nvoid privilegedapi::get_blockchain_parameters (\n    eosio::blockchain_parameters & params\n)\n\nRetrieve the blolckchain parameters Retrieve the blolckchain parameters. \nParameters:\n\nparams - It will be replaced with the retrieved blockchain params \n\n"},"group__privilegedcapi.html":{"url":"group__privilegedcapi.html","title":"Privilegedcapi","keywords":"privilegedcapi get_resource_limits set_resource_limits set_proposed_producers set_active_producers is_privileged set_privileged set_blockchain_parameters_packed get_blockchain_parameters_packed activate_feature","body":"group privilegedcapi\nDefines C Privileged API. \nfunction get_resource_limits\nvoid privilegedcapi::get_resource_limits (\n    capi_name account,\n    int64_t * ram_bytes,\n    int64_t * net_weight,\n    int64_t * cpu_weight\n)\n\nGet the resource limits of an account Get the resource limits of an account. \nParameters:\n\naccount - name of the account whose resource limit to get \nram_bytes - pointer to int64\\_t to hold retrieved ram limit in absolute bytes \nnet_weight - pointer to int64\\_t to hold net limit \ncpu_weight - pointer to int64\\_t to hold cpu limit \n\nfunction set_resource_limits\nvoid privilegedcapi::set_resource_limits (\n    capi_name account,\n    int64_t ram_bytes,\n    int64_t net_weight,\n    int64_t cpu_weight\n)\n\nSet the resource limits of an account Set the resource limits of an account. \nParameters:\n\naccount - name of the account whose resource limit to be set \nram_bytes - ram limit in absolute bytes \nnet_weight - fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts) \ncpu_weight - fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts) \n\nfunction set_proposed_producers\nint64_t privilegedcapi::set_proposed_producers (\n    char * producer_data,\n    uint32_t producer_data_size\n)\n\nProposes a schedule change, once the block that contains the proposal becomes irreversible, the schedule is promoted to \"pending\" automatically. Once the block that promotes the schedule is irreversible, the schedule will become \"active\" \nParameters:\n\nproducer_data - packed data of produce_keys in the appropriate producer schedule order \nproducer_data_size - size of the data buffer\n\nReturns:\n-1 if proposing a new producer schedule was unsuccessful, otherwise returns the version of the new proposed schedule \nfunction set_active_producers\nvoid privilegedcapi::set_active_producers (\n    char * producer_data,\n    uint32_t producer_data_size\n)\n\nSet new active producers Set new active producers. Producers will only be activated once the block which starts the next round is irrreversible. \nParameters:\n\nproducer_data - pointer to producer schedule packed as bytes \nproducer_data_size - size of the packed producer schedule \n\nPrecondition:\nproducer\\_data is a valid pointer to a range of memory at least producer\\_data\\_size bytes long that contains serialized produced schedule data \nfunction is_privileged\nbool privilegedcapi::is_privileged (\n    capi_name account\n)\n\nCheck if an account is privileged Check if an account is privileged. \nParameters:\n\naccount - name of the account to be checked \n\nReturns:\ntrue if the account is privileged \nReturns:\nfalse if the account is not privileged \nfunction set_privileged\nvoid privilegedcapi::set_privileged (\n    capi_name account,\n    bool is_priv\n)\n\nSet the privileged status of an account Set the privileged status of an account. \nParameters:\n\naccount - name of the account whose privileged account to be set \nis_priv - privileged status \n\nfunction set_blockchain_parameters_packed\nvoid privilegedcapi::set_blockchain_parameters_packed (\n    char * data,\n    uint32_t datalen\n)\n\nSet the blockchain parameters Set the blockchain parameters. \nParameters:\n\ndata - pointer to blockchain parameters packed as bytes \ndatalen - size of the packed blockchain parameters \n\nPrecondition:\ndata is a valid pointer to a range of memory at least datalen bytes long that contains packed blockchain params data \nfunction get_blockchain_parameters_packed\nuint32_t privilegedcapi::get_blockchain_parameters_packed (\n    char * data,\n    uint32_t datalen\n)\n\nRetrieve the blolckchain parameters Retrieve the blolckchain parameters. \nParameters:\n\ndata - output buffer of the blockchain parameters, only retrieved if sufficent size to hold packed data. \ndatalen - size of the data buffer, 0 to report required size. \n\nReturns:\nsize of the blockchain parameters \nPrecondition:\ndata is a valid pointer to a range of memory at least datalen bytes long \nPost\ndata is filled with packed blockchain parameters \nfunction activate_feature\nvoid privilegedcapi::activate_feature (\n    int64_t f\n)\n\nActivate new feature Activate new feature. \nParameters:\n\nf - name (identifier) of the feature to be activated \n\n"},"group__privilegedcppapi.html":{"url":"group__privilegedcppapi.html","title":"Privilegedcppapi","keywords":"privilegedcppapi eosio::blockchain_parameters set_blockchain_parameters get_blockchain_parameters","body":"group privilegedcppapi\nDefines C++ Privileged API. \nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::blockchain_parameters\n\n\n\nfunction set_blockchain_parameters\nvoid privilegedcppapi::set_blockchain_parameters (\n    const eosio::blockchain_parameters & params\n)\n\nSet the blockchain parameters Set the blockchain parameters. \nParameters:\n\nparams - New blockchain parameters to set \n\nfunction get_blockchain_parameters\nvoid privilegedcppapi::get_blockchain_parameters (\n    eosio::blockchain_parameters & params\n)\n\nRetrieve the blolckchain parameters Retrieve the blolckchain parameters. \nParameters:\n\nparams - It will be replaced with the retrieved blockchain params \n\n"},"group__systemcapi.html":{"url":"group__systemcapi.html","title":"Systemcapi","keywords":"systemcapi eosio_assert eosio_assert_message eosio_assert_code eosio_exit current_time now","body":"group systemcapi\nDefines API for interacting with system level intrinsics. \nfunction eosio_assert\nvoid systemcapi::eosio_assert (\n    uint32_t test,\n    const char * msg\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore\n\nExample:\neosio_assert(1 == 2, \"One is not equal to two.\");\neosio_assert(1 == 1, \"One is not equal to one.\");\n\nParameters:\n\nmsg - a null terminated string explaining the reason for failure \n\nfunction eosio_assert_message\nvoid systemcapi::eosio_assert_message (\n    uint32_t test,\n    const char * msg,\n    uint32_t msg_len\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore \nmsg - a pointer to the start of string explaining the reason for failure \nmsg_len - length of the string \n\nfunction eosio_assert_code\nvoid systemcapi::eosio_assert_code (\n    uint32_t test,\n    uint64_t code\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore \ncode - the error code \n\nfunction eosio_exit\nvoid systemcapi::eosio_exit (\n    int32_t code\n)\n\nAborts execution of wasm without failing the contract. \nThis method will abort execution of wasm without failing the contract. This is used to bypass all cleanup / destructors that would normally be called. \nParameters:\n\ncode - the exit code Example:\n\neosio_exit(0);\neosio_exit(1);\neosio_exit(2);\neosio_exit(3);\n\nfunction current_time\nuint64_t systemcapi::current_time ()\n\nGet time of the current block (i.e. the block including this action) \nReturns the time in microseconds from 1970 of the current block \nReturns:\ntime in microseconds from 1970 of the current block \nfunction now\nuint32_t systemcapi::now ()\n\nGet time (rounded down to the nearest second) of the current block (i.e. the block including this action) \nReturns the time in seconds from 1970 of the block including this action \nReturns:\ntime in seconds from 1970 of the current block \n"},"group__transactionapi.html":{"url":"group__transactionapi.html","title":"Transactionapi","keywords":"transactionapi eosio::transaction_header eosio::transaction eosio::onerror get_action","body":"group transactionapi\nDefines API for sending transactions and inline actions. More...\nModules\n\nTransaction C API Defines API for sending transactions. \nTransaction C++ API Type-safe C++ wrappers for transaction C API. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::transaction_header\n\n\nclass\neosio::transaction\n\n\nstruct\neosio::onerror\n\n\n\nDetailed Description\nNote:\nThere are some methods from the Transaction C API that can be used directly from C++ \nfunction get_action\naction transactionapi::get_action (\n    uint32_t type,\n    uint32_t index\n)\n\nRetrieve the indicated action from the active transaction. \nParameters:\n\ntype - 0 for context free action, 1 for action \nindex - the index of the requested action \n\nReturns:\nthe indicated action \n"},"group__transactioncapi.html":{"url":"group__transactioncapi.html","title":"Transactioncapi","keywords":"transactioncapi send_deferred cancel_deferred read_transaction transaction_size tapos_block_num tapos_block_prefix expiration get_action get_context_free_data","body":"group transactioncapi\nDefines API for sending transactions. \nfunction send_deferred\nvoid transactioncapi::send_deferred (\n    const uint128_t & sender_id,\n    capi_name payer,\n    const char * serialized_transaction,\n    size_t size,\n    uint32_t replace_existing = 0\n)\n\nSends a deferred transaction. \nSends a deferred transaction.\nParameters:\n\nsender_id - ID of sender \npayer - Account paying for RAM \nserialized_transaction - Pointer of serialized transaction to be deferred \nsize - Size to reserve \nreplace_existing - f this is 0 then if the provided sender_id is already in use by an in-flight transaction from this contract, which will be a failing assert. If 1 then transaction will atomically cancel/replace the inflight transaction \n\nfunction cancel_deferred\nint transactioncapi::cancel_deferred (\n    const uint128_t & sender_id\n)\n\nCancels a deferred transaction. \nCancels a deferred transaction.\nParameters:\n\nsender_id - The id of the sender\n\nPrecondition:\nThe deferred transaction ID exists. \nPrecondition:\nThe deferred transaction ID has not yet been published. \nPost\nDeferred transaction canceled.\nReturns:\n1 if transaction was canceled, 0 if transaction was not found\nExample:\nid = 0xffffffffffffffff\ncancel_deferred( id );\n\nfunction read_transaction\nsize_t transactioncapi::read_transaction (\n    char * buffer,\n    size_t size\n)\n\nAccess a copy of the currently executing transaction. \nAccess a copy of the currently executing transaction.\nParameters:\n\nbuffer - a buffer to write the current transaction to \nsize - the size of the buffer, 0 to return required size \n\nReturns:\nthe size of the transaction written to the buffer, or number of bytes that can be copied if size==0 passed \nfunction transaction_size\nsize_t transactioncapi::transaction_size ()\n\nGets the size of the currently executing transaction. \nGets the size of the currently executing transaction.\nReturns:\nsize of the currently executing transaction \nfunction tapos_block_num\nint transactioncapi::tapos_block_num ()\n\nGets the block number used for TAPOS on the currently executing transaction. \nGets the block number used for TAPOS on the currently executing transaction.\nReturns:\nblock number used for TAPOS on the currently executing transaction Example: \nint tbn = tapos_block_num();\n\nfunction tapos_block_prefix\nint transactioncapi::tapos_block_prefix ()\n\nGets the block prefix used for TAPOS on the currently executing transaction. \nGets the block prefix used for TAPOS on the currently executing transaction.\nReturns:\nblock prefix used for TAPOS on the currently executing transaction Example: \nint tbp = tapos_block_prefix();\n\nfunction expiration\nuint32_t transactioncapi::expiration ()\n\nGets the expiration of the currently executing transaction. \nGets the expiration of the currently executing transaction.\nReturns:\nexpiration of the currently executing transaction in seconds since Unix epoch Example: \nuint32_t tm = expiration();\neosio_print(tm);\n\nfunction get_action\nint transactioncapi::get_action (\n    uint32_t type,\n    uint32_t index,\n    char * buff,\n    size_t size\n)\n\nRetrieves the indicated action from the active transaction. \nRetrieves the indicated action from the active transaction.\nParameters:\n\ntype - 0 for context free action, 1 for action \nindex - the index of the requested action \nbuff - output packed buff of the action \nsize - amount of buff read, pass 0 to have size returned \n\nReturns:\nthe size of the action, -1 on failure \nfunction get_context_free_data\nint transactioncapi::get_context_free_data (\n    uint32_t index,\n    char * buff,\n    size_t size\n)\n\nRetrieve the signed_transaction.context_free_data[index]. \nRetrieve the signed_transaction.context_free_data[index].\nParameters:\n\nindex - the index of the context_free_data entry to retrieve \nbuff - output buff of the context_free_data entry \nsize - amount of context_free_data[index] to retrieve into buff, 0 to report required size \n\nReturns:\nsize copied, or context_free_data[index].size() if 0 passed for size, or -1 if index not valid \n"},"group__transactioncppapi.html":{"url":"group__transactioncppapi.html","title":"Transactioncppapi","keywords":"transactioncppapi eosio::transaction_header eosio::transaction eosio::onerror get_action","body":"group transactioncppapi\nType-safe C++ wrappers for transaction C API. More...\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::transaction_header\n\n\nclass\neosio::transaction\n\n\nstruct\neosio::onerror\n\n\n\nDetailed Description\nNote:\nThere are some methods from the Transaction C API that can be used directly from C++ \nfunction get_action\naction transactioncppapi::get_action (\n    uint32_t type,\n    uint32_t index\n)\n\nRetrieve the indicated action from the active transaction. \nParameters:\n\ntype - 0 for context free action, 1 for action \nindex - the index of the requested action \n\nReturns:\nthe indicated action \n"},"group__types.html":{"url":"group__types.html","title":"Types","keywords":"types unsigned_int signed_int","body":"group types\nSpecifies builtin types, typedefs and aliases. \nModules\n\nBinary Extension container to hold a binary payload for an extension \nContract Type Defines contract type which is base class for every EOSIO contract. \nPublic Key Type Specifies public key type. \nPublic Key Type Specifies signature type. \nFixed Size Byte Array Fixed size array of bytes sorted lexicographically. \nFixed Size Key Fixed size key sorted lexicographically for Multi Index Table. \nProducer Type Defines producer type. \nVariable Length Integer Type Defines variable length integer type which provides more efficient serialization\n/. \n\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nunsigned_int\n\n\nstruct\nsigned_int\n\n\n\n"},"group__binary__extension.html":{"url":"group__binary__extension.html","title":"Binary extension","keywords":"binary_extension eosio::binary_extension value_type _has_value _data binary_extension binary_extension binary_extension binary_extension ~binary_extension binary_extension binary_extension operator bool has_value value value value_or value_or value_or value_or value_or operator-> operator-> operator * operator * operator * operator * emplace reset _get _get","body":"group binary_extension\ncontainer to hold a binary payload for an extension \nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::binary_extension\n\n\n\nVariables\n\n\n\nType\nName\n\n\n\n\nbool\n_has_value\n\n\nstd::aligned_storage::type\n_data\n\n\n\n\n\n\nType\nName\n\n\n\n\nconstexpr T &\n_get ()\n\n\nconstexpr const T &\n_get () const\n\n\n\ntypedef value_type\nusing eosio::binary_extension::value_type =  T;\n\nvariable _has_value\nbool eosio::binary_extension::_has_value;\n\nvariable _data\nstd::aligned_storage::type eosio::binary_extension::_data;\n\nfunction binary_extension\nconstexpr binary_extension::binary_extension ()\n\nfunction binary_extension\nconstexpr binary_extension::binary_extension (\n    const T & ext\n)\n\nfunction binary_extension\nconstexpr binary_extension::binary_extension (\n    T && ext\n)\n\nfunction binary_extension\nconstexpr binary_extension::binary_extension (\n    std::in_place_t ,\n    Args &&... args\n)\n\nconstruct contained type in place \nfunction ~binary_extension\nbinary_extension::~binary_extension ()\n\nfunction binary_extension\nconstexpr binary_extension::binary_extension (\n    const binary_extension & other\n)\n\nfunction binary_extension\nconstexpr binary_extension::binary_extension (\n    binary_extension && other\n)\n\nfunction operator bool\nexplicit constexpr binary_extension::operator bool () const\n\ntest if container is holding a value \nfunction has_value\nconstexpr bool binary_extension::has_value () const\n\ntest if container is holding a value \nfunction value\nconstexpr T & binary_extension::value ()\n\nget the contained value \nfunction value\nconstexpr const T & binary_extension::value () const\n\nget the contained value \nfunction value_or\nconstexpr auto binary_extension::value_or (\n    U && def\n)\n\nget the contained value or a user specified default \nPrecondition:\ndef should be convertible to type T \nfunction value_or\nconstexpr T && binary_extension::value_or ()\n\nfunction value_or\nconstexpr const T && binary_extension::value_or () const\n\nfunction value_or\nconstexpr T binary_extension::value_or ()\n\nfunction value_or\nconstexpr T binary_extension::value_or () const\n\nfunction operator->\nconstexpr T * binary_extension::operator-> ()\n\nfunction operator->\nconstexpr const T * binary_extension::operator-> () const\n\nfunction operator *\nconstexpr T & binary_extension::operator * ()\n\nfunction operator *\nconstexpr const T & binary_extension::operator * () const\n\nfunction operator *\nconstexpr const T && binary_extension::operator * () const\n\nfunction operator *\nconstexpr T && binary_extension::operator * ()\n\nfunction emplace\nT & binary_extension::emplace (\n    Args &&... args\n)\n\nfunction reset\nvoid binary_extension::reset ()\n\nfunction _get\nconstexpr T & binary_extension::_get ()\n\nfunction _get\nconstexpr const T & binary_extension::_get () const\n\n"},"group__contracttype.html":{"url":"group__contracttype.html","title":"Contracttype","keywords":"contracttype eosio::contract","body":"group contracttype\nDefines contract type which is base class for every EOSIO contract. \nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::contract\n\n\n\n"},"group__fixed__bytes.html":{"url":"group__fixed__bytes.html","title":"Fixed bytes","keywords":"fixed_bytes eosio::fixed_bytes operator== operator != operator > operator< operator >= operator<=","body":"group fixed_bytes\nFixed size array of bytes sorted lexicographically. \nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::fixed_bytes\n\n\n\nfunction operator==\nbool fixed_bytes::operator== (\n    const fixed_bytes & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 == c2, return true, otherwise false \nfunction operator !=\nbool fixed_bytes::operator != (\n    const fixed_bytes & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 != c2, return true, otherwise false \nfunction operator >\nbool fixed_bytes::operator > (\n    const fixed_bytes & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 > c2, return true, otherwise false \nfunction operator\nbool fixed_bytes::operator & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 \nfunction operator >=\nbool fixed_bytes::operator >= (\n    const fixed_bytes & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 >= c2, return true, otherwise false \nfunction operator\nbool fixed_bytes::operator & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 \n"},"group__fixed__key.html":{"url":"group__fixed__key.html","title":"Fixed key","keywords":"fixed_key eosio::fixed_key operator== operator != operator > operator< operator >= operator<=","body":"group fixed_key\nFixed size key sorted lexicographically for Multi Index Table. \nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::fixed_key\n\n\n\nfunction operator==\nbool fixed_key::operator== (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 == c2, return true, otherwise false \nfunction operator !=\nbool fixed_key::operator != (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 != c2, return true, otherwise false \nfunction operator >\nbool fixed_key::operator > (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 > c2, return true, otherwise false \nfunction operator\nbool fixed_key::operator & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 \nfunction operator >=\nbool fixed_key::operator >= (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 >= c2, return true, otherwise false \nfunction operator\nbool fixed_key::operator & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 \n"},"group__producertype.html":{"url":"group__producertype.html","title":"Producertype","keywords":"producertype eosio::producer_key max_block_net_usage target_block_net_usage_pct max_transaction_net_usage base_per_transaction_net_usage net_usage_leeway context_free_discount_net_usage_num context_free_discount_net_usage_den max_block_cpu_usage target_block_cpu_usage_pct max_transaction_cpu_usage min_transaction_cpu_usage max_transaction_lifetime deferred_trx_expiration_window max_transaction_delay max_inline_action_size max_inline_action_depth max_authority_depth producer_name block_signing_key operator<","body":"group producertype\nDefines producer type. \nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::producer_key\n\n\n\nVariables\nvariable max_block_net_usage\nuint64_t eosio::blockchain_parameters::max_block_net_usage;\n\nvariable target_block_net_usage_pct\nuint32_t eosio::blockchain_parameters::target_block_net_usage_pct;\n\nvariable max_transaction_net_usage\nuint32_t eosio::blockchain_parameters::max_transaction_net_usage;\n\nvariable base_per_transaction_net_usage\nuint32_t eosio::blockchain_parameters::base_per_transaction_net_usage;\n\nThe base amount of net usage billed for a transaction to cover incidentals. \nThe base amount of net usage billed for a transaction to cover incidentals \nvariable net_usage_leeway\nuint32_t eosio::blockchain_parameters::net_usage_leeway;\n\nvariable context_free_discount_net_usage_num\nuint32_t eosio::blockchain_parameters::context_free_discount_net_usage_num;\n\nvariable context_free_discount_net_usage_den\nuint32_t eosio::blockchain_parameters::context_free_discount_net_usage_den;\n\nvariable max_block_cpu_usage\nuint32_t eosio::blockchain_parameters::max_block_cpu_usage;\n\nvariable target_block_cpu_usage_pct\nuint32_t eosio::blockchain_parameters::target_block_cpu_usage_pct;\n\nvariable max_transaction_cpu_usage\nuint32_t eosio::blockchain_parameters::max_transaction_cpu_usage;\n\nvariable min_transaction_cpu_usage\nuint32_t eosio::blockchain_parameters::min_transaction_cpu_usage;\n\nvariable max_transaction_lifetime\nuint32_t eosio::blockchain_parameters::max_transaction_lifetime;\n\nMaximum lifetime of a transacton. \nMaximum lifetime of a transacton \nvariable deferred_trx_expiration_window\nuint32_t eosio::blockchain_parameters::deferred_trx_expiration_window;\n\nvariable max_transaction_delay\nuint32_t eosio::blockchain_parameters::max_transaction_delay;\n\nvariable max_inline_action_size\nuint32_t eosio::blockchain_parameters::max_inline_action_size;\n\nMaximum size of inline action. \nMaximum size of inline action \nvariable max_inline_action_depth\nuint16_t eosio::blockchain_parameters::max_inline_action_depth;\n\nMaximum depth of inline action. \nMaximum depth of inline action \nvariable max_authority_depth\nuint16_t eosio::blockchain_parameters::max_authority_depth;\n\nMaximum authority depth. \nMaximum authority depth \nvariable producer_name\nname eosio::producer_key::producer_name;\n\nName of the producer. \nName of the producer \nvariable block_signing_key\npublic_key eosio::producer_key::block_signing_key;\n\nBlock signing key used by this producer. \nBlock signing key used by this producer \nfriend operator\nfriend constexpr bool producertype::operator\n"},"group__publickeytype.html":{"url":"group__publickeytype.html","title":"Publickeytype","keywords":"publickeytype eosio::public_key","body":"group publickeytype\nSpecifies public key type. \nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::public_key\n\n\n\n"},"group__signaturetype.html":{"url":"group__signaturetype.html","title":"Signaturetype","keywords":"signaturetype eosio::signature","body":"group signaturetype\nSpecifies signature type. \nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::signature\n\n\n\n"},"group__varint.html":{"url":"group__varint.html","title":"Varint","keywords":"varint unsigned_int signed_int","body":"group varint\nDefines variable length integer type which provides more efficient serialization/. \nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nunsigned_int\n\n\nstruct\nsigned_int\n\n\n\n"},"classes.html":{"url":"classes.html","title":"Browse","keywords":"action action_wrapper asset binary_extension block_timestamp blockchain_parameters fixed_bytes::bool_pack fixed_key::bool_pack memory_manager::memory::buffer_ptr capi_public_key capi_signature const_mem_fun contract check_types check_types< Action, I, T > convert convert< char * > convert< const char * > multi_index::const_iterator multi_index::index::const_iterator datastream datastream< size_t > Extended extended_asset extended_symbol fixed_bytes fixed_key fixed_point128 fixed_point32 fixed_point64 get_nth get_nth_impl get_nth_impl< N, N, Arg, Args... > is_same is_same< T, bool > is_same< bool, U > ignore ignore_wrapper indexed_by inline_dispatcher inline_dispatcher< void(T::*)(Args...), Name > iostream multi_index::index multi_index::intc multi_index::item multi_index::item_ptr memory_manager memory_manager::memory microseconds multi_index name onerror permission_level producer_key producer_schedule public_key reflector singleton::row Stores secondary_index_db_functions secondary_key_traits secondary_key_traits< eosio::fixed_bytes< 32 > > secondary_key_traits< eosio::key256 > signature singleton symbol symbol_code signed_int to_const_char_arr time_point time_point_sec transaction transaction_header unwrap unwrap< ignore< T > > unsigned_int variant_action_wrapper","body":"Class Index\nA\n\naction (eosio)\naction_wrapper (eosio)\nasset (eosio)\n\nB\n\nbinary_extension (eosio)\nblock_timestamp (eosio)\nblockchain_parameters (eosio)\nfixed_bytes::bool_pack (eosio)\nfixed_key::bool_pack (eosio)\nmemory_manager::memory::buffer_ptr (eosio)\n\nC\n\ncapi_public_key\ncapi_signature\nconst_mem_fun (eosio)\ncontract (eosio)\ncheck_types (detail)\ncheck_types (detail)\nconvert (detail)\nconvert (detail)\nconvert (detail)\nmulti_index::const_iterator (eosio)\nmulti_index::index::const_iterator (eosio)\n\nD\n\ndatastream (eosio)\ndatastream (eosio)\n\nE\n\nExtended\nextended_asset (eosio)\nextended_symbol (eosio)\n\nF\n\nfixed_bytes (eosio)\nfixed_key (eosio)\nfixed_point128 (eosio)\nfixed_point32 (eosio)\nfixed_point64 (eosio)\n\nG\n\nget_nth (detail)\nget_nth_impl (detail)\nget_nth_impl (detail)\n\nI\n\nis_same (detail)\nis_same (detail)\nis_same (detail)\nignore (eosio)\nignore_wrapper (eosio)\nindexed_by (eosio)\ninline_dispatcher (eosio)\ninline_dispatcher (eosio)\niostream (eosio)\nmulti_index::index (eosio)\nmulti_index::intc (eosio)\nmulti_index::item (eosio)\nmulti_index::item_ptr (eosio)\n\nM\n\nmemory_manager (eosio)\nmemory_manager::memory (eosio)\nmicroseconds (eosio)\nmulti_index (eosio)\n\nN\n\nname (eosio)\n\nO\n\nonerror (eosio)\n\nP\n\npermission_level (eosio)\nproducer_key (eosio)\nproducer_schedule (eosio)\npublic_key (eosio)\n\nR\n\nreflector (eosio)\nsingleton::row (eosio)\n\nS\n\nStores\nsecondary_index_db_functions (_multi_index_detail)\nsecondary_key_traits (_multi_index_detail)\nsecondary_key_traits > (_multi_index_detail)\nsecondary_key_traits (_multi_index_detail)\nsignature (eosio)\nsingleton (eosio)\nsymbol (eosio)\nsymbol_code (eosio)\nsigned_int\n\nT\n\nto_const_char_arr (detail)\ntime_point (eosio)\ntime_point_sec (eosio)\ntransaction (eosio)\ntransaction_header (eosio)\n\nU\n\nunwrap (detail)\nunwrap > (detail)\nunsigned_int\n\nV\n\nvariant_action_wrapper (eosio)\n\n"},"functions.html":{"url":"functions.html","title":"Function Index","keywords":"action::action action_wrapper::action_wrapper memory_manager::adjust_to_mem_block asset::asset multi_index::available_primary_key multi_index::index::begin binary_extension::binary_extension block_timestamp::block_timestamp memory_manager::memory::buffer_ptr::buffer_ptr inline_dispatcher< void(T::*)(Args...), Name >::call multi_index::index::cbegin multi_index::index::cend name::char_to_value memory_manager::memory::cleanup_remaining symbol::code multi_index::index::const_iterator::const_iterator contract::contract microseconds::count multi_index::index::crbegin multi_index::index::crend action::data_as datastream< size_t >::datastream action::EOSLIB_SERIALIZE multi_index::emplace multi_index::index::end multi_index::index::erase singleton::exists memory_manager::memory::expand_memory extended_asset::extended_asset extended_symbol::extended_symbol multi_index::index::extract_secondary_key multi_index::index::find fixed_bytes::fixed_bytes fixed_key::fixed_key fixed_point128::fixed_point128 fixed_point32::fixed_point32 fixed_point64::fixed_point64 fixed_bytes::for fixed_point64::frac_part memory_manager::memory::free onerror::from_current_action singleton::get multi_index::index::get_code extended_symbol::get_contract contract::get_datastream extended_asset::get_extended_symbol multi_index::get_index variant_action_wrapper::get_mem_ptr singleton::get_or_create singleton::get_or_default multi_index::index::get_scope contract::get_self extended_symbol::get_symbol binary_extension::has_value ignore_wrapper::ignore_wrapper multi_index::index::index memory_manager::memory::init fixed_point64::int_part memory_manager::memory::buffer_ptr::is_alloc asset::is_amount_within_range memory_manager::memory::is_capacity_remaining memory_manager::memory::is_in_heap memory_manager::memory::is_init symbol_code::is_valid multi_index::item::item multi_index::item_ptr::item_ptr multi_index::iterator_to symbol_code::length multi_index::load_object_by_primary_iterator multi_index::lower_bound secondary_key_traits< eosio::key256 >::lowest memory_manager::memory::malloc memory_manager::memory::malloc_from_freed memory_manager::memory::buffer_ptr::mark_alloc memory_manager::memory::buffer_ptr::mark_free time_point_sec::maximum memory_manager::memory::memory memory_manager::memory_manager memory_manager::memory::buffer_ptr::merge_contiguous memory_manager::memory::buffer_ptr::merge_contiguous_if_available microseconds::microseconds time_point_sec::min multi_index::modify multi_index::multi_index name::name block_timestamp::next memory_manager::next_active_heap memory_manager::memory::buffer_ptr::next_ptr fixed_key::num_words multi_index::index::number time_point::operator != multi_index::index::const_iterator::operator * asset::operator *= time_point_sec::operator - time_point_sec::operator -= time_point::operator > time_point::operator >= unsigned_int::operator T symbol_code::operator bool ignore_wrapper::operator ignore< T > signed_int::operator int32_t name::operator raw time_point_sec::operator time_point multi_index::intc::operator uint64_t microseconds::operator!= const_mem_fun::operator() time_point_sec::operator+ signed_int::operator++ time_point_sec::operator+= fixed_point64::operator- multi_index::index::const_iterator::operator-- microseconds::operator-= multi_index::index::const_iterator::operator-> fixed_point64::operator/ asset::operator/= time_point::operator< time_point::operator<= unsigned_int::operator= time_point::operator== fixed_point64::operator> fixed_key::padded_bytes permission_level::permission_level datastream::pos symbol::precision singleton::row::primary_key symbol::print memory_manager::memory::buffer_ptr::ptr datastream< size_t >::put symbol_code::raw multi_index::rbegin datastream::read memory_manager::realloc memory_manager::memory::realloc_in_place datastream< size_t >::remaining singleton::remove multi_index::rend multi_index::require_find binary_extension::reset time_point_sec::sec_since_epoch datastream< size_t >::seekp variant_action_wrapper::send variant_action_wrapper::send_context_free singleton::set asset::set_amount fixed_key::set_from_word_sequence block_timestamp::set_time_point signed_int::signed_int singleton::singleton memory_manager::memory::buffer_ptr::size datastream< size_t >::skip name::suffix symbol::symbol symbol_code::symbol_code datastream< size_t >::tellp time_point::time_point time_point_sec::time_point_sec time_point::time_since_epoch variant_action_wrapper::to_action microseconds::to_seconds symbol_code::to_string block_timestamp::to_time_point transaction::transaction transaction_header::transaction_header multi_index::transform_indices onerror::unpack_sent_trx unsigned_int::unsigned_int multi_index::upper_bound datastream< size_t >::valid multi_index::index::validate_index_name multi_index::validate_table_name binary_extension::value binary_extension::value_or variant_action_wrapper::variant_action_wrapper memory_manager::void ::free datastream< size_t >::write symbol_code::write_as_string binary_extension::_get binary_extension::~binary_extension","body":"Function Index\nHere is a list of all functions with links to the class documentation for each member:\nA\n\naction (eosio::action)\naction_wrapper (eosio::action_wrapper)\nadjust_to_mem_block (eosio::memory_manager)\nasset (eosio::asset)\navailable_primary_key (eosio::multi_index)\n\nB\n\nbegin (eosio::multi_index, eosio::multi_index::index)\nbinary_extension (eosio::binary_extension)\nblock_timestamp (eosio::block_timestamp)\nbuffer_ptr (eosio::memory_manager::memory::buffer_ptr)\n\nC\n\ncall (eosio::inline_dispatcher)\ncbegin (eosio::multi_index, eosio::multi_index::index)\ncend (eosio::multi_index, eosio::multi_index::index)\nchar_to_value (eosio::name)\ncleanup_remaining (eosio::memory_manager::memory)\ncode (eosio::symbol)\nconst_iterator (eosio::multi_index::const_iterator, eosio::multi_index::index::const_iterator)\ncontract (eosio::contract)\ncount (eosio::microseconds)\ncrbegin (eosio::multi_index, eosio::multi_index::index)\ncrend (eosio::multi_index, eosio::multi_index::index)\n\nD\n\ndata_as (eosio::action)\ndatastream (eosio::datastream, eosio::datastream)\n\nE\n\nEOSLIB_SERIALIZE (eosio::action)\nemplace (eosio::binary_extension, eosio::multi_index)\nend (eosio::memory_manager::memory::buffer_ptr, eosio::multi_index, eosio::multi_index::index)\nerase (eosio::multi_index, eosio::multi_index::index)\nexists (eosio::singleton)\nexpand_memory (eosio::memory_manager::memory)\nextended_asset (eosio::extended_asset)\nextended_symbol (eosio::extended_symbol)\nextract_secondary_key (eosio::multi_index::index)\n\nF\n\nfind (eosio::multi_index, eosio::multi_index::index)\nfixed_bytes (eosio::fixed_bytes)\nfixed_key (eosio::fixed_key)\nfixed_point128 (eosio::fixed_point128)\nfixed_point32 (eosio::fixed_point32)\nfixed_point64 (eosio::fixed_point64)\nfor (eosio::fixed_bytes)\nfrac_part (eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64)\nfree (eosio::memory_manager, eosio::memory_manager::memory)\nfrom_current_action (eosio::onerror)\n\nG\n\nget (eosio::datastream, eosio::ignore_wrapper, eosio::multi_index, eosio::multi_index::index, eosio::singleton)\nget_code (eosio::contract, eosio::multi_index, eosio::multi_index::index)\nget_contract (eosio::extended_symbol)\nget_datastream (eosio::contract)\nget_extended_symbol (eosio::extended_asset)\nget_index (eosio::multi_index)\nget_mem_ptr (eosio::action_wrapper, eosio::variant_action_wrapper)\nget_or_create (eosio::singleton)\nget_or_default (eosio::singleton)\nget_scope (eosio::multi_index, eosio::multi_index::index)\nget_self (eosio::contract)\nget_symbol (eosio::extended_symbol)\n\nH\n\nhas_value (eosio::binary_extension)\n\nI\n\nignore_wrapper (eosio::ignore_wrapper)\nindex (eosio::multi_index::index)\ninit (eosio::memory_manager::memory)\nint_part (eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64)\nis_alloc (eosio::memory_manager::memory::buffer_ptr)\nis_amount_within_range (eosio::asset)\nis_capacity_remaining (eosio::memory_manager::memory)\nis_in_heap (eosio::memory_manager::memory)\nis_init (eosio::memory_manager::memory)\nis_valid (eosio::asset, eosio::symbol, eosio::symbol_code)\nitem (eosio::multi_index::item)\nitem_ptr (eosio::multi_index::item_ptr)\niterator_to (eosio::multi_index::index, eosio::multi_index)\n\nL\n\nlength (eosio::name, eosio::symbol_code)\nload_object_by_primary_iterator (eosio::multi_index)\nlower_bound (eosio::multi_index::index, eosio::multi_index)\nlowest (eosio::_multi_index_detail::secondary_key_traits >, eosio::_multi_index_detail::secondary_key_traits)\n\nM\n\nmalloc (eosio::memory_manager, eosio::memory_manager::memory)\nmalloc_from_freed (eosio::memory_manager::memory)\nmark_alloc (eosio::memory_manager::memory::buffer_ptr)\nmark_free (eosio::memory_manager::memory::buffer_ptr)\nmaximum (eosio::block_timestamp, eosio::microseconds, eosio::time_point_sec)\nmemory (eosio::memory_manager::memory)\nmemory_manager (eosio::memory_manager)\nmerge_contiguous (eosio::memory_manager::memory::buffer_ptr)\nmerge_contiguous_if_available (eosio::memory_manager::memory::buffer_ptr)\nmicroseconds (eosio::microseconds)\nmin (eosio::block_timestamp, eosio::time_point_sec)\nmodify (eosio::multi_index::index, eosio::multi_index)\nmulti_index (eosio::multi_index)\n\nN\n\nname (eosio::multi_index::index, eosio::name)\nnext (eosio::block_timestamp)\nnext_active_heap (eosio::memory_manager)\nnext_ptr (eosio::memory_manager::memory::buffer_ptr)\nnum_words (eosio::fixed_bytes, eosio::fixed_key)\nnumber (eosio::multi_index::index)\n\nO\n\noperator != (eosio::block_timestamp, eosio::time_point)\noperator * (eosio::binary_extension, eosio::fixed_point32, eosio::fixed_point64, eosio::multi_index::const_iterator, eosio::multi_index::index::const_iterator)\noperator *= (eosio::asset)\noperator - (eosio::time_point, eosio::time_point_sec)\noperator -= (eosio::time_point, eosio::time_point_sec)\noperator > (eosio::block_timestamp, eosio::time_point)\noperator >= (eosio::block_timestamp, eosio::time_point)\noperator T (eosio::ignore_wrapper, unsigned_int)\noperator bool (eosio::binary_extension, eosio::name, eosio::symbol, eosio::symbol_code)\noperator ignore (eosio::ignore_wrapper)\noperator int32_t (signed_int)\noperator raw (eosio::name)\noperator time_point (eosio::block_timestamp, eosio::time_point_sec)\noperator uint64_t (eosio::multi_index::intc)\noperator!= (eosio::microseconds)\noperator() (eosio::const_mem_fun)\noperator+ (eosio::fixed_point32, eosio::fixed_point64, eosio::time_point, eosio::time_point_sec)\noperator++ (eosio::multi_index::const_iterator, eosio::multi_index::index::const_iterator, signed_int)\noperator+= (eosio::asset, eosio::microseconds, eosio::time_point, eosio::time_point_sec)\noperator- (eosio::asset, eosio::extended_asset, eosio::fixed_point32, eosio::fixed_point64)\noperator-- (eosio::multi_index::const_iterator, eosio::multi_index::index::const_iterator)\noperator-= (eosio::asset, eosio::microseconds)\noperator-> (eosio::binary_extension, eosio::multi_index::const_iterator, eosio::multi_index::index::const_iterator)\noperator/ (eosio::fixed_point32, eosio::fixed_point64)\noperator/= (eosio::asset)\noperator (eosio::block_timestamp, eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64, eosio::time_point)\noperator (eosio::block_timestamp, eosio::time_point)\noperator= (eosio::block_timestamp, eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64, eosio::time_point_sec, signed_int, unsigned_int)\noperator== (eosio::block_timestamp, eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64, eosio::microseconds, eosio::time_point)\noperator> (eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64)\n\nP\n\npadded_bytes (eosio::fixed_bytes, eosio::fixed_key)\npermission_level (eosio::permission_level)\npos (eosio::datastream)\nprecision (eosio::symbol)\nprimary_key (eosio::singleton::row)\nprint (eosio::asset, eosio::extended_asset, eosio::extended_symbol, eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64, eosio::symbol)\nptr (eosio::memory_manager::memory::buffer_ptr)\nput (eosio::datastream, eosio::datastream)\n\nR\n\nraw (eosio::symbol, eosio::symbol_code)\nrbegin (eosio::multi_index::index, eosio::multi_index)\nread (eosio::datastream)\nrealloc (eosio::memory_manager)\nrealloc_in_place (eosio::memory_manager::memory)\nremaining (eosio::datastream, eosio::datastream)\nremove (eosio::singleton)\nrend (eosio::multi_index::index, eosio::multi_index)\nrequire_find (eosio::multi_index::index, eosio::multi_index)\nreset (eosio::binary_extension)\n\nS\n\nsec_since_epoch (eosio::time_point, eosio::time_point_sec)\nseekp (eosio::datastream, eosio::datastream)\nsend (eosio::action_wrapper, eosio::transaction, eosio::variant_action_wrapper)\nsend_context_free (eosio::action, eosio::action_wrapper, eosio::variant_action_wrapper)\nset (eosio::singleton)\nset_amount (eosio::asset)\nset_from_word_sequence (eosio::fixed_bytes, eosio::fixed_key)\nset_time_point (eosio::block_timestamp)\nsigned_int (signed_int)\nsingleton (eosio::singleton)\nsize (eosio::memory_manager::memory::buffer_ptr)\nskip (eosio::datastream, eosio::datastream)\nsuffix (eosio::name)\nsymbol (eosio::symbol)\nsymbol_code (eosio::symbol_code)\n\nT\n\ntellp (eosio::datastream, eosio::datastream)\ntime_point (eosio::time_point)\ntime_point_sec (eosio::time_point_sec)\ntime_since_epoch (eosio::time_point)\nto_action (eosio::action_wrapper, eosio::variant_action_wrapper)\nto_seconds (eosio::microseconds)\nto_string (eosio::asset, eosio::name, eosio::symbol_code)\nto_time_point (eosio::block_timestamp)\ntransaction (eosio::transaction)\ntransaction_header (eosio::transaction_header)\ntransform_indices (eosio::multi_index)\n\nU\n\nunpack_sent_trx (eosio::onerror)\nunsigned_int (unsigned_int)\nupper_bound (eosio::multi_index::index, eosio::multi_index)\n\nV\n\nvalid (eosio::datastream, eosio::datastream)\nvalidate_index_name (eosio::multi_index::index)\nvalidate_table_name (eosio::multi_index)\nvalue (eosio::binary_extension)\nvalue_or (eosio::binary_extension)\nvariant_action_wrapper (eosio::variant_action_wrapper)\nvoid ::free (eosio::memory_manager)\n\nW\n\nwrite (eosio::datastream, eosio::datastream)\nwrite_as_string (eosio::name, eosio::symbol_code)\n\n_\n\n_get (eosio::binary_extension)\n\n~\n\n~binary_extension (eosio::binary_extension)\n\n"},"variables.html":{"url":"variables.html","title":"Variable Index","keywords":"action::account variant_action_wrapper::action_name transaction::actions permission_level::actor asset::amount fixed_key::arr fixed_key::arr_itr action::authorization blockchain_parameters::base_per_transaction_net_usage block_timestamp::block_interval_ms producer_key::block_signing_key block_timestamp::block_timestamp_epoch variant_action_wrapper::code_name transaction::context_free_actions blockchain_parameters::context_free_discount_net_usage_den blockchain_parameters::context_free_discount_net_usage_num extended_symbol::contract signature::data blockchain_parameters::deferred_trx_expiration_window transaction_header::delay_sec time_point::elapsed transaction_header::expiration multi_index::indices_type asset::max_amount blockchain_parameters::max_authority_depth blockchain_parameters::max_block_cpu_usage blockchain_parameters::max_block_net_usage transaction_header::max_cpu_usage_ms blockchain_parameters::max_inline_action_depth blockchain_parameters::max_inline_action_size transaction_header::max_net_usage_words multi_index::max_stack_buffer_size blockchain_parameters::max_transaction_cpu_usage blockchain_parameters::max_transaction_delay blockchain_parameters::max_transaction_lifetime blockchain_parameters::max_transaction_net_usage blockchain_parameters::min_transaction_cpu_usage action::name blockchain_parameters::net_usage_leeway permission_level::permission variant_action_wrapper::permissions singleton::pk_value producer_key::producer_name producer_schedule::producers extended_asset::quantity transaction_header::ref_block_num transaction_header::ref_block_prefix onerror::sender_id onerror::sent_trx block_timestamp::slot extended_symbol::symbol blockchain_parameters::target_block_cpu_usage_pct blockchain_parameters::target_block_net_usage_pct transaction::transaction_extensions signature::type time_point_sec::utc_seconds fixed_point64::val unsigned_int::value producer_schedule::version multi_index::item::__idx multi_index::item::__iters multi_index::item::__primary_itr memory_manager::_active_free_heap memory_manager::_active_heap memory_manager::_alloc_memory_mask memory_manager::_available_heaps multi_index::_code microseconds::_count fixed_key::_data contract::_ds datastream::_end binary_extension::_has_value memory_manager::memory::_heap memory_manager::memory::buffer_ptr::_heap_end memory_manager::memory::_heap_size memory_manager::_heaps_actual_size memory_manager::_heaps_size multi_index::index::const_iterator::_idx multi_index::_indices memory_manager::_initial_heap memory_manager::_initial_heap_size multi_index::item_ptr::_item multi_index::_items_vector memory_manager::_mem_block multi_index::index::_multidx multi_index::_next_primary_key memory_manager::memory::_offset datastream::_pos multi_index::item_ptr::_primary_itr multi_index::item_ptr::_primary_key memory_manager::memory::buffer_ptr::_ptr memory_manager::_rem_mem_block_mask multi_index::_scope contract::_self memory_manager::memory::buffer_ptr::_size memory_manager::_size_marker datastream::_start singleton::_t","body":"Variable Index\nHere is a list of all variables with links to the class documentation for each member:\nA\n\naccount (eosio::action)\naction_name (eosio::action_wrapper, eosio::variant_action_wrapper)\nactions (eosio::transaction)\nactor (eosio::permission_level)\namount (eosio::asset)\narr (eosio::fixed_bytes, eosio::fixed_key)\narr_itr (eosio::fixed_bytes, eosio::fixed_key)\nauthorization (eosio::action)\n\nB\n\nbase_per_transaction_net_usage (eosio::blockchain_parameters)\nblock_interval_ms (eosio::block_timestamp)\nblock_signing_key (eosio::producer_key)\nblock_timestamp_epoch (eosio::block_timestamp)\n\nC\n\ncode_name (eosio::action_wrapper, eosio::variant_action_wrapper)\ncontext_free_actions (eosio::transaction)\ncontext_free_discount_net_usage_den (eosio::blockchain_parameters)\ncontext_free_discount_net_usage_num (eosio::blockchain_parameters)\ncontract (eosio::extended_asset, eosio::extended_symbol)\n\nD\n\ndata (capi_public_key, capi_signature, eosio::action, eosio::public_key, eosio::signature)\ndeferred_trx_expiration_window (eosio::blockchain_parameters)\ndelay_sec (eosio::transaction_header)\n\nE\n\nelapsed (eosio::time_point)\nexpiration (eosio::transaction_header)\n\nI\n\nindices_type (eosio::multi_index)\n\nM\n\nmax_amount (eosio::asset)\nmax_authority_depth (eosio::blockchain_parameters)\nmax_block_cpu_usage (eosio::blockchain_parameters)\nmax_block_net_usage (eosio::blockchain_parameters)\nmax_cpu_usage_ms (eosio::transaction_header)\nmax_inline_action_depth (eosio::blockchain_parameters)\nmax_inline_action_size (eosio::blockchain_parameters)\nmax_net_usage_words (eosio::transaction_header)\nmax_stack_buffer_size (eosio::multi_index)\nmax_transaction_cpu_usage (eosio::blockchain_parameters)\nmax_transaction_delay (eosio::blockchain_parameters)\nmax_transaction_lifetime (eosio::blockchain_parameters)\nmax_transaction_net_usage (eosio::blockchain_parameters)\nmin_transaction_cpu_usage (eosio::blockchain_parameters)\n\nN\n\nname (eosio::action)\nnet_usage_leeway (eosio::blockchain_parameters)\n\nP\n\npermission (eosio::permission_level)\npermissions (eosio::action_wrapper, eosio::variant_action_wrapper)\npk_value (eosio::singleton)\nproducer_name (eosio::producer_key)\nproducers (eosio::producer_schedule)\n\nQ\n\nquantity (eosio::extended_asset)\n\nR\n\nref_block_num (eosio::transaction_header)\nref_block_prefix (eosio::transaction_header)\n\nS\n\nsender_id (eosio::onerror)\nsent_trx (eosio::onerror)\nslot (eosio::block_timestamp)\nsymbol (eosio::asset, eosio::extended_symbol)\n\nT\n\ntarget_block_cpu_usage_pct (eosio::blockchain_parameters)\ntarget_block_net_usage_pct (eosio::blockchain_parameters)\ntransaction_extensions (eosio::transaction)\ntype (eosio::public_key, eosio::signature)\n\nU\n\nutc_seconds (eosio::time_point_sec)\n\nV\n\nval (eosio::fixed_point128, eosio::fixed_point32, eosio::fixed_point64)\nvalue (eosio::detail::check_types, eosio::detail::check_types, eosio::detail::get_nth, eosio::detail::get_nth_impl, eosio::detail::get_nth_impl, eosio::detail::is_same, eosio::detail::is_same, eosio::detail::is_same, eosio::detail::to_const_char_arr, eosio::ignore_wrapper, eosio::name, eosio::singleton::row, eosio::symbol, eosio::symbol_code, signed_int, unsigned_int)\nversion (eosio::producer_schedule)\n\n_\n\n__idx (eosio::multi_index::item)\n__iters (eosio::multi_index::item)\n__primary_itr (eosio::multi_index::item)\n_active_free_heap (eosio::memory_manager)\n_active_heap (eosio::memory_manager)\n_alloc_memory_mask (eosio::memory_manager)\n_available_heaps (eosio::memory_manager)\n_code (eosio::contract, eosio::multi_index)\n_count (eosio::microseconds)\n_data (eosio::binary_extension, eosio::fixed_bytes, eosio::fixed_key)\n_ds (eosio::contract)\n_end (eosio::datastream)\n_has_value (eosio::binary_extension)\n_heap (eosio::memory_manager::memory)\n_heap_end (eosio::memory_manager::memory::buffer_ptr)\n_heap_size (eosio::memory_manager::memory)\n_heaps_actual_size (eosio::memory_manager)\n_heaps_size (eosio::memory_manager)\n_idx (eosio::multi_index::index::const_iterator)\n_indices (eosio::multi_index)\n_initial_heap (eosio::memory_manager)\n_initial_heap_size (eosio::memory_manager)\n_item (eosio::multi_index::const_iterator, eosio::multi_index::index::const_iterator, eosio::multi_index::item_ptr)\n_items_vector (eosio::multi_index)\n_mem_block (eosio::memory_manager)\n_multidx (eosio::multi_index::const_iterator, eosio::multi_index::index)\n_next_primary_key (eosio::multi_index)\n_offset (eosio::memory_manager::memory)\n_pos (eosio::datastream)\n_primary_itr (eosio::multi_index::item_ptr)\n_primary_key (eosio::multi_index::item_ptr)\n_ptr (eosio::memory_manager::memory::buffer_ptr)\n_rem_mem_block_mask (eosio::memory_manager)\n_scope (eosio::multi_index)\n_self (eosio::contract)\n_size (eosio::datastream, eosio::memory_manager::memory::buffer_ptr)\n_size_marker (eosio::memory_manager)\n_start (eosio::datastream)\n_t (eosio::singleton)\n\n"},"enumerations.html":{"url":"enumerations.html","title":"Enumeration Index","keywords":"multi_index::index::constants multi_index::intc::e multi_index::next_primary_key_tags name::raw","body":"Enumeration Index\nHere is a list of all enumerations with links to the class documentation for each member:\nC\n\nconstants (eosio::indexed_by, eosio::multi_index::index)\n\nE\n\ne (eosio::multi_index::intc)\n\nN\n\nnext_primary_key_tags (eosio::multi_index)\n\nR\n\nraw (eosio::name)\n\n"},"annotated.html":{"url":"annotated.html","title":"Class List","keywords":"Extended Stores capi_public_key capi_signature eosio _datastream_detail _multi_index_detail secondary_index_db_functions secondary_key_traits secondary_key_traits< eosio::fixed_bytes< 32 > > secondary_key_traits< eosio::key256 > action action_wrapper asset binary_extension block_timestamp blockchain_parameters const_mem_fun contract datastream datastream< size_t > detail check_types check_types< Action, I, T > convert convert< char * > convert< const char * > get_nth get_nth_impl get_nth_impl< N, N, Arg, Args... > is_same is_same< T, bool > is_same< bool, U > to_const_char_arr unwrap unwrap< ignore< T > > extended_asset extended_symbol fixed_bytes bool_pack fixed_key bool_pack fixed_point128 fixed_point32 fixed_point64 ignore ignore_wrapper indexed_by inline_dispatcher inline_dispatcher< void(T::*)(Args...), Name > iostream memory_manager memory buffer_ptr microseconds multi_index const_iterator index const_iterator intc item item_ptr name onerror permission_level producer_key producer_schedule public_key reflector signature singleton row symbol symbol_code time_point time_point_sec transaction transaction_header variant_action_wrapper signed_int unsigned_int","body":"Class List\nHere are the classes, structs, unions and interfaces with brief descriptions:\n\nstruct Extended\nstruct Stores\nstruct capi_public_key\nstruct capi_signature\nnamespace eosio\nnamespace _datastream_detail\nnamespace _multi_index_detail\nstruct secondary_index_db_functions\nstruct secondary_key_traits\nstruct secondary_key_traits >\nstruct secondary_key_traits\n\n\nstruct action\nstruct action_wrapper\nstruct asset\nclass binary_extension\nclass block_timestamp\nstruct blockchain_parameters\nstruct const_mem_fun\nclass contract\nclass datastream\nclass datastream\nnamespace detail\nstruct check_types\nstruct check_types\nstruct convert\nstruct convert\nstruct convert\nstruct get_nth\nstruct get_nth_impl\nstruct get_nth_impl\nstruct is_same\nstruct is_same\nstruct is_same\nstruct to_const_char_arr\nstruct unwrap\nstruct unwrap >\n\n\nstruct extended_asset\nclass extended_symbol\nclass fixed_bytes\nstruct bool_pack\n\n\nclass fixed_key\nstruct bool_pack\n\n\nstruct fixed_point128\nstruct fixed_point32\nstruct fixed_point64\nstruct ignore\nstruct ignore_wrapper\nstruct indexed_by\nstruct inline_dispatcher\nstruct inline_dispatcher\nclass iostream\nclass memory_manager\nclass memory\nclass buffer_ptr\n\n\n\n\nclass microseconds\nclass multi_index\nstruct const_iterator\nstruct index\nstruct const_iterator\n\n\nstruct intc\nstruct item\nstruct item_ptr\n\n\nstruct name\nstruct onerror\nstruct permission_level\nstruct producer_key\nstruct producer_schedule\nstruct public_key\nstruct reflector\nstruct signature\nclass singleton\nstruct row\n\n\nclass symbol\nclass symbol_code\nclass time_point\nclass time_point_sec\nclass transaction\nclass transaction_header\nstruct variant_action_wrapper\n\n\nstruct signed_int\nstruct unsigned_int\n\n"},"struct_extended.html":{"url":"struct_extended.html","title":"struct Extended","keywords":"Extended","body":"struct Extended\nClass List > Extended\nDetailed Description\nstores the information of the owner of the symbol \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/symbol.hpp\n"},"struct_stores.html":{"url":"struct_stores.html","title":"struct Stores","keywords":"Stores","body":"struct Stores\nClass List > Stores\nStores the symbol code. More...\nDetailed Description\ncode \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/symbol.hpp\n"},"structcapi__public__key.html":{"url":"structcapi__public__key.html","title":"struct capi_public_key","keywords":"capi_public_key data","body":"struct capi_public_key\nClass List > capi_public_key\nEOSIO Public Key. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nchar\ndata\n\n\n\nDetailed Description\nEOSIO Public Key. It is 34 bytes. \nvariable data\nchar capi_public_key::data[34];\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/types.h\n"},"structcapi__signature.html":{"url":"structcapi__signature.html","title":"struct capi_signature","keywords":"capi_signature data","body":"struct capi_signature\nClass List > capi_signature\nEOSIO Signature. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint8_t\ndata\n\n\n\nDetailed Description\nEOSIO Signature. It is 66 bytes. \nvariable data\nuint8_t capi_signature::data[66];\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/types.h\n"},"namespaceeosio.html":{"url":"namespaceeosio.html","title":"namespace eosio","keywords":"eosio action action_wrapper asset binary_extension block_timestamp blockchain_parameters const_mem_fun contract datastream datastream< size_t > extended_asset extended_symbol fixed_bytes fixed_key fixed_point128 fixed_point32 fixed_point64 ignore ignore_wrapper indexed_by inline_dispatcher inline_dispatcher< void(T::*)(Args...), Name > iostream memory_manager microseconds multi_index name onerror permission_level producer_key producer_schedule public_key reflector signature singleton symbol symbol_code time_point time_point_sec transaction transaction_header variant_action_wrapper checksum160 checksum256 checksum512 key256 block_timestamp_type extension extensions_type memory_heap same_payer cout unpack_action_data require_recipient require_recipient require_auth require_auth has_auth is_account dispatch_inline assert_sha256 assert_sha1 assert_sha512 assert_ripemd160 sha256 sha1 sha512 ripemd160 recover_key assert_recover_key operator<< operator>> operator<< deserialize operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator>> operator<< operator >> operator<< operator >> operator >> operator<< operator >> operator<< operator<< operator >> operator >> operator<< operator >> operator<< operator >> operator<< operator >> operator<< operator>> operator<< operator>> operator<< operator>> unpack unpack pack_size pack operator<< operator>> operator<< operator>> dispatch dispatch execute_action set_blockchain_parameters get_blockchain_parameters operator== operator != operator > operator< operator >= operator<= operator== operator != operator > operator< operator >= operator<= assignHelper fixed_divide fixed_divide check_transaction_authorization check_permission_authorization print print print print print print print print print print print print print print print print print print print print print print print print_f print_f print operator<< seconds milliseconds minutes hours days get_action","body":"namespace eosio\nClass List > eosio\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\naction\n\n\nstruct\naction_wrapper\n\n\nstruct\nasset\n\n\nclass\nbinary_extension\n\n\nclass\nblock_timestamp\n\n\nstruct\nblockchain_parameters\n\n\nstruct\nconst_mem_fun\n\n\nclass\ncontract\n\n\nclass\ndatastream\n\n\nclass\ndatastream\n\n\nstruct\nextended_asset\n\n\nclass\nextended_symbol\n\n\nclass\nfixed_bytes\n\n\nclass\nfixed_key\n\n\nstruct\nfixed_point128\n\n\nstruct\nfixed_point32\n\n\nstruct\nfixed_point64\n\n\nstruct\nignore\n\n\nstruct\nignore_wrapper\n\n\nstruct\nindexed_by\n\n\nstruct\ninline_dispatcher\n\n\nstruct\ninline_dispatcher\n\n\nclass\niostream\n\n\nclass\nmemory_manager\n\n\nclass\nmicroseconds\n\n\nclass\nmulti_index\n\n\nstruct\nname\n\n\nstruct\nonerror\n\n\nstruct\npermission_level\n\n\nstruct\nproducer_key\n\n\nstruct\nproducer_schedule\n\n\nstruct\npublic_key\n\n\nstruct\nreflector\n\n\nstruct\nsignature\n\n\nclass\nsingleton\n\n\nclass\nsymbol\n\n\nclass\nsymbol_code\n\n\nclass\ntime_point\n\n\nclass\ntime_point_sec\n\n\nclass\ntransaction\n\n\nclass\ntransaction_header\n\n\nstruct\nvariant_action_wrapper\n\n\n\n\n\n\nType\nName\n\n\n\n\ntypedef fixed_bytes\nchecksum160\n\n\ntypedef fixed_bytes\nchecksum256\n\n\ntypedef fixed_bytes\nchecksum512\n\n\ntypedef fixed_key\nkey256\n\n\ntypedef block_timestamp\nblock_timestamp_type\n\n\ntypedef std::tuple >\nextension\n\n\ntypedef std::vectorextension >\nextensions_type\n\n\n\nVariables\n\n\n\nType\nName\n\n\n\n\nmemory_manager\nmemory_heap\n\n\nstatic constexpr name\nsame_payer\n\n\nstatic iostream\ncout\n\n\n\n\n\n\nType\nName\n\n\n\n\nT\nunpack_action_data () Interpret the action body as type T.\n\n\nvoid\nrequire_recipient (name notify_account) Add the specified account to set of accounts to be notified.\n\n\nvoid\nrequire_recipient (name notify_account, accounts... remaining_accounts) Notify an account for this action.\n\n\nvoid\nrequire_auth (name n) Verify specified account exists in the set of provided auths.\n\n\nvoid\nrequire_auth (const permission_level & level) Require the specified authorization for this action.\n\n\nbool\nhas_auth (name n) Verifies that n has auth.\n\n\nbool\nis_account (name n) Verifies that n is an existing account.\n\n\nvoid\ndispatch_inline (name code, name act, std::vectorpermission_level > perms, std::tuple args)\n\n\nvoid\nassert_sha256 (const char * data, uint32_t length, const eosio::checksum256 & hash) Tests if the sha256 hash generated from data matches the provided digest.\n\n\nvoid\nassert_sha1 (const char * data, uint32_t length, const eosio::checksum160 & hash) Tests if the sha1 hash generated from data matches the provided digest.\n\n\nvoid\nassert_sha512 (const char * data, uint32_t length, const eosio::checksum512 & hash) Tests if the sha512 hash generated from data matches the provided digest.\n\n\nvoid\nassert_ripemd160 (const char * data, uint32_t length, const eosio::checksum160 & hash) Tests if the ripemd160 hash generated from data matches the provided digest.\n\n\neosio::checksum256\nsha256 (const char * data, uint32_t length) Hashes data using SHA256.\n\n\neosio::checksum160\nsha1 (const char * data, uint32_t length) Hashes data using SHA1.\n\n\neosio::checksum512\nsha512 (const char * data, uint32_t length) Hashes data using SHA512.\n\n\neosio::checksum160\nripemd160 (const char * data, uint32_t length) Hashes data using RIPEMD160.\n\n\neosio::public_key\nrecover_key (const eosio::checksum256 & digest, const eosio::signature & sig) Calculates the public key used for a given signature on a given digest.\n\n\nvoid\nassert_recover_key (const eosio::checksum256 & digest, const eosio::signature & sig, const eosio::public_key & pubkey) Tests a given public key with the recovered public key from digest and signature.\n\n\ndatastream &\noperator (datastream & ds, const eosio::binary_extension & be) Serialize a binary_extension.\n\n\ndatastream &\noperator>> (datastream & ds, eosio::binary_extension & be) Deserialize a binary_extension.\n\n\ndatastream &\noperator (datastream & ds, const std::variant & var) Serialize an std::variant.\n\n\nvoid\ndeserialize (datastream & ds, std::variant & var, int i)\n\n\ndatastream &\noperator>> (datastream & ds, std::variant & var) Deserialize an std::variant.\n\n\nDataStream &\noperator (DataStream & ds, const std::pair & t) Serialize an std::pair.\n\n\nDataStream &\noperator>> (DataStream & ds, std::pair & t) Deserialize an std::pair.\n\n\ndatastream &\noperator (datastream & ds, const std::optional & opt) Serialize an optional.\n\n\ndatastream &\noperator>> (datastream & ds, std::optional & opt) Deserialize an optional.\n\n\ndatastream &\noperator (datastream & ds, const eosio::symbol_code sym_code) Serialize a symbol_code.\n\n\ndatastream &\noperator>> (datastream & ds, eosio::symbol_code & sym_code) Deserialize a symbol_code.\n\n\ndatastream &\noperator (datastream & ds, const eosio::symbol sym) Serialize a symbol.\n\n\ndatastream &\noperator>> (datastream & ds, eosio::symbol & sym) Deserialize a symbol.\n\n\ndatastream &\noperator (datastream & ds, const ::eosio::ignore_wrapper & val) Serialize ignored_wrapper's T value.\n\n\ndatastream &\noperator (datastream & ds, const ::eosio::ignore & val) Serialize an ignored type.\n\n\ndatastream &\noperator>> (datastream & ds, ::eosio::ignore) Deserialize an ignored type.\n\n\ndatastream &\noperator (datastream & ds, const capi_public_key & pubkey) Serialize a public_key.\n\n\ndatastream &\noperator>> (datastream & ds, capi_public_key & pubkey) Deserialize a public_key.\n\n\ndatastream &\noperator (datastream & ds, const eosio::public_key & pubkey) Serialize an eosio::public_key.\n\n\ndatastream &\noperator>> (datastream & ds, eosio::public_key & pubkey) Deserialize an eosio::public_key.\n\n\ndatastream &\noperator (datastream & ds, const eosio::signature & sig) Serialize an eosio::signature.\n\n\ndatastream &\noperator>> (datastream & ds, eosio::signature & sig) Deserialize an eosio::signature.\n\n\ndatastream &\noperator (datastream & ds, const key256 & d) Serialize a key256.\n\n\ndatastream &\noperator>> (datastream & ds, key256 & d) Deserialize a key256.\n\n\ndatastream &\noperator (datastream & ds, const fixed_bytes & d) Serialize a fixed_bytes.\n\n\ndatastream &\noperator>> (datastream & ds, fixed_bytes & d) Deserialize a fixed_bytes.\n\n\ndatastream &\noperator (datastream & ds, const bool & d) Serialize a bool into a stream.\n\n\ndatastream &\noperator>> (datastream & ds, bool & d) Deserialize a bool.\n\n\ndatastream &\noperator (datastream & ds, const capi_checksum256 & d) Serialize a checksum256.\n\n\ndatastream &\noperator>> (datastream & ds, capi_checksum256 & d) Deserialize a checksum256.\n\n\nDataStream &\noperator (DataStream & ds, const std::string & v) Serialize a string.\n\n\nDataStream &\noperator >> (DataStream & ds, std::string & v) Deserialize a string.\n\n\nDataStream &\noperator (DataStream & ds, const std::array & v) Serialize a fixed size std::array.\n\n\nDataStream &\noperator >> (DataStream & ds, std::array & v) Deserialize a fixed size std::array.\n\n\nDataStream &\noperator >> (DataStream & ds, T) Deserialize a a pointer.\n\n\nDataStream &\noperator (DataStream & ds, const T(&) v) Serialize a fixed size C array of non-primitive and non-pointer type.\n\n\nDataStream &\noperator >> (DataStream & ds, T(&) v) Deserialize a fixed size C array of non-primitive and non-pointer type.\n\n\nDataStream &\noperator (DataStream & ds, const std::vector & v) Serialize a vector of char.\n\n\nDataStream &\noperator (DataStream & ds, const std::vector & v) Serialize a vector.\n\n\nDataStream &\noperator >> (DataStream & ds, std::vector & v) Deserialize a vector of char.\n\n\nDataStream &\noperator >> (DataStream & ds, std::vector & v) Deserialize a vector.\n\n\nDataStream &\noperator (DataStream & ds, const std::set & s) Serialize a set.\n\n\nDataStream &\noperator >> (DataStream & ds, std::set & s) Deserialize a set.\n\n\nDataStream &\noperator (DataStream & ds, const std::map & m) Serialize a map.\n\n\nDataStream &\noperator >> (DataStream & ds, std::map & m) Deserialize a map.\n\n\nDataStream &\noperator (DataStream & ds, const boost::container::flat_set & s) Serialize a flat_set.\n\n\nDataStream &\noperator >> (DataStream & ds, boost::container::flat_set & s) Deserialize a flat_set.\n\n\nDataStream &\noperator (DataStream & ds, const boost::container::flat_map & m) Serialize a flat map.\n\n\nDataStream &\noperator>> (DataStream & ds, boost::container::flat_map & m) Deserialize a flat map.\n\n\nDataStream &\noperator (DataStream & ds, const std::tuple & t) Serialize a tuple.\n\n\nDataStream &\noperator>> (DataStream & ds, std::tuple & t) Deserialize a tuple.\n\n\nDataStream &\noperator (DataStream & ds, const T & v) Serialize a class.\n\n\nDataStream &\noperator>> (DataStream & ds, T & v) Deserialize a class.\n\n\nT\nunpack (const char * buffer, size_t len) Unpack data inside a fixed size buffer as T.\n\n\nT\nunpack (const std::vector & bytes) Unpack data inside a variable size buffer as T.\n\n\nsize_t\npack_size (const T & value) Get the size of the packed data.\n\n\nstd::vector\npack (const T & value) Get packed data.\n\n\ndatastream &\noperator (datastream & ds, const capi_checksum160 & cs) Serializea capi_checksum160 type.\n\n\ndatastream &\noperator>> (datastream & ds, capi_checksum160 & cs) Deserialize a capi_checksum160 type.\n\n\ndatastream &\noperator (datastream & ds, const capi_checksum512 & cs) Serialize a capi_checksum512 type.\n\n\ndatastream &\noperator>> (datastream & ds, capi_checksum512 & cs) Deserialize a capi_checksum512 type.\n\n\nbool\ndispatch (uint64_t code, uint64_t act)\n\n\nbool\ndispatch (uint64_t code, uint64_t act)\n\n\nbool\nexecute_action (name self, name code, void(T::*)(Args...) func) Unpack the received action and execute the correponding action handler.\n\n\nvoid\nset_blockchain_parameters (const eosio::blockchain_parameters & params) Set the blockchain parameters Set the blockchain parameters.\n\n\nvoid\nget_blockchain_parameters (eosio::blockchain_parameters & params) Retrieve the blolckchain parameters Retrieve the blolckchain parameters.\n\n\nbool\noperator== (const fixed_bytes & c1, const fixed_bytes & c2) Compares two fixed_bytes variables c1 and c2.\n\n\nbool\noperator != (const fixed_bytes & c1, const fixed_bytes & c2) Compares two fixed_bytes variables c1 and c2.\n\n\nbool\noperator > (const fixed_bytes & c1, const fixed_bytes & c2) Compares two fixed_bytes variables c1 and c2.\n\n\nbool\noperator (const fixed_bytes & c1, const fixed_bytes & c2) Compares two fixed_bytes variables c1 and c2.\n\n\nbool\noperator >= (const fixed_bytes & c1, const fixed_bytes & c2) Compares two fixed_bytes variables c1 and c2.\n\n\nbool\noperator (const fixed_bytes & c1, const fixed_bytes & c2) Compares two fixed_bytes variables c1 and c2.\n\n\nbool\noperator== (const fixed_key & c1, const fixed_key & c2) Compares two fixed_key variables c1 and c2.\n\n\nbool\noperator != (const fixed_key & c1, const fixed_key & c2) Compares two fixed_key variables c1 and c2.\n\n\nbool\noperator > (const fixed_key & c1, const fixed_key & c2) Compares two fixed_key variables c1 and c2.\n\n\nbool\noperator (const fixed_key & c1, const fixed_key & c2) Compares two fixed_key variables c1 and c2.\n\n\nbool\noperator >= (const fixed_key & c1, const fixed_key & c2) Compares two fixed_key variables c1 and c2.\n\n\nbool\noperator (const fixed_key & c1, const fixed_key & c2) Compares two fixed_key variables c1 and c2.\n\n\nT\nassignHelper (T rhs_val, uint8_t q, uint8_t qr)\n\n\nfixed_point64\nfixed_divide (uint32_t lhs, uint32_t rhs) Wrapper function for dividing two unit64 variable and stores result in fixed_point64.\n\n\nfixed_point128\nfixed_divide (uint64_t lhs, uint64_t rhs) Wrapper function for dividing two unit64 variable and stores result in fixed_point128 Wrapper function for dividing two unit64 variable and stores result in fixed_point128.\n\n\nbool\ncheck_transaction_authorization (const transaction & trx, const std::setpermission_level > & provided_permissions, const std::setpublic_key > & provided_keys = std::setpublic_key >()) Checks if a transaction is authorized by a provided set of keys and permissions.\n\n\nbool\ncheck_permission_authorization (name account, name permission, const std::setpublic_key > & provided_keys, const std::setpermission_level > & provided_permissions = std::setpermission_level >(), uint64_t provided_delay_us = static_cast(std::numeric_limits::max())) Checks if a permission is authorized by a provided delay and a provided set of keys and permissions.\n\n\nvoid\nprint (const char * ptr) Prints string.\n\n\nvoid\nprint (const std::string & s)\n\n\nvoid\nprint (std::string && s)\n\n\nvoid\nprint (const char c)\n\n\nvoid\nprint (int num) Prints signed integer as a 64 bit signed integer.\n\n\nvoid\nprint (int32_t num) Prints 32 bit signed integer as a 64 bit signed integer.\n\n\nvoid\nprint (int64_t num) Prints 64 bit signed integer as a 64 bit signed integer.\n\n\nvoid\nprint (unsigned int num) Prints unsigned integer as a 64 bit unsigned integer.\n\n\nvoid\nprint (uint32_t num) Prints 32 bit unsigned integer as a 64 bit unsigned integer.\n\n\nvoid\nprint (uint64_t num) Prints 64 bit unsigned integer as a 64 bit unsigned integer.\n\n\nvoid\nprint (int128_t num) Prints 128 bit signed integer.\n\n\nvoid\nprint (uint128_t num) Prints 128 bit unsigned integer.\n\n\nvoid\nprint (float num) Prints single-precision floating point number (i.e. float)\n\n\nvoid\nprint (double num) Prints double-precision floating point number (i.e. double)\n\n\nvoid\nprint (long double num) Prints quadruple-precision floating point number (i.e. long double)\n\n\nvoid\nprint (const fixed_key & val) Prints fixed_key as a hexidecimal string.\n\n\nvoid\nprint (fixed_key & val) Prints fixed_key as a hexidecimal string.\n\n\nvoid\nprint (const fixed_bytes & val) Prints fixed_bytes as a hexidecimal string.\n\n\nvoid\nprint (fixed_bytes & val) Prints fixed_bytes as a hexidecimal string.\n\n\nvoid\nprint (name name) Prints a 64 bit names as base32 encoded string.\n\n\nvoid\nprint (eosio::symbol_code sym_code) Prints a symbol_code.\n\n\nvoid\nprint (bool val) Prints bool.\n\n\nvoid\nprint (T && t) Prints class object.\n\n\nvoid\nprint_f (const char * s) Prints null terminated string.\n\n\nvoid\nprint_f (const char * s, Arg val, Args... rest) Prints formatted string.\n\n\nvoid\nprint (Arg && a, Args &&... args) Print out value / list of values.\n\n\niostream &\noperator (iostream & out, const T & v) Overload c++ iostream.\n\n\nmicroseconds\nseconds (int64_t s)\n\n\nmicroseconds\nmilliseconds (int64_t s)\n\n\nmicroseconds\nminutes (int64_t m)\n\n\nmicroseconds\nhours (int64_t h)\n\n\nmicroseconds\ndays (int64_t d)\n\n\naction\nget_action (uint32_t type, uint32_t index)\n\n\n\ntypedef checksum160\nusing eosio::checksum160 = typedef fixed_bytes;\n\ntypedef checksum256\nusing eosio::checksum256 = typedef fixed_bytes;\n\ntypedef checksum512\nusing eosio::checksum512 = typedef fixed_bytes;\n\ntypedef key256\ntypedef fixed_key eosio::key256;\n\ntypedef block_timestamp_type\ntypedef block_timestamp eosio::block_timestamp_type;\n\ntypedef extension\ntypedef std::tuple > eosio::extension;\n\ntypedef extensions_type\ntypedef std::vector eosio::extensions_type;\n\nvariable memory_heap\nmemory_manager eosio::memory_heap;\n\nvariable same_payer\nconstexpr name eosio::same_payer;\n\nvariable cout\niostream eosio::cout;\n\nfunction unpack_action_data\nT eosio::unpack_action_data ()\n\nInterpret the action body as type T. \nThis method unpacks the current action at type T.\nReturns:\nUnpacked action data casted as T.\nExample:\nstruct dummy_action {\n  char a; //1\n  unsigned long long b; //8\n  int  c; //4\n\n  EOSLIB_SERIALIZE( dummy_action, (a)(b)(c) )\n};\ndummy_action msg = unpack_action_data();\n\nfunction require_recipient (1/2)\nvoid eosio::require_recipient (\n    name notify_account\n)\n\nAdd the specified account to set of accounts to be notified. \nAdd the specified account to set of accounts to be notified\nParameters:\n\nnotify_account - name of the account to be verified \n\nfunction require_recipient (2/2)\nvoid eosio::require_recipient (\n    name notify_account,\n    accounts... remaining_accounts\n)\n\nNotify an account for this action. \nAll of the listed accounts will be added to the set of accounts to be notified\nThis helper method enables you to add multiple accounts to accounts to be notified list with a single call rather than having to call the similar C API multiple times.\nNote:\naction.code is also considered as part of the set of notified accounts\nParameters:\n\nnotify_account account to be notified \nremaining_accounts accounts to be notified\n\nExample:\nrequire_recipient(\"Account1\"_n, \"Account2\"_n, \"Account3\"_n); // throws exception if any of them not in set.\n\nfunction require_auth (1/2)\nvoid eosio::require_auth (\n    name n\n)\n\nVerify specified account exists in the set of provided auths. \nVerifies that name exists in the set of provided auths on a action. Fails if not found.\nParameters:\n\nname - name of the account to be verified \n\nfunction require_auth (2/2)\nvoid eosio::require_auth (\n    const permission_level & level\n)\n\nRequire the specified authorization for this action. \nRequire the specified authorization for this action. If this action doesn't contain the specified auth, it will fail.\nParameters:\n\nlevel - Authorization to be required \n\nfunction has_auth\nbool eosio::has_auth (\n    name n\n)\n\nVerifies that n has auth. \nVerifies that n has auth.\nParameters:\n\nn - name of the account to be verified \n\nfunction is_account\nbool eosio::is_account (\n    name n\n)\n\nVerifies that n is an existing account. \nVerifies that n is an existing account.\nParameters:\n\nn - name of the account to check \n\nfunction dispatch_inline\nvoid eosio::dispatch_inline (\n    name code,\n    name act,\n    std::vector perms,\n    std::tuple args\n)\n\nfunction assert_sha256\nvoid eosio::assert_sha256 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum256 & hash\n)\n\nTests if the sha256 hash generated from data matches the provided digest. \nTests if the SHA256 hash generated from data matches the provided digest. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction assert_sha1\nvoid eosio::assert_sha1 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum160 & hash\n)\n\nTests if the sha1 hash generated from data matches the provided digest. \nTests if the SHA1 hash generated from data matches the provided digest. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction assert_sha512\nvoid eosio::assert_sha512 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum512 & hash\n)\n\nTests if the sha512 hash generated from data matches the provided digest. \nTests if the SHA512 hash generated from data matches the provided digest. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction assert_ripemd160\nvoid eosio::assert_ripemd160 (\n    const char * data,\n    uint32_t length,\n    const eosio::checksum160 & hash\n)\n\nTests if the ripemd160 hash generated from data matches the provided digest. \nTests if the RIPEMD160 hash generated from data matches the provided digest. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - digest to compare to \n\nfunction sha256\neosio::checksum256 eosio::sha256 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using SHA256. \nHashes data using SHA256. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum256 - Computed digest \nfunction sha1\neosio::checksum160 eosio::sha1 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using SHA1. \nHashes data using SHA1. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum160 - Computed digest \nfunction sha512\neosio::checksum512 eosio::sha512 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using SHA512. \nHashes data using SHA512. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum512 - Computed digest \nfunction ripemd160\neosio::checksum160 eosio::ripemd160 (\n    const char * data,\n    uint32_t length\n)\n\nHashes data using RIPEMD160. \nHashes data using RIPEMD160. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \n\nReturns:\neosio::checksum160 - Computed digest \nfunction recover_key\neosio::public_key eosio::recover_key (\n    const eosio::checksum256 & digest,\n    const eosio::signature & sig\n)\n\nCalculates the public key used for a given signature on a given digest. \nCalculates the public key used for a given signature on a given digest. \nParameters:\n\ndigest - Digest of the message that was signed \nsig - Signature \n\nReturns:\neosio::public_key - Recovered public key \nfunction assert_recover_key\nvoid eosio::assert_recover_key (\n    const eosio::checksum256 & digest,\n    const eosio::signature & sig,\n    const eosio::public_key & pubkey\n)\n\nTests a given public key with the recovered public key from digest and signature. \nTests a given public key with the recovered public key from digest and signature. \nParameters:\n\ndigest - Digest of the message that was signed \nsig - Signature \npubkey - Public key \n\nfunction operator\ndatastream & eosio::operator & ds,\n    const eosio::binary_extension & be\n)\n\nSerialize a binary_extension. \nSerialize a binary_extension into a stream\nParameters:\n\nds - The stream to write \nopt - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    eosio::binary_extension & be\n)\n\nDeserialize a binary_extension. \nDeserialize a binary_extension from a stream\nParameters:\n\nds - The stream to read \nopt - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const std::variant & var\n)\n\nSerialize an std::variant. \nSerialize an std::variant into a stream\nParameters:\n\nds - The stream to write \nopt - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction deserialize\nvoid eosio::deserialize (\n    datastream & ds,\n    std::variant & var,\n    int i\n)\n\nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    std::variant & var\n)\n\nDeserialize an std::variant. \nDeserialize an std::variant from a stream\nParameters:\n\nds - The stream to read \nopt - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & t\n)\n\nSerialize an std::pair. \nSerialize an std::pair\nParameters:\n\nds - The stream to write \nt - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nArgs - Type of the objects contained in the tuple \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    std::pair & t\n)\n\nDeserialize an std::pair. \nDeserialize an std::pair\nParameters:\n\nds - The stream to read \nt - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nArgs - Type of the objects contained in the tuple \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const std::optional & opt\n)\n\nSerialize an optional. \nSerialize an optional into a stream\nParameters:\n\nds - The stream to write \nopt - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    std::optional & opt\n)\n\nDeserialize an optional. \nDeserialize an optional from a stream\nParameters:\n\nds - The stream to read \nopt - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const eosio::symbol_code sym_code\n)\n\nSerialize a symbol_code. \nSerialize a symbol_code into a stream\nParameters:\n\nds - The stream to write \nsym - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    eosio::symbol_code & sym_code\n)\n\nDeserialize a symbol_code. \nDeserialize a symbol_code from a stream\nParameters:\n\nds - The stream to read \nsymbol - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const eosio::symbol sym\n)\n\nSerialize a symbol. \nSerialize a symbol into a stream\nParameters:\n\nds - The stream to write \nsym - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    eosio::symbol & sym\n)\n\nDeserialize a symbol. \nDeserialize a symbol from a stream\nParameters:\n\nds - The stream to read \nsymbol - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const ::eosio::ignore_wrapper & val\n)\n\nSerialize ignored_wrapper's T value. \nSerialize an ignored_wrapper type into a stream\nParameters:\n\nds - The stream to write \nval - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const ::eosio::ignore & val\n)\n\nSerialize an ignored type. \nSerialize an ignored type into a stream\nParameters:\n\nds - The stream to write \nignore - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    ::eosio::ignore \n)\n\nDeserialize an ignored type. \nDeserialize an ignored type from a stream\nParameters:\n\nds - The stream to read \nignored - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const capi_public_key & pubkey\n)\n\nSerialize a public_key. \nSerialize a public_key into a stream\nParameters:\n\nds - The stream to write \npubkey - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    capi_public_key & pubkey\n)\n\nDeserialize a public_key. \nDeserialize a public_key from a stream\nParameters:\n\nds - The stream to read \npubkey - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const eosio::public_key & pubkey\n)\n\nSerialize an eosio::public_key. \nSerialize an eosio::public_key into a stream\nParameters:\n\nds - The stream to write \npubkey - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    eosio::public_key & pubkey\n)\n\nDeserialize an eosio::public_key. \nDeserialize an eosio::public_key from a stream\nParameters:\n\nds - The stream to read \npubkey - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const eosio::signature & sig\n)\n\nSerialize an eosio::signature. \nSerialize an eosio::signature into a stream\nParameters:\n\nds - The stream to write \nsig - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    eosio::signature & sig\n)\n\nDeserialize an eosio::signature. \nDeserialize an eosio::signature from a stream\nParameters:\n\nds - The stream to read \nsig - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const key256 & d\n)\n\nSerialize a key256. \nSerialize a key256 into a stream\nParameters:\n\nds - The stream to write \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    key256 & d\n)\n\nDeserialize a key256. \nDeserialize a key256 from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const fixed_bytes & d\n)\n\nSerialize a fixed_bytes. \nSerialize a fixed_bytes into a stream\nParameters:\n\nds - The stream to write \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    fixed_bytes & d\n)\n\nDeserialize a fixed_bytes. \nDeserialize a fixed_bytes from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const bool & d\n)\n\nSerialize a bool into a stream. \nSerialize a bool into a stream\nParameters:\n\nds - The stream to read \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    bool & d\n)\n\nDeserialize a bool. \nDeserialize a bool from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const capi_checksum256 & d\n)\n\nSerialize a checksum256. \nSerialize a checksum256 into a stream\nParameters:\n\nds - The stream to write \nd - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    capi_checksum256 & d\n)\n\nDeserialize a checksum256. \nDeserialize a checksum256 from a stream\nParameters:\n\nds - The stream to read \nd - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator\nSerialize a string. \nSerialize a string into a stream\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & eosio::operator >> (\n    DataStream & ds,\n    std::string & v\n)\n\nDeserialize a string. \nDeserialize a string from a stream\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & v\n)\n\nSerialize a fixed size std::array. \nSerialize a fixed size std::array\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the array \nN - Size of the array \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & eosio::operator >> (\n    DataStream & ds,\n    std::array & v\n)\n\nDeserialize a fixed size std::array. \nDeserialize a fixed size std::array\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the array \nN - Size of the array \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & eosio::operator >> (\n    DataStream & ds,\n    T \n)\n\nDeserialize a a pointer. \nPointer should not be serialized, so this function will always throws an error\nParameters:\n\nds - The stream to read \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the pointer \n\nReturns:\nDataStream& - Reference to the datastream \nPost\nThrow an exception if it is a pointer \nfunction operator\nDataStream & eosio::operator\nSerialize a fixed size C array of non-primitive and non-pointer type. \nSerialize a fixed size C array of primitive type.\nSerialize a fixed size C array of non-primitive and non-pointer type\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the pointer \n\nReturns:\nDataStream& - Reference to the datastream\nSerialize a fixed size C array of primitive type\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the pointer \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & eosio::operator >> (\n    DataStream & ds,\n    T(&) v\n)\n\nDeserialize a fixed size C array of non-primitive and non-pointer type. \nDeserialize a fixed size C array of primitive type.\nDeserialize a fixed size C array of non-primitive and non-pointer type\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nT - Type of the object contained in the array \nN - Size of the array \nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream\nDeserialize a fixed size C array of primitive type\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nT - Type of the object contained in the array \nN - Size of the array \nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & v\n)\n\nSerialize a vector of char. \nSerialize a vector of char\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & v\n)\n\nSerialize a vector. \nSerialize a vector\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the vector \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & eosio::operator >> (\n    DataStream & ds,\n    std::vector & v\n)\n\nDeserialize a vector of char. \nDeserialize a vector of char\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & eosio::operator >> (\n    DataStream & ds,\n    std::vector & v\n)\n\nDeserialize a vector. \nDeserialize a vector\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the vector \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & s\n)\n\nSerialize a set. \nSerialize a set\nParameters:\n\nds - The stream to write \ns - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the set \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & eosio::operator >> (\n    DataStream & ds,\n    std::set & s\n)\n\nDeserialize a set. \nDeserialize a set\nParameters:\n\nds - The stream to read \ns - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the object contained in the set \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & m\n)\n\nSerialize a map. \nSerialize a map\nParameters:\n\nds - The stream to write \nm - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the map \nV - Type of the value contained in the map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & eosio::operator >> (\n    DataStream & ds,\n    std::map & m\n)\n\nDeserialize a map. \nDeserialize a map\nParameters:\n\nds - The stream to read \nm - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the map \nV - Type of the value contained in the map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & s\n)\n\nSerialize a flat_set. \nSerialize a flat_set\nParameters:\n\nds - The stream to write \ns - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the value contained in the flat_set \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator >>\nDataStream & eosio::operator >> (\n    DataStream & ds,\n    boost::container::flat_set & s\n)\n\nDeserialize a flat_set. \nDeserialize a flat_set\nParameters:\n\nds - The stream to read \ns - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the value contained in the flat_set \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & m\n)\n\nSerialize a flat map. \nSerialize a flat map\nParameters:\n\nds - The stream to write \nm - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the flat map \nV - Type of the value contained in the flat map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    boost::container::flat_map & m\n)\n\nDeserialize a flat map. \nDeserialize a flat map\nParameters:\n\nds - The stream to read \nm - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nK - Type of the key contained in the flat map \nV - Type of the value contained in the flat map \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator & t\n)\n\nSerialize a tuple. \nSerialize a tuple\nParameters:\n\nds - The stream to write \nt - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nArgs - Type of the objects contained in the tuple \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    std::tuple & t\n)\n\nDeserialize a tuple. \nDeserialize a tuple\nParameters:\n\nds - The stream to read \nt - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nArgs - Type of the objects contained in the tuple \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator\nDataStream & eosio::operator\nSerialize a class. \nSerialize a primitive type.\nSerialize a class\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of class \n\nReturns:\nDataStream& - Reference to the datastream\nSerialize a primitive type\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the primitive type \n\nReturns:\nDataStream& - Reference to the datastream \nfunction operator>>\nDataStream & eosio::operator>> (\n    DataStream & ds,\n    T & v\n)\n\nDeserialize a class. \nDeserialize a primitive type.\nDeserialize a class\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of class \n\nReturns:\nDataStream& - Reference to the datastream\nDeserialize a primitive type\nParameters:\n\nds - The stream to read \nv - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \nT - Type of the primitive type \n\nReturns:\nDataStream& - Reference to the datastream \nfunction unpack\nT eosio::unpack (\n    const char * buffer,\n    size_t len\n)\n\nUnpack data inside a fixed size buffer as T. \nUnpack data inside a fixed size buffer as T\nTemplate parameters:\n\nT - Type of the unpacked data \n\nParameters:\n\nbuffer - Pointer to the buffer \nlen - Length of the buffer \n\nReturns:\nT - The unpacked data \nfunction unpack\nT eosio::unpack (\n    const std::vector & bytes\n)\n\nUnpack data inside a variable size buffer as T. \nUnpack data inside a variable size buffer as T\nTemplate parameters:\n\nT - Type of the unpacked data \n\nParameters:\n\nbytes - Buffer \n\nReturns:\nT - The unpacked data \nfunction pack_size\nsize_t eosio::pack_size (\n    const T & value\n)\n\nGet the size of the packed data. \nGet the size of the packed data\nTemplate parameters:\n\nT - Type of the data to be packed \n\nParameters:\n\nvalue - Data to be packed \n\nReturns:\nsize_t - Size of the packed data \nfunction pack\nstd::vector eosio::pack (\n    const T & value\n)\n\nGet packed data. \nGet packed data\nTemplate parameters:\n\nT - Type of the data to be packed \n\nParameters:\n\nvalue - Data to be packed \n\nReturns:\nbytes - The packed data \nfunction operator\ndatastream & eosio::operator & ds,\n    const capi_checksum160 & cs\n)\n\nSerializea capi_checksum160 type. \nSerialize a capi_checksum160 type\nParameters:\n\nds - The stream to write \ncs - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    capi_checksum160 & cs\n)\n\nDeserialize a capi_checksum160 type. \nDeserialize a capi_checksum160 type\nParameters:\n\nds - The stream to read \ncs - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator\ndatastream & eosio::operator & ds,\n    const capi_checksum512 & cs\n)\n\nSerialize a capi_checksum512 type. \nSerialize a capi_checksum512 type\nParameters:\n\nds - The stream to write \ncs - The value to serialize \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction operator>>\ndatastream & eosio::operator>> (\n    datastream & ds,\n    capi_checksum512 & cs\n)\n\nDeserialize a capi_checksum512 type. \nDeserialize a capi_checksum512 type\nParameters:\n\nds - The stream to read \ncs - The destination for deserialized value \n\nTemplate parameters:\n\nStream - Type of datastream buffer \n\nReturns:\ndatastream& - Reference to the datastream \nfunction dispatch (1/2)\nbool eosio::dispatch (\n    uint64_t code,\n    uint64_t act\n)\n\nfunction dispatch (2/2)\nbool eosio::dispatch (\n    uint64_t code,\n    uint64_t act\n)\n\nThis method will dynamically dispatch an incoming set of actions to\nstatic Contract::on( ActionType )\n\nFor this to work the Actions must be derived from eosio::contract \nfunction execute_action\nbool eosio::execute_action (\n    name self,\n    name code,\n    void(T::*)(Args...) func\n)\n\nUnpack the received action and execute the correponding action handler. \nUnpack the received action and execute the correponding action handler\nTemplate parameters:\n\nT - The contract class that has the correponding action handler, this contract should be derived from eosio::contract \nQ - The namespace of the action handler function \nArgs - The arguments that the action handler accepts, i.e. members of the action \n\nParameters:\n\nobj - The contract object that has the correponding action handler \nfunc - The action handler \n\nReturns:\ntrue \nfunction set_blockchain_parameters\nvoid eosio::set_blockchain_parameters (\n    const eosio::blockchain_parameters & params\n)\n\nSet the blockchain parameters Set the blockchain parameters. \nParameters:\n\nparams - New blockchain parameters to set \n\nfunction get_blockchain_parameters\nvoid eosio::get_blockchain_parameters (\n    eosio::blockchain_parameters & params\n)\n\nRetrieve the blolckchain parameters Retrieve the blolckchain parameters. \nParameters:\n\nparams - It will be replaced with the retrieved blockchain params \n\nfunction operator==\nbool eosio::operator== (\n    const fixed_bytes & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 == c2, return true, otherwise false \nfunction operator !=\nbool eosio::operator != (\n    const fixed_bytes & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 != c2, return true, otherwise false \nfunction operator >\nbool eosio::operator > (\n    const fixed_bytes & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 > c2, return true, otherwise false \nfunction operator\nbool eosio::operator & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 \nfunction operator >=\nbool eosio::operator >= (\n    const fixed_bytes & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 >= c2, return true, otherwise false \nfunction operator\nbool eosio::operator & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 \nfunction operator==\nbool eosio::operator== (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 == c2, return true, otherwise false \nfunction operator !=\nbool eosio::operator != (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 != c2, return true, otherwise false \nfunction operator >\nbool eosio::operator > (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 > c2, return true, otherwise false \nfunction operator\nbool eosio::operator & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 \nfunction operator >=\nbool eosio::operator >= (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 >= c2, return true, otherwise false \nfunction operator\nbool eosio::operator & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 \nfunction assignHelper\nT eosio::assignHelper (\n    T rhs_val,\n    uint8_t q,\n    uint8_t qr\n)\n\nfunction fixed_divide (1/2)\nfixed_point64 eosio::fixed_divide (\n    uint32_t lhs,\n    uint32_t rhs\n)\n\nWrapper function for dividing two unit64 variable and stores result in fixed_point64. \nWrapper function for dividing two unit32 variable and stores result in fixed_point64\nExample: \nfixed_point64 result = fixed_divide(131313, 2323)\n\nfunction fixed_divide (2/2)\nfixed_point128 eosio::fixed_divide (\n    uint64_t lhs,\n    uint64_t rhs\n)\n\nWrapper function for dividing two unit64 variable and stores result in fixed_point128 Wrapper function for dividing two unit64 variable and stores result in fixed_point128. \nExample: \nfixed_point128 result = fixed_divide(131313, 2323)\n\nfunction check_transaction_authorization\nbool eosio::check_transaction_authorization (\n    const transaction & trx,\n    const std::set & provided_permissions,\n    const std::set & provided_keys = std::set()\n)\n\nChecks if a transaction is authorized by a provided set of keys and permissions. \nParameters:\n\ntrx - the transaction for which to check authorizations \nprovided_permissions - the set of permissions which have authorized the transaction (empty permission name acts as wildcard) \nprovided_keys - the set of public keys which have authorized the transaction\n\nReturns:\nwhether the transaction was authorized by provided keys and permissions \nfunction check_permission_authorization\nbool eosio::check_permission_authorization (\n    name account,\n    name permission,\n    const std::set & provided_keys,\n    const std::set & provided_permissions = std::set(),\n    uint64_t provided_delay_us = static_cast(std::numeric_limits::max())\n)\n\nChecks if a permission is authorized by a provided delay and a provided set of keys and permissions. \nParameters:\n\naccount - the account owner of the permission \npermission - the permission name to check for authorization \nprovided_keys - the set of public keys which have authorized the transaction \nprovided_permissions - the set of permissions which have authorized the transaction (empty permission name acts as wildcard) \nprovided_delay_us - the provided delay in microseconds (cannot exceed INT64_MAX)\n\nReturns:\nwhether the permission was authorized by provided delay, keys, and permissions \nfunction print (1/24)\nvoid eosio::print (\n    const char * ptr\n)\n\nPrints string. \nPrints string\nParameters:\n\nptr - a null terminated string \n\nfunction print (2/24)\nvoid eosio::print (\n    const std::string & s\n)\n\nfunction print (3/24)\nvoid eosio::print (\n    std::string && s\n)\n\nfunction print (4/24)\nvoid eosio::print (\n    const char c\n)\n\nfunction print (5/24)\nvoid eosio::print (\n    int num\n)\n\nPrints signed integer as a 64 bit signed integer. \nPrints signed integer\nParameters:\n\nnum to be printed \n\nfunction print (6/24)\nvoid eosio::print (\n    int32_t num\n)\n\nPrints 32 bit signed integer as a 64 bit signed integer. \nPrints 32 bit signed integer\nParameters:\n\nnum to be printed \n\nfunction print (7/24)\nvoid eosio::print (\n    int64_t num\n)\n\nPrints 64 bit signed integer as a 64 bit signed integer. \nPrints 64 bit signed integer\nParameters:\n\nnum to be printed \n\nfunction print (8/24)\nvoid eosio::print (\n    unsigned int num\n)\n\nPrints unsigned integer as a 64 bit unsigned integer. \nPrints unsigned integer\nParameters:\n\nnum to be printed \n\nfunction print (9/24)\nvoid eosio::print (\n    uint32_t num\n)\n\nPrints 32 bit unsigned integer as a 64 bit unsigned integer. \nPrints 32 bit unsigned integer\nParameters:\n\nnum to be printed \n\nfunction print (10/24)\nvoid eosio::print (\n    uint64_t num\n)\n\nPrints 64 bit unsigned integer as a 64 bit unsigned integer. \nPrints 64 bit unsigned integer\nParameters:\n\nnum to be printed \n\nfunction print (11/24)\nvoid eosio::print (\n    int128_t num\n)\n\nPrints 128 bit signed integer. \nPrints 128 bit signed integer\nParameters:\n\nnum to be printed \n\nfunction print (12/24)\nvoid eosio::print (\n    uint128_t num\n)\n\nPrints 128 bit unsigned integer. \nPrints 128 bit unsigned integer\nParameters:\n\nnum to be printed \n\nfunction print (13/24)\nvoid eosio::print (\n    float num\n)\n\nPrints single-precision floating point number (i.e. float) \nPrints single-precision floating point number\nParameters:\n\nnum to be printed \n\nfunction print (14/24)\nvoid eosio::print (\n    double num\n)\n\nPrints double-precision floating point number (i.e. double) \nPrints double-precision floating point number\nParameters:\n\nnum to be printed \n\nfunction print (15/24)\nvoid eosio::print (\n    long double num\n)\n\nPrints quadruple-precision floating point number (i.e. long double) \nPrints quadruple-precision floating point number\nParameters:\n\nnum to be printed \n\nfunction print (16/24)\nvoid eosio::print (\n    const fixed_key & val\n)\n\nPrints fixed_key as a hexidecimal string. \nPrints fixed_key as a hexidecimal string\nParameters:\n\nval to be printed \n\nfunction print (17/24)\nvoid eosio::print (\n    fixed_key & val\n)\n\nPrints fixed_key as a hexidecimal string. \nPrints fixed_key as a hexidecimal string\nParameters:\n\nval to be printed \n\nfunction print (18/24)\nvoid eosio::print (\n    const fixed_bytes & val\n)\n\nPrints fixed_bytes as a hexidecimal string. \nPrints fixed_bytes as a hexidecimal string\nParameters:\n\nval to be printed \n\nfunction print (19/24)\nvoid eosio::print (\n    fixed_bytes & val\n)\n\nPrints fixed_bytes as a hexidecimal string. \nPrints fixed_bytes as a hexidecimal string\nParameters:\n\nval to be printed \n\nfunction print (20/24)\nvoid eosio::print (\n    name name\n)\n\nPrints a 64 bit names as base32 encoded string. \nPrints a 64 bit names as base32 encoded string\nParameters:\n\nname 64 bit name to be printed \n\nfunction print (21/24)\nvoid eosio::print (\n    eosio::symbol_code sym_code\n)\n\nPrints a symbol_code. \nPrints a symbol_code\nParameters:\n\nsym_code symbol code to be printed \n\nfunction print (22/24)\nvoid eosio::print (\n    bool val\n)\n\nPrints bool. \nPrints bool\nParameters:\n\nval to be printed \n\nfunction print (23/24)\nvoid eosio::print (\n    T && t\n)\n\nPrints class object. \nPrints class object\nParameters:\n\nt to be printed \n\nPrecondition:\nT must implements print() function \nfunction print_f (1/2)\nvoid eosio::print_f (\n    const char * s\n)\n\nPrints null terminated string. \nPrints null terminated string\nParameters:\n\ns null terminated string to be printed \n\nfunction print_f (2/2)\nvoid eosio::print_f (\n    const char * s,\n    Arg val,\n    Args... rest\n)\n\nPrints formatted string. \nPrints formatted string. It behaves similar to C printf/\nTemplate parameters:\n\nArg - Type of the value used to replace the format specifier \nArgs - Type of the value used to replace the format specifier \n\nParameters:\n\ns - Null terminated string with to be printed (it can contains format specifier) \nval - The value used to replace the format specifier \nrest - The values used to replace the format specifier\n\nExample: \nprint_f(\"Number of apples: %\", 10);\n\nfunction print (24/24)\nvoid eosio::print (\n    Arg && a,\n    Args &&... args\n)\n\nPrint out value / list of values. \nPrint out value / list of values \nParameters:\n\na - The value to be printed \nargs - The other values to be printed\n\nExample:\nconst char *s = \"Hello World!\";\nuint64_t unsigned_64_bit_int = 1e+18;\nuint128_t unsigned_128_bit_int (87654323456);\nuint64_t string_as_unsigned_64_bit = \"abcde\"_n;\nprint(s , unsigned_64_bit_int, unsigned_128_bit_int, string_as_unsigned_64_bit);\n// Ouput: Hello World!100000000000000000087654323456abcde\n\nfunction operator\niostream & eosio::operator\nOverload c++ iostream. \nOverload c++ iostream \nParameters:\n\nout - Output strem \nv - The value to be printed \n\nReturns:\niostream& - Reference to the input output stream\nExample:\nconst char *s = \"Hello World!\";\nuint64_t unsigned_64_bit_int = 1e+18;\nuint128_t unsigned_128_bit_int (87654323456);\nuint64_t string_as_unsigned_64_bit = \"abcde\"_n;\nstd::out \nfunction seconds\nmicroseconds eosio::seconds (\n    int64_t s\n)\n\nfunction milliseconds\nmicroseconds eosio::milliseconds (\n    int64_t s\n)\n\nfunction minutes\nmicroseconds eosio::minutes (\n    int64_t m\n)\n\nfunction hours\nmicroseconds eosio::hours (\n    int64_t h\n)\n\nfunction days\nmicroseconds eosio::days (\n    int64_t d\n)\n\nfunction get_action\naction eosio::get_action (\n    uint32_t type,\n    uint32_t index\n)\n\nRetrieve the indicated action from the active transaction. \nParameters:\n\ntype - 0 for context free action, 1 for action \nindex - the index of the requested action \n\nReturns:\nthe indicated action \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"namespaceeosio_1_1__datastream__detail.html":{"url":"namespaceeosio_1_1__datastream__detail.html","title":"namespace _datastream_detail","keywords":"eosio::_datastream_detail is_pointer is_primitive","body":"namespace eosio::_datastream_detail\nClass List > eosio :: _datastream_detail\n\n\n\nType\nName\n\n\n\n\nconstexpr bool\nis_pointer () Check if type T is a pointer.\n\n\nconstexpr bool\nis_primitive () Check if type T is a primitive type.\n\n\n\nfunction is_pointer\nconstexpr bool eosio::_datastream_detail::is_pointer ()\n\nCheck if type T is a pointer. \nCheck if type T is a pointer\nTemplate parameters:\n\nT - The type to be checked \n\nReturns:\ntrue if T is a pointer \nReturns:\nfalse otherwise \nfunction is_primitive\nconstexpr bool eosio::_datastream_detail::is_primitive ()\n\nCheck if type T is a primitive type. \nCheck if type T is a primitive type\nTemplate parameters:\n\nT - The type to be checked \n\nReturns:\ntrue if T is a primitive type \nReturns:\nfalse otherwise \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/datastream.hpp\n"},"namespaceeosio_1_1__multi__index__detail.html":{"url":"namespaceeosio_1_1__multi__index__detail.html","title":"namespace _multi_index_detail","keywords":"eosio::_multi_index_detail secondary_index_db_functions secondary_key_traits secondary_key_traits< eosio::fixed_bytes< 32 > > secondary_key_traits< eosio::key256 >","body":"namespace eosio::_multi_index_detail\nClass List > eosio :: _multi_index_detail\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nsecondary_index_db_functions\n\n\nstruct\nsecondary_key_traits\n\n\nstruct\nsecondary_key_traits >\n\n\nstruct\nsecondary_key_traits\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html":{"url":"structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.html","title":"struct secondary_index_db_functions","keywords":"eosio::_multi_index_detail::secondary_index_db_functions","body":"struct eosio::_multi_index_detail::secondary_index_db_functions\nClass List > eosio :: _multi_index_detail :: secondary_index_db_functions\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html":{"url":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits.html","title":"struct secondary_key_traits","keywords":"eosio::_multi_index_detail::secondary_key_traits","body":"struct eosio::_multi_index_detail::secondary_key_traits\nClass List > eosio :: _multi_index_detail :: secondary_key_traits\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html":{"url":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.html","title":"struct secondary_key_traits< eosio::fixed_bytes< 32 > >","keywords":"eosio::_multi_index_detail::secondary_key_traits< eosio::fixed_bytes< 32 > > lowest","body":"struct eosio::_multi_index_detail::secondary_key_traits >\nClass List > eosio :: _multi_index_detail :: secondary_key_traits >\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic constexpr eosio::fixed_bytes\nlowest ()\n\n\n\nfunction lowest\nstatic constexpr eosio::fixed_bytes eosio::_multi_index_detail::secondary_key_traits >::lowest ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html":{"url":"structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4.html","title":"struct secondary_key_traits< eosio::key256 >","keywords":"eosio::_multi_index_detail::secondary_key_traits< eosio::key256 > lowest","body":"struct eosio::_multi_index_detail::secondary_key_traits\nClass List > eosio :: _multi_index_detail :: secondary_key_traits\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic constexpr eosio::key256\nlowest ()\n\n\n\nfunction lowest\nstatic constexpr eosio::key256 eosio::_multi_index_detail::secondary_key_traits::lowest ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1action.html":{"url":"structeosio_1_1action.html","title":"struct action","keywords":"eosio::action account name authorization data action action action EOSLIB_SERIALIZE send_context_free data_as","body":"struct eosio::action\nClass List > eosio :: action\nPacked representation of an action. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nname\naccountName of the account the action is intended for.\n\n\nname\nnameName of the action.\n\n\nstd::vectorpermission_level >\nauthorizationList of permissions that authorize this action.\n\n\nstd::vector\ndataPayload data.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\naction () = default Construct a new action object.\n\n\n\naction (const permission_level & auth, struct name a, struct name n, T && value) Construct a new action object with the given permission, action receiver, action name, action struct.\n\n\n\naction (std::vectorpermission_level > auths, struct name a, struct name n, T && value) Construct a new action object with the given list of permissions, action receiver, action name, action struct.\n\n\n\nEOSLIB_SERIALIZE (action, (account)(name)(authorization)(data)) const Send the action as inline action.\n\n\nvoid\nsend_context_free () const Send the action as inline context free action.\n\n\nT\ndata_as () Retrieve the unpacked data as T.\n\n\n\nDetailed Description\nThis is the packed representation of an action along with meta-data about the authorization levels. \nvariable account\nname eosio::action::account;\n\nName of the account the action is intended for. \nName of the account the action is intended for \nvariable name\nname eosio::action::name;\n\nName of the action. \nName of the action \nvariable authorization\nstd::vector eosio::action::authorization;\n\nList of permissions that authorize this action. \nList of permissions that authorize this action \nvariable data\nstd::vector eosio::action::data;\n\nPayload data. \nPayload data \nfunction action (1/3)\neosio::action::action () = default\n\nConstruct a new action object. \nDefault Constructor \nfunction action (2/3)\neosio::action::action (\n    const permission_level & auth,\n    struct name a,\n    struct name n,\n    T && value\n)\n\nConstruct a new action object with the given permission, action receiver, action name, action struct. \nConstruct a new action object with the given action struct\nTemplate parameters:\n\nT - Type of action struct, must be serializable by pack(...) \n\nParameters:\n\nauth - The permissions that authorizes this action \na - The name of the account this action is intended for (action receiver) \nn - The name of the action \nvalue - The action struct that will be serialized via pack into data \n\nfunction action (3/3)\neosio::action::action (\n    std::vector auths,\n    struct name a,\n    struct name n,\n    T && value\n)\n\nConstruct a new action object with the given list of permissions, action receiver, action name, action struct. \nConstruct a new action object with the given action struct\nTemplate parameters:\n\nT - Type of action struct, must be serializable by pack(...) \n\nParameters:\n\nauths - The list of permissions that authorize this action \na - The name of the account this action is intended for (action receiver) \nn - The name of the action \nvalue - The action struct that will be serialized via pack into data \n\nfunction EOSLIB_SERIALIZE\neosio::action::EOSLIB_SERIALIZE (\n    action ,\n    (account)(name)(authorization)(data) \n) const\n\nSend the action as inline action. \nSend the action as inline action \nfunction send_context_free\nvoid eosio::action::send_context_free () const\n\nSend the action as inline context free action. \nSend the action as inline context free action\nPrecondition:\nThis action should not contain any authorizations \nfunction data_as\nT eosio::action::data_as ()\n\nRetrieve the unpacked data as T. \nRetrieve the unpacked data as T\nTemplate parameters:\n\nT expected type of data \n\nReturns:\nthe action data \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1action__wrapper.html":{"url":"structeosio_1_1action__wrapper.html","title":"struct action_wrapper","keywords":"eosio::action_wrapper action_name code_name permissions action_wrapper action_wrapper action_wrapper action_wrapper to_action send send_context_free get_mem_ptr","body":"struct eosio::action_wrapper\nClass List > eosio :: action_wrapper\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr eosio::name\naction_name\n\n\n\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\neosio::name\ncode_name\n\n\nstd::vectoreosio::permission_level >\npermissions\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconstexpr\naction_wrapper (Code && code, std::vectoreosio::permission_level > && perms)\n\n\nconstexpr\naction_wrapper (Code && code, const std::vectoreosio::permission_level > & perms)\n\n\nconstexpr\naction_wrapper (Code && code, eosio::permission_level && perm)\n\n\nconstexpr\naction_wrapper (Code && code, const eosio::permission_level & perm)\n\n\naction\nto_action (Args &&... args) const\n\n\nvoid\nsend (Args &&... args) const\n\n\nvoid\nsend_context_free (Args &&... args) const\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic constexpr auto\nget_mem_ptr ()\n\n\n\nvariable action_name\nconstexpr eosio::name eosio::action_wrapper::action_name;\n\nvariable code_name\neosio::name eosio::action_wrapper::code_name;\n\nvariable permissions\nstd::vector eosio::action_wrapper::permissions;\n\nfunction action_wrapper (1/4)\nconstexpr eosio::action_wrapper::action_wrapper (\n    Code && code,\n    std::vector && perms\n)\n\nfunction action_wrapper (2/4)\nconstexpr eosio::action_wrapper::action_wrapper (\n    Code && code,\n    const std::vector & perms\n)\n\nfunction action_wrapper (3/4)\nconstexpr eosio::action_wrapper::action_wrapper (\n    Code && code,\n    eosio::permission_level && perm\n)\n\nfunction action_wrapper (4/4)\nconstexpr eosio::action_wrapper::action_wrapper (\n    Code && code,\n    const eosio::permission_level & perm\n)\n\nfunction to_action\naction eosio::action_wrapper::to_action (\n    Args &&... args\n) const\n\nfunction send\nvoid eosio::action_wrapper::send (\n    Args &&... args\n) const\n\nfunction send_context_free\nvoid eosio::action_wrapper::send_context_free (\n    Args &&... args\n) const\n\nfunction get_mem_ptr\nstatic constexpr auto eosio::action_wrapper::get_mem_ptr ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1asset.html":{"url":"structeosio_1_1asset.html","title":"struct asset","keywords":"eosio::asset amount symbol max_amount asset asset is_amount_within_range is_valid set_amount operator- operator-= operator+= operator *= operator/= to_string print operator+ operator- operator * operator * operator/ operator/ operator== operator!= operator< operator<= operator> operator>=","body":"struct eosio::asset\nClass List > eosio :: asset\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nint64_t\namountThe amount of the asset.\n\n\nsymbol\nsymbolThe symbol name of the asset.\n\n\n\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr int64_t\nmax_amountMaximum amount possible for this asset.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nasset ()\n\n\n\nasset (int64_t a, class symbol s) Construct a new asset object.\n\n\nbool\nis_amount_within_range () const Check if the amount doesn't exceed the max amount.\n\n\nbool\nis_valid () const Check if the asset is valid.\n\n\nvoid\nset_amount (int64_t a) Set the amount of the asset.\n\n\nasset\noperator- () const Unary minus operator.\n\n\nasset &\noperator-= (const asset & a) Subtraction assignment operator.\n\n\nasset &\noperator+= (const asset & a) Addition Assignment operator.\n\n\nasset &\noperator *= (int64_t a) Multiplication assignment operator, with a number.\n\n\nasset &\noperator/= (int64_t a) Division assignment operator, with a number.\n\n\nstd::string\nto_string () const asset to std::string\n\n\nvoid\nprint () const Print the asset\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend asset\noperator+Addition operator.\n\n\nfriend asset\noperator-Subtraction operator.\n\n\nfriend asset\noperator *Multiplication operator, with a number proceeding.\n\n\nfriend asset\noperator *Multiplication operator, with a number preceeding.\n\n\nfriend asset\noperator/Division operator, with a number proceeding.\n\n\nfriend int64_t\noperator/Division operator, with another asset.\n\n\nfriend bool\noperator==Equality operator.\n\n\nfriend bool\noperator!=Inequality operator.\n\n\nfriend bool\noperatorLess than operator.\n\n\nfriend bool\noperatorLess or equal to operator.\n\n\nfriend bool\noperator>Greater than operator.\n\n\nfriend bool\noperator>=Greater or equal to operator.\n\n\n\nvariable amount\nint64_t eosio::asset::amount;\n\nThe amount of the asset. \nThe amount of the asset \nvariable symbol\nsymbol eosio::asset::symbol;\n\nThe symbol name of the asset. \nThe symbol name of the asset \nvariable max_amount\nconstexpr int64_t eosio::asset::max_amount;\n\nMaximum amount possible for this asset. \nMaximum amount possible for this asset. It's capped to 2^62 - 1 \nfunction asset (1/2)\neosio::asset::asset ()\n\nfunction asset (2/2)\neosio::asset::asset (\n    int64_t a,\n    class symbol s\n)\n\nConstruct a new asset object. \nConstruct a new asset given the symbol name and the amount\nParameters:\n\na - The amount of the asset \ns - The name of the symbol \n\nfunction is_amount_within_range\nbool eosio::asset::is_amount_within_range () const\n\nCheck if the amount doesn't exceed the max amount. \nCheck if the amount doesn't exceed the max amount\nReturns:\ntrue - if the amount doesn't exceed the max amount \nReturns:\nfalse - otherwise \nfunction is_valid\nbool eosio::asset::is_valid () const\n\nCheck if the asset is valid. \nCheck if the asset is valid. A valid asset has its amount \nReturns:\ntrue - if the asset is valid \nReturns:\nfalse - otherwise \nfunction set_amount\nvoid eosio::asset::set_amount (\n    int64_t a\n)\n\nSet the amount of the asset. \nSet the amount of the asset\nParameters:\n\na - New amount for the asset \n\nfunction operator- (1/2)\nasset eosio::asset::operator- () const\n\nUnary minus operator. \nUnary minus operator\nReturns:\nasset - New asset with its amount is the negative amount of this asset \nfunction operator-=\nasset & eosio::asset::operator-= (\n    const asset & a\n)\n\nSubtraction assignment operator. \nSubtraction assignment operator\nParameters:\n\na - Another asset to subtract this asset with \n\nReturns:\nasset& - Reference to this asset \nPost\nThe amount of this asset is subtracted by the amount of asset a \nfunction operator+=\nasset & eosio::asset::operator+= (\n    const asset & a\n)\n\nAddition Assignment operator. \nAddition Assignment operator\nParameters:\n\na - Another asset to subtract this asset with \n\nReturns:\nasset& - Reference to this asset \nPost\nThe amount of this asset is added with the amount of asset a \nfunction operator *=\nasset & eosio::asset::operator *= (\n    int64_t a\n)\n\nMultiplication assignment operator, with a number. \nMultiplication assignment operator. Multiply the amount of this asset with a number and then assign the value to itself.\nParameters:\n\na - The multiplier for the asset's amount \n\nReturns:\nasset - Reference to this asset \nPost\nThe amount of this asset is multiplied by a \nfunction operator/=\nasset & eosio::asset::operator/= (\n    int64_t a\n)\n\nDivision assignment operator, with a number. \nDivision assignment operator. Divide the amount of this asset with a number and then assign the value to itself.\nParameters:\n\na - The divisor for the asset's amount \n\nReturns:\nasset - Reference to this asset \nPost\nThe amount of this asset is divided by a \nfunction to_string\nstd::string eosio::asset::to_string () const\n\nasset to std::string \nasset to std::string \nfunction print\nvoid eosio::asset::print () const\n\nPrint the asset \nPrint the asset \nfriend operator+\nfriend asset eosio::asset::operator+ (\n    const asset & a,\n    const asset & b\n)\n\nAddition operator. \nAddition operator\nParameters:\n\na - The first asset to be added \nb - The second asset to be added \n\nReturns:\nasset - New asset as the result of addition \nfriend operator- (2/2)\nfriend asset eosio::asset::operator- (\n    const asset & a,\n    const asset & b\n)\n\nSubtraction operator. \nSubtraction operator\nParameters:\n\na - The asset to be subtracted \nb - The asset used to subtract \n\nReturns:\nasset - New asset as the result of subtraction of a with b \nfriend operator * (1/2)\nfriend asset eosio::asset::operator * (\n    const asset & a,\n    int64_t b\n)\n\nMultiplication operator, with a number proceeding. \nMultiplication operator, with a number proceeding\nParameters:\n\na - The asset to be multiplied \nb - The multiplier for the asset's amount \n\nReturns:\nasset - New asset as the result of multiplication \nfriend operator * (2/2)\nfriend asset eosio::asset::operator * (\n    int64_t b,\n    const asset & a\n)\n\nMultiplication operator, with a number preceeding. \nMultiplication operator, with a number preceeding\nParameters:\n\na - The multiplier for the asset's amount \nb - The asset to be multiplied \n\nReturns:\nasset - New asset as the result of multiplication \nfriend operator/ (1/2)\nfriend asset eosio::asset::operator/ (\n    const asset & a,\n    int64_t b\n)\n\nDivision operator, with a number proceeding. \nDivision operator, with a number proceeding\nParameters:\n\na - The asset to be divided \nb - The divisor for the asset's amount \n\nReturns:\nasset - New asset as the result of division \nfriend operator/ (2/2)\nfriend int64_t eosio::asset::operator/ (\n    const asset & a,\n    const asset & b\n)\n\nDivision operator, with another asset. \nDivision operator, with another asset\nParameters:\n\na - The asset which amount acts as the dividend \nb - The asset which amount acts as the divisor \n\nReturns:\nint64_t - the resulted amount after the division \nPrecondition:\nBoth asset must have the same symbol \nfriend operator==\nfriend bool eosio::asset::operator== (\n    const asset & a,\n    const asset & b\n)\n\nEquality operator. \nEquality operator\nParameters:\n\na - The first asset to be compared \nb - The second asset to be compared \n\nReturns:\ntrue - if both asset has the same amount \nReturns:\nfalse - otherwise \nPrecondition:\nBoth asset must have the same symbol \nfriend operator!=\nfriend bool eosio::asset::operator!= (\n    const asset & a,\n    const asset & b\n)\n\nInequality operator. \nInequality operator\nParameters:\n\na - The first asset to be compared \nb - The second asset to be compared \n\nReturns:\ntrue - if both asset doesn't have the same amount \nReturns:\nfalse - otherwise \nPrecondition:\nBoth asset must have the same symbol \nfriend operator\nfriend bool eosio::asset::operator\nLess than operator. \nLess than operator\nParameters:\n\na - The first asset to be compared \nb - The second asset to be compared \n\nReturns:\ntrue - if the first asset's amount is less than the second asset amount \nReturns:\nfalse - otherwise \nPrecondition:\nBoth asset must have the same symbol \nfriend operator\nfriend bool eosio::asset::operator\nLess or equal to operator. \nLess or equal to operator\nParameters:\n\na - The first asset to be compared \nb - The second asset to be compared \n\nReturns:\ntrue - if the first asset's amount is less or equal to the second asset amount \nReturns:\nfalse - otherwise \nPrecondition:\nBoth asset must have the same symbol \nfriend operator>\nfriend bool eosio::asset::operator> (\n    const asset & a,\n    const asset & b\n)\n\nGreater than operator. \nGreater than operator\nParameters:\n\na - The first asset to be compared \nb - The second asset to be compared \n\nReturns:\ntrue - if the first asset's amount is greater than the second asset amount \nReturns:\nfalse - otherwise \nPrecondition:\nBoth asset must have the same symbol \nfriend operator>=\nfriend bool eosio::asset::operator>= (\n    const asset & a,\n    const asset & b\n)\n\nGreater or equal to operator. \nGreater or equal to operator\nParameters:\n\na - The first asset to be compared \nb - The second asset to be compared \n\nReturns:\ntrue - if the first asset's amount is greater or equal to the second asset amount \nReturns:\nfalse - otherwise \nPrecondition:\nBoth asset must have the same symbol \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/asset.hpp\n"},"classeosio_1_1binary__extension.html":{"url":"classeosio_1_1binary__extension.html","title":"class binary_extension","keywords":"eosio::binary_extension value_type binary_extension binary_extension binary_extension binary_extension ~binary_extension binary_extension binary_extension operator bool has_value value value value_or value_or value_or value_or value_or operator-> operator-> operator * operator * operator * operator * emplace reset","body":"class eosio::binary_extension\nClass List > eosio :: binary_extension\ncontainer to hold a binary payload for an extension More...\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef T\nvalue_type\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconstexpr\nbinary_extension ()\n\n\nconstexpr\nbinary_extension (const T & ext)\n\n\nconstexpr\nbinary_extension (T && ext)\n\n\nconstexpr\nbinary_extension (std::in_place_t, Args &&... args)\n\n\n\n~binary_extension ()\n\n\nconstexpr\nbinary_extension (const binary_extension & other)\n\n\nconstexpr\nbinary_extension (binary_extension && other)\n\n\nconstexpr\noperator bool () const\n\n\nconstexpr bool\nhas_value () const\n\n\nconstexpr T &\nvalue ()\n\n\nconstexpr const T &\nvalue () const\n\n\nconstexpr auto\nvalue_or (U && def)\n\n\nconstexpr T &&\nvalue_or ()\n\n\nconstexpr const T &&\nvalue_or () const\n\n\nconstexpr T\nvalue_or ()\n\n\nconstexpr T\nvalue_or () const\n\n\nconstexpr T *\noperator-> ()\n\n\nconstexpr const T *\noperator-> () const\n\n\nconstexpr T &\noperator * ()\n\n\nconstexpr const T &\noperator * () const\n\n\nconstexpr const T &&\noperator * () const\n\n\nconstexpr T &&\noperator * ()\n\n\nT &\nemplace (Args &&... args)\n\n\nvoid\nreset ()\n\n\n\nDetailed Description\nBinary Extension \nTemplate parameters:\n\nT - Contained typed \n\ntypedef value_type\nusing eosio::binary_extension::value_type =  T;\n\nfunction binary_extension\nconstexpr eosio::binary_extension::binary_extension ()\n\nfunction binary_extension\nconstexpr eosio::binary_extension::binary_extension (\n    const T & ext\n)\n\nfunction binary_extension\nconstexpr eosio::binary_extension::binary_extension (\n    T && ext\n)\n\nfunction binary_extension\nconstexpr eosio::binary_extension::binary_extension (\n    std::in_place_t ,\n    Args &&... args\n)\n\nconstruct contained type in place \nfunction ~binary_extension\neosio::binary_extension::~binary_extension ()\n\nfunction binary_extension\nconstexpr eosio::binary_extension::binary_extension (\n    const binary_extension & other\n)\n\nfunction binary_extension\nconstexpr eosio::binary_extension::binary_extension (\n    binary_extension && other\n)\n\nfunction operator bool\nexplicit constexpr eosio::binary_extension::operator bool () const\n\ntest if container is holding a value \nfunction has_value\nconstexpr bool eosio::binary_extension::has_value () const\n\ntest if container is holding a value \nfunction value\nconstexpr T & eosio::binary_extension::value ()\n\nget the contained value \nfunction value\nconstexpr const T & eosio::binary_extension::value () const\n\nget the contained value \nfunction value_or\nconstexpr auto eosio::binary_extension::value_or (\n    U && def\n)\n\nget the contained value or a user specified default \nPrecondition:\ndef should be convertible to type T \nfunction value_or\nconstexpr T && eosio::binary_extension::value_or ()\n\nfunction value_or\nconstexpr const T && eosio::binary_extension::value_or () const\n\nfunction value_or\nconstexpr T eosio::binary_extension::value_or ()\n\nfunction value_or\nconstexpr T eosio::binary_extension::value_or () const\n\nfunction operator->\nconstexpr T * eosio::binary_extension::operator-> ()\n\nfunction operator->\nconstexpr const T * eosio::binary_extension::operator-> () const\n\nfunction operator *\nconstexpr T & eosio::binary_extension::operator * ()\n\nfunction operator *\nconstexpr const T & eosio::binary_extension::operator * () const\n\nfunction operator *\nconstexpr const T && eosio::binary_extension::operator * () const\n\nfunction operator *\nconstexpr T && eosio::binary_extension::operator * ()\n\nfunction emplace\nT & eosio::binary_extension::emplace (\n    Args &&... args\n)\n\nfunction reset\nvoid eosio::binary_extension::reset ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/binary\\_extension.hpp\n"},"classeosio_1_1block__timestamp.html":{"url":"classeosio_1_1block__timestamp.html","title":"class block_timestamp","keywords":"eosio::block_timestamp slot block_interval_ms block_timestamp_epoch block_timestamp block_timestamp block_timestamp next to_time_point operator time_point operator= operator > operator >= operator< operator<= operator== operator != maximum min","body":"class eosio::block_timestamp\nClass List > eosio :: block_timestamp\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint32_t\nslot\n\n\n\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr int32_t\nblock_interval_ms\n\n\nstatic constexpr int64_t\nblock_timestamp_epoch\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nblock_timestamp (uint32_t s = 0)\n\n\n\nblock_timestamp (const time_point & t)\n\n\n\nblock_timestamp (const time_point_sec & t)\n\n\nblock_timestamp\nnext () const\n\n\ntime_point\nto_time_point () const\n\n\n\noperator time_point () const\n\n\nvoid\noperator= (const time_point & t)\n\n\nbool\noperator > (const block_timestamp & t) const\n\n\nbool\noperator >= (const block_timestamp & t) const\n\n\nbool\noperator (const block_timestamp & t) const\n\n\nbool\noperator (const block_timestamp & t) const\n\n\nbool\noperator== (const block_timestamp & t) const\n\n\nbool\noperator != (const block_timestamp & t) const\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic block_timestamp\nmaximum ()\n\n\nstatic block_timestamp\nmin ()\n\n\n\nDetailed Description\nThis class is used in the block headers to represent the block time It is a parameterised class that takes an Epoch in milliseconds and and an interval in milliseconds and computes the number of slots. \nvariable slot\nuint32_t eosio::block_timestamp::slot;\n\nvariable block_interval_ms\nconstexpr int32_t eosio::block_timestamp::block_interval_ms;\n\nvariable block_timestamp_epoch\nconstexpr int64_t eosio::block_timestamp::block_timestamp_epoch;\n\nfunction block_timestamp (1/3)\nexplicit eosio::block_timestamp::block_timestamp (\n    uint32_t s = 0\n)\n\nfunction block_timestamp (2/3)\neosio::block_timestamp::block_timestamp (\n    const time_point & t\n)\n\nfunction block_timestamp (3/3)\neosio::block_timestamp::block_timestamp (\n    const time_point_sec & t\n)\n\nfunction next\nblock_timestamp eosio::block_timestamp::next () const\n\nfunction to_time_point\ntime_point eosio::block_timestamp::to_time_point () const\n\nfunction operator time_point\neosio::block_timestamp::operator time_point () const\n\nfunction operator=\nvoid eosio::block_timestamp::operator= (\n    const time_point & t\n)\n\nfunction operator >\nbool eosio::block_timestamp::operator > (\n    const block_timestamp & t\n) const\n\nfunction operator >=\nbool eosio::block_timestamp::operator >= (\n    const block_timestamp & t\n) const\n\nfunction operator\nbool eosio::block_timestamp::operator\nfunction operator\nbool eosio::block_timestamp::operator\nfunction operator==\nbool eosio::block_timestamp::operator== (\n    const block_timestamp & t\n) const\n\nfunction operator !=\nbool eosio::block_timestamp::operator != (\n    const block_timestamp & t\n) const\n\nfunction maximum\nstatic block_timestamp eosio::block_timestamp::maximum ()\n\nfunction min\nstatic block_timestamp eosio::block_timestamp::min ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/time.hpp\n"},"structeosio_1_1blockchain__parameters.html":{"url":"structeosio_1_1blockchain__parameters.html","title":"struct blockchain_parameters","keywords":"eosio::blockchain_parameters max_block_net_usage target_block_net_usage_pct max_transaction_net_usage base_per_transaction_net_usage net_usage_leeway context_free_discount_net_usage_num context_free_discount_net_usage_den max_block_cpu_usage target_block_cpu_usage_pct max_transaction_cpu_usage min_transaction_cpu_usage max_transaction_lifetime deferred_trx_expiration_window max_transaction_delay max_inline_action_size max_inline_action_depth max_authority_depth","body":"struct eosio::blockchain_parameters\nClass List > eosio :: blockchain_parameters\nTunable blockchain configuration that can be changed via consensus. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint64_t\nmax_block_net_usage\n\n\nuint32_t\ntarget_block_net_usage_pct\n\n\nuint32_t\nmax_transaction_net_usage\n\n\nuint32_t\nbase_per_transaction_net_usageThe base amount of net usage billed for a transaction to cover incidentals.\n\n\nuint32_t\nnet_usage_leeway\n\n\nuint32_t\ncontext_free_discount_net_usage_num\n\n\nuint32_t\ncontext_free_discount_net_usage_den\n\n\nuint32_t\nmax_block_cpu_usage\n\n\nuint32_t\ntarget_block_cpu_usage_pct\n\n\nuint32_t\nmax_transaction_cpu_usage\n\n\nuint32_t\nmin_transaction_cpu_usage\n\n\nuint32_t\nmax_transaction_lifetimeMaximum lifetime of a transacton.\n\n\nuint32_t\ndeferred_trx_expiration_window\n\n\nuint32_t\nmax_transaction_delay\n\n\nuint32_t\nmax_inline_action_sizeMaximum size of inline action.\n\n\nuint16_t\nmax_inline_action_depthMaximum depth of inline action.\n\n\nuint16_t\nmax_authority_depthMaximum authority depth.\n\n\n\nDetailed Description\nTunable blockchain configuration that can be changed via consensus \nvariable max_block_net_usage\nuint64_t eosio::blockchain_parameters::max_block_net_usage;\n\nvariable target_block_net_usage_pct\nuint32_t eosio::blockchain_parameters::target_block_net_usage_pct;\n\nvariable max_transaction_net_usage\nuint32_t eosio::blockchain_parameters::max_transaction_net_usage;\n\nvariable base_per_transaction_net_usage\nuint32_t eosio::blockchain_parameters::base_per_transaction_net_usage;\n\nThe base amount of net usage billed for a transaction to cover incidentals. \nThe base amount of net usage billed for a transaction to cover incidentals \nvariable net_usage_leeway\nuint32_t eosio::blockchain_parameters::net_usage_leeway;\n\nvariable context_free_discount_net_usage_num\nuint32_t eosio::blockchain_parameters::context_free_discount_net_usage_num;\n\nvariable context_free_discount_net_usage_den\nuint32_t eosio::blockchain_parameters::context_free_discount_net_usage_den;\n\nvariable max_block_cpu_usage\nuint32_t eosio::blockchain_parameters::max_block_cpu_usage;\n\nvariable target_block_cpu_usage_pct\nuint32_t eosio::blockchain_parameters::target_block_cpu_usage_pct;\n\nvariable max_transaction_cpu_usage\nuint32_t eosio::blockchain_parameters::max_transaction_cpu_usage;\n\nvariable min_transaction_cpu_usage\nuint32_t eosio::blockchain_parameters::min_transaction_cpu_usage;\n\nvariable max_transaction_lifetime\nuint32_t eosio::blockchain_parameters::max_transaction_lifetime;\n\nMaximum lifetime of a transacton. \nMaximum lifetime of a transacton \nvariable deferred_trx_expiration_window\nuint32_t eosio::blockchain_parameters::deferred_trx_expiration_window;\n\nvariable max_transaction_delay\nuint32_t eosio::blockchain_parameters::max_transaction_delay;\n\nvariable max_inline_action_size\nuint32_t eosio::blockchain_parameters::max_inline_action_size;\n\nMaximum size of inline action. \nMaximum size of inline action \nvariable max_inline_action_depth\nuint16_t eosio::blockchain_parameters::max_inline_action_depth;\n\nMaximum depth of inline action. \nMaximum depth of inline action \nvariable max_authority_depth\nuint16_t eosio::blockchain_parameters::max_authority_depth;\n\nMaximum authority depth. \nMaximum authority depth \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/privileged.hpp\n"},"structeosio_1_1const__mem__fun.html":{"url":"structeosio_1_1const__mem__fun.html","title":"struct const_mem_fun","keywords":"eosio::const_mem_fun result_type operator() operator() operator() operator()","body":"struct eosio::const_mem_fun\nClass List > eosio :: const_mem_fun\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef std::remove_reference::type\nresult_type\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nauto\noperator() (const ChainedPtr & x) const\n\n\nType\noperator() (const Class & x) const\n\n\nType\noperator() (const std::reference_wrapper & x) const\n\n\nType\noperator() (const std::reference_wrapper & x) const\n\n\n\ntypedef result_type\ntypedef std::remove_reference::type eosio::const_mem_fun::result_type;\n\nfunction operator() (1/4)\nauto eosio::const_mem_fun::operator() (\n    const ChainedPtr & x\n) const\n\nfunction operator() (2/4)\nType eosio::const_mem_fun::operator() (\n    const Class & x\n) const\n\nfunction operator() (3/4)\nType eosio::const_mem_fun::operator() (\n    const std::reference_wrapper & x\n) const\n\nfunction operator() (4/4)\nType eosio::const_mem_fun::operator() (\n    const std::reference_wrapper & x\n) const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"classeosio_1_1contract.html":{"url":"classeosio_1_1contract.html","title":"class contract","keywords":"eosio::contract _self _code _ds contract get_self get_code get_datastream","body":"class eosio::contract\nClass List > eosio :: contract\nBase class for EOSIO contract. More...\nProtected Attributes\n\n\n\nType\nName\n\n\n\n\nname\n_selfThe name of this contract.\n\n\nname\n_codeThe code name of the action this contract is processing.\n\n\ndatastream\n_ds\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ncontract (name receiver, name code, datastream ds) Construct a new contract object.\n\n\nname\nget_self () const Get this contract name.\n\n\nname\nget_code () const The code name of the action this contract is processing.\n\n\ndatastream\nget_datastream () const Get the datastream for this contract.\n\n\n\nDetailed Description\nBase class for EOSIO contract. A new contract should derive from this class, so it can make use of EOSIO_ABI macro. \nvariable _self\nname eosio::contract::_self;\n\nThe name of this contract. \nThe name of this contract \nvariable _code\nname eosio::contract::_code;\n\nThe code name of the action this contract is processing. \nThe code name of the action this contract is processing. \nvariable _ds\ndatastream eosio::contract::_ds;\n\nThe datastream for this contract @ The datastream for this contract \nfunction contract\neosio::contract::contract (\n    name receiver,\n    name code,\n    datastream ds\n)\n\nConstruct a new contract object. \nConstruct a new contract given the contract name\nParameters:\n\nreceiver - The name of this contract \ncode - The code name of the action this contract is processing. \nds - The datastream used \n\nfunction get_self\nname eosio::contract::get_self () const\n\nGet this contract name. \nGet this contract name\nReturns:\nname - The name of this contract \nfunction get_code\nname eosio::contract::get_code () const\n\nThe code name of the action this contract is processing. \nThe code name of the action this contract is processing. \nReturns:\nname - The code name of the action this contract is processing. \nfunction get_datastream\ndatastream eosio::contract::get_datastream () const\n\nGet the datastream for this contract. \nGet the datastream for this contract \nReturns:\ndatastream - The datastream for this contract \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/contract.hpp\n"},"classeosio_1_1datastream.html":{"url":"classeosio_1_1datastream.html","title":"class datastream","keywords":"eosio::datastream datastream skip read write put get get pos valid seekp tellp remaining","body":"class eosio::datastream\nClass List > eosio :: datastream\nA data stream for reading and writing data in the form of bytes. More...\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ndatastream (T start, size_t s) Construct a new datastream object.\n\n\nvoid\nskip (size_t s) Skips a specific number of bytes from this stream.\n\n\nbool\nread (char * d, size_t s) Reads a specified number of bytes from this stream into a buffer.\n\n\nbool\nwrite (const char * d, size_t s) Writes a specified number of bytes into the stream from a buffer.\n\n\nbool\nput (char c) Writes a byte into the stream.\n\n\nbool\nget (unsigned char & c) Reads a byte from the stream.\n\n\nbool\nget (char & c) Reads a byte from the stream.\n\n\nT\npos () const Retrieves the current position of the stream.\n\n\nbool\nvalid () const\n\n\nbool\nseekp (size_t p) Sets the position within the current stream.\n\n\nsize_t\ntellp () const Gets the position within the current stream.\n\n\nsize_t\nremaining () const Returns the number of remaining bytes that can be read/skipped.\n\n\n\nDetailed Description\nA data stream for reading and writing data in the form of bytes\nTemplate parameters:\n\nT - Type of the datastream buffer \n\nfunction datastream\neosio::datastream::datastream (\n    T start,\n    size_t s\n)\n\nConstruct a new datastream object. \nConstruct a new datastream object given the size of the buffer and start position of the buffer\nParameters:\n\nstart - The start position of the buffer \ns - The size of the buffer \n\nfunction skip\nvoid eosio::datastream::skip (\n    size_t s\n)\n\nSkips a specific number of bytes from this stream. \nSkips a specified number of bytes from this stream\nParameters:\n\ns - The number of bytes to skip \n\nfunction read\nbool eosio::datastream::read (\n    char * d,\n    size_t s\n)\n\nReads a specified number of bytes from this stream into a buffer. \nReads a specified number of bytes from the stream into a buffer\nParameters:\n\nd - The pointer to the destination buffer \ns - the number of bytes to read \n\nReturns:\ntrue \nfunction write\nbool eosio::datastream::write (\n    const char * d,\n    size_t s\n)\n\nWrites a specified number of bytes into the stream from a buffer. \nWrites a specified number of bytes into the stream from a buffer\nParameters:\n\nd - The pointer to the source buffer \ns - The number of bytes to write \n\nReturns:\ntrue \nfunction put\nbool eosio::datastream::put (\n    char c\n)\n\nWrites a byte into the stream. \nWrites a byte into the stream\nParameters:\n\nc byte to write \n\nReturns:\ntrue \nfunction get (1/2)\nbool eosio::datastream::get (\n    unsigned char & c\n)\n\nReads a byte from the stream. \nReads a byte from the stream\nParameters:\n\nc - The reference to destination byte \n\nReturns:\ntrue \nfunction get (2/2)\nbool eosio::datastream::get (\n    char & c\n)\n\nReads a byte from the stream. \nReads a byte from the stream\nParameters:\n\nc - The reference to destination byte \n\nReturns:\ntrue \nfunction pos\nT eosio::datastream::pos () const\n\nRetrieves the current position of the stream. \nRetrieves the current position of the stream\nReturns:\nT - The current position of the stream \nfunction valid\nbool eosio::datastream::valid () const\n\nfunction seekp\nbool eosio::datastream::seekp (\n    size_t p\n)\n\nSets the position within the current stream. \nSets the position within the current stream\nParameters:\n\np - The offset relative to the origin \n\nReturns:\ntrue if p is within the range \nReturns:\nfalse if p is not within the rawnge \nfunction tellp\nsize_t eosio::datastream::tellp () const\n\nGets the position within the current stream. \nGets the position within the current stream\nReturns:\np - The position within the current stream \nfunction remaining\nsize_t eosio::datastream::remaining () const\n\nReturns the number of remaining bytes that can be read/skipped. \nReturns the number of remaining bytes that can be read/skipped\nReturns:\nsize_t - The number of remaining bytes \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/datastream.hpp\n"},"classeosio_1_1datastream_3_01size__t_01_4.html":{"url":"classeosio_1_1datastream_3_01size__t_01_4.html","title":"class datastream< size_t >","keywords":"eosio::datastream< size_t > datastream skip write put valid seekp tellp remaining","body":"class eosio::datastream\nClass List > eosio :: datastream\nSpecialization of datastream used to help determine the final size of a serialized value. Specialization of datastream used to help determine the final size of a serialized value. \nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ndatastream (size_t init_size = 0) Construct a new specialized datastream object.\n\n\nbool\nskip (size_t s) Increase the size by s.\n\n\nbool\nwrite (const char *, size_t s) Increase the size by s.\n\n\nbool\nput (char) Increase the size by one.\n\n\nbool\nvalid () const Check validity.\n\n\nbool\nseekp (size_t p) Set new size.\n\n\nsize_t\ntellp () const Get the size.\n\n\nsize_t\nremaining () const Always returns 0.\n\n\n\nfunction datastream\neosio::datastream::datastream (\n    size_t init_size = 0\n)\n\nConstruct a new specialized datastream object. \nConstruct a new specialized datastream object given the initial size\nParameters:\n\ninit_size - The initial size \n\nfunction skip\nbool eosio::datastream::skip (\n    size_t s\n)\n\nIncrease the size by s. \nIncrement the size by s. This behaves the same as write( const char* ,size_t s ).\nParameters:\n\ns - The amount of size to increase \n\nReturns:\ntrue \nfunction write\nbool eosio::datastream::write (\n    const char * ,\n    size_t s\n)\n\nIncrease the size by s. \nIncrement the size by s. This behaves the same as skip( size_t s )\nParameters:\n\ns - The amount of size to increase \n\nReturns:\ntrue \nfunction put\nbool eosio::datastream::put (\n    char \n)\n\nIncrease the size by one. \nIncrement the size by one\nReturns:\ntrue \nfunction valid\nbool eosio::datastream::valid () const\n\nCheck validity. \nCheck validity. It's always valid\nReturns:\ntrue \nfunction seekp\nbool eosio::datastream::seekp (\n    size_t p\n)\n\nSet new size. \nSet new size\nParameters:\n\np - The new size \n\nReturns:\ntrue \nfunction tellp\nsize_t eosio::datastream::tellp () const\n\nGet the size. \nGet the size\nReturns:\nsize_t - The size \nfunction remaining\nsize_t eosio::datastream::remaining () const\n\nAlways returns 0. \nAlways returns 0\nReturns:\nsize_t - 0 \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/datastream.hpp\n"},"namespaceeosio_1_1detail.html":{"url":"namespaceeosio_1_1detail.html","title":"namespace detail","keywords":"eosio::detail check_types check_types< Action, I, T > convert convert< char * > convert< const char * > get_nth get_nth_impl get_nth_impl< N, N, Arg, Args... > is_same is_same< bool, U > is_same< T, bool > to_const_char_arr unwrap unwrap< ignore< T > > deduced deduced_nounwrap get_args get_args_nounwrap type_check","body":"namespace eosio::detail\nClass List > eosio :: detail\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\ncheck_types\n\n\nstruct\ncheck_types\n\n\nstruct\nconvert\n\n\nstruct\nconvert\n\n\nstruct\nconvert\n\n\nstruct\nget_nth\n\n\nstruct\nget_nth_impl\n\n\nstruct\nget_nth_impl\n\n\nstruct\nis_same\n\n\nstruct\nis_same\n\n\nstruct\nis_same\n\n\nstruct\nto_const_char_arr\n\n\nstruct\nunwrap\n\n\nstruct\nunwrap >\n\n\n\n\n\n\nType\nName\n\n\n\n\ntypedef decltype(get_args(Action))\ndeduced\n\n\ntypedef decltype(get_args_nounwrap(Action))\ndeduced_nounwrap\n\n\n\n\n\n\nType\nName\n\n\n\n\nauto\nget_args (R(Act::*)(Args...) p)\n\n\nauto\nget_args_nounwrap (R(Act::*)(Args...) p)\n\n\nconstexpr bool\ntype_check ()\n\n\n\ntypedef deduced\nusing eosio::detail::deduced = typedef decltype(get_args(Action));\n\ntypedef deduced_nounwrap\nusing eosio::detail::deduced_nounwrap = typedef decltype(get_args_nounwrap(Action));\n\nfunction get_args\nauto eosio::detail::get_args (\n    R(Act::*)(Args...) p\n)\n\nfunction get_args_nounwrap\nauto eosio::detail::get_args_nounwrap (\n    R(Act::*)(Args...) p\n)\n\nfunction type_check\nconstexpr bool eosio::detail::type_check ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1check__types.html":{"url":"structeosio_1_1detail_1_1check__types.html","title":"struct check_types","keywords":"eosio::detail::check_types type value","body":"struct eosio::detail::check_types\nClass List > eosio :: detail :: check_types\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef check_types\ntype\n\n\n\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr bool\nvalue\n\n\n\ntypedef type\nusing eosio::detail::check_types::type =  check_types;\n\nvariable value\nconstexpr bool eosio::detail::check_types::value;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html":{"url":"structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4.html","title":"struct check_types< Action, I, T >","keywords":"eosio::detail::check_types< Action, I, T > value","body":"struct eosio::detail::check_types\nClass List > eosio :: detail :: check_types\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr bool\nvalue\n\n\n\nvariable value\nconstexpr bool eosio::detail::check_types::value;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1convert.html":{"url":"structeosio_1_1detail_1_1convert.html","title":"struct convert","keywords":"eosio::detail::convert type","body":"struct eosio::detail::convert\nClass List > eosio :: detail :: convert\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef T\ntype\n\n\n\ntypedef type\ntypedef T eosio::detail::convert::type;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html":{"url":"structeosio_1_1detail_1_1convert_3_01char_01_5_01_4.html","title":"struct convert< char * >","keywords":"eosio::detail::convert< char * > type","body":"struct eosio::detail::convert\nClass List > eosio :: detail :: convert\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef std::string\ntype\n\n\n\ntypedef type\ntypedef std::string eosio::detail::convert::type;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html":{"url":"structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4.html","title":"struct convert< const char * >","keywords":"eosio::detail::convert< const char * > type","body":"struct eosio::detail::convert\nClass List > eosio :: detail :: convert\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef std::string\ntype\n\n\n\ntypedef type\ntypedef std::string eosio::detail::convert::type;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1get__nth.html":{"url":"structeosio_1_1detail_1_1get__nth.html","title":"struct get_nth","keywords":"eosio::detail::get_nth value","body":"struct eosio::detail::get_nth\nClass List > eosio :: detail :: get_nth\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr auto\nvalue\n\n\n\nvariable value\nconstexpr auto eosio::detail::get_nth::value;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1get__nth__impl.html":{"url":"structeosio_1_1detail_1_1get__nth__impl.html","title":"struct get_nth_impl","keywords":"eosio::detail::get_nth_impl value","body":"struct eosio::detail::get_nth_impl\nClass List > eosio :: detail :: get_nth_impl\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr auto\nvalue\n\n\n\nvariable value\nconstexpr auto eosio::detail::get_nth_impl::value;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html":{"url":"structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4.html","title":"struct get_nth_impl< N, N, Arg, Args... >","keywords":"eosio::detail::get_nth_impl< N, N, Arg, Args... > value","body":"struct eosio::detail::get_nth_impl\nClass List > eosio :: detail :: get_nth_impl\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr auto\nvalue\n\n\n\nvariable value\nconstexpr auto eosio::detail::get_nth_impl::value;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1is__same.html":{"url":"structeosio_1_1detail_1_1is__same.html","title":"struct is_same","keywords":"eosio::detail::is_same value","body":"struct eosio::detail::is_same\nClass List > eosio :: detail :: is_same\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr bool\nvalue\n\n\n\nvariable value\nconstexpr bool eosio::detail::is_same::value;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html":{"url":"structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4.html","title":"struct is_same< T, bool >","keywords":"eosio::detail::is_same< T, bool > value","body":"struct eosio::detail::is_same\nClass List > eosio :: detail :: is_same\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr bool\nvalue\n\n\n\nvariable value\nconstexpr bool eosio::detail::is_same::value;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html":{"url":"structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4.html","title":"struct is_same< bool, U >","keywords":"eosio::detail::is_same< bool, U > value","body":"struct eosio::detail::is_same\nClass List > eosio :: detail :: is_same\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr bool\nvalue\n\n\n\nvariable value\nconstexpr bool eosio::detail::is_same::value;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1to__const__char__arr.html":{"url":"structeosio_1_1detail_1_1to__const__char__arr.html","title":"struct to_const_char_arr","keywords":"eosio::detail::to_const_char_arr value","body":"struct eosio::detail::to_const_char_arr\nClass List > eosio :: detail :: to_const_char_arr\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr const char\nvalue\n\n\n\nvariable value\nconstexpr const char eosio::detail::to_const_char_arr::value[];\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/name.hpp\n"},"structeosio_1_1detail_1_1unwrap.html":{"url":"structeosio_1_1detail_1_1unwrap.html","title":"struct unwrap","keywords":"eosio::detail::unwrap type","body":"struct eosio::detail::unwrap\nClass List > eosio :: detail :: unwrap\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef T\ntype\n\n\n\ntypedef type\ntypedef T eosio::detail::unwrap::type;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html":{"url":"structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4.html","title":"struct unwrap< ignore< T > >","keywords":"eosio::detail::unwrap< ignore< T > > type","body":"struct eosio::detail::unwrap >\nClass List > eosio :: detail :: unwrap >\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef T\ntype\n\n\n\ntypedef type\ntypedef T eosio::detail::unwrap >::type;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1extended__asset.html":{"url":"structeosio_1_1extended__asset.html","title":"struct extended_asset","keywords":"eosio::extended_asset quantity contract get_extended_symbol extended_asset extended_asset extended_asset print operator- operator - operator+ operator+= operator-= operator< operator== operator!= operator<= operator>=","body":"struct eosio::extended_asset\nClass List > eosio :: extended_asset\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nasset\nquantity\n\n\nname\ncontractThe owner of the asset.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nextended_symbol\nget_extended_symbol () const Get the extended symbol of the asset.\n\n\n\nextended_asset () = default Construct a new extended asset object.\n\n\n\nextended_asset (int64_t v, extended_symbol s) Construct a new extended asset object.\n\n\n\nextended_asset (asset a, name c) Construct a new extended asset object.\n\n\nvoid\nprint () const Print the extended asset\n\n\nextended_asset\noperator- () const Unary minus operator.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend extended_asset\noperator -Subtraction operator.\n\n\nfriend extended_asset\noperator+Addition operator.\n\n\nfriend extended_asset &\noperator+=Addition operator.\n\n\nfriend extended_asset &\noperator-=Subtraction operator.\n\n\nfriend bool\noperatorLess than operator.\n\n\nfriend bool\noperator==Comparison operator.\n\n\nfriend bool\noperator!=Comparison operator.\n\n\nfriend bool\noperatorComparison operator.\n\n\nfriend bool\noperator>=Comparison operator.\n\n\n\nvariable quantity\nasset eosio::extended_asset::quantity;\n\nThe asset \nvariable contract\nname eosio::extended_asset::contract;\n\nThe owner of the asset. \nThe owner of the asset \nfunction get_extended_symbol\nextended_symbol eosio::extended_asset::get_extended_symbol () const\n\nGet the extended symbol of the asset. \nGet the extended symbol of the asset\nReturns:\nextended_symbol - The extended symbol of the asset \nfunction extended_asset (1/3)\neosio::extended_asset::extended_asset () = default\n\nConstruct a new extended asset object. \nDefault constructor \nfunction extended_asset (2/3)\neosio::extended_asset::extended_asset (\n    int64_t v,\n    extended_symbol s\n)\n\nConstruct a new extended asset object. \nConstruct a new extended asset given the amount and extended symbol \nfunction extended_asset (3/3)\neosio::extended_asset::extended_asset (\n    asset a,\n    name c\n)\n\nConstruct a new extended asset object. \nConstruct a new extended asset given the asset and owner name \nfunction print\nvoid eosio::extended_asset::print () const\n\nPrint the extended asset \nPrint the extended asset \nfunction operator-\nextended_asset eosio::extended_asset::operator- () const\n\nUnary minus operator. \nUnary minus operator\nReturns:\nextended_asset - New extended asset with its amount is the negative amount of this extended asset \nfriend operator -\nfriend extended_asset eosio::extended_asset::operator - (\n    const extended_asset & a,\n    const extended_asset & b\n)\n\nSubtraction operator. \nSubtraction operator. This subtracts the amount of the extended asset.\nParameters:\n\na - The extended asset to be subtracted \nb - The extended asset used to subtract \n\nReturns:\nextended_asset - New extended asset as the result of subtraction \nPrecondition:\nThe owner of both extended asset need to be the same \nfriend operator+\nfriend extended_asset eosio::extended_asset::operator+ (\n    const extended_asset & a,\n    const extended_asset & b\n)\n\nAddition operator. \nAddition operator. This adds the amount of the extended asset.\nParameters:\n\na - The extended asset to be added \nb - The extended asset to be added \n\nReturns:\nextended_asset - New extended asset as the result of addition \nPrecondition:\nThe owner of both extended asset need to be the same \nfriend operator+=\nfriend extended_asset & eosio::extended_asset::operator+= (\n    extended_asset & a,\n    const extended_asset & b\n)\n\nAddition operator. \nfriend operator-=\nfriend extended_asset & eosio::extended_asset::operator-= (\n    extended_asset & a,\n    const extended_asset & b\n)\n\nSubtraction operator. \nfriend operator\nfriend bool eosio::extended_asset::operator\nLess than operator. \nfriend operator==\nfriend bool eosio::extended_asset::operator== (\n    const extended_asset & a,\n    const extended_asset & b\n)\n\nComparison operator. \nfriend operator!=\nfriend bool eosio::extended_asset::operator!= (\n    const extended_asset & a,\n    const extended_asset & b\n)\n\nComparison operator. \nfriend operator\nfriend bool eosio::extended_asset::operator\nComparison operator. \nfriend operator>=\nfriend bool eosio::extended_asset::operator>= (\n    const extended_asset & a,\n    const extended_asset & b\n)\n\nComparison operator. \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/asset.hpp\n"},"classeosio_1_1extended__symbol.html":{"url":"classeosio_1_1extended__symbol.html","title":"class extended_symbol","keywords":"eosio::extended_symbol extended_symbol extended_symbol get_symbol get_contract print operator== operator != operator<","body":"class eosio::extended_symbol\nClass List > eosio :: extended_symbol\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconstexpr\nextended_symbol ()\n\n\nconstexpr\nextended_symbol (symbol sym, name con)\n\n\nconstexpr symbol\nget_symbol () const\n\n\nconstexpr name\nget_contract () const\n\n\nvoid\nprint (bool show_precision = true) const Print the extended symbol\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend constexpr bool\noperator==Equivalency operator.\n\n\nfriend constexpr bool\noperator !=Inverted equivalency operator.\n\n\nfriend constexpr bool\noperatorLess than operator.\n\n\n\nfunction extended_symbol\nconstexpr eosio::extended_symbol::extended_symbol ()\n\nfunction extended_symbol\nconstexpr eosio::extended_symbol::extended_symbol (\n    symbol sym,\n    name con\n)\n\nfunction get_symbol\nconstexpr symbol eosio::extended_symbol::get_symbol () const\n\nfunction get_contract\nconstexpr name eosio::extended_symbol::get_contract () const\n\nfunction print\nvoid eosio::extended_symbol::print (\n    bool show_precision = true\n) const\n\nPrint the extended symbol \nPrint the extended symbol \nfriend operator==\nfriend constexpr bool eosio::extended_symbol::operator== (\n    const extended_symbol & a,\n    const extended_symbol & b\n)\n\nEquivalency operator. \nEquivalency operator. Returns true if a == b (are the same)\nReturns:\nboolean - true if both provided extended_symbols are the same \nfriend operator !=\nfriend constexpr bool eosio::extended_symbol::operator != (\n    const extended_symbol & a,\n    const extended_symbol & b\n)\n\nInverted equivalency operator. \nInverted equivalency operator. Returns true if a != b (are different)\nReturns:\nboolean - true if both provided extended_symbols are not the same \nfriend operator\nfriend constexpr bool eosio::extended_symbol::operator\nLess than operator. \nLess than operator. Returns true if a \nReturns:\nboolean - true if extended_symbol a is less than b \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/symbol.hpp\n"},"classeosio_1_1fixed__bytes.html":{"url":"classeosio_1_1fixed__bytes.html","title":"class fixed_bytes","keywords":"eosio::fixed_bytes bool_pack word_t arr_itr arr num_words padded_bytes fixed_bytes fixed_bytes for operator== operator != operator > operator< operator >= operator<=","body":"class eosio::fixed_bytes\nClass List > eosio :: fixed_bytes\nFixed size array of bytes sorted lexicographically. More...\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nbool_pack\n\n\n\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef uint128_t\nword_t\n\n\n\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\n\narr_itr\n\n\nreturn\narr\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic constexpr size_t\nnum_words () Get number of words contained in this fixed_bytes object.\n\n\nstatic constexpr size_t\npadded_bytes () Get number of padded bytes contained in this fixed_bytes object.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconstexpr\nfixed_bytes () Default constructor to fixed_bytes object.\n\n\n\nfixed_bytes (const std::arrayword_t, num_words()> & arr) Constructor to fixed_bytes object from std::array of num_words() word_t types.\n\n\n\nfor (; sub_words_left, 0;-- sub_words_left) Constructor to fixed_bytes object from std::array of Word types smaller in size than word_t.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==Compares two fixed_bytes variables c1 and c2.\n\n\nfriend bool\noperator !=Compares two fixed_bytes variables c1 and c2.\n\n\nfriend bool\noperator >Compares two fixed_bytes variables c1 and c2.\n\n\nfriend bool\noperatorCompares two fixed_bytes variables c1 and c2.\n\n\nfriend bool\noperator >=Compares two fixed_bytes variables c1 and c2.\n\n\nfriend bool\noperatorCompares two fixed_bytes variables c1 and c2.\n\n\n\nDetailed Description\nFixed size byte array sorted lexicographically\nTemplate parameters:\n\nSize - Size of the fixed_bytes object \n\ntypedef word_t\ntypedef uint128_t eosio::fixed_bytes::word_t;\n\nvariable arr_itr\neosio::fixed_bytes::arr_itr;\n\nvariable arr\nreturn eosio::fixed_bytes::arr;\n\nfunction num_words\nstatic constexpr size_t eosio::fixed_bytes::num_words ()\n\nGet number of words contained in this fixed_bytes object. \nGet number of words contained in this fixed_bytes object. A word is defined to be 16 bytes in size \nfunction padded_bytes\nstatic constexpr size_t eosio::fixed_bytes::padded_bytes ()\n\nGet number of padded bytes contained in this fixed_bytes object. \nGet number of padded bytes contained in this fixed_bytes object. Padded bytes are the remaining bytes inside the fixed_bytes object after all the words are allocated \nfunction fixed_bytes (1/2)\nconstexpr eosio::fixed_bytes::fixed_bytes ()\n\nDefault constructor to fixed_bytes object. \nDefault constructor to fixed_bytes object which initializes all bytes to zero \nfunction fixed_bytes (2/2)\neosio::fixed_bytes::fixed_bytes (\n    const std::array & arr\n)\n\nConstructor to fixed_bytes object from std::array of num_words() word_t types. \nConstructor to fixed_bytes object from std::array of num_words() word_t types \nParameters:\n\narr data \n\nfunction for\neosio::fixed_bytes::for (\n    ; sub_words_left,\n    0;-- sub_words_left\n)\n\nConstructor to fixed_bytes object from std::array of Word types smaller in size than word_t. \nConstructor to fixed_bytes object from std::array of Word types smaller in size than word_t \nParameters:\n\narr - Source data \n\nfriend operator==\nfriend bool eosio::fixed_bytes::operator== (\n    const fixed_bytes & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 == c2, return true, otherwise false \nfriend operator !=\nfriend bool eosio::fixed_bytes::operator != (\n    const fixed_bytes & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 != c2, return true, otherwise false \nfriend operator >\nfriend bool eosio::fixed_bytes::operator > (\n    const fixed_bytes & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 > c2, return true, otherwise false \nfriend operator\nfriend bool eosio::fixed_bytes::operator & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 \nfriend operator >=\nfriend bool eosio::fixed_bytes::operator >= (\n    const fixed_bytes & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 >= c2, return true, otherwise false \nfriend operator\nfriend bool eosio::fixed_bytes::operator & c1,\n    const fixed_bytes & c2\n)\n\nCompares two fixed_bytes variables c1 and c2. \nLexicographically compares two fixed_bytes variables c1 and c2 \nParameters:\n\nc1 - First fixed_bytes object to compare \nc2 - Second fixed_bytes object to compare \n\nReturns:\nif c1 \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixed\\_bytes.hpp\n"},"structeosio_1_1fixed__bytes_1_1bool__pack.html":{"url":"structeosio_1_1fixed__bytes_1_1bool__pack.html","title":"struct bool_pack","keywords":"eosio::fixed_bytes::bool_pack","body":"struct eosio::fixed_bytes::bool_pack\nClass List > eosio :: fixed_bytes :: bool_pack\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixed\\_bytes.hpp\n"},"classeosio_1_1fixed__key.html":{"url":"classeosio_1_1fixed__key.html","title":"class fixed_key","keywords":"eosio::fixed_key bool_pack word_t arr_itr arr num_words padded_bytes fixed_key fixed_key operator== operator != operator > operator< operator >= operator<=","body":"class eosio::fixed_key\nClass List > eosio :: fixed_key\nFixed size key sorted lexicographically for Multi Index Table. More...\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nbool_pack\n\n\n\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef uint128_t\nword_t\n\n\n\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\n\narr_itrConstructor to fixed_key object from std::array of Word types smaller in size than word_t.\n\n\nreturn\narr\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic constexpr size_t\nnum_words () Get number of words contained in this fixed_key object.\n\n\nstatic constexpr size_t\npadded_bytes () Get number of padded bytes contained in this fixed_key object.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconstexpr\nfixed_key () Default constructor to fixed_key object.\n\n\n\nfixed_key (const std::arrayword_t, num_words()> & arr) Constructor to fixed_key object from std::array of num_words() word_t types.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==Compares two fixed_key variables c1 and c2.\n\n\nfriend bool\noperator !=Compares two fixed_key variables c1 and c2.\n\n\nfriend bool\noperator >Compares two fixed_key variables c1 and c2.\n\n\nfriend bool\noperatorCompares two fixed_key variables c1 and c2.\n\n\nfriend bool\noperator >=Compares two fixed_key variables c1 and c2.\n\n\nfriend bool\noperatorCompares two fixed_key variables c1 and c2.\n\n\n\nDetailed Description\nFixed size key sorted lexicographically for Multi Index Table\nTemplate parameters:\n\nSize - Size of the fixed_key object \n\ntypedef word_t\ntypedef uint128_t eosio::fixed_key::word_t;\n\nvariable arr_itr\neosio::fixed_key::arr_itr;\n\nConstructor to fixed_key object from std::array of Word types smaller in size than word_t. \nConstructor to fixed_key object from std::array of Word types smaller in size than word_t \nParameters:\n\narr - Source data \n\nvariable arr\nreturn eosio::fixed_key::arr;\n\nfunction num_words\nstatic constexpr size_t eosio::fixed_key::num_words ()\n\nGet number of words contained in this fixed_key object. \nGet number of words contained in this fixed_key object. A word is defined to be 16 bytes in size \nfunction padded_bytes\nstatic constexpr size_t eosio::fixed_key::padded_bytes ()\n\nGet number of padded bytes contained in this fixed_key object. \nGet number of padded bytes contained in this fixed_key object. Padded bytes are the remaining bytes inside the fixed_key object after all the words are allocated \nfunction fixed_key (1/2)\nconstexpr eosio::fixed_key::fixed_key ()\n\nDefault constructor to fixed_key object. \nDefault constructor to fixed_key object which initializes all bytes to zero \nfunction fixed_key (2/2)\neosio::fixed_key::fixed_key (\n    const std::array & arr\n)\n\nConstructor to fixed_key object from std::array of num_words() word_t types. \nConstructor to fixed_key object from std::array of num_words() word_t types \nParameters:\n\narr data \n\nfriend operator==\nfriend bool eosio::fixed_key::operator== (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 == c2, return true, otherwise false \nfriend operator !=\nfriend bool eosio::fixed_key::operator != (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 != c2, return true, otherwise false \nfriend operator >\nfriend bool eosio::fixed_key::operator > (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 > c2, return true, otherwise false \nfriend operator\nfriend bool eosio::fixed_key::operator & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 \nfriend operator >=\nfriend bool eosio::fixed_key::operator >= (\n    const fixed_key & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 >= c2, return true, otherwise false \nfriend operator\nfriend bool eosio::fixed_key::operator & c1,\n    const fixed_key & c2\n)\n\nCompares two fixed_key variables c1 and c2. \nLexicographically compares two fixed_key variables c1 and c2 \nParameters:\n\nc1 - First fixed_key object to compare \nc2 - Second fixed_key object to compare \n\nReturns:\nif c1 \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp\n"},"structeosio_1_1fixed__key_1_1bool__pack.html":{"url":"structeosio_1_1fixed__key_1_1bool__pack.html","title":"struct bool_pack","keywords":"eosio::fixed_key::bool_pack","body":"struct eosio::fixed_key::bool_pack\nClass List > eosio :: fixed_key :: bool_pack\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp\n"},"structeosio_1_1fixed__point128.html":{"url":"structeosio_1_1fixed__point128.html","title":"struct fixed_point128","keywords":"eosio::fixed_point128 val fixed_point128 fixed_point128 fixed_point128 fixed_point128 int_part frac_part print operator= operator= operator= operator== operator> operator<","body":"struct eosio::fixed_point128\nClass List > eosio :: fixed_point128\n128 bits representation of Fixed Point class. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nint128_t\nvalValue of the fixed point represented as int128_t.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nfixed_point128 (int128_t v = 0) Various constructors for fixed_point128.\n\n\n\nfixed_point128 (const fixed_point128 & r) Construct a new fixed point128 object from another fixed_point128.\n\n\n\nfixed_point128 (const fixed_point64 & r) Construct a new fixed point128 object from another fixed_point64.\n\n\n\nfixed_point128 (const fixed_point32 & r) Construct a new fixed point128 object from another fixed_point32.\n\n\nint128_t\nint_part () const To get the integer part of the fixed number.\n\n\nuint128_t\nfrac_part () const To get the decimal part of the fixed number.\n\n\nvoid\nprint () const Prints the fixed point value.\n\n\nfixed_point128 &\noperator= (const fixed_point32 & r) Assignment operator.\n\n\nfixed_point128 &\noperator= (const fixed_point64 & r) Assignment operator.\n\n\nfixed_point128 &\noperator= (const fixed_point128 & r) Assignment operator.\n\n\nbool\noperator== (const fixed_point128 & r) Equality operator.\n\n\nbool\noperator> (const fixed_point128 & r) Greater than operator.\n\n\nbool\noperator (const fixed_point128 & r) Less than operator.\n\n\n\nDetailed Description\nThe template param Q represents the Q Factor i.e number of decimals\nExample: \nfixed_point128 a(123232.455667233)\nfixed_point128 a(123424)\nfixed_point128 c = a*b;\nfixed_point128 d = a+b+c;\nfixed_point128 e = b/a;\n\nvariable val\nint128_t eosio::fixed_point128::val;\n\nValue of the fixed point represented as int128_t. \nValue of the fixed point represented as int128_t \nfunction fixed_point128 (1/4)\neosio::fixed_point128::fixed_point128 (\n    int128_t v = 0\n)\n\nVarious constructors for fixed_point128. \nVarious constructors for fixed_point128. Can create fixed_point128 instance from an int128_t, fixed_point128,64,32 instance\nExample: \nfixed_point64 a(1234.455667);\nfixed_point128 b(a);\nfixed_point32 b(13324.32323);\nfixed_point128 c(a);\n\nConstruct a new fixed point128 object from int128_t\nConstruct a new fixed point128 object \nParameters:\n\nv - int128_t representation of the fixed point value \n\nfunction fixed_point128 (2/4)\neosio::fixed_point128::fixed_point128 (\n    const fixed_point128 & r\n)\n\nConstruct a new fixed point128 object from another fixed_point128. \nConstruct a new fixed point128 object from another fixed_point128\nParameters:\n\nr - Another fixed_point128 as source \n\nfunction fixed_point128 (3/4)\neosio::fixed_point128::fixed_point128 (\n    const fixed_point64 & r\n)\n\nConstruct a new fixed point128 object from another fixed_point64. \nConstruct a new fixed point128 object from another fixed_point64\nParameters:\n\nr -fixed_point64 as source \n\nfunction fixed_point128 (4/4)\neosio::fixed_point128::fixed_point128 (\n    const fixed_point32 & r\n)\n\nConstruct a new fixed point128 object from another fixed_point32. \nConstruct a new fixed point128 object from another fixed_point32\nParameters:\n\nr -fixed_point32 as source \n\nfunction int_part\nint128_t eosio::fixed_point128::int_part () const\n\nTo get the integer part of the fixed number. \nGet the integer part of the 64 bit fixed number\nReturns:\nReturns integer part of the fixed number\nExample: \nfixed_point64 a(1234.455667)\nstd::cout \nfunction frac_part\nuint128_t eosio::fixed_point128::frac_part () const\n\nTo get the decimal part of the fixed number. \nGet the decimal part of the 64 bit fixed number\nReturns:\nReturns decimal part of the fixed number\nExample: \nfixed_point128 a(1234.455667)\nstd::cout \nfunction print\nvoid eosio::fixed_point128::print () const\n\nPrints the fixed point value. \nPrints the fixed point value \nfunction operator= (1/3)\nfixed_point128 & eosio::fixed_point128::operator= (\n    const fixed_point32 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point32 to fixed_point128\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point128& - Reference to this object \nfunction operator= (2/3)\nfixed_point128 & eosio::fixed_point128::operator= (\n    const fixed_point64 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point32 to fixed_point64\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point128& - Reference to this object \nfunction operator= (3/3)\nfixed_point128 & eosio::fixed_point128::operator= (\n    const fixed_point128 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point32 to fixed_point32\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point128& - Reference to this object \nfunction operator==\nbool eosio::fixed_point128::operator== (\n    const fixed_point128 & r\n)\n\nEquality operator. \nEquality operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator>\nbool eosio::fixed_point128::operator> (\n    const fixed_point128 & r\n)\n\nGreater than operator. \nGreater than operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator\nbool eosio::fixed_point128::operator & r\n)\n\nLess than operator. \nLess than operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp\n"},"structeosio_1_1fixed__point32.html":{"url":"structeosio_1_1fixed__point32.html","title":"struct fixed_point32","keywords":"eosio::fixed_point32 val fixed_point32 fixed_point32 fixed_point32 int_part frac_part print operator= operator= operator+ operator- operator * operator/ operator== operator> operator< operator= operator= operator+ operator-","body":"struct eosio::fixed_point32\nClass List > eosio :: fixed_point32\n32 bits representation of Fixed Point class. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nint32_t\nvalValue of the fixed point represented as int32_t.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nfixed_point32 (const fixed_point32 & r) Construct a new fixed point32 object from another fixed_point32.\n\n\n\nfixed_point32 (const fixed_point64 & r) Construct a new fixed point32 object from another fixed_point64.\n\n\n\nfixed_point32 (int32_t param = 0) Construct a new fixed point32 object.\n\n\nint32_t\nint_part () const To get the integer part of the fixed number.\n\n\nuint32_t\nfrac_part () const\n\n\nvoid\nprint () const Prints the fixed point value.\n\n\nfixed_point32 &\noperator= (const fixed_point32 & r) Assignment operator.\n\n\nfixed_point32 &\noperator= (const fixed_point64 & r) Assignment operator.\n\n\nfixed_point32QR)?Q:QR >\noperator+ (const fixed_point32 & r) const Addition operator.\n\n\nfixed_point32QR)?Q:QR >\noperator- (const fixed_point32 & r) const Subtraction operator.\n\n\nfixed_point64\noperator * (const fixed_point32 & r) const Multiplication operator.\n\n\nfixed_point64\noperator/ (const fixed_point32 & r) const Division operator.\n\n\nbool\noperator== (const fixed_point32 & r) Equality operator.\n\n\nbool\noperator> (const fixed_point32 & r) Greater than operator.\n\n\nbool\noperator (const fixed_point32 & r) Less than operator.\n\n\nfixed_point32 &\noperator= (const fixed_point32 & r)\n\n\nfixed_point32 &\noperator= (const fixed_point64 & r)\n\n\nfixed_point32QR)?Q:QR >\noperator+ (const fixed_point32 & rhs) const Addition between two fixed_point32 variables and the result goes to fixed_point32.\n\n\nfixed_point32QR)?Q:QR >\noperator- (const fixed_point32 & rhs) const Subtraction between two fixed_point32 variables and the result goes to fixed_point32.\n\n\n\nDetailed Description\nThis class is implemented to to replace the floating point variables It can resolve floating point undetermenistic related issues\nExample: \nfixed_point32 b(9.654);\nfixed_point32 c = a*b;\nfixed_point32 d = a+b+c;\nfixed_point32 e = b/a;\n\nvariable val\nint32_t eosio::fixed_point32::val;\n\nValue of the fixed point represented as int32_t. \nValue of the fixed point represented as int32_t \nfunction fixed_point32 (1/3)\neosio::fixed_point32::fixed_point32 (\n    const fixed_point32 & r\n)\n\nConstruct a new fixed point32 object from another fixed_point32. \nConstruct a new fixed point32 object from another fixed_point32\nParameters:\n\nr - Another fixed_point32 as source \n\nfunction fixed_point32 (2/3)\neosio::fixed_point32::fixed_point32 (\n    const fixed_point64 & r\n)\n\nConstruct a new fixed point32 object from another fixed_point64. \nConstruct a new fixed point32 object from another fixed_point64. It will be truncated.\nParameters:\n\nr - Another fixed_point32 as source \n\nfunction fixed_point32 (3/3)\neosio::fixed_point32::fixed_point32 (\n    int32_t param = 0\n)\n\nConstruct a new fixed point32 object. \nConstruct a new fixed point32 object from int32_t\nParameters:\n\nv - int32_t representation of the fixed point value \n\nfunction int_part\nint32_t eosio::fixed_point32::int_part () const\n\nTo get the integer part of the fixed number. \nGet the integer part of the 64 bit fixed number \nReturns:\nReturns integer part of the fixed number\nExample: \nfixed_point32 a(1234.455667)\nstd::cout \nfunction frac_part\nuint32_t eosio::fixed_point32::frac_part () const\n\nfunction print\nvoid eosio::fixed_point32::print () const\n\nPrints the fixed point value. \nPrints the fixed point value \nfunction operator= (1/4)\nfixed_point32 & eosio::fixed_point32::operator= (\n    const fixed_point32 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point32 to fixed_point32\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point32& - Reference to this object \nfunction operator= (2/4)\nfixed_point32 & eosio::fixed_point32::operator= (\n    const fixed_point64 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point64 to fixed_point32\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point32& - Reference to this object \nfunction operator+ (1/2)\nfixed_point32QR)?Q:QR > eosio::fixed_point32::operator+ (\n    const fixed_point32 & r\n) const\n\nAddition operator. \nAddition operator\nTemplate parameters:\n\nQR - Precision of the second addend \n\nParameters:\n\nr - Second addend \n\nReturns:\n\nThe result of addition \n\nfunction operator- (1/2)\nfixed_point32QR)?Q:QR > eosio::fixed_point32::operator- (\n    const fixed_point32 & r\n) const\n\nSubtraction operator. \nSubtraction operator\nTemplate parameters:\n\nQR - Precision of the minuend \n\nParameters:\n\nr - Minuend \n\nReturns:\n\nThe result of subtraction \n\nfunction operator *\nfixed_point64 eosio::fixed_point32::operator * (\n    const fixed_point32 & r\n) const\n\nMultiplication operator. \nMultiplication operator for fixed_point32. The result goes to fixed_point64.\nMultiplication operator\nTemplate parameters:\n\nQR - Precision of the multiplier \n\nParameters:\n\nr - Multiplier \n\nReturns:\n\nThe result of multiplication\n\nMultiplication operator for fixed_point32. The result goes to fixed_point64 Number of decimal on result will be sum of number of decimals of lhs and rhs\nExample: \nfixed_point64 result = fixed_point32(131313) / fixed_point32(2323)\n\nfunction operator/\nfixed_point64 eosio::fixed_point32::operator/ (\n    const fixed_point32 & r\n) const\n\nDivision operator. \nDivision of two fixed_point32 result will be stored in fixed_point64.\nDivision operator\nTemplate parameters:\n\nQR - Precision of the divisor \n\nParameters:\n\nr - Divisor \n\nReturns:\n\nThe result of division\n\nDivision operator for fixed_point32\nExample: \nfixed_point64 result = fixed_point32(131313) / fixed_point32(2323)\n\nfunction operator==\nbool eosio::fixed_point32::operator== (\n    const fixed_point32 & r\n)\n\nEquality operator. \nEquality operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator>\nbool eosio::fixed_point32::operator> (\n    const fixed_point32 & r\n)\n\nGreater than operator. \nGreater than operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator\nbool eosio::fixed_point32::operator & r\n)\n\nLess than operator. \nLess than operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator= (3/4)\nfixed_point32 & eosio::fixed_point32::operator= (\n    const fixed_point32 & r\n)\n\nfunction operator= (4/4)\nfixed_point32 & eosio::fixed_point32::operator= (\n    const fixed_point64 & r\n)\n\nfunction operator+ (2/2)\nfixed_point32QR)?Q:QR > eosio::fixed_point32::operator+ (\n    const fixed_point32 & rhs\n) const\n\nAddition between two fixed_point32 variables and the result goes to fixed_point32. \nAddition between two fixed_point32 variables Number of decimal on result will be max of decimals of lhs and rhs \nfunction operator- (2/2)\nfixed_point32QR)?Q:QR > eosio::fixed_point32::operator- (\n    const fixed_point32 & rhs\n) const\n\nSubtraction between two fixed_point32 variables and the result goes to fixed_point32. \nSubtraction between two fixed_point32 variables Number of decimal on result will be max of decimals of lhs and rhs \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp\n"},"structeosio_1_1fixed__point64.html":{"url":"structeosio_1_1fixed__point64.html","title":"struct fixed_point64","keywords":"eosio::fixed_point64 val fixed_point64 fixed_point64 fixed_point64 int_part frac_part print operator= operator= operator+ operator- operator * operator/ operator== operator> operator< operator+ operator-","body":"struct eosio::fixed_point64\nClass List > eosio :: fixed_point64\n64 bits representation of Fixed Point class. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nint64_t\nvalValue of the fixed point represented as int64_t.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nfixed_point64 (int64_t v = 0) Construct a new fixed point64 object.\n\n\n\nfixed_point64 (const fixed_point64 & r) Construct a new fixed point64 object from another fixed_point64.\n\n\n\nfixed_point64 (const fixed_point32 & r) Construct a new fixed point64 object from another fixed_point32.\n\n\nint64_t\nint_part () const To get the integer part of the fixed number.\n\n\nuint64_t\nfrac_part () const To get the decimal part of the fixed number.\n\n\nvoid\nprint () const Prints the fixed point value.\n\n\nfixed_point64 &\noperator= (const fixed_point32 & r) Assignment operator.\n\n\nfixed_point64 &\noperator= (const fixed_point64 & r) Assignment operator.\n\n\nfixed_point64QR)?Q:QR >\noperator+ (const fixed_point64 & r) const Addition operator.\n\n\nfixed_point64QR)?Q:QR >\noperator- (const fixed_point64 & r) const Subtraction operator.\n\n\nfixed_point128\noperator * (const fixed_point64 & r) const Multiplication operator.\n\n\nfixed_point128\noperator/ (const fixed_point64 & r) const Division operator.\n\n\nbool\noperator== (const fixed_point64 & r) Equality operator.\n\n\nbool\noperator> (const fixed_point64 & r) Greater than operator.\n\n\nbool\noperator (const fixed_point64 & r) Less than operator.\n\n\nfixed_point64QR)?Q:QR >\noperator+ (const fixed_point64 & rhs) const Addition between two fixed_point64 variables and the result goes to fixed_point64.\n\n\nfixed_point64QR)?Q:QR >\noperator- (const fixed_point64 & rhs) const Subtraction between two fixed_point64 variables and the result goes to fixed_point64.\n\n\n\nDetailed Description\nExample: \nfixed_point64 a(123232.455667233)\nfixed_point64 a(123424)\nfixed_point64 c = a*b;\nfixed_point64 d = a+b+c;\nfixed_point64 e = b/a;\n\nvariable val\nint64_t eosio::fixed_point64::val;\n\nValue of the fixed point represented as int64_t. \nValue of the fixed point represented as int64_t \nfunction fixed_point64 (1/3)\neosio::fixed_point64::fixed_point64 (\n    int64_t v = 0\n)\n\nConstruct a new fixed point64 object. \nConstruct a new fixed point64 object from int64_t\nParameters:\n\nv - int64_t representation of the fixed point value \n\nfunction fixed_point64 (2/3)\neosio::fixed_point64::fixed_point64 (\n    const fixed_point64 & r\n)\n\nConstruct a new fixed point64 object from another fixed_point64. \nConstruct a new fixed point64 object from another fixed_point64\nParameters:\n\nr - Another fixed_point64 as source \n\nfunction fixed_point64 (3/3)\neosio::fixed_point64::fixed_point64 (\n    const fixed_point32 & r\n)\n\nConstruct a new fixed point64 object from another fixed_point32. \nConstruct a new fixed point64 object from another fixed_point32\nParameters:\n\nr - fixed_point64 as source \n\nfunction int_part\nint64_t eosio::fixed_point64::int_part () const\n\nTo get the integer part of the fixed number. \nGet the integer part of the 64 bit fixed number \nReturns:\nReturns integer part of the fixed number\nExample: \nfixed_point64 a(1234.455667)\nstd::cout \nfunction frac_part\nuint64_t eosio::fixed_point64::frac_part () const\n\nTo get the decimal part of the fixed number. \nGet the decimal part of the 64 bit fixed number \nReturns:\nReturns decimal part of the fixed number\nExample: \nfixed64 a(1234.455667)\nstd::cout \nfunction print\nvoid eosio::fixed_point64::print () const\n\nPrints the fixed point value. \nPrints the fixed point value \nfunction operator= (1/2)\nfixed_point64 & eosio::fixed_point64::operator= (\n    const fixed_point32 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point32 to fixed_point64\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point64& - Reference to this object \nfunction operator= (2/2)\nfixed_point64 & eosio::fixed_point64::operator= (\n    const fixed_point64 & r\n)\n\nAssignment operator. \nAssignment operator. Assign fixed_point64 to fixed_point64\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\nfixed_point64& - Reference to this object \nfunction operator+ (1/2)\nfixed_point64QR)?Q:QR > eosio::fixed_point64::operator+ (\n    const fixed_point64 & r\n) const\n\nAddition operator. \nAddition operator\nTemplate parameters:\n\nQR - Precision of the second addend \n\nParameters:\n\nr - Second addend \n\nReturns:\n\nThe result of addition \n\nfunction operator- (1/2)\nfixed_point64QR)?Q:QR > eosio::fixed_point64::operator- (\n    const fixed_point64 & r\n) const\n\nSubtraction operator. \nSubtraction operator\nTemplate parameters:\n\nQR - Precision of the minuend \n\nParameters:\n\nr - Minuend \n\nReturns:\n\nThe result of subtraction \n\nfunction operator *\nfixed_point128 eosio::fixed_point64::operator * (\n    const fixed_point64 & r\n) const\n\nMultiplication operator. \nMultiplication operator for fixed_point64. The result goes to fixed_point64.\nMultiplication operator\nTemplate parameters:\n\nQR - Precision of the multiplier \n\nParameters:\n\nr - Multiplier \n\nReturns:\n\nThe result of multiplication\n\nMultiplication operator for fixed_point64. The result goes to fixed_point128 Number of decimal on result will be sum of number of decimals of lhs and rhs\nExample: \nfixed_point128 result = fixed_point64(131313) / fixed_point64(2323)\n\nfunction operator/\nfixed_point128 eosio::fixed_point64::operator/ (\n    const fixed_point64 & r\n) const\n\nDivision operator. \nDivision of two fixed_point64 result will be stored in fixed_point128.\nDivision operator\nTemplate parameters:\n\nQR - Precision of the divisor \n\nParameters:\n\nr - Divisor \n\nReturns:\n\nThe result of division\n\nDivision operator for fixed_point64\nExample: \nfixed_point128 result = fixed_point64(131313) / fixed_point64(2323)\n\nfunction operator==\nbool eosio::fixed_point64::operator== (\n    const fixed_point64 & r\n)\n\nEquality operator. \nEquality operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator>\nbool eosio::fixed_point64::operator> (\n    const fixed_point64 & r\n)\n\nGreater than operator. \nGreater than operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator\nbool eosio::fixed_point64::operator & r\n)\n\nLess than operator. \nLess than operator\nTemplate parameters:\n\nqr - Precision of the source \n\nParameters:\n\nr - Source \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfunction operator+ (2/2)\nfixed_point64QR)?Q:QR > eosio::fixed_point64::operator+ (\n    const fixed_point64 & rhs\n) const\n\nAddition between two fixed_point64 variables and the result goes to fixed_point64. \nAddition between two fixed_point64 variables Number of decimal on result will be max of decimals of lhs and rhs \nfunction operator- (2/2)\nfixed_point64QR)?Q:QR > eosio::fixed_point64::operator- (\n    const fixed_point64 & rhs\n) const\n\nSubtraction between two fixed_point64 variables and the result goes to fixed_point64. \nSubtraction between two fixed_point64 variables Number of decimal on result will be max of decimals of lhs and rhs \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp\n"},"structeosio_1_1ignore.html":{"url":"structeosio_1_1ignore.html","title":"struct ignore","keywords":"eosio::ignore","body":"struct eosio::ignore\nClass List > eosio :: ignore\nTells the datastream to ignore this type, but allows the abi generator to add the correct type. Currently non-ignore types can not succeed an ignore type in a method definition, i.e. void foo(float, ignore) is allowed and void foo(float, ignore, int) is not allowed. This restriction will be relaxed in a later release. More...\nDetailed Description\nTells the datastream to ignore this type, but allows the abi generator to add the correct type.\nCurrently non-ignore types can not succeed an ignore type in a method definition, i.e. void foo(float, ignore) is allowed and void foo(float, ignore, int) is not allowed. This restriction will be relaxed in a later release. \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/ignore.hpp\n"},"structeosio_1_1ignore__wrapper.html":{"url":"structeosio_1_1ignore__wrapper.html","title":"struct ignore_wrapper","keywords":"eosio::ignore_wrapper value ignore_wrapper ignore_wrapper ignore_wrapper get operator T operator ignore< T >","body":"struct eosio::ignore_wrapper\nClass List > eosio :: ignore_wrapper\nWrapper class to allow sending inline actions with the correct payload. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nT\nvalue\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconstexpr\nignore_wrapper ()\n\n\nconstexpr\nignore_wrapper (T val)\n\n\nconstexpr\nignore_wrapper (ignore val)\n\n\nconstexpr T\nget ()\n\n\nconstexpr\noperator T ()\n\n\nconstexpr\noperator ignore ()\n\n\n\nDetailed Description\nWrapper class to allow sending inline actions with the correct payload \nvariable value\nT eosio::ignore_wrapper::value;\n\nfunction ignore_wrapper (1/3)\nconstexpr eosio::ignore_wrapper::ignore_wrapper ()\n\nfunction ignore_wrapper (2/3)\nconstexpr eosio::ignore_wrapper::ignore_wrapper (\n    T val\n)\n\nfunction ignore_wrapper (3/3)\nconstexpr eosio::ignore_wrapper::ignore_wrapper (\n    ignore val\n)\n\nfunction get\nconstexpr T eosio::ignore_wrapper::get ()\n\nfunction operator T\nconstexpr eosio::ignore_wrapper::operator T ()\n\nfunction operator ignore\nconstexpr eosio::ignore_wrapper::operator ignore ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/ignore.hpp\n"},"structeosio_1_1indexed__by.html":{"url":"structeosio_1_1indexed__by.html","title":"struct indexed_by","keywords":"eosio::indexed_by constants secondary_extractor_type","body":"struct eosio::indexed_by\nClass List > eosio :: indexed_by\nThe indexed_by struct is used to instantiate the indices for the Multi-Index table. In EOSIO, up to 16 secondary indices can be specified. More...\nPublic Types\n\n\n\nType\nName\n\n\n\n\nenum\nconstants { index_name = static_cast(IndexName) }\n\n\ntypedef Extractor\nsecondary_extractor_type\n\n\n\nDetailed Description\nThe indexed_by struct is used to instantiate the indices for the Multi-Index table. In EOSIO, up to 16 secondary indices can be specified. \nTemplate parameters:\n\nIndexName - is the name of the index. The name must be provided as an EOSIO base32 encoded 64-bit integer and must conform to the EOSIO naming requirements of a maximum of 13 characters, the first twelve from the lowercase characters a-z, digits 1-5, and \".\", and if there is a 13th character, it is restricted to lowercase characters a-p and \".\". \nExtractor - is a function call operator that takes a const reference to the table object type and returns either a secondary key type or a reference to a secondary key type. It is recommended to use the template, which is a type alias to the `boost::multi\\_index::const\\_mem\\_fun`. See the documentation for the Boost key extractor for more details.\n\nExample:\n#include \nusing namespace eosio;\nclass mycontract: eosio::contract {\n  struct record {\n     uint64_t    primary;\n     uint128_t   secondary;\n     uint64_t primary_key() const { return primary; }\n     uint64_t get_secondary() const { return secondary; }\n     EOSLIB_SERIALIZE( record, (primary)(secondary) )\n   };\n  public:\n    mycontract(name receiver, name code, datastream ds):contract(receiver, code, ds){}\n    void myaction() {\n      auto code = _self;\n      auto scope = _self;\n      multi_index > > table( code, scope);\n    }\n}\nEOSIO_DISPATCH( mycontract, (myaction) )\n\nenum constants\nenum eosio::indexed_by::constants {\n    index_name = static_cast(IndexName),\n};\n\ntypedef secondary_extractor_type\ntypedef Extractor eosio::indexed_by::secondary_extractor_type;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1inline__dispatcher.html":{"url":"structeosio_1_1inline__dispatcher.html","title":"struct inline_dispatcher","keywords":"eosio::inline_dispatcher","body":"struct eosio::inline_dispatcher\nClass List > eosio :: inline_dispatcher\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html":{"url":"structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.html","title":"struct inline_dispatcher< void(T::*)(Args...), Name >","keywords":"eosio::inline_dispatcher< void(T::*)(Args...), Name > call call","body":"struct eosio::inline_dispatcher\nClass List > eosio :: inline_dispatcher\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic void\ncall (name code, const permission_level & perm, std::tuple args)\n\n\nstatic void\ncall (name code, std::vectorpermission_level > perms, std::tuple args)\n\n\n\nfunction call (1/2)\nstatic void eosio::inline_dispatcher::call (\n    name code,\n    const permission_level & perm,\n    std::tuple args\n)\n\nfunction call (2/2)\nstatic void eosio::inline_dispatcher::call (\n    name code,\n    std::vector perms,\n    std::tuple args\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"classeosio_1_1iostream.html":{"url":"classeosio_1_1iostream.html","title":"class iostream","keywords":"eosio::iostream","body":"class eosio::iostream\nClass List > eosio :: iostream\nDetailed Description\nSimulate C++ style streams \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/print.hpp\n"},"classeosio_1_1memory__manager.html":{"url":"classeosio_1_1memory__manager.html","title":"class memory_manager","keywords":"eosio::memory_manager memory malloc calloc realloc memory_manager","body":"class eosio::memory_manager\nClass List > eosio :: memory_manager\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\nmemory\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend void *\nmallocnamespace eosio\n\n\nfriend void *\ncallocAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0.\n\n\nfriend void *\nreallocReallocate the given area of memory.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nmemory_manager ()\n\n\n\nfriend malloc (1/2)\nfriend void * eosio::memory_manager::malloc (\n    size_t size\n)\n\nnamespace eosio \nAllocate additional memory\nParameters:\n\nsize - Number of additional bytes to be allocated \n\nReturns:\nvoid* - Pointer to start of the new allocated memory \nfriend calloc\nfriend void * eosio::memory_manager::calloc (\n    size_t count,\n    size_t size\n)\n\nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0. \nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0\nParameters:\n\ncount - Number of elements to allocate \nsize - Size of each element \n\nReturns:\nvoid* - Pointer to start of the new allocated memory \nfriend realloc (1/2)\nfriend void * eosio::memory_manager::realloc (\n    void * ptr,\n    size_t size\n)\n\nReallocate the given area of memory. \nReallocate the given area of memory, which is allocated by malloc(), calloc(), or realloc() previously\nParameters:\n\nptr - Pointer to the memory area to be reallocated \nsize - New size of the memory \n\nReturns:\nvoid* - Pointer to the new reallocated memory \nfunction memory_manager\neosio::memory_manager::memory_manager ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/eosiolib.cpp\n"},"classeosio_1_1memory__manager_1_1memory.html":{"url":"classeosio_1_1memory__manager_1_1memory.html","title":"class memory","keywords":"eosio::memory_manager::memory buffer_ptr memory init is_init is_in_heap is_capacity_remaining malloc malloc_from_freed realloc_in_place free cleanup_remaining expand_memory","body":"class eosio::memory_manager::memory\nClass List > eosio :: memory_manager :: memory\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\nbuffer_ptr\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nmemory ()\n\n\nvoid\ninit (char *const mem_heap, uint32_t size)\n\n\nuint32_t\nis_init () const\n\n\nuint32_t\nis_in_heap (const char *const ptr) const\n\n\nuint32_t\nis_capacity_remaining () const\n\n\nchar *\nmalloc (uint32_t size)\n\n\nchar *\nmalloc_from_freed (uint32_t size)\n\n\nchar *\nrealloc_in_place (char *const ptr, uint32_t size, uint32_t * orig_ptr_size)\n\n\nvoid\nfree (char * ptr)\n\n\nvoid\ncleanup_remaining ()\n\n\nbool\nexpand_memory (char * exp_mem, uint32_t size)\n\n\n\nfunction memory\neosio::memory_manager::memory::memory ()\n\nfunction init\nvoid eosio::memory_manager::memory::init (\n    char *const mem_heap,\n    uint32_t size\n)\n\nfunction is_init\nuint32_t eosio::memory_manager::memory::is_init () const\n\nfunction is_in_heap\nuint32_t eosio::memory_manager::memory::is_in_heap (\n    const char *const ptr\n) const\n\nfunction is_capacity_remaining\nuint32_t eosio::memory_manager::memory::is_capacity_remaining () const\n\nfunction malloc\nchar * eosio::memory_manager::memory::malloc (\n    uint32_t size\n)\n\nfunction malloc_from_freed\nchar * eosio::memory_manager::memory::malloc_from_freed (\n    uint32_t size\n)\n\nfunction realloc_in_place\nchar * eosio::memory_manager::memory::realloc_in_place (\n    char *const ptr,\n    uint32_t size,\n    uint32_t * orig_ptr_size\n)\n\nfunction free\nvoid eosio::memory_manager::memory::free (\n    char * ptr\n)\n\nfunction cleanup_remaining\nvoid eosio::memory_manager::memory::cleanup_remaining ()\n\nfunction expand_memory\nbool eosio::memory_manager::memory::expand_memory (\n    char * exp_mem,\n    uint32_t size\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/eosiolib.cpp\n"},"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html":{"url":"classeosio_1_1memory__manager_1_1memory_1_1buffer__ptr.html","title":"class buffer_ptr","keywords":"eosio::memory_manager::memory::buffer_ptr buffer_ptr buffer_ptr size next_ptr size end ptr mark_alloc mark_free is_alloc merge_contiguous_if_available merge_contiguous","body":"class eosio::memory_manager::memory::buffer_ptr\nClass List > eosio :: memory_manager :: memory :: buffer_ptr\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nbuffer_ptr (void * ptr, const char *const heap_end)\n\n\n\nbuffer_ptr (void * ptr, uint32_t buff_size, const char *const heap_end)\n\n\nuint32_t\nsize () const\n\n\nchar *\nnext_ptr () const\n\n\nvoid\nsize (uint32_t val)\n\n\nchar *\nend () const\n\n\nchar *\nptr () const\n\n\nvoid\nmark_alloc ()\n\n\nvoid\nmark_free ()\n\n\nbool\nis_alloc () const\n\n\nbool\nmerge_contiguous_if_available (uint32_t needed_size)\n\n\nbool\nmerge_contiguous (uint32_t needed_size)\n\n\n\nfunction buffer_ptr (1/2)\neosio::memory_manager::memory::buffer_ptr::buffer_ptr (\n    void * ptr,\n    const char *const heap_end\n)\n\nfunction buffer_ptr (2/2)\neosio::memory_manager::memory::buffer_ptr::buffer_ptr (\n    void * ptr,\n    uint32_t buff_size,\n    const char *const heap_end\n)\n\nfunction size (1/2)\nuint32_t eosio::memory_manager::memory::buffer_ptr::size () const\n\nfunction next_ptr\nchar * eosio::memory_manager::memory::buffer_ptr::next_ptr () const\n\nfunction size (2/2)\nvoid eosio::memory_manager::memory::buffer_ptr::size (\n    uint32_t val\n)\n\nfunction end\nchar * eosio::memory_manager::memory::buffer_ptr::end () const\n\nfunction ptr\nchar * eosio::memory_manager::memory::buffer_ptr::ptr () const\n\nfunction mark_alloc\nvoid eosio::memory_manager::memory::buffer_ptr::mark_alloc ()\n\nfunction mark_free\nvoid eosio::memory_manager::memory::buffer_ptr::mark_free ()\n\nfunction is_alloc\nbool eosio::memory_manager::memory::buffer_ptr::is_alloc () const\n\nfunction merge_contiguous_if_available\nbool eosio::memory_manager::memory::buffer_ptr::merge_contiguous_if_available (\n    uint32_t needed_size\n)\n\nfunction merge_contiguous (1/2)\nbool eosio::memory_manager::memory::buffer_ptr::merge_contiguous (\n    uint32_t needed_size\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/eosiolib.cpp\n"},"classeosio_1_1microseconds.html":{"url":"classeosio_1_1microseconds.html","title":"class microseconds","keywords":"eosio::microseconds _count time_point operator+ operator - operator> operator>= operator< operator<= microseconds operator== operator!= operator+= operator-= count to_seconds maximum","body":"class eosio::microseconds\nClass List > eosio :: microseconds\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nint64_t\n_count\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend class\ntime_point\n\n\nfriend microseconds\noperator+\n\n\nfriend microseconds\noperator -\n\n\nfriend bool\noperator>\n\n\nfriend bool\noperator>=\n\n\nfriend bool\noperator\n\n\nfriend bool\noperator\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nmicroseconds (int64_t c = 0)\n\n\nbool\noperator== (const microseconds & c) const\n\n\nbool\noperator!= (const microseconds & c) const\n\n\nmicroseconds &\noperator+= (const microseconds & c)\n\n\nmicroseconds &\noperator-= (const microseconds & c)\n\n\nint64_t\ncount () const\n\n\nint64_t\nto_seconds () const\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic microseconds\nmaximum ()\n\n\n\nvariable _count\nint64_t eosio::microseconds::_count;\n\nfriend time_point\nfriend class time_point;\n\nfriend operator+\nfriend microseconds eosio::microseconds::operator+ (\n    const microseconds & l,\n    const microseconds & r\n)\n\nfriend operator -\nfriend microseconds eosio::microseconds::operator - (\n    const microseconds & l,\n    const microseconds & r\n)\n\nfriend operator>\nfriend bool eosio::microseconds::operator> (\n    const microseconds & a,\n    const microseconds & b\n)\n\nfriend operator>=\nfriend bool eosio::microseconds::operator>= (\n    const microseconds & a,\n    const microseconds & b\n)\n\nfriend operator\nfriend bool eosio::microseconds::operator\nfriend operator\nfriend bool eosio::microseconds::operator\nfunction microseconds\nexplicit eosio::microseconds::microseconds (\n    int64_t c = 0\n)\n\nfunction operator==\nbool eosio::microseconds::operator== (\n    const microseconds & c\n) const\n\nfunction operator!=\nbool eosio::microseconds::operator!= (\n    const microseconds & c\n) const\n\nfunction operator+=\nmicroseconds & eosio::microseconds::operator+= (\n    const microseconds & c\n)\n\nfunction operator-=\nmicroseconds & eosio::microseconds::operator-= (\n    const microseconds & c\n)\n\nfunction count\nint64_t eosio::microseconds::count () const\n\nfunction to_seconds\nint64_t eosio::microseconds::to_seconds () const\n\nfunction maximum\nstatic microseconds eosio::microseconds::maximum ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/time.hpp\n"},"classeosio_1_1multi__index.html":{"url":"classeosio_1_1multi__index.html","title":"class multi_index","keywords":"eosio::multi_index const_iterator index intc item item_ptr const_reverse_iterator multi_index get_code get_scope cbegin begin cend end crbegin rbegin crend rend lower_bound upper_bound available_primary_key get_index get_index iterator_to emplace modify modify get find require_find erase erase","body":"class eosio::multi_index\nClass List > eosio :: multi_index\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nconst_iterator\n\n\nstruct\nindex\n\n\nstruct\nintc\n\n\nstruct\nitem\n\n\nstruct\nitem_ptr\n\n\n\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef std::reverse_iteratorconst_iterator >\nconst_reverse_iteratorstruct multi_index::const_iterator\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nmulti_index (name code, uint64_t scope) load_object_by_primary_iterator\n\n\nname\nget_code () const Returns the code member property.\n\n\nuint64_t\nget_scope () const Returns the scope member property.\n\n\nconst_iterator\ncbegin () const Returns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table.\n\n\nconst_iterator\nbegin () const Returns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table.\n\n\nconst_iterator\ncend () const Returns an iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\n\n\nconst_iterator\nend () const Returns an iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\n\n\nconst_reverse_iterator\ncrbegin () const Returns a reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\n\n\nconst_reverse_iterator\nrbegin () const Returns a reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\n\n\nconst_reverse_iterator\ncrend () const Returns an iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table.\n\n\nconst_reverse_iterator\nrend () const Returns an iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table.\n\n\nconst_iterator\nlower_bound (uint64_t primary) const Searches for the object\\_type with the lowest primary key that is greater than or equal to a given primary key.\n\n\nconst_iterator\nupper_bound (uint64_t primary) const Searches for the object\\_type with the highest primary key that is less than or equal to a given primary key.\n\n\nuint64_t\navailable_primary_key () const Returns an available primary key.\n\n\nauto\nget_index () Returns an appropriately typed Secondary Index.\n\n\nauto\nget_index () const Returns an appropriately typed Secondary Index.\n\n\nconst_iterator\niterator_to (const T & obj) const Returns an iterator to the given object in a Multi-Index table.\n\n\nconst_iterator\nemplace (name payer, Lambda && constructor) Adds a new object (i.e., row) to the table.\n\n\nvoid\nmodify (const_iterator itr, name payer, Lambda && updater) Modifies an existing object in a table.\n\n\nvoid\nmodify (const T & obj, name payer, Lambda && updater) Modifies an existing object in a table.\n\n\nconst T &\nget (uint64_t primary, const char * error_msg = \"unable to find key\") const Retrieves an existing object from a table using its primary key.\n\n\nconst_iterator\nfind (uint64_t primary) const Search for an existing object in a table using its primary key.\n\n\nconst_iterator\nrequire_find (uint64_t primary, const char * error_msg = \"unable to find key\") const Search for an existing object in a table using its primary key.\n\n\nconst_iterator\nerase (const_iterator itr) Remove an existing object from a table using its primary key.\n\n\nvoid\nerase (const T & obj) Remove an existing object from a table using its primary key.\n\n\n\ntypedef const_reverse_iterator\ntypedef std::reverse_iterator eosio::multi_index::const_reverse_iterator;\n\nstruct multi_index::const_iterator \nfunction multi_index\neosio::multi_index::multi_index (\n    name code,\n    uint64_t scope\n)\n\nload_object_by_primary_iterator \nConstructs an instance of a Multi-Index table. Constructs an instance of a Multi-Index table.\nParameters:\n\ncode - Account that owns table \nscope - Scope identifier within the code hierarchy\n\nPrecondition:\ncode and scope member properties are initialized \nPost\neach secondary index table initialized \nPost\nSecondary indices are updated to refer to the newly added object. If the secondary index tables do not exist, they are created. \nPost\nThe payer is charged for the storage usage of the new object and, if the table (and secondary index tables) must be created, for the overhead of the table creation.\nNotes The ` template has template parameters\n\nTableName is the name of the table, maximum 12 characters long, characters in the name from the set of lowercase letters, digits 1 to 5, and the \".\" (period) character and is converted to a eosio::raw - which wraps uint64_t;\nT is the object type (i.e., row definition);\nIndices is a list of up to 16 secondary indices.\nEach must be a default constructable class or struct\nEach must have a function call operator that takes a const reference to the table object type and returns either a secondary key type or a reference to a secondary key type\nIt is recommended to use the eosio::const_mem_fun template, which is a type alias to the boost::multi_index::const_mem_fun. See the documentation for the Boost const_mem_fun key extractor for more details.\n\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value); // code, scope\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction get_code\nname eosio::multi_index::get_code () const\n\nReturns the code member property. \nReturns the code member property. \nReturns:\nAccount name of the Code that owns the Primary Table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(\"dan\"_n, \"dan\"_n); // code, scope\n      eosio_assert(addresses.get_code() == \"dan\"_n, \"Codes don't match.\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction get_scope\nuint64_t eosio::multi_index::get_scope () const\n\nReturns the scope member property. \nReturns the scope member property. \nReturns:\nScope id of the Scope within the Code of the Current Receiver under which the desired Primary Table instance can be found.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(\"dan\"_n, \"dan\"_n); // code, scope\n      eosio_assert(addresses.get_code() == \"dan\"_n, \"Scopes don't match\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction cbegin\nconst_iterator eosio::multi_index::cbegin () const\n\nReturns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table. \nReturns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table. \nReturns:\nAn iterator pointing to the object_type with the lowest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(\"dan\"_n);\n      eosio_assert(itr == addresses.cbegin(), \"Only address is not at front.\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction begin\nconst_iterator eosio::multi_index::begin () const\n\nReturns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table. \nReturns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table. \nReturns:\nAn iterator pointing to the object_type with the lowest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(\"dan\"_n);\n      eosio_assert(itr == addresses.begin(), \"Only address is not at front.\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction cend\nconst_iterator eosio::multi_index::cend () const\n\nReturns an iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns an iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns:\nAn iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(\"dan\"_n);\n      eosio_assert(itr != addresses.cend(), \"Address for account doesn't exist\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction end\nconst_iterator eosio::multi_index::end () const\n\nReturns an iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns an iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns:\nAn iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name self):contract(self) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(\"dan\"_n);\n      eosio_assert(itr != addresses.end(), \"Address for account doesn't exist\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction crbegin\nconst_reverse_iterator eosio::multi_index::crbegin () const\n\nReturns a reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns a reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns:\nA reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"brendan\"_n;\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n      });\n      auto itr = addresses.crbegin();\n      eosio_assert(itr->account_name == name(\"dan\"), \"Lock arf, Incorrect Last Record \");\n      itr++;\n      eosio_assert(itr->account_name == name(\"brendan\"), \"Lock arf, Incorrect Second Last Record\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction rbegin\nconst_reverse_iterator eosio::multi_index::rbegin () const\n\nReturns a reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns a reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table. \nReturns:\nA reverse iterator pointing to the object\\_type with the highest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"brendan\"_n;\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n      });\n      auto itr = addresses.rbegin();\n      eosio_assert(itr->account_name == name(\"dan\"), \"Lock arf, Incorrect Last Record \");\n      itr++;\n      eosio_assert(itr->account_name == name(\"brendan\"), \"Lock arf, Incorrect Second Last Record\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction crend\nconst_reverse_iterator eosio::multi_index::crend () const\n\nReturns an iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table. \nReturns an iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table. \nReturns:\nAn iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"brendan\"_n;\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n      });\n      auto itr = addresses.crend();\n      itr--;\n      eosio_assert(itr->account_name == name(\"brendan\"), \"Lock arf, Incorrect First Record \");\n      itr--;\n      eosio_assert(itr->account_name == name(\"dan\"), \"Lock arf, Incorrect Second Record\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction rend\nconst_reverse_iterator eosio::multi_index::rend () const\n\nReturns an iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table. \nReturns an iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table. \nReturns:\nAn iterator pointing to the object\\_type with the lowest primary key value in the Multi-Index table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"brendan\"_n;\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n      });\n      auto itr = addresses.rend();\n      itr--;\n      eosio_assert(itr->account_name == name(\"brendan\"), \"Lock arf, Incorrect First Record \");\n      itr--;\n      eosio_assert(itr->account_name == name(\"dan\"), \"Lock arf, Incorrect Second Record\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction lower_bound\nconst_iterator eosio::multi_index::lower_bound (\n    uint64_t primary\n) const\n\nSearches for the object\\_type with the lowest primary key that is greater than or equal to a given primary key. \nSearches for the object\\_type with the lowest primary key that is greater than or equal to a given primary key. \nParameters:\n\nprimary - Primary key that establishes the target value for the lower bound search.\n\nReturns:\nAn iterator pointing to the object\\_type that has the lowest primary key that is greater than or equal to primary. If an object could not be found, it will return the end iterator. If the table does not exist** it will return -1.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint32_t zip = 0;\n     uint64_t primary_key() const { return account_name; }\n     uint64_t by_zip() const { return zip; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index > address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n        address.zip = 93446;\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"brendan\"_n;\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n        address.zip = 93445;\n      });\n      uint32_t zipnumb = 93445;\n      auto zip_index = addresses.get_index();\n      auto itr = zip_index.lower_bound(zipnumb);\n      eosio_assert(itr->account_name == name(\"brendan\"), \"Lock arf, Incorrect First Lower Bound Record \");\n      itr++;\n      eosio_assert(itr->account_name == name(\"dan\"), \"Lock arf, Incorrect Second Lower Bound Record\");\n      itr++;\n      eosio_assert(itr == zip_index.end(), \"Lock arf, Incorrect End of Iterator\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction upper_bound\nconst_iterator eosio::multi_index::upper_bound (\n    uint64_t primary\n) const\n\nSearches for the object\\_type with the highest primary key that is less than or equal to a given primary key. \nSearches for the object\\_type with the highest primary key that is less than or equal to a given primary key. \nParameters:\n\nprimary - Primary key that establishes the target value for the upper bound search\n\nReturns:\nAn iterator pointing to the object\\_type that has the highest primary key that is less than or equal to primary. If an object could not be found, it will return the end iterator. If the table does not exist** it will return -1.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint32_t zip = 0;\n     uint64_t liked = 0;\n     uint64_t primary_key() const { return account_name; }\n     uint64_t by_zip() const { return zip; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index > address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n        address.zip = 93446;\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"brendan\"_n;\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n        address.zip = 93445;\n      });\n      uint32_t zipnumb = 93445;\n      auto zip_index = addresses.get_index();\n      auto itr = zip_index.upper_bound(zipnumb);\n      eosio_assert(itr->account_name == name(\"dan\"), \"Lock arf, Incorrect First Upper Bound Record \");\n      itr++;\n      eosio_assert(itr == zip_index.end(), \"Lock arf, Incorrect End of Iterator\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction available_primary_key\nuint64_t eosio::multi_index::available_primary_key () const\n\nReturns an available primary key. \nReturns an available primary key. \nReturns:\nAn available (unused) primary key value.\nNotes: Intended to be used in tables in which the primary keys of the table are strictly intended to be auto-incrementing, and thus will never be set to custom values by the contract. Violating this expectation could result in the table appearing to be full due to inability to allocate an available primary key. Ideally this method would only be used to determine the appropriate primary key to use within new objects added to a table in which the primary keys of the table are strictly intended from the beginning to be autoincrementing and thus will not ever be set to custom arbitrary values by the contract. Violating this agreement could result in the table appearing full when in reality there is plenty of space left.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t key;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return key; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.key = addresses.available_primary_key();\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction get_index (1/2)\nauto eosio::multi_index::get_index ()\n\nReturns an appropriately typed Secondary Index. \nReturns an appropriately typed Secondary Index. \nTemplate parameters:\n\nIndexName - the ID of the desired secondary index\n\nReturns:\nAn index of the appropriate type: Primitive 64-bit unsigned integer key (idx64), Primitive 128-bit unsigned integer key (idx128), 128-bit fixed-size lexicographical key (idx128), 256-bit fixed-size lexicographical key (idx256), Floating point key, Double precision floating point key, Long Double (quadruple) precision floating point key\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint32_t zip = 0;\n     uint64_t primary_key() const { return account_name; }\n     uint64_t by_zip() const { return zip; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index > address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value);  // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n        address.zip = 93446;\n      });\n      uint32_t zipnumb = 93446;\n      auto zip_index = addresses.get_index();\n      auto itr = zip_index.find(zipnumb);\n      eosio_assert(itr->account_name == name(\"dan\"), \"Lock arf, Incorrect Record \");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction get_index (2/2)\nauto eosio::multi_index::get_index () const\n\nReturns an appropriately typed Secondary Index. \nReturns an appropriately typed Secondary Index. \nTemplate parameters:\n\nIndexName - the ID of the desired secondary index\n\nReturns:\nAn index of the appropriate type: Primitive 64-bit unsigned integer key (idx64), Primitive 128-bit unsigned integer key (idx128), 128-bit fixed-size lexicographical key (idx128), 256-bit fixed-size lexicographical key (idx256), Floating point key, Double precision floating point key, Long Double (quadruple) precision floating point key\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint32_t zip = 0;\n     uint64_t primary_key() const { return account_name; }\n     uint64_t by_zip() const { return zip; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index > address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n        address.zip = 93446;\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"brendan\"_n;\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n        address.zip = 93445;\n      });\n      uint32_t zipnumb = 93445;\n      auto zip_index = addresses.get_index();\n      auto itr = zip_index.upper_bound(zipnumb);\n      eosio_assert(itr->account_name == name(\"dan\"), \"Lock arf, Incorrect First Upper Bound Record \");\n      itr++;\n      eosio_assert(itr == zip_index.end(), \"Lock arf, Incorrect End of Iterator\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction iterator_to\nconst_iterator eosio::multi_index::iterator_to (\n    const T & obj\n) const\n\nReturns an iterator to the given object in a Multi-Index table. \nReturns an iterator to the given object in a Multi-Index table. \nParameters:\n\nobj - A reference to the desired object\n\nReturns:\nAn iterator to the given object\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint32_t zip = 0;\n     uint64_t primary_key() const { return account_name; }\n     uint64_t by_zip() const { return zip; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index > address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n        address.zip = 93446;\n      });\n      addresses.emplace(payer, [&](auto& address) {\n        address.account_name = \"brendan\"_n;\n        address.first_name = \"Brendan\";\n        address.last_name = \"Blumer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Hong Kong\";\n        address.state = \"HK\";\n        address.zip = 93445;\n      });\n      auto user = addresses.get(\"dan\"_n);\n      auto itr = address.find(\"dan\"_n);\n      eosio_assert(iterator_to(user) == itr, \"Invalid iterator\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction emplace\nconst_iterator eosio::multi_index::emplace (\n    name payer,\n    Lambda && constructor\n)\n\nAdds a new object (i.e., row) to the table. \nAdds a new object (i.e., row) to the table. \nParameters:\n\npayer - Account name of the payer for the Storage usage of the new object \nconstructor - Lambda function that does an in-place initialization of the object to be created in the table\n\nPrecondition:\nA multi index table has been instantiated \nPost\nA new object is created in the Multi-Index table, with a unique primary key (as specified in the object). The object is serialized and written to the table. If the table does not exist, it is created. \nPost\nSecondary indices are updated to refer to the newly added object. If the secondary index tables do not exist, they are created. \nPost\nThe payer is charged for the storage usage of the new object and, if the table (and secondary index tables) must be created, for the overhead of the table creation.\nReturns:\nA primary key iterator to the newly created object\nException - The account is not authorized to write to the table.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction modify (1/2)\nvoid eosio::multi_index::modify (\n    const_iterator itr,\n    name payer,\n    Lambda && updater\n)\n\nModifies an existing object in a table. \nModifies an existing object in a table. \nParameters:\n\nitr - an iterator pointing to the object to be updated \npayer - account name of the payer for the Storage usage of the updated row \nupdater - lambda function that updates the target object\n\nPrecondition:\nitr points to an existing element \nPrecondition:\npayer is a valid account that is authorized to execute the action and be billed for storage usage.\nPost\nThe modified object is serialized, then replaces the existing object in the table. \nPost\nSecondary indices are updated; the primary key of the updated object is not changed. \nPost\nThe payer is charged for the storage usage of the updated object. \nPost\nIf payer is the same as the existing payer, payer only pays for the usage difference between existing and updated object (and is refunded if this difference is negative). \nPost\nIf payer is different from the existing payer, the existing payer is refunded for the storage usage of the existing object.\nExceptions: If called with an invalid precondition, execution is aborted.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(\"dan\"_n);\n      eosio_assert(itr != addresses.end(), \"Address for account not found\");\n      addresses.modify( itr, account payer, [&]( auto& address ) {\n        address.city = \"San Luis Obispo\";\n        address.state = \"CA\";\n      });\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction modify (2/2)\nvoid eosio::multi_index::modify (\n    const T & obj,\n    name payer,\n    Lambda && updater\n)\n\nModifies an existing object in a table. \nModifies an existing object in a table. \nParameters:\n\nobj - a reference to the object to be updated \npayer - account name of the payer for the Storage usage of the updated row \nupdater - lambda function that updates the target object\n\nPrecondition:\nobj is an existing object in the table \nPrecondition:\npayer is a valid account that is authorized to execute the action and be billed for storage usage.\nPost\nThe modified object is serialized, then replaces the existing object in the table. \nPost\nSecondary indices are updated; the primary key of the updated object is not changed. \nPost\nThe payer is charged for the storage usage of the updated object. \nPost\nIf payer is the same as the existing payer, payer only pays for the usage difference between existing and updated object (and is refunded if this difference is negative). \nPost\nIf payer is different from the existing payer, the existing payer is refunded for the storage usage of the existing object.\nExceptions: If called with an invalid precondition, execution is aborted.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(\"dan\"_n);\n      eosio_assert(itr != addresses.end(), \"Address for account not found\");\n      addresses.modify( *itr, payer, [&]( auto& address ) {\n        address.city = \"San Luis Obispo\";\n        address.state = \"CA\";\n      });\n      eosio_assert(itr->city == \"San Luis Obispo\", \"Lock arf, Address not modified\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction get\nconst T & eosio::multi_index::get (\n    uint64_t primary,\n    const char * error_msg = \"unable to find key\"\n) const\n\nRetrieves an existing object from a table using its primary key. \nRetrieves an existing object from a table using its primary key. \nParameters:\n\nprimary - Primary key value of the object \n\nReturns:\nA constant reference to the object containing the specified primary key.\nException - No object matches the given key\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto user = addresses.get(\"dan\"_n);\n      eosio_assert(user.first_name == \"Daniel\", \"Couldn't get him.\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction find\nconst_iterator eosio::multi_index::find (\n    uint64_t primary\n) const\n\nSearch for an existing object in a table using its primary key. \nSearch for an existing object in a table using its primary key. \nParameters:\n\nprimary - Primary key value of the object \n\nReturns:\nAn iterator to the found object which has a primary key equal to primary OR the end iterator of the referenced table if an object with primary key primary is not found.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(\"dan\"_n);\n      eosio_assert(itr != addresses.end(), \"Couldn't get him.\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\nfunction require_find\nconst_iterator eosio::multi_index::require_find (\n    uint64_t primary,\n    const char * error_msg = \"unable to find key\"\n) const\n\nSearch for an existing object in a table using its primary key. \nSearch for an existing object in a table using its primary key. \nParameters:\n\nprimary - Primary key value of the object \nerror_msg - error message if an object with primary key primary is not found. \n\nReturns:\nAn iterator to the found object which has a primary key equal to primary OR throws an exception if an object with primary key primary is not found. \nfunction erase (1/2)\nconst_iterator eosio::multi_index::erase (\n    const_iterator itr\n)\n\nRemove an existing object from a table using its primary key. \nRemove an existing object from a table using its primary key. \nParameters:\n\nitr - An iterator pointing to the object to be removed\n\nPrecondition:\nitr points to an existing element \nPost\nThe object is removed from the table and all associated storage is reclaimed. \nPost\nSecondary indices associated with the table are updated. \nPost\nThe existing payer for storage usage of the object is refunded for the table and secondary indices usage of the removed object, and if the table and indices are removed, for the associated overhead.\nReturns:\nFor the signature with ``, returns a pointer to the object following the removed object.\nExceptions: The object to be removed is not in the table. The action is not authorized to modify the table. The given iterator is invalid.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(\"dan\"_n);\n      eosio_assert(itr != addresses.end(), \"Address for account not found\");\n      addresses.erase( itr );\n      eosio_assert(itr != addresses.end(), \"Everting lock arf, Address not erased properly\");\n    }\n}\nEOSIO_ABI( addressbook, (myaction) )\n\nfunction erase (2/2)\nvoid eosio::multi_index::erase (\n    const T & obj\n)\n\nRemove an existing object from a table using its primary key. \nRemove an existing object from a table using its primary key. \nParameters:\n\nobj - Object to be removed\n\nPrecondition:\nobj is an existing object in the table \nPost\nThe object is removed from the table and all associated storage is reclaimed. \nPost\nSecondary indices associated with the table are updated. \nPost\nThe existing payer for storage usage of the object is refunded for the table and secondary indices usage of the removed object, and if the table and indices are removed, for the associated overhead.\nExceptions: The object to be removed is not in the table. The action is not authorized to modify the table. The given iterator is invalid.\nExample:\n#include \nusing namespace eosio;\nusing namespace std;\nclass addressbook: contract {\n  struct address {\n     uint64_t account_name;\n     string first_name;\n     string last_name;\n     string street;\n     string city;\n     string state;\n     uint64_t primary_key() const { return account_name; }\n  };\n  public:\n    addressbook(name receiver, name code, datastream ds):contract(receiver, code, ds) {}\n    typedef eosio::multi_index address_index;\n    void myaction() {\n      address_index addresses(_self, _self.value); // code, scope\n      // add to table, first argument is account to bill for storage\n      addresses.emplace(_self, [&](auto& address) {\n        address.account_name = \"dan\"_n;\n        address.first_name = \"Daniel\";\n        address.last_name = \"Larimer\";\n        address.street = \"1 EOS Way\";\n        address.city = \"Blacksburg\";\n        address.state = \"VA\";\n      });\n      auto itr = addresses.find(\"dan\"_n);\n      eosio_assert(itr != addresses.end(), \"Record is not found\");\n      addresses.erase(*itr);\n      itr = addresses.find(\"dan\"_n);\n      eosio_assert(itr == addresses.end(), \"Record is not deleted\");\n    }\n}\nEOSIO_DISPATCH( addressbook, (myaction) )\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1multi__index_1_1const__iterator.html":{"url":"structeosio_1_1multi__index_1_1const__iterator.html","title":"struct const_iterator","keywords":"eosio::multi_index::const_iterator multi_index operator== operator != operator * operator-> operator++ operator-- operator++ operator--","body":"struct eosio::multi_index::const_iterator\nClass List > eosio :: multi_index :: const_iterator\nInherits the following classes: std::iterator\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend class\nmulti_index\n\n\nfriend bool\noperator==\n\n\nfriend bool\noperator !=\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconst T &\noperator * () const\n\n\nconst T *\noperator-> () const\n\n\nconst_iterator\noperator++ (int)\n\n\nconst_iterator\noperator-- (int)\n\n\nconst_iterator &\noperator++ ()\n\n\nconst_iterator &\noperator-- ()\n\n\n\nfriend multi_index\nfriend class multi_index;\n\nfriend operator==\nfriend bool eosio::multi_index::const_iterator::operator== (\n    const const_iterator & a,\n    const const_iterator & b\n)\n\nfriend operator !=\nfriend bool eosio::multi_index::const_iterator::operator != (\n    const const_iterator & a,\n    const const_iterator & b\n)\n\nfunction operator *\nconst T & eosio::multi_index::const_iterator::operator * () const\n\nfunction operator->\nconst T * eosio::multi_index::const_iterator::operator-> () const\n\nfunction operator++ (1/2)\nconst_iterator eosio::multi_index::const_iterator::operator++ (\n    int \n)\n\nfunction operator-- (1/2)\nconst_iterator eosio::multi_index::const_iterator::operator-- (\n    int \n)\n\nfunction operator++ (2/2)\nconst_iterator & eosio::multi_index::const_iterator::operator++ ()\n\nfunction operator-- (2/2)\nconst_iterator & eosio::multi_index::const_iterator::operator-- ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1multi__index_1_1index.html":{"url":"structeosio_1_1multi__index_1_1index.html","title":"struct index","keywords":"eosio::multi_index::index const_iterator constants secondary_extractor_type secondary_key_type const_reverse_iterator multi_index validate_index_name name number extract_secondary_key cbegin begin cend end crbegin rbegin crend rend find find require_find require_find get get lower_bound lower_bound upper_bound upper_bound iterator_to modify erase get_code get_scope","body":"struct eosio::multi_index::index\nClass List > eosio :: multi_index :: index\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nconst_iterator\n\n\n\nPublic Types\n\n\n\nType\nName\n\n\n\n\nenum\nconstants { table_name = static_cast(TableName), index_name = static_cast(IndexName), index_number = Number, index_table_name = (static_cast(TableName) & 0xFFFFFFFFFFFFFFF0ULL)\n\n\n(Number & 0x000000000000000FULL) }\n\n\ntypedef Extractor\nsecondary_extractor_type\n\n\ntypedef std::decay::type\nsecondary_key_type\n\n\ntypedef std::reverse_iteratorconst_iterator >\nconst_reverse_iteratorstruct multi_index::index::const_iterator\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend class\nmulti_index\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic constexpr bool\nvalidate_index_name (eosio::name n)\n\n\nstatic constexpr uint64_t\nname ()\n\n\nstatic constexpr uint64_t\nnumber ()\n\n\nstatic auto\nextract_secondary_key (const T & obj)\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconst_iterator\ncbegin () const\n\n\nconst_iterator\nbegin () const\n\n\nconst_iterator\ncend () const\n\n\nconst_iterator\nend () const\n\n\nconst_reverse_iterator\ncrbegin () const\n\n\nconst_reverse_iterator\nrbegin () const\n\n\nconst_reverse_iterator\ncrend () const\n\n\nconst_reverse_iterator\nrend () const\n\n\nconst_iterator\nfind (secondary_key_type && secondary) const\n\n\nconst_iterator\nfind (const secondary_key_type & secondary) const\n\n\nconst_iterator\nrequire_find (secondary_key_type && secondary, const char * error_msg = \"unable to find secondary key\") const\n\n\nconst_iterator\nrequire_find (const secondary_key_type & secondary, const char * error_msg = \"unable to find secondary key\") const\n\n\nconst T &\nget (secondary_key_type && secondary, const char * error_msg = \"unable to find secondary key\") const\n\n\nconst T &\nget (const secondary_key_type & secondary, const char * error_msg = \"unable to find secondary key\") const\n\n\nconst_iterator\nlower_bound (secondary_key_type && secondary) const\n\n\nconst_iterator\nlower_bound (const secondary_key_type & secondary) const\n\n\nconst_iterator\nupper_bound (secondary_key_type && secondary) const\n\n\nconst_iterator\nupper_bound (const secondary_key_type & secondary) const\n\n\nconst_iterator\niterator_to (const T & obj)\n\n\nvoid\nmodify (const_iterator itr, eosio::name payer, Lambda && updater)\n\n\nconst_iterator\nerase (const_iterator itr)\n\n\neosio::name\nget_code () const\n\n\nuint64_t\nget_scope () const\n\n\n\nenum constants\nenum eosio::multi_index::index::constants {\n    table_name = static_cast(TableName),\n    index_name = static_cast(IndexName),\n    index_number = Number,\n    index_table_name = (static_cast(TableName) & 0xFFFFFFFFFFFFFFF0ULL)\n                                    | (Number & 0x000000000000000FULL),\n};\n\ntypedef secondary_extractor_type\ntypedef Extractor eosio::multi_index::index::secondary_extractor_type;\n\ntypedef secondary_key_type\ntypedef std::decay::type eosio::multi_index::index::secondary_key_type;\n\ntypedef const_reverse_iterator\ntypedef std::reverse_iterator eosio::multi_index::index::const_reverse_iterator;\n\nstruct multi_index::index::const_iterator \nfriend multi_index\nfriend class multi_index;\n\nfunction validate_index_name\nstatic constexpr bool eosio::multi_index::index::validate_index_name (\n    eosio::name n\n)\n\nfunction name\nstatic constexpr uint64_t eosio::multi_index::index::name ()\n\nfunction number\nstatic constexpr uint64_t eosio::multi_index::index::number ()\n\nfunction extract_secondary_key\nstatic auto eosio::multi_index::index::extract_secondary_key (\n    const T & obj\n)\n\nfunction cbegin\nconst_iterator eosio::multi_index::index::cbegin () const\n\nfunction begin\nconst_iterator eosio::multi_index::index::begin () const\n\nfunction cend\nconst_iterator eosio::multi_index::index::cend () const\n\nfunction end\nconst_iterator eosio::multi_index::index::end () const\n\nfunction crbegin\nconst_reverse_iterator eosio::multi_index::index::crbegin () const\n\nfunction rbegin\nconst_reverse_iterator eosio::multi_index::index::rbegin () const\n\nfunction crend\nconst_reverse_iterator eosio::multi_index::index::crend () const\n\nfunction rend\nconst_reverse_iterator eosio::multi_index::index::rend () const\n\nfunction find (1/2)\nconst_iterator eosio::multi_index::index::find (\n    secondary_key_type && secondary\n) const\n\nfunction find (2/2)\nconst_iterator eosio::multi_index::index::find (\n    const secondary_key_type & secondary\n) const\n\nfunction require_find (1/2)\nconst_iterator eosio::multi_index::index::require_find (\n    secondary_key_type && secondary,\n    const char * error_msg = \"unable to find secondary key\"\n) const\n\nfunction require_find (2/2)\nconst_iterator eosio::multi_index::index::require_find (\n    const secondary_key_type & secondary,\n    const char * error_msg = \"unable to find secondary key\"\n) const\n\nfunction get (1/2)\nconst T & eosio::multi_index::index::get (\n    secondary_key_type && secondary,\n    const char * error_msg = \"unable to find secondary key\"\n) const\n\nfunction get (2/2)\nconst T & eosio::multi_index::index::get (\n    const secondary_key_type & secondary,\n    const char * error_msg = \"unable to find secondary key\"\n) const\n\nfunction lower_bound (1/2)\nconst_iterator eosio::multi_index::index::lower_bound (\n    secondary_key_type && secondary\n) const\n\nfunction lower_bound (2/2)\nconst_iterator eosio::multi_index::index::lower_bound (\n    const secondary_key_type & secondary\n) const\n\nfunction upper_bound (1/2)\nconst_iterator eosio::multi_index::index::upper_bound (\n    secondary_key_type && secondary\n) const\n\nfunction upper_bound (2/2)\nconst_iterator eosio::multi_index::index::upper_bound (\n    const secondary_key_type & secondary\n) const\n\nfunction iterator_to\nconst_iterator eosio::multi_index::index::iterator_to (\n    const T & obj\n)\n\nfunction modify\nvoid eosio::multi_index::index::modify (\n    const_iterator itr,\n    eosio::name payer,\n    Lambda && updater\n)\n\nfunction erase\nconst_iterator eosio::multi_index::index::erase (\n    const_iterator itr\n)\n\nfunction get_code\neosio::name eosio::multi_index::index::get_code () const\n\nfunction get_scope\nuint64_t eosio::multi_index::index::get_scope () const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1multi__index_1_1index_1_1const__iterator.html":{"url":"structeosio_1_1multi__index_1_1index_1_1const__iterator.html","title":"struct const_iterator","keywords":"eosio::multi_index::index::const_iterator index operator== operator != operator * operator-> operator++ operator-- operator++ operator-- const_iterator","body":"struct eosio::multi_index::index::const_iterator\nClass List > eosio :: multi_index :: index :: const_iterator\nInherits the following classes: std::iterator\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend struct\nindex\n\n\nfriend bool\noperator==\n\n\nfriend bool\noperator !=\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconst T &\noperator * () const\n\n\nconst T *\noperator-> () const\n\n\nconst_iterator\noperator++ (int)\n\n\nconst_iterator\noperator-- (int)\n\n\nconst_iterator &\noperator++ ()\n\n\nconst_iterator &\noperator-- ()\n\n\n\nconst_iterator ()\n\n\n\nfriend index\nfriend struct index;\n\nfriend operator==\nfriend bool eosio::multi_index::index::const_iterator::operator== (\n    const const_iterator & a,\n    const const_iterator & b\n)\n\nfriend operator !=\nfriend bool eosio::multi_index::index::const_iterator::operator != (\n    const const_iterator & a,\n    const const_iterator & b\n)\n\nfunction operator *\nconst T & eosio::multi_index::index::const_iterator::operator * () const\n\nfunction operator->\nconst T * eosio::multi_index::index::const_iterator::operator-> () const\n\nfunction operator++ (1/2)\nconst_iterator eosio::multi_index::index::const_iterator::operator++ (\n    int \n)\n\nfunction operator-- (1/2)\nconst_iterator eosio::multi_index::index::const_iterator::operator-- (\n    int \n)\n\nfunction operator++ (2/2)\nconst_iterator & eosio::multi_index::index::const_iterator::operator++ ()\n\nfunction operator-- (2/2)\nconst_iterator & eosio::multi_index::index::const_iterator::operator-- ()\n\nfunction const_iterator (1/2)\neosio::multi_index::index::const_iterator::const_iterator ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1multi__index_1_1intc.html":{"url":"structeosio_1_1multi__index_1_1intc.html","title":"struct intc","keywords":"eosio::multi_index::intc e operator uint64_t","body":"struct eosio::multi_index::intc\nClass List > eosio :: multi_index :: intc\nstruct multi_index::index \nPublic Types\n\n\n\nType\nName\n\n\n\n\nenum\ne { value = I }\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\noperator uint64_t () const\n\n\n\nenum e\nenum eosio::multi_index::intc::e {\n    value = I,\n};\n\nfunction operator uint64_t\neosio::multi_index::intc::operator uint64_t () const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1multi__index_1_1item.html":{"url":"structeosio_1_1multi__index_1_1item.html","title":"struct item","keywords":"eosio::multi_index::item __idx __primary_itr __iters item","body":"struct eosio::multi_index::item\nClass List > eosio :: multi_index :: item\nInherits the following classes: T\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nconst multi_index *\n__idx\n\n\nint32_t\n__primary_itr\n\n\nint32_t\n__iters\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nitem (const multi_index * idx, Constructor && c)\n\n\n\nvariable __idx\nconst multi_index* eosio::multi_index::item::__idx;\n\nvariable __primary_itr\nint32_t eosio::multi_index::item::__primary_itr;\n\nvariable __iters\nint32_t eosio::multi_index::item::__iters[sizeof...(Indices)+(sizeof...(Indices)==0)];\n\nfunction item\neosio::multi_index::item::item (\n    const multi_index * idx,\n    Constructor && c\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1multi__index_1_1item__ptr.html":{"url":"structeosio_1_1multi__index_1_1item__ptr.html","title":"struct item_ptr","keywords":"eosio::multi_index::item_ptr _item _primary_key _primary_itr item_ptr","body":"struct eosio::multi_index::item_ptr\nClass List > eosio :: multi_index :: item_ptr\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nstd::unique_ptr\n_item\n\n\nuint64_t\n_primary_key\n\n\nint32_t\n_primary_itr\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nitem_ptr (std::unique_ptr && i, uint64_t pk, int32_t pitr)\n\n\n\nvariable _item\nstd::unique_ptr eosio::multi_index::item_ptr::_item;\n\nvariable _primary_key\nuint64_t eosio::multi_index::item_ptr::_primary_key;\n\nvariable _primary_itr\nint32_t eosio::multi_index::item_ptr::_primary_itr;\n\nfunction item_ptr\neosio::multi_index::item_ptr::item_ptr (\n    std::unique_ptr && i,\n    uint64_t pk,\n    int32_t pitr\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"structeosio_1_1name.html":{"url":"structeosio_1_1name.html","title":"struct name","keywords":"eosio::name raw value name name name name length suffix operator raw operator bool write_as_string to_string char_to_value operator== operator != operator<","body":"struct eosio::name\nClass List > eosio :: name\nwraps a uint64_t to ensure it is only passed to methods that expect a Name More...\nPublic Types\n\n\n\nType\nName\n\n\n\n\nenum\nraw {  }\n\n\n\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint64_t\nvalue\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconstexpr\nname ()\n\n\nconstexpr\nname (uint64_t v)\n\n\nconstexpr\nname (name::raw r)\n\n\nconstexpr\nname (std::string_view str)\n\n\nconstexpr uint8_t\nlength () const\n\n\nconstexpr name\nsuffix () const\n\n\nconstexpr\noperator raw () const\n\n\nconstexpr\noperator bool () const\n\n\nchar *\nwrite_as_string (char * begin, char * end) const Writes the name as a string to the provided char buffer.\n\n\nstd::string\nto_string () const\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic constexpr uint8_t\nchar_to_value (char c) Converts a (eosio::name style) Base32 symbol into its corresponding value.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend constexpr bool\noperator==Equivalency operator.\n\n\nfriend constexpr bool\noperator !=Inverted equivalency operator.\n\n\nfriend constexpr bool\noperatorLess than operator.\n\n\n\nDetailed Description\nWraps a uint64_t to ensure it is only passed to methods that expect a Name and that no mathematical operations occur. It also enables specialization of print so that it is printed as a base32 string. \nenum raw\nenum eosio::name::raw {\n};\n\nvariable value\nuint64_t eosio::name::value;\n\nfunction name (1/4)\nconstexpr eosio::name::name ()\n\nfunction name (2/4)\nexplicit constexpr eosio::name::name (\n    uint64_t v\n)\n\nfunction name (3/4)\nexplicit constexpr eosio::name::name (\n    name::raw r\n)\n\nfunction name (4/4)\nexplicit constexpr eosio::name::name (\n    std::string_view str\n)\n\nfunction length\nconstexpr uint8_t eosio::name::length () const\n\nReturns the length of the name \nfunction suffix\nconstexpr name eosio::name::suffix () const\n\nReturns the suffix of the name \nfunction operator raw\nconstexpr eosio::name::operator raw () const\n\nfunction operator bool\nexplicit constexpr eosio::name::operator bool () const\n\nfunction write_as_string\nchar * eosio::name::write_as_string (\n    char * begin,\n    char * end\n) const\n\nWrites the name as a string to the provided char buffer. \nWrites the name as a string to the provided char buffer\nPrecondition:\nAppropriate Size Precondition: (begin + 13) \nPrecondition:\nValid Memory Region Precondition: The range [begin, end) must be a valid range of memory to write to. \nParameters:\n\nbegin - The start of the char buffer \nend - Just past the end of the char buffer \n\nReturns:\nchar* - Just past the end of the last character written (returns begin if the Appropriate Size Precondition is not satisfied) \nPost\nIf the Appropriate Size Precondition is satisfied, the range [begin, returned pointer) contains the string representation of the name. \nfunction to_string\nstd::string eosio::name::to_string () const\n\nfunction char_to_value\nstatic constexpr uint8_t eosio::name::char_to_value (\n    char c\n)\n\nConverts a (eosio::name style) Base32 symbol into its corresponding value. \nConverts a (eosio::name style) Base32 symbol into its corresponding value\nParameters:\n\nc - Character to be converted \n\nReturns:\nconstexpr char - Converted value \nfriend operator==\nfriend constexpr bool eosio::name::operator== (\n    const name & a,\n    const name & b\n)\n\nEquivalency operator. \nEquivalency operator. Returns true if a == b (are the same)\nReturns:\nboolean - true if both provided names are the same \nfriend operator !=\nfriend constexpr bool eosio::name::operator != (\n    const name & a,\n    const name & b\n)\n\nInverted equivalency operator. \nInverted equivalency operator. Returns true if a != b (are different)\nReturns:\nboolean - true if both provided names are not the same \nfriend operator\nfriend constexpr bool eosio::name::operator\nLess than operator. \nLess than operator. Returns true if a \nReturns:\nboolean - true if name a is less than b \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/name.hpp\n"},"structeosio_1_1onerror.html":{"url":"structeosio_1_1onerror.html","title":"struct onerror","keywords":"eosio::onerror sender_id sent_trx from_current_action unpack_sent_trx","body":"struct eosio::onerror\nClass List > eosio :: onerror\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint128_t\nsender_id\n\n\nstd::vector\nsent_trx\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic onerror\nfrom_current_action ()\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\ntransaction\nunpack_sent_trx () const\n\n\n\nvariable sender_id\nuint128_t eosio::onerror::sender_id;\n\nvariable sent_trx\nstd::vector eosio::onerror::sent_trx;\n\nfunction from_current_action\nstatic onerror eosio::onerror::from_current_action ()\n\nfunction unpack_sent_trx\ntransaction eosio::onerror::unpack_sent_trx () const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/transaction.hpp\n"},"structeosio_1_1permission__level.html":{"url":"structeosio_1_1permission__level.html","title":"struct permission_level","keywords":"eosio::permission_level actor permission permission_level permission_level operator==","body":"struct eosio::permission_level\nClass List > eosio :: permission_level\nPacked representation of a permission level (Authorization) More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nname\nactorName of the account who owns this permission.\n\n\nname\npermissionName of the permission.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\npermission_level (name a, name p) Construct a new permission level object.\n\n\n\npermission_level () Construct a new permission level object.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend constexpr bool\noperator==Check equality of two permissions.\n\n\n\nDetailed Description\nPacked representation of a permission level (Authorization) \nvariable actor\nname eosio::permission_level::actor;\n\nName of the account who owns this permission. \nName of the account who owns this permission \nvariable permission\nname eosio::permission_level::permission;\n\nName of the permission. \nName of the permission \nfunction permission_level (1/2)\neosio::permission_level::permission_level (\n    name a,\n    name p\n)\n\nConstruct a new permission level object. \nConstruct a new permission level object with actor name and permission name\nParameters:\n\na - Name of the account who owns this authorization \np - Name of the permission \n\nfunction permission_level (2/2)\neosio::permission_level::permission_level ()\n\nConstruct a new permission level object. \nDefault Constructor \nfriend operator==\nfriend constexpr bool eosio::permission_level::operator== (\n    const permission_level & a,\n    const permission_level & b\n)\n\nCheck equality of two permissions. \nCheck equality of two permissions\nParameters:\n\na - first permission to compare \nb - second permission to compare \n\nReturns:\ntrue if equal \nReturns:\nfalse if unequal \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structeosio_1_1producer__key.html":{"url":"structeosio_1_1producer__key.html","title":"struct producer_key","keywords":"eosio::producer_key producer_name block_signing_key operator<","body":"struct eosio::producer_key\nClass List > eosio :: producer_key\nMaps producer with its signing key. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nname\nproducer_nameName of the producer.\n\n\npublic_key\nblock_signing_keyBlock signing key used by this producer.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend constexpr bool\noperator\n\n\n\nDetailed Description\nMaps producer with its signing key, used for producer schedule \nvariable producer_name\nname eosio::producer_key::producer_name;\n\nName of the producer. \nName of the producer \nvariable block_signing_key\npublic_key eosio::producer_key::block_signing_key;\n\nBlock signing key used by this producer. \nBlock signing key used by this producer \nfriend operator\nfriend constexpr bool eosio::producer_key::operator\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/privileged.hpp\n"},"structeosio_1_1producer__schedule.html":{"url":"structeosio_1_1producer__schedule.html","title":"struct producer_schedule","keywords":"eosio::producer_schedule version producers","body":"struct eosio::producer_schedule\nClass List > eosio :: producer_schedule\nDefines both the order, account name, and signing keys of the active set of producers. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint32_t\nversionVersion number of the schedule.\n\n\nstd::vectorproducer_key >\nproducersList of producers for this schedule, including its signing key.\n\n\n\nDetailed Description\nDefines both the order, account name, and signing keys of the active set of producers. \nvariable version\nuint32_t eosio::producer_schedule::version;\n\nVersion number of the schedule. \nVersion number of the schedule. It is sequentially incrementing version number \nvariable producers\nstd::vector eosio::producer_schedule::producers;\n\nList of producers for this schedule, including its signing key. \nList of producers for this schedule, including its signing key \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/producer\\_schedule.hpp\n"},"structeosio_1_1public__key.html":{"url":"structeosio_1_1public__key.html","title":"struct public_key","keywords":"eosio::public_key type data operator== operator !=","body":"struct eosio::public_key\nClass List > eosio :: public_key\nEOSIO Public Key. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nunsigned_int\ntypeType of the public key.\n\n\nstd::array\ndataBytes of the public key.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==\n\n\nfriend bool\noperator !=\n\n\n\nDetailed Description\nEOSIO Public Key \nvariable type\nunsigned_int eosio::public_key::type;\n\nType of the public key. \nType of the public key, could be either K1 or R1 \nvariable data\nstd::array eosio::public_key::data;\n\nBytes of the public key. \nBytes of the public key \nfriend operator==\nfriend bool eosio::public_key::operator== (\n    const public_key & a,\n    const public_key & b\n)\n\nfriend operator !=\nfriend bool eosio::public_key::operator != (\n    const public_key & a,\n    const public_key & b\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/crypto.hpp\n"},"structeosio_1_1reflector.html":{"url":"structeosio_1_1reflector.html","title":"struct reflector","keywords":"eosio::reflector is_reflected is_enum","body":"struct eosio::reflector\nClass List > eosio :: reflector\nPublic Types\n\n\n\nType\nName\n\n\n\n\ntypedef std::false_type\nis_reflected\n\n\ntypedef std::false_type\nis_enum\n\n\n\ntypedef is_reflected\ntypedef std::false_type eosio::reflector::is_reflected;\n\ntypedef is_enum\ntypedef std::false_type eosio::reflector::is_enum;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/reflect.hpp\n"},"structeosio_1_1signature.html":{"url":"structeosio_1_1signature.html","title":"struct signature","keywords":"eosio::signature type data operator== operator !=","body":"struct eosio::signature\nClass List > eosio :: signature\nEOSIO Signature. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nunsigned_int\ntypeType of the signature.\n\n\nstd::array\ndataBytes of the signature.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==\n\n\nfriend bool\noperator !=\n\n\n\nDetailed Description\nEOSIO Signature \nvariable type\nunsigned_int eosio::signature::type;\n\nType of the signature. \nType of the signature, could be either K1 or R1 \nvariable data\nstd::array eosio::signature::data;\n\nBytes of the signature. \nBytes of the signature \nfriend operator==\nfriend bool eosio::signature::operator== (\n    const signature & a,\n    const signature & b\n)\n\nfriend operator !=\nfriend bool eosio::signature::operator != (\n    const signature & a,\n    const signature & b\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/crypto.hpp\n"},"classeosio_1_1singleton.html":{"url":"classeosio_1_1singleton.html","title":"class singleton","keywords":"eosio::singleton row singleton exists get get_or_default get_or_create set remove","body":"class eosio::singleton\nClass List > eosio :: singleton\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nrow\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nsingleton (name code, uint64_t scope) Construct a new singleton object.\n\n\nbool\nexists () Check if the singleton table exists.\n\n\nT\nget () Get the value stored inside the singleton table.\n\n\nT\nget_or_default (const T & def = T()) Get the value stored inside the singleton table or return the specified default value if it doesn't exist.\n\n\nT\nget_or_create (name bill_to_account, const T & def = T()) Get the value stored inside the singleton table or create a new one with the specified default value if it doesn't exist.\n\n\nvoid\nset (const T & value, name bill_to_account) Set new value to the singleton table.\n\n\nvoid\nremove () Remove the only data inside singleton table.\n\n\n\nDetailed Description\nThis wrapper uses a single table to store named objects various types.\nTemplate parameters:\n\nSingletonName - the name of this singleton variable \nT - the type of the singleton \n\nfunction singleton\neosio::singleton::singleton (\n    name code,\n    uint64_t scope\n)\n\nConstruct a new singleton object. \nConstruct a new singleton object given the table's owner and the scope\nParameters:\n\ncode - The table's owner \nscope - The scope of the table \n\nfunction exists\nbool eosio::singleton::exists ()\n\nCheck if the singleton table exists. \nCheck if the singleton table exists\nReturns:\ntrue - if exists \nReturns:\nfalse - otherwise \nfunction get\nT eosio::singleton::get ()\n\nGet the value stored inside the singleton table. \nGet the value stored inside the singleton table. Will throw an exception if it doesn't exist\nReturns:\nT - The value stored \nfunction get_or_default\nT eosio::singleton::get_or_default (\n    const T & def = T()\n)\n\nGet the value stored inside the singleton table or return the specified default value if it doesn't exist. \nGet the value stored inside the singleton table. If it doesn't exist, it will return the specified default value\nParameters:\n\ndef - The default value to be returned in case the data doesn't exist \n\nReturns:\nT - The value stored \nfunction get_or_create\nT eosio::singleton::get_or_create (\n    name bill_to_account,\n    const T & def = T()\n)\n\nGet the value stored inside the singleton table or create a new one with the specified default value if it doesn't exist. \nGet the value stored inside the singleton table. If it doesn't exist, it will create a new one with the specified default value\nParameters:\n\nbill_to_account - The account to bill for the newly created data if the data doesn't exist \ndef - The default value to be created in case the data doesn't exist \n\nReturns:\nT - The value stored \nfunction set\nvoid eosio::singleton::set (\n    const T & value,\n    name bill_to_account\n)\n\nSet new value to the singleton table. \nSet new value to the singleton table\nParameters:\n\nvalue - New value to be set \nbill_to_account - Account to pay for the new value \n\nfunction remove\nvoid eosio::singleton::remove ()\n\nRemove the only data inside singleton table. \nRemove the only data inside singleton table \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/singleton.hpp\n"},"structeosio_1_1singleton_1_1row.html":{"url":"structeosio_1_1singleton_1_1row.html","title":"struct row","keywords":"eosio::singleton::row value primary_key","body":"struct eosio::singleton::row\nClass List > eosio :: singleton :: row\nStructure of data inside the singleton table. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nT\nvalueValue to be stored inside the singleton table.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nuint64_t\nprimary_key () const Get primary key of the data.\n\n\n\nDetailed Description\nStructure of data inside the singleton table \nvariable value\nT eosio::singleton::row::value;\n\nValue to be stored inside the singleton table. \nValue to be stored inside the singleton table \nfunction primary_key\nuint64_t eosio::singleton::row::primary_key () const\n\nGet primary key of the data. \nGet primary key of the data\nReturns:\nuint64_t - Primary Key \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/singleton.hpp\n"},"classeosio_1_1symbol.html":{"url":"classeosio_1_1symbol.html","title":"class symbol","keywords":"eosio::symbol symbol symbol symbol symbol is_valid precision code raw operator bool print operator== operator != operator<","body":"class eosio::symbol\nClass List > eosio :: symbol\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconstexpr\nsymbol ()\n\n\nconstexpr\nsymbol (uint64_t raw)\n\n\nconstexpr\nsymbol (symbol_code sc, uint8_t precision)\n\n\nconstexpr\nsymbol (std::string_view ss, uint8_t precision)\n\n\nconstexpr bool\nis_valid () const\n\n\nconstexpr uint8_t\nprecision () const\n\n\nconstexpr symbol_code\ncode () const\n\n\nconstexpr uint64_t\nraw () const\n\n\nconstexpr\noperator bool () const\n\n\nvoid\nprint (bool show_precision = true) const Print the symbol\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend constexpr bool\noperator==Equivalency operator.\n\n\nfriend constexpr bool\noperator !=Inverted equivalency operator.\n\n\nfriend constexpr bool\noperatorLess than operator.\n\n\n\nfunction symbol\nconstexpr eosio::symbol::symbol ()\n\nfunction symbol\nexplicit constexpr eosio::symbol::symbol (\n    uint64_t raw\n)\n\nfunction symbol\nconstexpr eosio::symbol::symbol (\n    symbol_code sc,\n    uint8_t precision\n)\n\nfunction symbol\nconstexpr eosio::symbol::symbol (\n    std::string_view ss,\n    uint8_t precision\n)\n\nfunction is_valid\nconstexpr bool eosio::symbol::is_valid () const\n\nIs this symbol valid \nfunction precision\nconstexpr uint8_t eosio::symbol::precision () const\n\nThis symbol's precision \nfunction code\nconstexpr symbol_code eosio::symbol::code () const\n\nReturns representation of symbol name \nfunction raw\nconstexpr uint64_t eosio::symbol::raw () const\n\nReturns uint64_t repreresentation of the symbol \nfunction operator bool\nexplicit constexpr eosio::symbol::operator bool () const\n\nfunction print\nvoid eosio::symbol::print (\n    bool show_precision = true\n) const\n\nPrint the symbol \nPrint the symbol \nfriend operator==\nfriend constexpr bool eosio::symbol::operator== (\n    const symbol & a,\n    const symbol & b\n)\n\nEquivalency operator. \nEquivalency operator. Returns true if a == b (are the same)\nReturns:\nboolean - true if both provided symbols are the same \nfriend operator !=\nfriend constexpr bool eosio::symbol::operator != (\n    const symbol & a,\n    const symbol & b\n)\n\nInverted equivalency operator. \nInverted equivalency operator. Returns true if a != b (are different)\nReturns:\nboolean - true if both provided symbols are not the same \nfriend operator\nfriend constexpr bool eosio::symbol::operator\nLess than operator. \nLess than operator. Returns true if a \nReturns:\nboolean - true if symbol a is less than b \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/symbol.hpp\n"},"classeosio_1_1symbol__code.html":{"url":"classeosio_1_1symbol__code.html","title":"class symbol_code","keywords":"eosio::symbol_code symbol_code symbol_code symbol_code is_valid length raw operator bool write_as_string to_string operator== operator != operator<","body":"class eosio::symbol_code\nClass List > eosio :: symbol_code\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconstexpr\nsymbol_code ()\n\n\nconstexpr\nsymbol_code (uint64_t raw)\n\n\nconstexpr\nsymbol_code (std::string_view str)\n\n\nconstexpr bool\nis_valid () const\n\n\nconstexpr uint32_t\nlength () const\n\n\nconstexpr uint64_t\nraw () const\n\n\nconstexpr\noperator bool () const\n\n\nchar *\nwrite_as_string (char * begin, char * end) const Writes the symbol_code as a string to the provided char buffer.\n\n\nstd::string\nto_string () const\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend constexpr bool\noperator==Equivalency operator.\n\n\nfriend constexpr bool\noperator !=Inverted equivalency operator.\n\n\nfriend constexpr bool\noperatorLess than operator.\n\n\n\nfunction symbol_code\nconstexpr eosio::symbol_code::symbol_code ()\n\nfunction symbol_code\nexplicit constexpr eosio::symbol_code::symbol_code (\n    uint64_t raw\n)\n\nfunction symbol_code\nexplicit constexpr eosio::symbol_code::symbol_code (\n    std::string_view str\n)\n\nfunction is_valid\nconstexpr bool eosio::symbol_code::is_valid () const\n\nChecks if the symbol code is valid \nReturns:\ntrue - if symbol is valid \nfunction length\nconstexpr uint32_t eosio::symbol_code::length () const\n\nReturns the character length of the provided symbol\nReturns:\nlength - character length of the provided symbol \nfunction raw\nconstexpr uint64_t eosio::symbol_code::raw () const\n\nfunction operator bool\nexplicit constexpr eosio::symbol_code::operator bool () const\n\nfunction write_as_string\nchar * eosio::symbol_code::write_as_string (\n    char * begin,\n    char * end\n) const\n\nWrites the symbol_code as a string to the provided char buffer. \nWrites the symbol_code as a string to the provided char buffer\nPrecondition:\nAppropriate Size Precondition: (begin + 7) \nPrecondition:\nValid Memory Region Precondition: The range [begin, end) must be a valid range of memory to write to. \nParameters:\n\nbegin - The start of the char buffer \nend - Just past the end of the char buffer \n\nReturns:\nchar* - Just past the end of the last character written (returns begin if the Appropriate Size Precondition is not satisfied) \nPost\nIf the Appropriate Size Precondition is satisfied, the range [begin, returned pointer) contains the string representation of the symbol_code. \nfunction to_string\nstd::string eosio::symbol_code::to_string () const\n\nfriend operator==\nfriend constexpr bool eosio::symbol_code::operator== (\n    const symbol_code & a,\n    const symbol_code & b\n)\n\nEquivalency operator. \nEquivalency operator. Returns true if a == b (are the same)\nReturns:\nboolean - true if both provided symbol_codes are the same \nfriend operator !=\nfriend constexpr bool eosio::symbol_code::operator != (\n    const symbol_code & a,\n    const symbol_code & b\n)\n\nInverted equivalency operator. \nInverted equivalency operator. Returns true if a != b (are different)\nReturns:\nboolean - true if both provided symbol_codes are not the same \nfriend operator\nfriend constexpr bool eosio::symbol_code::operator\nLess than operator. \nLess than operator. Returns true if a \nReturns:\nboolean - true if symbol_code a is less than b \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/symbol.hpp\n"},"classeosio_1_1time__point.html":{"url":"classeosio_1_1time__point.html","title":"class time_point","keywords":"eosio::time_point elapsed time_point time_since_epoch sec_since_epoch operator > operator >= operator< operator<= operator== operator != operator+= operator -= operator+ operator+ operator - operator -","body":"class eosio::time_point\nClass List > eosio :: time_point\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nmicroseconds\nelapsed\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ntime_point (microseconds e = microseconds())\n\n\nconst microseconds &\ntime_since_epoch () const\n\n\nuint32_t\nsec_since_epoch () const\n\n\nbool\noperator > (const time_point & t) const\n\n\nbool\noperator >= (const time_point & t) const\n\n\nbool\noperator (const time_point & t) const\n\n\nbool\noperator (const time_point & t) const\n\n\nbool\noperator== (const time_point & t) const\n\n\nbool\noperator != (const time_point & t) const\n\n\ntime_point &\noperator+= (const microseconds & m)\n\n\ntime_point &\noperator -= (const microseconds & m)\n\n\ntime_point\noperator+ (const microseconds & m) const\n\n\ntime_point\noperator+ (const time_point & m) const\n\n\ntime_point\noperator - (const microseconds & m) const\n\n\nmicroseconds\noperator - (const time_point & m) const\n\n\n\nvariable elapsed\nmicroseconds eosio::time_point::elapsed;\n\nfunction time_point\nexplicit eosio::time_point::time_point (\n    microseconds e = microseconds()\n)\n\nfunction time_since_epoch\nconst microseconds & eosio::time_point::time_since_epoch () const\n\nfunction sec_since_epoch\nuint32_t eosio::time_point::sec_since_epoch () const\n\nfunction operator >\nbool eosio::time_point::operator > (\n    const time_point & t\n) const\n\nfunction operator >=\nbool eosio::time_point::operator >= (\n    const time_point & t\n) const\n\nfunction operator\nbool eosio::time_point::operator\nfunction operator\nbool eosio::time_point::operator\nfunction operator==\nbool eosio::time_point::operator== (\n    const time_point & t\n) const\n\nfunction operator !=\nbool eosio::time_point::operator != (\n    const time_point & t\n) const\n\nfunction operator+=\ntime_point & eosio::time_point::operator+= (\n    const microseconds & m\n)\n\nfunction operator -=\ntime_point & eosio::time_point::operator -= (\n    const microseconds & m\n)\n\nfunction operator+ (1/2)\ntime_point eosio::time_point::operator+ (\n    const microseconds & m\n) const\n\nfunction operator+ (2/2)\ntime_point eosio::time_point::operator+ (\n    const time_point & m\n) const\n\nfunction operator - (1/2)\ntime_point eosio::time_point::operator - (\n    const microseconds & m\n) const\n\nfunction operator - (2/2)\nmicroseconds eosio::time_point::operator - (\n    const time_point & m\n) const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/time.hpp\n"},"classeosio_1_1time__point__sec.html":{"url":"classeosio_1_1time__point__sec.html","title":"class time_point_sec","keywords":"eosio::time_point_sec utc_seconds time_point_sec time_point_sec time_point_sec operator time_point sec_since_epoch operator= operator+= operator+= operator+= operator -= operator -= operator -= operator+ operator - maximum min operator< operator > operator<= operator >= operator== operator != operator+ operator - operator - operator -","body":"class eosio::time_point_sec\nClass List > eosio :: time_point_sec\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint32_t\nutc_seconds\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ntime_point_sec ()\n\n\n\ntime_point_sec (uint32_t seconds)\n\n\n\ntime_point_sec (const time_point & t)\n\n\n\noperator time_point () const\n\n\nuint32_t\nsec_since_epoch () const\n\n\ntime_point_sec\noperator= (const eosio::time_point & t)\n\n\ntime_point_sec &\noperator+= (uint32_t m)\n\n\ntime_point_sec &\noperator+= (microseconds m)\n\n\ntime_point_sec &\noperator+= (time_point_sec m)\n\n\ntime_point_sec &\noperator -= (uint32_t m)\n\n\ntime_point_sec &\noperator -= (microseconds m)\n\n\ntime_point_sec &\noperator -= (time_point_sec m)\n\n\ntime_point_sec\noperator+ (uint32_t offset) const\n\n\ntime_point_sec\noperator - (uint32_t offset) const\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic time_point_sec\nmaximum ()\n\n\nstatic time_point_sec\nmin ()\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator\n\n\nfriend bool\noperator >\n\n\nfriend bool\noperator\n\n\nfriend bool\noperator >=\n\n\nfriend bool\noperator==\n\n\nfriend bool\noperator !=\n\n\nfriend time_point\noperator+\n\n\nfriend time_point\noperator -\n\n\nfriend microseconds\noperator -\n\n\nfriend microseconds\noperator -\n\n\n\nDetailed Description\nA lower resolution time_point accurate only to seconds from 1970 \nvariable utc_seconds\nuint32_t eosio::time_point_sec::utc_seconds;\n\nfunction time_point_sec (1/3)\neosio::time_point_sec::time_point_sec ()\n\nfunction time_point_sec (2/3)\nexplicit eosio::time_point_sec::time_point_sec (\n    uint32_t seconds\n)\n\nfunction time_point_sec (3/3)\neosio::time_point_sec::time_point_sec (\n    const time_point & t\n)\n\nfunction operator time_point\neosio::time_point_sec::operator time_point () const\n\nfunction sec_since_epoch\nuint32_t eosio::time_point_sec::sec_since_epoch () const\n\nfunction operator=\ntime_point_sec eosio::time_point_sec::operator= (\n    const eosio::time_point & t\n)\n\nfunction operator+= (1/3)\ntime_point_sec & eosio::time_point_sec::operator+= (\n    uint32_t m\n)\n\nfunction operator+= (2/3)\ntime_point_sec & eosio::time_point_sec::operator+= (\n    microseconds m\n)\n\nfunction operator+= (3/3)\ntime_point_sec & eosio::time_point_sec::operator+= (\n    time_point_sec m\n)\n\nfunction operator -= (1/3)\ntime_point_sec & eosio::time_point_sec::operator -= (\n    uint32_t m\n)\n\nfunction operator -= (2/3)\ntime_point_sec & eosio::time_point_sec::operator -= (\n    microseconds m\n)\n\nfunction operator -= (3/3)\ntime_point_sec & eosio::time_point_sec::operator -= (\n    time_point_sec m\n)\n\nfunction operator+ (1/2)\ntime_point_sec eosio::time_point_sec::operator+ (\n    uint32_t offset\n) const\n\nfunction operator - (1/4)\ntime_point_sec eosio::time_point_sec::operator - (\n    uint32_t offset\n) const\n\nfunction maximum\nstatic time_point_sec eosio::time_point_sec::maximum ()\n\nfunction min\nstatic time_point_sec eosio::time_point_sec::min ()\n\nfriend operator\nfriend bool eosio::time_point_sec::operator\nfriend operator >\nfriend bool eosio::time_point_sec::operator > (\n    const time_point_sec & a,\n    const time_point_sec & b\n)\n\nfriend operator\nfriend bool eosio::time_point_sec::operator\nfriend operator >=\nfriend bool eosio::time_point_sec::operator >= (\n    const time_point_sec & a,\n    const time_point_sec & b\n)\n\nfriend operator==\nfriend bool eosio::time_point_sec::operator== (\n    const time_point_sec & a,\n    const time_point_sec & b\n)\n\nfriend operator !=\nfriend bool eosio::time_point_sec::operator != (\n    const time_point_sec & a,\n    const time_point_sec & b\n)\n\nfriend operator+ (2/2)\nfriend time_point eosio::time_point_sec::operator+ (\n    const time_point_sec & t,\n    const microseconds & m\n)\n\nfriend operator - (2/4)\nfriend time_point eosio::time_point_sec::operator - (\n    const time_point_sec & t,\n    const microseconds & m\n)\n\nfriend operator - (3/4)\nfriend microseconds eosio::time_point_sec::operator - (\n    const time_point_sec & t,\n    const time_point_sec & m\n)\n\nfriend operator - (4/4)\nfriend microseconds eosio::time_point_sec::operator - (\n    const time_point & t,\n    const time_point_sec & m\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/time.hpp\n"},"classeosio_1_1transaction.html":{"url":"classeosio_1_1transaction.html","title":"class transaction","keywords":"eosio::transaction context_free_actions actions transaction_extensions transaction send","body":"class eosio::transaction\nClass List > eosio :: transaction\nInherits the following classes: eosio::transaction_header\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nstd::vectoraction >\ncontext_free_actions\n\n\nstd::vectoraction >\nactions\n\n\nextensions_type\ntransaction_extensions\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ntransaction (time_point_sec exp = time_point_sec(now()+60))\n\n\nvoid\nsend (const uint128_t & sender_id, name payer, bool replace_existing = false) const\n\n\n\nvariable context_free_actions\nstd::vector eosio::transaction::context_free_actions;\n\nvariable actions\nstd::vector eosio::transaction::actions;\n\nvariable transaction_extensions\nextensions_type eosio::transaction::transaction_extensions;\n\nfunction transaction\neosio::transaction::transaction (\n    time_point_sec exp = time_point_sec(now()+60)\n)\n\nfunction send\nvoid eosio::transaction::send (\n    const uint128_t & sender_id,\n    name payer,\n    bool replace_existing = false\n) const\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/transaction.hpp\n"},"classeosio_1_1transaction__header.html":{"url":"classeosio_1_1transaction__header.html","title":"class transaction_header","keywords":"eosio::transaction_header expiration ref_block_num ref_block_prefix max_net_usage_words max_cpu_usage_ms delay_sec transaction_header","body":"class eosio::transaction_header\nClass List > eosio :: transaction_header\nInherited by the following classes: eosio::transaction\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\ntime_point_sec\nexpiration\n\n\nuint16_t\nref_block_num\n\n\nuint32_t\nref_block_prefix\n\n\nunsigned_int\nmax_net_usage_words\n\n\nuint8_t\nmax_cpu_usage_msnumber of 8 byte words this transaction can serialize into after compressions\n\n\nunsigned_int\ndelay_secnumber of CPU usage units to bill transaction for\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\ntransaction_header (time_point_sec exp = time_point_sec(now()+60))\n\n\n\nvariable expiration\ntime_point_sec eosio::transaction_header::expiration;\n\nvariable ref_block_num\nuint16_t eosio::transaction_header::ref_block_num;\n\nvariable ref_block_prefix\nuint32_t eosio::transaction_header::ref_block_prefix;\n\nvariable max_net_usage_words\nunsigned_int eosio::transaction_header::max_net_usage_words;\n\nvariable max_cpu_usage_ms\nuint8_t eosio::transaction_header::max_cpu_usage_ms;\n\nnumber of 8 byte words this transaction can serialize into after compressions \nvariable delay_sec\nunsigned_int eosio::transaction_header::delay_sec;\n\nnumber of CPU usage units to bill transaction for \nfunction transaction_header\neosio::transaction_header::transaction_header (\n    time_point_sec exp = time_point_sec(now()+60)\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/transaction.hpp\n"},"structeosio_1_1variant__action__wrapper.html":{"url":"structeosio_1_1variant__action__wrapper.html","title":"struct variant_action_wrapper","keywords":"eosio::variant_action_wrapper action_name code_name permissions variant_action_wrapper variant_action_wrapper variant_action_wrapper variant_action_wrapper to_action send send_context_free get_mem_ptr","body":"struct eosio::variant_action_wrapper\nClass List > eosio :: variant_action_wrapper\nPublic Static Attributes\n\n\n\nType\nName\n\n\n\n\nstatic constexpr eosio::name\naction_name\n\n\n\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\neosio::name\ncode_name\n\n\nstd::vectoreosio::permission_level >\npermissions\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\nconstexpr\nvariant_action_wrapper (Code && code, std::vectoreosio::permission_level > && perms)\n\n\nconstexpr\nvariant_action_wrapper (Code && code, const std::vectoreosio::permission_level > & perms)\n\n\nconstexpr\nvariant_action_wrapper (Code && code, eosio::permission_level && perm)\n\n\nconstexpr\nvariant_action_wrapper (Code && code, const eosio::permission_level & perm)\n\n\naction\nto_action (Args &&... args) const\n\n\nvoid\nsend (Args &&... args) const\n\n\nvoid\nsend_context_free (Args &&... args) const\n\n\n\nPublic Static Functions\n\n\n\nType\nName\n\n\n\n\nstatic constexpr auto\nget_mem_ptr ()\n\n\n\nvariable action_name\nconstexpr eosio::name eosio::variant_action_wrapper::action_name;\n\nvariable code_name\neosio::name eosio::variant_action_wrapper::code_name;\n\nvariable permissions\nstd::vector eosio::variant_action_wrapper::permissions;\n\nfunction variant_action_wrapper (1/4)\nconstexpr eosio::variant_action_wrapper::variant_action_wrapper (\n    Code && code,\n    std::vector && perms\n)\n\nfunction variant_action_wrapper (2/4)\nconstexpr eosio::variant_action_wrapper::variant_action_wrapper (\n    Code && code,\n    const std::vector & perms\n)\n\nfunction variant_action_wrapper (3/4)\nconstexpr eosio::variant_action_wrapper::variant_action_wrapper (\n    Code && code,\n    eosio::permission_level && perm\n)\n\nfunction variant_action_wrapper (4/4)\nconstexpr eosio::variant_action_wrapper::variant_action_wrapper (\n    Code && code,\n    const eosio::permission_level & perm\n)\n\nfunction to_action\naction eosio::variant_action_wrapper::to_action (\n    Args &&... args\n) const\n\nfunction send\nvoid eosio::variant_action_wrapper::send (\n    Args &&... args\n) const\n\nfunction send_context_free\nvoid eosio::variant_action_wrapper::send_context_free (\n    Args &&... args\n) const\n\nfunction get_mem_ptr\nstatic constexpr auto eosio::variant_action_wrapper::get_mem_ptr ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"structsigned__int.html":{"url":"structsigned__int.html","title":"struct signed_int","keywords":"signed_int value signed_int operator int32_t operator= operator++ operator++ operator== operator== operator== operator!= operator!= operator!= operator< operator< operator< operator>= operator>= operator>= operator<< operator >>","body":"struct signed_int\nClass List > signed_int\nVariable Length Signed Integer. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nint32_t\nvalueContained value.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nsigned_int (int32_t v = 0) Construct a new signed int object.\n\n\n\noperator int32_t () const Conversion operator.\n\n\nsigned_int &\noperator= (const T & v) Assignment operator.\n\n\nsigned_int\noperator++ (int) Increment operator.\n\n\nsigned_int &\noperator++ () Increment operator.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==Equality Operator.\n\n\nfriend bool\noperator==Equality Operator.\n\n\nfriend bool\noperator==Equality Operator.\n\n\nfriend bool\noperator!=Inequality Operator.\n\n\nfriend bool\noperator!=Equality Operator.\n\n\nfriend bool\noperator!=Inequality Operator.\n\n\nfriend bool\noperatorLess than Operator.\n\n\nfriend bool\noperatorLess than Operator.\n\n\nfriend bool\noperatorLess than Operator.\n\n\nfriend bool\noperator>=Greater or Equal to Operator.\n\n\nfriend bool\noperator>=Greater or Equal to Operator.\n\n\nfriend bool\noperator>=Greater or Equal to Operator.\n\n\nfriend DataStream &\noperatorSerialize an signed_int object with as few bytes as possible.\n\n\nfriend DataStream &\noperator >>Deserialize an signed_int object.\n\n\n\nDetailed Description\nVariable Length Signed Integer. This provides more efficient serialization of 32-bit signed int. It serializes a 32-bit signed integer in as few bytes as possible. varint32 is signed and uses Zig-Zag encoding \nvariable value\nint32_t signed_int::value;\n\nContained value. \nContained value \nfunction signed_int\nsigned_int::signed_int (\n    int32_t v = 0\n)\n\nConstruct a new signed int object. \nConstruct a new signed int object\nParameters:\n\nv - Source \n\nfunction operator int32_t\nsigned_int::operator int32_t () const\n\nConversion operator. \nConvert signed_int to primitive 32-bit signed integer \nReturns:\nint32_t - The converted result \nfunction operator=\nsigned_int & signed_int::operator= (\n    const T & v\n)\n\nAssignment operator. \nAssign an object that is convertible to int32_t\nTemplate parameters:\n\nT - Type of the assignment object \n\nParameters:\n\nv - Source \n\nReturns:\nunsigned_int& - Reference to this object \nfunction operator++ (1/2)\nsigned_int signed_int::operator++ (\n    int \n)\n\nIncrement operator. \nIncrement operator\nReturns:\nsigned_int - New signed_int with value incremented from the current object's value \nfunction operator++ (2/2)\nsigned_int & signed_int::operator++ ()\n\nIncrement operator. \nIncrement operator\nReturns:\nsigned_int - Reference to current object \nfriend operator== (1/3)\nfriend bool signed_int::operator== (\n    const signed_int & i,\n    const int32_t & v\n)\n\nEquality Operator. \nCheck equality between a signed_int object and 32-bit integer\nParameters:\n\ni - signed_int object to compare \nv - 32-bit integer to compare \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfriend operator== (2/3)\nfriend bool signed_int::operator== (\n    const int32_t & i,\n    const signed_int & v\n)\n\nEquality Operator. \nCheck equality between 32-bit integer and a signed_int object\nParameters:\n\ni - 32-bit integer to compare \nv - signed_int object to compare \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfriend operator== (3/3)\nfriend bool signed_int::operator== (\n    const signed_int & i,\n    const signed_int & v\n)\n\nEquality Operator. \nCheck equality between two signed_int objects\nParameters:\n\ni - First signed_int object to compare \nv - Second signed_int object to compare \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfriend operator!= (1/3)\nfriend bool signed_int::operator!= (\n    const signed_int & i,\n    const int32_t & v\n)\n\nInequality Operator. \nCheck inequality between a signed_int object and 32-bit integer\nParameters:\n\ni - signed_int object to compare \nv - 32-bit integer to compare \n\nReturns:\ntrue - if inequal \nReturns:\nfalse - otherwise \nfriend operator!= (2/3)\nfriend bool signed_int::operator!= (\n    const int32_t & i,\n    const signed_int & v\n)\n\nEquality Operator. \nCheck inequality between 32-bit integer and a signed_int object\nParameters:\n\ni - 32-bit integer to compare \nv - signed_int object to compare \n\nReturns:\ntrue - if unequal \nReturns:\nfalse - otherwise \nfriend operator!= (3/3)\nfriend bool signed_int::operator!= (\n    const signed_int & i,\n    const signed_int & v\n)\n\nInequality Operator. \nCheck inequality between two signed_int objects\nParameters:\n\ni - First signed_int object to compare \nv - Second signed_int object to compare \n\nReturns:\ntrue - if inequal \nReturns:\nfalse - otherwise \nfriend operator\nfriend bool signed_int::operator\nLess than Operator. \nCheck if the given signed_int object is less than the given 32-bit integer\nParameters:\n\ni - signed_int object to compare \nv - 32-bit integer to compare \n\nReturns:\ntrue - if i less than v \nReturns:\nfalse - otherwise \nfriend operator\nfriend bool signed_int::operator\nLess than Operator. \nCheck if the given 32-bit integer is less than the given signed_int object\nParameters:\n\ni - 32-bit integer to compare \nv - signed_int object to compare \n\nReturns:\ntrue - if i less than v \nReturns:\nfalse - otherwise \nfriend operator\nfriend bool signed_int::operator\nLess than Operator. \nCheck if the first given signed_int is less than the second given signed_int object\nParameters:\n\ni - First signed_int object to compare \nv - Second signed_int object to compare \n\nReturns:\ntrue - if i less than v \nReturns:\nfalse - otherwise \nfriend operator>= (1/3)\nfriend bool signed_int::operator>= (\n    const signed_int & i,\n    const int32_t & v\n)\n\nGreater or Equal to Operator. \nCheck if the given signed_int object is greater or equal to the given 32-bit integer\nParameters:\n\ni - signed_int object to compare \nv - 32-bit integer to compare \n\nReturns:\ntrue - if i is greater or equal to v \nReturns:\nfalse - otherwise \nfriend operator>= (2/3)\nfriend bool signed_int::operator>= (\n    const int32_t & i,\n    const signed_int & v\n)\n\nGreater or Equal to Operator. \nCheck if the given 32-bit integer is greater or equal to the given signed_int object\nParameters:\n\ni - 32-bit integer to compare \nv - signed_int object to compare \n\nReturns:\ntrue - if i is greater or equal to v \nReturns:\nfalse - otherwise \nfriend operator>= (3/3)\nfriend bool signed_int::operator>= (\n    const signed_int & i,\n    const signed_int & v\n)\n\nGreater or Equal to Operator. \nCheck if the first given signed_int is greater or equal to the second given signed_int object\nParameters:\n\ni - First signed_int object to compare \nv - Second signed_int object to compare \n\nReturns:\ntrue - if i is greater or equal to v \nReturns:\nfalse - otherwise \nfriend operator\nfriend DataStream & signed_int::operator\nSerialize an signed_int object with as few bytes as possible. \nSerialize an signed_int object with as few bytes as possible\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfriend operator >>\nfriend DataStream & signed_int::operator >> (\n    DataStream & ds,\n    signed_int & vi\n)\n\nDeserialize an signed_int object. \nDeserialize an signed_int object\nParameters:\n\nds - The stream to read \nvi - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/varint.hpp\n"},"structunsigned__int.html":{"url":"structunsigned__int.html","title":"struct unsigned_int","keywords":"unsigned_int value unsigned_int unsigned_int operator T operator= operator== operator== operator== operator!= operator!= operator!= operator< operator< operator< operator>= operator>= operator>= operator<< operator >>","body":"struct unsigned_int\nClass List > unsigned_int\nVariable Length Unsigned Integer. More...\nPublic Attributes\n\n\n\nType\nName\n\n\n\n\nuint32_t\nvalueContained value.\n\n\n\nPublic Functions\n\n\n\nType\nName\n\n\n\n\n\nunsigned_int (uint32_t v = 0) Construct a new unsigned int object.\n\n\n\nunsigned_int (T v) Construct a new unsigned int object.\n\n\n\noperator T () const Conversion Operator.\n\n\nunsigned_int &\noperator= (uint32_t v) Assignment operator.\n\n\n\nFriends\n\n\n\nType\nName\n\n\n\n\nfriend bool\noperator==Equality Operator.\n\n\nfriend bool\noperator==Equality Operator.\n\n\nfriend bool\noperator==Equality Operator.\n\n\nfriend bool\noperator!=Inequality Operator.\n\n\nfriend bool\noperator!=Equality Operator.\n\n\nfriend bool\noperator!=Inequality Operator.\n\n\nfriend bool\noperatorLess than Operator.\n\n\nfriend bool\noperatorLess than Operator.\n\n\nfriend bool\noperatorLess than Operator.\n\n\nfriend bool\noperator>=Greater or Equal to Operator.\n\n\nfriend bool\noperator>=Greater or Equal to Operator.\n\n\nfriend bool\noperator>=Greater or Equal to Operator.\n\n\nfriend DataStream &\noperatorSerialize an unsigned_int object with as few bytes as possible.\n\n\nfriend DataStream &\noperator >>Deserialize an unsigned_int object.\n\n\n\nDetailed Description\nVariable Length Unsigned Integer. This provides more efficient serialization of 32-bit unsigned int. It serialuzes a 32-bit unsigned integer in as few bytes as possible varuint32 is unsigned and uses VLQ or Base-128 encoding \nvariable value\nuint32_t unsigned_int::value;\n\nContained value. \nContained value \nfunction unsigned_int (1/2)\nunsigned_int::unsigned_int (\n    uint32_t v = 0\n)\n\nConstruct a new unsigned int object. \nConstruct a new unsigned int object\nParameters:\n\nv - Source \n\nfunction unsigned_int (2/2)\nunsigned_int::unsigned_int (\n    T v\n)\n\nConstruct a new unsigned int object. \nConstruct a new unsigned int object from a type that is convertible to uint32_t\nTemplate parameters:\n\nT - Type of the source \n\nParameters:\n\nv - Source \n\nPrecondition:\nT must be convertible to uint32_t \nfunction operator T\nunsigned_int::operator T () const\n\nConversion Operator. \nConvert unsigned_int as T \nTemplate parameters:\n\nT - Target type of conversion \n\nReturns:\nT - Converted target \nfunction operator=\nunsigned_int & unsigned_int::operator= (\n    uint32_t v\n)\n\nAssignment operator. \nAssign 32-bit unsigned integer\nParameters:\n\nv - Soruce \n\nReturns:\nunsigned_int& - Reference to this object \nfriend operator== (1/3)\nfriend bool unsigned_int::operator== (\n    const unsigned_int & i,\n    const uint32_t & v\n)\n\nEquality Operator. \nCheck equality between a unsigned_int object and 32-bit unsigned integer\nParameters:\n\ni - unsigned_int object to compare \nv - 32-bit unsigned integer to compare \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfriend operator== (2/3)\nfriend bool unsigned_int::operator== (\n    const uint32_t & i,\n    const unsigned_int & v\n)\n\nEquality Operator. \nCheck equality between 32-bit unsigned integer and a unsigned_int object\nParameters:\n\ni - 32-bit unsigned integer to compare \nv - unsigned_int object to compare \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfriend operator== (3/3)\nfriend bool unsigned_int::operator== (\n    const unsigned_int & i,\n    const unsigned_int & v\n)\n\nEquality Operator. \nCheck equality between two unsigned_int objects\nParameters:\n\ni - First unsigned_int object to compare \nv - Second unsigned_int object to compare \n\nReturns:\ntrue - if equal \nReturns:\nfalse - otherwise \nfriend operator!= (1/3)\nfriend bool unsigned_int::operator!= (\n    const unsigned_int & i,\n    const uint32_t & v\n)\n\nInequality Operator. \nCheck inequality between a unsigned_int object and 32-bit unsigned integer\nParameters:\n\ni - unsigned_int object to compare \nv - 32-bit unsigned integer to compare \n\nReturns:\ntrue - if inequal \nReturns:\nfalse - otherwise \nfriend operator!= (2/3)\nfriend bool unsigned_int::operator!= (\n    const uint32_t & i,\n    const unsigned_int & v\n)\n\nEquality Operator. \nCheck inequality between 32-bit unsigned integer and a unsigned_int object\nParameters:\n\ni - 32-bit unsigned integer to compare \nv - unsigned_int object to compare \n\nReturns:\ntrue - if unequal \nReturns:\nfalse - otherwise \nfriend operator!= (3/3)\nfriend bool unsigned_int::operator!= (\n    const unsigned_int & i,\n    const unsigned_int & v\n)\n\nInequality Operator. \nCheck inequality between two unsigned_int objects\nParameters:\n\ni - First unsigned_int object to compare \nv - Second unsigned_int object to compare \n\nReturns:\ntrue - if inequal \nReturns:\nfalse - otherwise \nfriend operator\nfriend bool unsigned_int::operator\nLess than Operator. \nCheck if the given unsigned_int object is less than the given 32-bit unsigned integer\nParameters:\n\ni - unsigned_int object to compare \nv - 32-bit unsigned integer to compare \n\nReturns:\ntrue - if i less than v \nReturns:\nfalse - otherwise \nfriend operator\nfriend bool unsigned_int::operator\nLess than Operator. \nCheck if the given 32-bit unsigned integer is less than the given unsigned_int object\nParameters:\n\ni - 32-bit unsigned integer to compare \nv - unsigned_int object to compare \n\nReturns:\ntrue - if i less than v \nReturns:\nfalse - otherwise \nfriend operator\nfriend bool unsigned_int::operator\nLess than Operator. \nCheck if the first given unsigned_int is less than the second given unsigned_int object\nParameters:\n\ni - First unsigned_int object to compare \nv - Second unsigned_int object to compare \n\nReturns:\ntrue - if i less than v \nReturns:\nfalse - otherwise \nfriend operator>= (1/3)\nfriend bool unsigned_int::operator>= (\n    const unsigned_int & i,\n    const uint32_t & v\n)\n\nGreater or Equal to Operator. \nCheck if the given unsigned_int object is greater or equal to the given 32-bit unsigned integer\nParameters:\n\ni - unsigned_int object to compare \nv - 32-bit unsigned integer to compare \n\nReturns:\ntrue - if i is greater or equal to v \nReturns:\nfalse - otherwise \nfriend operator>= (2/3)\nfriend bool unsigned_int::operator>= (\n    const uint32_t & i,\n    const unsigned_int & v\n)\n\nGreater or Equal to Operator. \nCheck if the given 32-bit unsigned integer is greater or equal to the given unsigned_int object\nParameters:\n\ni - 32-bit unsigned integer to compare \nv - unsigned_int object to compare \n\nReturns:\ntrue - if i is greater or equal to v \nReturns:\nfalse - otherwise \nfriend operator>= (3/3)\nfriend bool unsigned_int::operator>= (\n    const unsigned_int & i,\n    const unsigned_int & v\n)\n\nGreater or Equal to Operator. \nCheck if the first given unsigned_int is greater or equal to the second given unsigned_int object\nParameters:\n\ni - First unsigned_int object to compare \nv - Second unsigned_int object to compare \n\nReturns:\ntrue - if i is greater or equal to v \nReturns:\nfalse - otherwise \nfriend operator\nfriend DataStream & unsigned_int::operator\nSerialize an unsigned_int object with as few bytes as possible. \nSerialize an unsigned_int object with as few bytes as possible\nParameters:\n\nds - The stream to write \nv - The value to serialize \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \nfriend operator >>\nfriend DataStream & unsigned_int::operator >> (\n    DataStream & ds,\n    unsigned_int & vi\n)\n\nDeserialize an unsigned_int object. \nDeserialize an unsigned_int object\nParameters:\n\nds - The stream to read \nvi - The destination for deserialized value \n\nTemplate parameters:\n\nDataStream - Type of datastream \n\nReturns:\nDataStream& - Reference to the datastream \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/varint.hpp\n"},"files.html":{"url":"files.html","title":"Files","keywords":"action.h action.hpp asset.hpp binary_extension.hpp chain.h compiler_builtins.h contract.hpp crypto.cpp crypto.h crypto.hpp datastream.hpp db.h dispatcher.hpp eosio.hpp eosiolib.cpp fixed_bytes.hpp fixed_key.hpp fixedpoint.hpp ignore.hpp memory.h memory.hpp multi_index.hpp name.hpp permission.h permission.hpp print.h print.hpp privileged.h privileged.hpp producer_schedule.hpp public_key.hpp reflect.hpp serialize.hpp singleton.hpp stdlib.hpp symbol.hpp system.h time.hpp transaction.h transaction.hpp types.h varint.hpp eosiolib libraries eosio.cdt in","body":"File List\nHere is a list of all documented files with brief descriptions:\n\nin/\neosio.cdt/\nlibraries/\neosiolib/\naction.h\naction.hpp\nasset.hpp\nbinary_extension.hpp\nchain.h\ncompiler_builtins.h\ncontract.hpp\ncrypto.cpp\ncrypto.h\ncrypto.hpp\ndatastream.hpp\ndb.h\ndispatcher.hpp\neosio.hpp\neosiolib.cpp\nfixed_bytes.hpp\nfixed_key.hpp\nfixedpoint.hpp\nignore.hpp\nmemory.h\nmemory.hpp\nmulti_index.hpp\nname.hpp\npermission.h\npermission.hpp\nprint.h\nprint.hpp\nprivileged.h\nprivileged.hpp\nproducer_schedule.hpp\npublic_key.hpp\nreflect.hpp\nserialize.hpp\nsingleton.hpp\nstdlib.hpp\nsymbol.hpp\nsystem.h\ntime.hpp\ntransaction.h\ntransaction.hpp\ntypes.h\nvarint.hpp\n\n\n\n\n\n\n\n\n\n"},"dir_f4c96640472432942b3fc30ed441ca04.html":{"url":"dir_f4c96640472432942b3fc30ed441ca04.html","title":"in/","keywords":"in/eosio.cdt","body":"in Directory Reference\nFiles\n\nin/eosio.cdt/\n\n"},"dir_45e00aafcb063b38cae24fc05c5e0d54.html":{"url":"dir_45e00aafcb063b38cae24fc05c5e0d54.html","title":"eosio.cdt/","keywords":"in/eosio.cdt/libraries","body":"in/eosio.cdt Directory Reference\nFiles\n\nin/eosio.cdt/libraries/\n\n"},"dir_aec5bb64676d64f4f6eae682e441225e.html":{"url":"dir_aec5bb64676d64f4f6eae682e441225e.html","title":"libraries/","keywords":"in/eosio.cdt/libraries/eosiolib","body":"in/eosio.cdt/libraries Directory Reference\nFiles\n\nin/eosio.cdt/libraries/eosiolib/\n\n"},"dir_1134efb280eb12b0569be244927e10ce.html":{"url":"dir_1134efb280eb12b0569be244927e10ce.html","title":"eosiolib/","keywords":"action.h action.hpp asset.hpp binary_extension.hpp chain.h compiler_builtins.h contract.hpp crypto.cpp crypto.h crypto.hpp datastream.hpp db.h dispatcher.hpp eosio.hpp eosiolib.cpp fixed_bytes.hpp fixed_key.hpp fixedpoint.hpp ignore.hpp memory.h memory.hpp multi_index.hpp name.hpp permission.h permission.hpp print.h print.hpp privileged.h privileged.hpp producer_schedule.hpp public_key.hpp reflect.hpp serialize.hpp singleton.hpp stdlib.hpp symbol.hpp system.h time.hpp transaction.h transaction.hpp types.h varint.hpp","body":"in/eosio.cdt/libraries/eosiolib Directory Reference\nFiles\n\naction.h\naction.hpp\nasset.hpp\nbinary_extension.hpp\nchain.h\ncompiler_builtins.h\ncontract.hpp\ncrypto.cpp\ncrypto.h\ncrypto.hpp\ndatastream.hpp\ndb.h\ndispatcher.hpp\neosio.hpp\neosiolib.cpp\nfixed_bytes.hpp\nfixed_key.hpp\nfixedpoint.hpp\nignore.hpp\nmemory.h\nmemory.hpp\nmulti_index.hpp\nname.hpp\npermission.h\npermission.hpp\nprint.h\nprint.hpp\nprivileged.h\nprivileged.hpp\nproducer_schedule.hpp\npublic_key.hpp\nreflect.hpp\nserialize.hpp\nsingleton.hpp\nstdlib.hpp\nsymbol.hpp\nsystem.h\ntime.hpp\ntransaction.h\ntransaction.hpp\ntypes.h\nvarint.hpp\n\n"},"action_8h.html":{"url":"action_8h.html","title":"action.h","keywords":"action.h read_action_data action_data_size require_recipient require_auth has_auth require_auth2 is_account send_inline send_context_free_inline publication_time current_receiver","body":"file action.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|uint32_t|read_action_data (void * msg, uint32_t len) Copy current action data to the specified location. |\n|uint32_t|action_data_size () Get the length of current action's data field. |\n|void|require_recipient (capi_name name) Add the specified account to set of accounts to be notified. |\n|void|require_auth (capi_name name) Verify specified account exists in the set of provided auths. |\n|bool|has_auth (capi_name name) Verifies that name has auth. |\n|void|require_auth2 (capi_name name, capi_name permission) Verify specified account exists in the set of provided auths. |\n|bool|is_account (capi_name name) Verifies that name is an existing account. |\n|void|send_inline (char * serialized_action, size_t size) |\n|void|send_context_free_inline (char * serialized_action, size_t size) |\n|uint64_t|publication_time () Get the publication time. |\n|capi_name|current_receiver () Get the current receiver of the action. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction read_action_data\nuint32_t action.h::read_action_data (\n    void * msg,\n    uint32_t len\n)\n\nCopy current action data to the specified location. \nCopy up to len bytes of current action data to the specified location\nParameters:\n\nmsg - a pointer where up to len bytes of the current action data will be copied \nlen - len of the current action data to be copied, 0 to report required size \n\nReturns:\nthe number of bytes copied to msg, or number of bytes that can be copied if len==0 passed \nPrecondition:\nmsg is a valid pointer to a range of memory at least len bytes long \nPost\nmsg is filled with packed action data \nfunction action_data_size\nuint32_t action.h::action_data_size ()\n\nGet the length of current action's data field. \nGet the length of the current action's data field. This method is useful for dynamically sized actions\nReturns:\nthe length of the current action's data field \nfunction require_recipient\nvoid action.h::require_recipient (\n    capi_name name\n)\n\nAdd the specified account to set of accounts to be notified. \nAdd the specified account to set of accounts to be notified\nParameters:\n\nname - name of the account to be verified \n\nfunction require_auth\nvoid action.h::require_auth (\n    capi_name name\n)\n\nVerify specified account exists in the set of provided auths. \nVerifies that name exists in the set of provided auths on a action. Throws if not found.\nParameters:\n\nname - name of the account to be verified \n\nfunction has_auth\nbool action.h::has_auth (\n    capi_name name\n)\n\nVerifies that name has auth. \nVerifies that name has auth.\nParameters:\n\nname - name of the account to be verified \n\nfunction require_auth2\nvoid action.h::require_auth2 (\n    capi_name name,\n    capi_name permission\n)\n\nVerify specified account exists in the set of provided auths. \nVerifies that name exists in the set of provided auths on a action. Throws if not found.\nParameters:\n\nname - name of the account to be verified \npermission - permission level to be verified \n\nfunction is_account\nbool action.h::is_account (\n    capi_name name\n)\n\nVerifies that name is an existing account. \nVerifies that name is an existing account.\nParameters:\n\nname - name of the account to check \n\nfunction send_inline\nvoid action.h::send_inline (\n    char * serialized_action,\n    size_t size\n)\n\nSend an inline action in the context of this action's parent transaction\nParameters:\n\nserialized_action - serialized action \nsize - size of serialized action in bytes \n\nPrecondition:\nserialized\\_action is a valid pointer to an array at least size bytes long \nfunction send_context_free_inline\nvoid action.h::send_context_free_inline (\n    char * serialized_action,\n    size_t size\n)\n\nSend an inline context free action in the context of this action's parent transaction\nParameters:\n\nserialized_action - serialized action \nsize - size of serialized action in bytes \n\nPrecondition:\nserialized\\_action is a valid pointer to an array at least size bytes long \nfunction publication_time\nuint64_t action.h::publication_time ()\n\nGet the publication time. \nReturns the time in microseconds from 1970 of the publication_time \nReturns:\nthe time in microseconds from 1970 of the publication_time \nfunction current_receiver\ncapi_name action.h::current_receiver ()\n\nGet the current receiver of the action. \nGet the current receiver of the action \nReturns:\nthe account which specifies the current receiver of the action \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.h\n"},"action_8hpp.html":{"url":"action_8hpp.html","title":"action.hpp","keywords":"action.hpp eosio::permission_level eosio::action eosio::detail::unwrap eosio::detail::unwrap< ignore< T > > eosio::detail::convert eosio::detail::convert< const char * > eosio::detail::convert< char * > eosio::detail::is_same eosio::detail::is_same< bool, U > eosio::detail::is_same< T, bool > eosio::detail::get_nth_impl eosio::detail::get_nth_impl< N, N, Arg, Args... > eosio::detail::get_nth eosio::detail::check_types eosio::detail::check_types< Action, I, T > eosio::action_wrapper eosio::variant_action_wrapper eosio::inline_dispatcher eosio::inline_dispatcher< void(T::*)(Args...), Name > INLINE_ACTION_SENDER3 INLINE_ACTION_SENDER2 INLINE_ACTION_SENDER SEND_INLINE_ACTION","body":"file action.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::permission_level\n\n\nstruct\neosio::action\n\n\nstruct\neosio::detail::unwrap\n\n\nstruct\neosio::detail::unwrap >\n\n\nstruct\neosio::detail::convert\n\n\nstruct\neosio::detail::convert\n\n\nstruct\neosio::detail::convert\n\n\nstruct\neosio::detail::is_same\n\n\nstruct\neosio::detail::is_same\n\n\nstruct\neosio::detail::is_same\n\n\nstruct\neosio::detail::get_nth_impl\n\n\nstruct\neosio::detail::get_nth_impl\n\n\nstruct\neosio::detail::get_nth\n\n\nstruct\neosio::detail::check_types\n\n\nstruct\neosio::detail::check_types\n\n\nstruct\neosio::action_wrapper\n\n\nstruct\neosio::variant_action_wrapper\n\n\nstruct\neosio::inline_dispatcher\n\n\nstruct\neosio::inline_dispatcher\n\n\n\nDefines\n\n\n\nType\nName\n\n\n\n\n\nINLINE_ACTION_SENDER3\n\n\n\nINLINE_ACTION_SENDER2\n\n\n\nINLINE_ACTION_SENDER\n\n\n\nSEND_INLINE_ACTIONSend inline action.\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \ndefine INLINE_ACTION_SENDER3\ndefine INLINE_ACTION_SENDER3;\n\ndefine INLINE_ACTION_SENDER2\ndefine INLINE_ACTION_SENDER2;\n\ndefine INLINE_ACTION_SENDER\ndefine INLINE_ACTION_SENDER;\n\ndefine SEND_INLINE_ACTION\ndefine SEND_INLINE_ACTION;\n\nSend inline action. \nSend inline action\nParameters:\n\nCONTRACT - The account this action is intended for \nNAME - The name of the action \n... - The member of the action specified as (\"action_member1_name\", action_member1_value)(\"action_member2_name\", action_member2_value) \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/action.hpp\n"},"asset_8hpp.html":{"url":"asset_8hpp.html","title":"asset.hpp","keywords":"asset.hpp eosio::asset eosio::extended_asset","body":"file asset.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::asset\n\n\nstruct\neosio::extended_asset\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/asset.hpp\n"},"binary__extension_8hpp.html":{"url":"binary__extension_8hpp.html","title":"binary_extension.hpp","keywords":"binary_extension.hpp eosio::binary_extension","body":"file binary_extension.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::binary_extension\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/binary\\_extension.hpp\n"},"chain_8h.html":{"url":"chain_8h.html","title":"chain.h","keywords":"chain.h get_active_producers","body":"file chain.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|uint32_t|get_active_producers (capi_name * producers, uint32_t datalen) Gets the set of active producers. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction get_active_producers\nuint32_t chain.h::get_active_producers (\n    capi_name * producers,\n    uint32_t datalen\n)\n\nGets the set of active producers. \nGets the set of active producers. \nParameters:\n\nproducers - Pointer to a buffer of account names \ndatalen - Byte length of buffer, when passed 0 will return the size required to store full output.\n\nReturns:\nuint32_t - Number of bytes actually populated \nPrecondition:\nproducers is a pointer to a range of memory at least datalen bytes long \nPost\nthe passed in producers pointer gets the array of active producers.\nExample:\ncapi_name producers[21];\nuint32_t bytes_populated = get_active_producers(producers, sizeof(capi_name)*21);\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/chain.h\n"},"compiler__builtins_8h.html":{"url":"compiler__builtins_8h.html","title":"compiler_builtins.h","keywords":"compiler_builtins.h __multi3 __divti3 __udivti3 __modti3 __umodti3 __lshlti3 __lshrti3 __ashlti3 __ashrti3 __addtf3 __subtf3 __multf3 __divtf3 __eqtf2 __netf2 __getf2 __gttf2 __letf2 __lttf2 __cmptf2 __unordtf2 __extendsftf2 __extenddftf2 __fixtfdi __fixtfsi __fixunstfdi __fixunstfsi __trunctfdf2 __trunctfsf2 __break_point","body":"file compiler_builtins.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void|__multi3 (__int128 & res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Multiply two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers. |\n|void|__divti3 (__int128 & res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Divide two 128 bit integers (which are represented as two 64 bit unsigned integers) |\n|void|__udivti3 (unsigned __int128 & res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Divide two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) |\n|void|__modti3 (__int128 & res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Perform modular arithmetic on two 128 bit integers (which are represented as two 64 bit unsigned integers) |\n|void|__umodti3 (unsigned __int128 & res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Perform modular arithmetic on two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) |\n|void|__lshlti3 (__int128 & res, uint64_t lo, uint64_t hi, uint32_t shift) Perform logical shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) |\n|void|__lshrti3 (__int128 & res, uint64_t lo, uint64_t hi, uint32_t shift) Perform logical shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) |\n|void|__ashlti3 (__int128 & res, uint64_t lo, uint64_t hi, uint32_t shift) Perform arithmetic shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) |\n|void|__ashrti3 (__int128 & res, uint64_t lo, uint64_t hi, uint32_t shift) Perform arithmetic shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) |\n|void|__addtf3 (long double & ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Add two long doubles (which are represented as two 64 bit unsigned integers) |\n|void|__subtf3 (long double & ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Subtract two long doubles (which are represented as two 64 bit unsigned integers) |\n|void|__multf3 (long double & ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Multiply two long doubles (which are represented as two 64 bit unsigned integers) |\n|void|__divtf3 (long double & ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Divide two long doubles (which are represented as two 64 bit unsigned integers) |\n|int|__eqtf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check equality between two doubles (which are represented as two 64 bit unsigned integers) |\n|int|__netf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check inequality between two doubles (which are represented as two 64 bit unsigned integers) |\n|int|__getf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check if the first double is greater or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) |\n|int|__gttf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check if the first double is greater than the second double, (the doubles are represented as two 64 bit unsigned integers) |\n|int|__letf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check if the first double is less or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) |\n|int|__lttf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check if the first double is less than the second double, (the doubles are represented as two 64 bit unsigned integers) |\n|int|__cmptf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Compare two doubles (the doubles are represented as two 64 bit unsigned integers) |\n|int|__unordtf2 (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb) Check if either of the doubles is NaN, (the doubles are represented as two 64 bit unsigned integers) |\n|void|__extendsftf2 (long double & ret, float f) Extend float to long double. |\n|void|__extenddftf2 (long double & ret, double f) Extend float to long double. |\n|int64_t|__fixtfdi (uint64_t l, uint64_t h) Convert long double (which are split as two 64 bit unsigned integers) into 64 bit integer. |\n|int32_t|__fixtfsi (uint64_t l, uint64_t h) Convert long double (which are split as two 64 bit unsigned integers) into 32 bit integer. |\n|uint64_t|__fixunstfdi (uint64_t l, uint64_t h) Convert long double (which are split as two 64 bit unsigned integers) into 64 bit unsigned integer. |\n|uint32_t|__fixunstfsi (uint64_t l, uint64_t h) Convert long double (which are split as two 64 bit unsigned integers) into 32 bit unsigned integer. |\n|double|__trunctfdf2 (uint64_t l, uint64_t h) Convert long double (which are split as two 64 bit unsigned integers) into double. |\n|float|__trunctfsf2 (uint64_t l, uint64_t h) Convert long double (which are split as two 64 bit unsigned integers) into float. |\n|void|__break_point () |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction __multi3\nvoid compiler_builtins.h::__multi3 (\n    __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nMultiply two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers. \nMultiply two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of multiplication Example: \n__int128 res = 0;\n__int128 a = 100;\n__int128 b = 100;\n__multi3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 10000\n\nfunction __divti3\nvoid compiler_builtins.h::__divti3 (\n    __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nDivide two 128 bit integers (which are represented as two 64 bit unsigned integers) \nDivide two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of division Example: \n__int128 res = 0;\n__int128 a = 100;\n__int128 b = 100;\n__divti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\nfunction __udivti3\nvoid compiler_builtins.h::__udivti3 (\n    unsigned __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nDivide two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) \nDivide two 128 bit unsigned integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. Example: unsigned __int128 res = 0;\nunsigned __int128 a = 100;\nunsigned __int128 b = 100;\n__udivti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\n\n\nfunction __modti3\nvoid compiler_builtins.h::__modti3 (\n    __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nPerform modular arithmetic on two 128 bit integers (which are represented as two 64 bit unsigned integers) \nPerform modular arithmetic on two 128 bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of modulus Example: \n__int128 res = 0;\n__int128 a = 100;\n__int128 b = 3;\n__modti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\nfunction __umodti3\nvoid compiler_builtins.h::__umodti3 (\n    unsigned __int128 & res,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nPerform modular arithmetic on two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers) \nPerform modular arithmetic on two 128 unsigned bit integers split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nres is replaced with the result of modulus Example: \nunsigned __int128 res = 0;\nunsigned __int128 a = 100;\nunsigned __int128 b = 3;\n__umodti3(res, a, (a >> 64), b, (b >> 64));\nprinti128(&res); // Output: 1\n\nfunction __lshlti3\nvoid compiler_builtins.h::__lshlti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform logical shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform logical shift left on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = 8;\n__lshlti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: 16\n\nfunction __lshrti3\nvoid compiler_builtins.h::__lshrti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform logical shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform logical shift right on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = 8;\n__lshrti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: 4\n\nfunction __ashlti3\nvoid compiler_builtins.h::__ashlti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform arithmetic shift left on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform arithmetic shift left on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = 8;\n__ashlti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: 16\n\nfunction __ashrti3\nvoid compiler_builtins.h::__ashrti3 (\n    __int128 & res,\n    uint64_t lo,\n    uint64_t hi,\n    uint32_t shift\n)\n\nPerform arithmetic shift right on a 128 bit integer (which is represented as two 64 bit unsigned integers) \nPerform arithmetic shift right on a 128 bit integer split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nlo Low 64 bits of the 128 bit factor. \nhi High 64 bits of the 128 bit factor. \nshift Number of bits to shift. \n\nPost\nres is replaced with the result of the operation Example: \n__int128 res = 0;\n__int128 a = -8;\n__ashrti3(res, a, (a >> 64), 1);\nprinti128(&res); // Output: -4\n\nfunction __addtf3\nvoid compiler_builtins.h::__addtf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nAdd two long doubles (which are represented as two 64 bit unsigned integers) \nAdd two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __subtf3\nvoid compiler_builtins.h::__subtf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nSubtract two long doubles (which are represented as two 64 bit unsigned integers) \nSubtract two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __multf3\nvoid compiler_builtins.h::__multf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nMultiply two long doubles (which are represented as two 64 bit unsigned integers) \nMultiply two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __divtf3\nvoid compiler_builtins.h::__divtf3 (\n    long double & ret,\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nDivide two long doubles (which are represented as two 64 bit unsigned integers) \nDivide two long doubles split as two 64 bit unsigned integers and assign the value to the first parameter. \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nPost\nret is replaced with the result of the operation \nfunction __eqtf2\nint compiler_builtins.h::__eqtf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck equality between two doubles (which are represented as two 64 bit unsigned integers) \nCheck equality between two doubles split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n1 if either a or b is NaN \nfunction __netf2\nint compiler_builtins.h::__netf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck inequality between two doubles (which are represented as two 64 bit unsigned integers) \nCheck inequality between two doubles split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b @return1 if either a or b is NaN \nfunction __getf2\nint compiler_builtins.h::__getf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is greater or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is greater or equal to the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n-1 if either a or b is NaN \nfunction __gttf2\nint compiler_builtins.h::__gttf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is greater than the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is greater than the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n0 if either a or b is NaN \nfunction __letf2\nint compiler_builtins.h::__letf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is less or equal to the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is less or equal to the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n1 if either a or b is NaN \nfunction __lttf2\nint compiler_builtins.h::__lttf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if the first double is less than the second double, (the doubles are represented as two 64 bit unsigned integers) \nCheck if the first double is less than the second double, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n0 if either a or b is NaN \nfunction __cmptf2\nint compiler_builtins.h::__cmptf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCompare two doubles (the doubles are represented as two 64 bit unsigned integers) \nCompare two doubles which are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if a greater than b \nReturns:\n0 if a equal to b \nReturns:\n-1 if a less than b \nReturns:\n1 if either a or b is NaN \nfunction __unordtf2\nint compiler_builtins.h::__unordtf2 (\n    uint64_t la,\n    uint64_t ha,\n    uint64_t lb,\n    uint64_t hb\n)\n\nCheck if either of the doubles is NaN, (the doubles are represented as two 64 bit unsigned integers) \nCheck if either of the doubles is NaN, the doubles are split as two 64 bit unsigned integers \nParameters:\n\nres It will be replaced with the result product. \nla Low 64 bits of the first 128 bit factor. \nha High 64 bits of the first 128 bit factor. \nlb Low 64 bits of the second 128 bit factor. \nhb High 64 bits of the second 128 bit factor. \n\nReturns:\n1 if either a or b is NaN \nReturns:\n0 if either a or b is not NaN \nfunction __extendsftf2\nvoid compiler_builtins.h::__extendsftf2 (\n    long double & ret,\n    float f\n)\n\nExtend float to long double. \nExtend float to long double \nParameters:\n\nret It will be replaced with the result product. \nf Input float to be extended \n\nPost\nret is replaced with the extended float \nfunction __extenddftf2\nvoid compiler_builtins.h::__extenddftf2 (\n    long double & ret,\n    double f\n)\n\nExtend float to long double. \nExtend double to long double \nParameters:\n\nret It will be replaced with the result product. \nf Input float to be extended \n\nPost\nret is replaced with the extended float \nfunction __fixtfdi\nint64_t compiler_builtins.h::__fixtfdi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 64 bit integer. \nfunction __fixtfsi\nint32_t compiler_builtins.h::__fixtfsi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 32 bit integer. \nfunction __fixunstfdi\nuint64_t compiler_builtins.h::__fixunstfdi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit unsigned integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 64 bit unsigned integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 64 bit unsigned integer. \nfunction __fixunstfsi\nuint32_t compiler_builtins.h::__fixunstfsi (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit unsigned integer. \nConvert long double (which are split as two 64 bit unsigned integers) into 32 bit unsigned integer \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted 32 bit unsigned integer. \nfunction __trunctfdf2\ndouble compiler_builtins.h::__trunctfdf2 (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into double. \nTruncate long double (which are split as two 64 bit unsigned integers) into double \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted double \nfunction __trunctfsf2\nfloat compiler_builtins.h::__trunctfsf2 (\n    uint64_t l,\n    uint64_t h\n)\n\nConvert long double (which are split as two 64 bit unsigned integers) into float. \nTruncate long double (which are split as two 64 bit unsigned integers) into float \nParameters:\n\nl Low 64 bits of the first 128 bit factor. \nh High 64 bits of the first 128 bit factor. \n\nReturns:\nthe converted float \nfunction __break_point\nvoid compiler_builtins.h::__break_point ()\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/compiler\\_builtins.h\n"},"contract_8hpp.html":{"url":"contract_8hpp.html","title":"contract.hpp","keywords":"contract.hpp eosio::contract","body":"file contract.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::contract\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/contract.hpp\n"},"crypto_8cpp.html":{"url":"crypto_8cpp.html","title":"crypto.cpp","keywords":"crypto.cpp","body":"file crypto.cpp\nGo to the source code of this file.\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/crypto.cpp\n"},"crypto_8h.html":{"url":"crypto_8h.html","title":"crypto.h","keywords":"crypto.h assert_sha256 assert_sha1 assert_sha512 assert_ripemd160 sha256 sha1 sha512 ripemd160 recover_key assert_recover_key","body":"file crypto.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void|assert_sha256 (const char * data, uint32_t length, const capi_checksum256 * hash) Tests if the sha256 hash generated from data matches the provided checksum. |\n|void|assert_sha1 (const char * data, uint32_t length, const capi_checksum160 * hash) Tests if the sha1 hash generated from data matches the provided checksum. |\n|void|assert_sha512 (const char * data, uint32_t length, const capi_checksum512 * hash) Tests if the sha512 hash generated from data matches the provided checksum. |\n|void|assert_ripemd160 (const char * data, uint32_t length, const capi_checksum160 * hash) Tests if the ripemod160 hash generated from data matches the provided checksum. |\n|void|sha256 (const char * data, uint32_t length, capi_checksum256 * hash) Hashes data using sha256 and stores result in memory pointed to by hash. |\n|void|sha1 (const char * data, uint32_t length, capi_checksum160 * hash) Hashes data using sha1 and stores result in memory pointed to by hash. |\n|void|sha512 (const char * data, uint32_t length, capi_checksum512 * hash) Hashes data using sha512 and stores result in memory pointed to by hash. |\n|void|ripemd160 (const char * data, uint32_t length, capi_checksum160 * hash) Hashes data using ripemod160 and stores result in memory pointed to by hash. |\n|int|recover_key (const capi_checksum256 * digest, const char * sig, size_t siglen, char * pub, size_t publen) Calculates the public key used for a given signature and hash used to create a message. |\n|void|assert_recover_key (const capi_checksum256 * digest, const char * sig, size_t siglen, const char * pub, size_t publen) Tests a given public key with the generated key from digest and the signature. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction assert_sha256\nvoid crypto.h::assert_sha256 (\n    const char * data,\n    uint32_t length,\n    const capi_checksum256 * hash\n)\n\nTests if the sha256 hash generated from data matches the provided checksum. \nTests if the sha256 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - capi\\_checksum256\\* hash to compare to\n\nPrecondition:\nassert256 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha256( data, length, hash )\n//If the sha256 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha256 hash generated from data equals provided hash\");\n\nfunction assert_sha1\nvoid crypto.h::assert_sha1 (\n    const char * data,\n    uint32_t length,\n    const capi_checksum160 * hash\n)\n\nTests if the sha1 hash generated from data matches the provided checksum. \nTests if the sha1 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - capi\\_checksum160\\* hash to compare to\n\nPrecondition:\nsha1 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha1( data, length, hash )\n//If the sha1 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha1 hash generated from data equals provided hash\");\n\nfunction assert_sha512\nvoid crypto.h::assert_sha512 (\n    const char * data,\n    uint32_t length,\n    const capi_checksum512 * hash\n)\n\nTests if the sha512 hash generated from data matches the provided checksum. \nTests if the sha512 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - capi\\_checksum512\\* hash to compare to\n\nPrecondition:\nassert512 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_sha512( data, length, hash )\n//If the sha512 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"sha512 hash generated from data equals provided hash\");\n\nfunction assert_ripemd160\nvoid crypto.h::assert_ripemd160 (\n    const char * data,\n    uint32_t length,\n    const capi_checksum160 * hash\n)\n\nTests if the ripemod160 hash generated from data matches the provided checksum. \nTests if the ripemod160 hash generated from data matches the provided checksum. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - capi\\_checksum160\\* hash to compare to\n\nPrecondition:\nassert160 hash of data equals provided hash parameter. \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum hash;\nchar data;\nuint32_t length;\nassert_ripemod160( data, length, hash )\n//If the ripemod160 hash generated from data does not equal provided hash, anything below will never fire.\neosio::print(\"ripemod160 hash generated from data equals provided hash\");\n\nfunction sha256\nvoid crypto.h::sha256 (\n    const char * data,\n    uint32_t length,\n    capi_checksum256 * hash\n)\n\nHashes data using sha256 and stores result in memory pointed to by hash. \nHashes data using sha256 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha256( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction sha1\nvoid crypto.h::sha1 (\n    const char * data,\n    uint32_t length,\n    capi_checksum160 * hash\n)\n\nHashes data using sha1 and stores result in memory pointed to by hash. \nHashes data using sha1 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha1( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction sha512\nvoid crypto.h::sha512 (\n    const char * data,\n    uint32_t length,\n    capi_checksum512 * hash\n)\n\nHashes data using sha512 and stores result in memory pointed to by hash. \nHashes data using sha512 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nsha512( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction ripemd160\nvoid crypto.h::ripemd160 (\n    const char * data,\n    uint32_t length,\n    capi_checksum160 * hash\n)\n\nHashes data using ripemod160 and stores result in memory pointed to by hash. \nHashes data using ripemod160 and stores result in memory pointed to by hash. \nParameters:\n\ndata - Data you want to hash \nlength - Data length \nhash - Hash pointer\n\nExample:\nchecksum calc_hash;\nripemod160( data, length, &calc_hash );\neos_assert( calc_hash == hash, \"invalid hash\" );\n\nfunction recover_key\nint crypto.h::recover_key (\n    const capi_checksum256 * digest,\n    const char * sig,\n    size_t siglen,\n    char * pub,\n    size_t publen\n)\n\nCalculates the public key used for a given signature and hash used to create a message. \nCalculates the public key used for a given signature and hash used to create a message. \nParameters:\n\ndigest - Hash used to create a message \nsig - Signature \nsiglen - Signature length \npub - Public key \npublen - Public key length \n\nReturns:\nint - number of bytes written to pub\nExample:\n```\n\n\n\n### function assert\\_recover\\_key\n\n```cpp\nvoid crypto.h::assert_recover_key (\n    const capi_checksum256 * digest,\n    const char * sig,\n    size_t siglen,\n    const char * pub,\n    size_t publen\n)\n\nTests a given public key with the generated key from digest and the signature. \nTests a given public key with the generated key from digest and the signature. \nParameters:\n\ndigest - What the key will be generated from \nsig - Signature \nsiglen - Signature length \npub - Public key \npublen - Public key length\n\nPrecondition:\nassert recovery key of pub equals the key generated from the digest parameter \nPost\nExecutes next statement. If was not true, hard return.\nExample:\nchecksum digest;\nchar sig;\nsize_t siglen;\nchar pub;\nsize_t publen;\nassert_recover_key( digest, sig, siglen, pub, publen )\n// If the given public key does not match with the generated key from digest and the signature, anything below will never fire.\neosio::print(\"pub key matches the pub key generated from digest\");\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/crypto.h\n"},"crypto_8hpp.html":{"url":"crypto_8hpp.html","title":"crypto.hpp","keywords":"crypto.hpp eosio::public_key eosio::signature","body":"file crypto.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::public_key\n\n\nstruct\neosio::signature\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/crypto.hpp\n"},"datastream_8hpp.html":{"url":"datastream_8hpp.html","title":"datastream.hpp","keywords":"datastream.hpp eosio::datastream eosio::datastream< size_t >","body":"file datastream.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::datastream\n\n\nclass\neosio::datastream\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/datastream.hpp\n"},"db_8h.html":{"url":"db_8h.html","title":"db.h","keywords":"db.h db_store_i64 db_update_i64 db_remove_i64 db_get_i64 db_next_i64 db_previous_i64 db_find_i64 db_lowerbound_i64 db_upperbound_i64 db_end_i64 db_idx64_store db_idx64_update db_idx64_remove db_idx64_next db_idx64_previous db_idx64_find_primary db_idx64_find_secondary db_idx64_lowerbound db_idx64_upperbound db_idx64_end db_idx128_store db_idx128_update db_idx128_remove db_idx128_next db_idx128_previous db_idx128_find_primary db_idx128_find_secondary db_idx128_lowerbound db_idx128_upperbound db_idx128_end db_idx256_store db_idx256_update db_idx256_remove db_idx256_next db_idx256_previous db_idx256_find_primary db_idx256_find_secondary db_idx256_lowerbound db_idx256_upperbound db_idx256_end db_idx_double_store db_idx_double_update db_idx_double_remove db_idx_double_next db_idx_double_previous db_idx_double_find_primary db_idx_double_find_secondary db_idx_double_lowerbound db_idx_double_upperbound db_idx_double_end db_idx_long_double_store db_idx_long_double_update db_idx_long_double_remove db_idx_long_double_next db_idx_long_double_previous db_idx_long_double_find_primary db_idx_long_double_find_secondary db_idx_long_double_lowerbound db_idx_long_double_upperbound db_idx_long_double_end","body":"file db.h\nGo to the source code of this file.\nDefines C API for interfacing with blockchain database. More...\n|Type|Name|\n|-----|-----|\n|int32_t|db_store_i64 (uint64_t scope, capi_name table, capi_name payer, uint64_t id, const void * data, uint32_t len) Store a record in a primary 64-bit integer index table. |\n|void|db_update_i64 (int32_t iterator, capi_name payer, const void * data, uint32_t len) Update a record in a primary 64-bit integer index table. |\n|void|db_remove_i64 (int32_t iterator) Remove a record from a primary 64-bit integer index table. |\n|int32_t|db_get_i64 (int32_t iterator, const void * data, uint32_t len) Get a record in a primary 64-bit integer index table. |\n|int32_t|db_next_i64 (int32_t iterator, uint64_t * primary) Find the table row following the referenced table row in a primary 64-bit integer index table. |\n|int32_t|db_previous_i64 (int32_t iterator, uint64_t * primary) Find the table row preceding the referenced table row in a primary 64-bit integer index table. |\n|int32_t|db_find_i64 (capi_name code, uint64_t scope, capi_name table, uint64_t id) Find a table row in a primary 64-bit integer index table by primary key. |\n|int32_t|db_lowerbound_i64 (capi_name code, uint64_t scope, capi_name table, uint64_t id) Find the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key. |\n|int32_t|db_upperbound_i64 (capi_name code, uint64_t scope, capi_name table, uint64_t id) Find the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key. |\n|int32_t|db_end_i64 (capi_name code, uint64_t scope, capi_name table) Get an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table. |\n|int32_t|db_idx64_store (uint64_t scope, capi_name table, capi_name payer, uint64_t id, const uint64_t * secondary) Store an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. |\n|void|db_idx64_update (int32_t iterator, capi_name payer, const uint64_t * secondary) Update an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. |\n|void|db_idx64_remove (int32_t iterator) Remove a table row from a secondary 64-bit integer index table. |\n|int32_t|db_idx64_next (int32_t iterator, uint64_t * primary) Find the table row following the referenced table row in a secondary 64-bit integer index table. |\n|int32_t|db_idx64_previous (int32_t iterator, uint64_t * primary) Find the table row preceding the referenced table row in a secondary 64-bit integer index table. |\n|int32_t|db_idx64_find_primary (capi_name code, uint64_t scope, capi_name table, uint64_t * secondary, uint64_t primary) Find a table row in a secondary 64-bit integer index table by primary key. |\n|int32_t|db_idx64_find_secondary (capi_name code, uint64_t scope, capi_name table, const uint64_t * secondary, uint64_t * primary) Find a table row in a secondary 64-bit integer index table by secondary key. |\n|int32_t|db_idx64_lowerbound (capi_name code, uint64_t scope, capi_name table, uint64_t * secondary, uint64_t * primary) Find the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key. |\n|int32_t|db_idx64_upperbound (capi_name code, uint64_t scope, capi_name table, uint64_t * secondary, uint64_t * primary) Find the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key. |\n|int32_t|db_idx64_end (capi_name code, uint64_t scope, capi_name table) Get an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table. |\n|int32_t|db_idx128_store (uint64_t scope, capi_name table, capi_name payer, uint64_t id, const uint128_t * secondary) Store an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. |\n|void|db_idx128_update (int32_t iterator, capi_name payer, const uint128_t * secondary) Update an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. |\n|void|db_idx128_remove (int32_t iterator) Remove a table row from a secondary 128-bit integer index table. |\n|int32_t|db_idx128_next (int32_t iterator, uint64_t * primary) Find the table row following the referenced table row in a secondary 128-bit integer index table. |\n|int32_t|db_idx128_previous (int32_t iterator, uint64_t * primary) Find the table row preceding the referenced table row in a secondary 128-bit integer index table. |\n|int32_t|db_idx128_find_primary (capi_name code, uint64_t scope, capi_name table, uint128_t * secondary, uint64_t primary) Find a table row in a secondary 128-bit integer index table by primary key. |\n|int32_t|db_idx128_find_secondary (capi_name code, uint64_t scope, capi_name table, const uint128_t * secondary, uint64_t * primary) Find a table row in a secondary 128-bit integer index table by secondary key. |\n|int32_t|db_idx128_lowerbound (capi_name code, uint64_t scope, capi_name table, uint128_t * secondary, uint64_t * primary) Find the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key. |\n|int32_t|db_idx128_upperbound (capi_name code, uint64_t scope, capi_name table, uint128_t * secondary, uint64_t * primary) Find the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key. |\n|int32_t|db_idx128_end (capi_name code, uint64_t scope, capi_name table) Get an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table. |\n|int32_t|db_idx256_store (uint64_t scope, capi_name table, capi_name payer, uint64_t id, const uint128_t * data, uint32_t data_len) Store an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table. |\n|void|db_idx256_update (int32_t iterator, capi_name payer, const uint128_t * data, uint32_t data_len) Update an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table. |\n|void|db_idx256_remove (int32_t iterator) Remove a table row from a secondary 256-bit index table. |\n|int32_t|db_idx256_next (int32_t iterator, uint64_t * primary) Find the table row following the referenced table row in a secondary 256-bit index table. |\n|int32_t|db_idx256_previous (int32_t iterator, uint64_t * primary) Find the table row preceding the referenced table row in a secondary 256-bit index table. |\n|int32_t|db_idx256_find_primary (capi_name code, uint64_t scope, capi_name table, uint128_t * data, uint32_t data_len, uint64_t primary) Find a table row in a secondary 128-bit integer index table by primary key. |\n|int32_t|db_idx256_find_secondary (capi_name code, uint64_t scope, capi_name table, const uint128_t * data, uint32_t data_len, uint64_t * primary) Find a table row in a secondary 256-bit index table by secondary key. |\n|int32_t|db_idx256_lowerbound (capi_name code, uint64_t scope, capi_name table, uint128_t * data, uint32_t data_len, uint64_t * primary) Find the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key. |\n|int32_t|db_idx256_upperbound (capi_name code, uint64_t scope, capi_name table, uint128_t * data, uint32_t data_len, uint64_t * primary) Find the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key. |\n|int32_t|db_idx256_end (capi_name code, uint64_t scope, capi_name table) Get an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table. |\n|int32_t|db_idx_double_store (uint64_t scope, capi_name table, capi_name payer, uint64_t id, const double * secondary) Store an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. |\n|void|db_idx_double_update (int32_t iterator, capi_name payer, const double * secondary) Update an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. |\n|void|db_idx_double_remove (int32_t iterator) Remove a table row from a secondary double-precision floating-point index table. |\n|int32_t|db_idx_double_next (int32_t iterator, uint64_t * primary) Find the table row following the referenced table row in a secondary double-precision floating-point index table. |\n|int32_t|db_idx_double_previous (int32_t iterator, uint64_t * primary) Find the table row preceding the referenced table row in a secondary double-precision floating-point index table. |\n|int32_t|db_idx_double_find_primary (capi_name code, uint64_t scope, capi_name table, double * secondary, uint64_t primary) Find a table row in a secondary double-precision floating-point index table by primary key. |\n|int32_t|db_idx_double_find_secondary (capi_name code, uint64_t scope, capi_name table, const double * secondary, uint64_t * primary) Find a table row in a secondary double-precision floating-point index table by secondary key. |\n|int32_t|db_idx_double_lowerbound (capi_name code, uint64_t scope, capi_name table, double * secondary, uint64_t * primary) Find the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key. |\n|int32_t|db_idx_double_upperbound (capi_name code, uint64_t scope, capi_name table, double * secondary, uint64_t * primary) Find the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key. |\n|int32_t|db_idx_double_end (capi_name code, uint64_t scope, capi_name table) Get an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table. |\n|int32_t|db_idx_long_double_store (uint64_t scope, capi_name table, capi_name payer, uint64_t id, const long double * secondary) Store an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. |\n|void|db_idx_long_double_update (int32_t iterator, capi_name payer, const long double * secondary) Update an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. |\n|void|db_idx_long_double_remove (int32_t iterator) Remove a table row from a secondary quadruple-precision floating-point index table. |\n|int32_t|db_idx_long_double_next (int32_t iterator, uint64_t * primary) Find the table row following the referenced table row in a secondary quadruple-precision floating-point index table. |\n|int32_t|db_idx_long_double_previous (int32_t iterator, uint64_t * primary) Find the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table. |\n|int32_t|db_idx_long_double_find_primary (capi_name code, uint64_t scope, capi_name table, long double * secondary, uint64_t primary) Find a table row in a secondary quadruple-precision floating-point index table by primary key. |\n|int32_t|db_idx_long_double_find_secondary (capi_name code, uint64_t scope, capi_name table, const long double * secondary, uint64_t * primary) Find a table row in a secondary quadruple-precision floating-point index table by secondary key. |\n|int32_t|db_idx_long_double_lowerbound (capi_name code, uint64_t scope, capi_name table, long double * secondary, uint64_t * primary) Find the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key. |\n|int32_t|db_idx_long_double_upperbound (capi_name code, uint64_t scope, capi_name table, long double * secondary, uint64_t * primary) Find the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key. |\n|int32_t|db_idx_long_double_end (capi_name code, uint64_t scope, capi_name table) Get an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction db_store_i64\nint32_t db.h::db_store_i64 (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const void * data,\n    uint32_t len\n)\n\nStore a record in a primary 64-bit integer index table. \nStore a record in a primary 64-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - ID of the entry \ndata - Record to store \nlen - Size of data \n\nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPrecondition:\n\\*((uint64\\_t\\*)data) stores the primary key \nReturns:\niterator to the newly created table row \nPost\na new entry is created in the table \nfunction db_update_i64\nvoid db.h::db_update_i64 (\n    int32_t iterator,\n    capi_name payer,\n    const void * data,\n    uint32_t len\n)\n\nUpdate a record in a primary 64-bit integer index table. \nUpdate a record in a primary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row containing the record to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \ndata - New updated record \nlen - Size of data \n\nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPrecondition:\n\\*((uint64\\_t\\*)data) stores the primary key \nPrecondition:\niterator points to an existing table row in the table \nPost\nthe record contained in the table row pointed to by iterator is replaced with the new updated record \nfunction db_remove_i64\nvoid db.h::db_remove_i64 (\n    int32_t iterator\n)\n\nRemove a record from a primary 64-bit integer index table. \nRemove a record from a primary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer\nExample:\nint32_t itr = db_find_i64(receiver, receiver, table1, \"alice\"_n);\neosio_assert(itr >= 0, \"Alice cannot be removed since she was already not found in the table\");\ndb_remove_i64(itr);\n\nfunction db_get_i64\nint32_t db.h::db_get_i64 (\n    int32_t iterator,\n    const void * data,\n    uint32_t len\n)\n\nGet a record in a primary 64-bit integer index table. \nGet a record in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the record to retrieve \ndata - Pointer to the buffer which will be filled with the retrieved record \nlen - Size of the buffer \n\nReturns:\nsize of the data copied into the buffer if len > 0, or size of the retrieved record if len == 0. \nPrecondition:\niterator points to an existing table row in the table \nPrecondition:\ndata is a valid pointer to a range of memory at least len bytes long \nPost\ndata will be filled with the retrieved record (truncated to the first len bytes if necessary)\nExample:\nchar value[50];\nauto len = db_get_i64(itr, value, 0);\neosio_assert(len \nfunction db_next_i64\nint32_t db.h::db_next_i64 (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a primary 64-bit integer index table. \nFind the table row following the referenced table row in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched\nExample:\nint32_t charlie_itr = db_find_i64(receiver, receiver, table1, \"charlie\"_n);\n// expect nothing after charlie\nuint64_t prim = 0\nint32_t  end_itr = db_next_i64(charlie_itr, &prim);\neosio_assert(end_itr \nfunction db_previous_i64\nint32_t db.h::db_previous_i64 (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a primary 64-bit integer index table. \nFind the table row preceding the referenced table row in a primary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched\nExample:\nuint64_t prim = 0;\nint32_t  itr_prev = db_previous_i64(itr, &prim);\n\nfunction db_find_i64\nint32_t db.h::db_find_i64 (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t id\n)\n\nFind a table row in a primary 64-bit integer index table by primary key. \nFind a table row in a primary 64-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key of the table row to look up \n\nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found\nExample:\nint itr = db_find_i64(receiver, receiver, table1, \"charlie\"_n);\n\nfunction db_lowerbound_i64\nint32_t db.h::db_lowerbound_i64 (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t id\n)\n\nFind the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key. \nFind the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key The table row that matches the lowerbound condition is the first table row in the table with the lowest primary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key used to determine the lowerbound \n\nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_upperbound_i64\nint32_t db.h::db_upperbound_i64 (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t id\n)\n\nFind the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key. \nFind the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key The table row that matches the upperbound condition is the first table row in the table with the lowest primary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nid - The primary key used to determine the upperbound \n\nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_end_i64\nint32_t db.h::db_end_i64 (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table. \nGet an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx64_store\nint32_t db.h::db_idx64_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const uint64_t * secondary\n)\n\nStore an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. \nStore an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary 64-bit integer index table \nfunction db_idx64_update\nvoid db.h::db_idx64_update (\n    int32_t iterator,\n    capi_name payer,\n    const uint64_t * secondary\n)\n\nUpdate an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table. \nUpdate an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx64_remove\nvoid db.h::db_idx64_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 64-bit integer index table. \nRemove a table row from a secondary 64-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx64_next\nint32_t db.h::db_idx64_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 64-bit integer index table. \nFind the table row following the referenced table row in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx64_previous\nint32_t db.h::db_idx64_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 64-bit integer index table. \nFind the table row preceding the referenced table row in a secondary 64-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx64_find_primary\nint32_t db.h::db_idx64_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary 64-bit integer index table by primary key. \nFind a table row in a secondary 64-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a uint64\\_t variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx64_find_secondary\nint32_t db.h::db_idx64_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 64-bit integer index table by secondary key. \nFind a table row in a secondary 64-bit integer index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx64_lowerbound\nint32_t db.h::db_idx64_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx64_upperbound\nint32_t db.h::db_idx64_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint64_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx64_end\nint32_t db.h::db_idx64_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx128_store\nint32_t db.h::db_idx128_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const uint128_t * secondary\n)\n\nStore an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. \nStore an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary 128-bit integer index table \nfunction db_idx128_update\nvoid db.h::db_idx128_update (\n    int32_t iterator,\n    capi_name payer,\n    const uint128_t * secondary\n)\n\nUpdate an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table. \nUpdate an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx128_remove\nvoid db.h::db_idx128_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 128-bit integer index table. \nRemove a table row from a secondary 128-bit integer index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx128_next\nint32_t db.h::db_idx128_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 128-bit integer index table. \nFind the table row following the referenced table row in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx128_previous\nint32_t db.h::db_idx128_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 128-bit integer index table. \nFind the table row preceding the referenced table row in a secondary 128-bit integer index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx128_find_primary\nint32_t db.h::db_idx128_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary 128-bit integer index table by primary key. \nFind a table row in a secondary 128-bit integer index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a uint128\\_t variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx128_find_secondary\nint32_t db.h::db_idx128_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 128-bit integer index table by secondary key. \nFind a table row in a secondary 128-bit integer index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx128_lowerbound\nint32_t db.h::db_idx128_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx128_upperbound\nint32_t db.h::db_idx128_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx128_end\nint32_t db.h::db_idx128_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx256_store\nint32_t db.h::db_idx256_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const uint128_t * data,\n    uint32_t data_len\n)\n\nStore an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table. \nStore an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \ndata - Pointer to the secondary key data stored as an array of 2 uint128\\_t integers \ndata_len - Must be set to 2 \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and the specified secondary key is created in the secondary 256-bit index table \nfunction db_idx256_update\nvoid db.h::db_idx256_update (\n    int32_t iterator,\n    capi_name payer,\n    const uint128_t * data,\n    uint32_t data_len\n)\n\nUpdate an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table. \nUpdate an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \ndata - Pointer to the new secondary key data (which is stored as an array of 2 uint128\\_t integers) that will replace the existing one of the association \ndata_len - Must be set to 2 \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by the specified secondary key \nfunction db_idx256_remove\nvoid db.h::db_idx256_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary 256-bit index table. \nRemove a table row from a secondary 256-bit index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx256_next\nint32_t db.h::db_idx256_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary 256-bit index table. \nFind the table row following the referenced table row in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx256_previous\nint32_t db.h::db_idx256_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary 256-bit index table. \nFind the table row preceding the referenced table row in a secondary 256-bit index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx256_find_primary\nint32_t db.h::db_idx256_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t primary\n)\n\nFind a table row in a secondary 128-bit integer index table by primary key. \nFind a table row in a secondary 256-bit index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the an array of 2 uint128\\_t integers which will act as the buffer to hold the retrieved secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx256_find_secondary\nint32_t db.h::db_idx256_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind a table row in a secondary 256-bit index table by secondary key. \nFind a table row in a secondary 256-bit index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) used to lookup the table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to the specified secondary key or the end iterator of the table if the table row could not be found \nfunction db_idx256_lowerbound\nint32_t db.h::db_idx256_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key (uses lexicographical ordering on the 256-bit keys)\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx256_upperbound\nint32_t db.h::db_idx256_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    uint128_t * data,\n    uint32_t data_len,\n    uint64_t * primary\n)\n\nFind the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key (uses lexicographical ordering on the 256-bit keys)\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \ndata - Pointer to the secondary key data (which is stored as an array of 2 uint128\\_t integers) first used to determine the upperbound and which is then replaced with the secondary key of the found table row \ndata_len - Must be set to 2 \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, the buffer pointed to by data will be filled with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx256_end\nint32_t db.h::db_idx256_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx_double_store\nint32_t db.h::db_idx_double_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const double * secondary\n)\n\nStore an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. \nStore an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary double-precision floating-point index table \nfunction db_idx_double_update\nvoid db.h::db_idx_double_update (\n    int32_t iterator,\n    capi_name payer,\n    const double * secondary\n)\n\nUpdate an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table. \nUpdate an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx_double_remove\nvoid db.h::db_idx_double_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary double-precision floating-point index table. \nRemove a table row from a secondary double-precision floating-point index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx_double_next\nint32_t db.h::db_idx_double_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary double-precision floating-point index table. \nFind the table row following the referenced table row in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_double_previous\nint32_t db.h::db_idx_double_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary double-precision floating-point index table. \nFind the table row preceding the referenced table row in a secondary double-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_double_find_primary\nint32_t db.h::db_idx_double_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    double * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary double-precision floating-point index table by primary key. \nFind a table row in a secondary double-precision floating-point index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a double variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx_double_find_secondary\nint32_t db.h::db_idx_double_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const double * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary double-precision floating-point index table by secondary key. \nFind a table row in a secondary double-precision floating-point index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a double variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx_double_lowerbound\nint32_t db.h::db_idx_double_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_double_upperbound\nint32_t db.h::db_idx_double_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_double_end\nint32_t db.h::db_idx_double_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \nfunction db_idx_long_double_store\nint32_t db.h::db_idx_long_double_store (\n    uint64_t scope,\n    capi_name table,\n    capi_name payer,\n    uint64_t id,\n    const long double * secondary\n)\n\nStore an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. \nStore an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table\nParameters:\n\nscope - The scope where the table resides (implied to be within the code of the current receiver) \ntable - The table name \npayer - The account that pays for the storage costs \nid - The primary key to which to associate the secondary key \nsecondary - Pointer to the secondary key \n\nReturns:\niterator to the newly created table row \nPost\nnew secondary key association between primary key id and secondary key \\*secondary is created in the secondary quadruple-precision floating-point index table \nfunction db_idx_long_double_update\nvoid db.h::db_idx_long_double_update (\n    int32_t iterator,\n    capi_name payer,\n    const long double * secondary\n)\n\nUpdate an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table. \nUpdate an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the table row containing the secondary key association to update \npayer - The account that pays for the storage costs (use 0 to continue using current payer) \nsecondary - Pointer to the new secondary key that will replace the existing one of the association \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe secondary key of the table row pointed to by iterator is replaced by \\*secondary \nfunction db_idx_long_double_remove\nvoid db.h::db_idx_long_double_remove (\n    int32_t iterator\n)\n\nRemove a table row from a secondary quadruple-precision floating-point index table. \nRemove a table row from a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - Iterator to the table row to remove \n\nPrecondition:\niterator points to an existing table row in the table \nPost\nthe table row pointed to by iterator is removed and the associated storage costs are refunded to the payer \nfunction db_idx_long_double_next\nint32_t db.h::db_idx_long_double_next (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row following the referenced table row in a secondary quadruple-precision floating-point index table. \nFind the table row following the referenced table row in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the next table row \n\nReturns:\niterator to the table row following the referenced table row (or the end iterator of the table if the referenced table row is the last one in the table) \nPrecondition:\niterator points to an existing table row in the table \nPost\n\\*primary will be replaced with the primary key of the table row following the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_long_double_previous\nint32_t db.h::db_idx_long_double_previous (\n    int32_t iterator,\n    uint64_t * primary\n)\n\nFind the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table. \nFind the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table\nParameters:\n\niterator - The iterator to the referenced table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the previous table row \n\nReturns:\niterator to the table row preceding the referenced table row assuming one exists (it will return -1 if the referenced table row is the first one in the table) \nPrecondition:\niterator points to an existing table row in the table or it is the end iterator of the table \nPost\n\\*primary will be replaced with the primary key of the table row preceding the referenced table row if it exists, otherwise \\*primary will be left untouched \nfunction db_idx_long_double_find_primary\nint32_t db.h::db_idx_long_double_find_primary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    long double * secondary,\n    uint64_t primary\n)\n\nFind a table row in a secondary quadruple-precision floating-point index table by primary key. \nFind a table row in a secondary quadruple-precision floating-point index table by primary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to a long double variable which will have its value set to the secondary key of the found table row \nprimary - The primary key of the table row to look up \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nReturns:\niterator to the table row with a primary key equal to id or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_find_secondary\nint32_t db.h::db_idx_long_double_find_secondary (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    const long double * secondary,\n    uint64_t * primary\n)\n\nFind a table row in a secondary quadruple-precision floating-point index table by secondary key. \nFind a table row in a secondary quadruple-precision floating-point index table by secondary key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key used to lookup the table row \nprimary - Pointer to a long double variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the first table row with a secondary key equal to \\*secondary or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_lowerbound\nint32_t db.h::db_idx_long_double_lowerbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    long double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key. \nFind the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the lowerbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_upperbound\nint32_t db.h::db_idx_long_double_upperbound (\n    capi_name code,\n    uint64_t scope,\n    capi_name table,\n    long double * secondary,\n    uint64_t * primary\n)\n\nFind the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key. \nFind the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \nsecondary - Pointer to secondary key first used to determine the upperbound and which is then replaced with the secondary key of the found table row \nprimary - Pointer to a uint64\\_t variable which will have its value set to the primary key of the found table row \n\nPost\nIf and only if the table row is found, \\*secondary will be replaced with the secondary key of the found table row \nPost\nIf and only if the table row is found, \\*primary will be replaced with the primary key of the found table row \nReturns:\niterator to the found table row or the end iterator of the table if the table row could not be found \nfunction db_idx_long_double_end\nint32_t db.h::db_idx_long_double_end (\n    capi_name code,\n    uint64_t scope,\n    capi_name table\n)\n\nGet an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table. \nGet an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table\nParameters:\n\ncode - The name of the owner of the table \nscope - The scope where the table resides \ntable - The table name \n\nReturns:\nend iterator of the table \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/db.h\n"},"dispatcher_8hpp.html":{"url":"dispatcher_8hpp.html","title":"dispatcher.hpp","keywords":"dispatcher.hpp EOSIO_DISPATCH_INTERNAL EOSIO_DISPATCH_HELPER EOSIO_DISPATCH","body":"file dispatcher.hpp\nGo to the source code of this file.\nDefines\n\n\n\nType\nName\n\n\n\n\n\nEOSIO_DISPATCH_INTERNAL\n\n\n\nEOSIO_DISPATCH_HELPER\n\n\n\nEOSIO_DISPATCHConvenient macro to create contract apply handler.\n\n\n\ndefine EOSIO_DISPATCH_INTERNAL\ndefine EOSIO_DISPATCH_INTERNAL;\n\ndefine EOSIO_DISPATCH_HELPER\ndefine EOSIO_DISPATCH_HELPER;\n\ndefine EOSIO_DISPATCH\ndefine EOSIO_DISPATCH;\n\nConvenient macro to create contract apply handler. \nConvenient macro to create contract apply handler To be able to use this macro, the contract needs to be derived from eosio::contract\nParameters:\n\nTYPE - The class name of the contract \nMEMBERS - The sequence of available actions supported by this contract\n\nExample: \nEOSIO_DISPATCH( eosio::bios, (setpriv)(setalimits)(setglimits)(setprods)(reqauth) )\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/dispatcher.hpp\n"},"eosio_8hpp.html":{"url":"eosio_8hpp.html","title":"eosio.hpp","keywords":"eosio.hpp CONTRACT ACTION TABLE","body":"file eosio.hpp\nGo to the source code of this file.\nDefines\n\n\n\nType\nName\n\n\n\n\n\nCONTRACT\n\n\n\nACTION\n\n\n\nTABLE\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \ndefine CONTRACT\ndefine CONTRACT;\n\nHelper macros to reduce the verbosity for common contracts \ndefine ACTION\ndefine ACTION;\n\ndefine TABLE\ndefine TABLE;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/eosio.hpp\n"},"eosiolib_8cpp.html":{"url":"eosiolib_8cpp.html","title":"eosiolib.cpp","keywords":"eosiolib.cpp eosio::memory_manager eosio::memory_manager::memory eosio::memory_manager::memory::buffer_ptr sbrk malloc calloc realloc free","body":"file eosiolib.cpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::memory_manager\n\n\nclass\neosio::memory_manager::memory\n\n\nclass\neosio::memory_manager::memory::buffer_ptr\n\n\n\n\n\n\nType\nName\n\n\n\n\nvoid *\nsbrk (size_t num_bytes)\n\n\nvoid *\nmalloc (size_t size) namespace eosio\n\n\nvoid *\ncalloc (size_t count, size_t size) Allocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0.\n\n\nvoid *\nrealloc (void * ptr, size_t size) Reallocate the given area of memory.\n\n\nvoid\nfree (void * ptr) Deallocates the given area of memory.\n\n\n\nfunction sbrk\nvoid * eosiolib.cpp::sbrk (\n    size_t num_bytes\n)\n\nfunction malloc\nvoid * eosiolib.cpp::malloc (\n    size_t size\n)\n\nnamespace eosio \nAllocate additional memory. \nfunction calloc\nvoid * eosiolib.cpp::calloc (\n    size_t count,\n    size_t size\n)\n\nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0. \nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0\nParameters:\n\ncount - Number of elements to allocate \nsize - Size of each element \n\nReturns:\nvoid* - Pointer to start of the new allocated memory \nfunction realloc\nvoid * eosiolib.cpp::realloc (\n    void * ptr,\n    size_t size\n)\n\nReallocate the given area of memory. \nReallocate the given area of memory, which is allocated by malloc(), calloc(), or realloc() previously\nParameters:\n\nptr - Pointer to the memory area to be reallocated \nsize - New size of the memory \n\nReturns:\nvoid* - Pointer to the new reallocated memory \nfunction free\nvoid eosiolib.cpp::free (\n    void * ptr\n)\n\nDeallocates the given area of memory. \nDeallocates the given area of memory which is previously allocated by malloc(), calloc(), or realloc() \nParameters:\n\nptr - Pointer to the memory to be deallocated \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/eosiolib.cpp\n"},"fixed__bytes_8hpp.html":{"url":"fixed__bytes_8hpp.html","title":"fixed_bytes.hpp","keywords":"fixed_bytes.hpp eosio::fixed_bytes eosio::fixed_bytes eosio::fixed_bytes::bool_pack","body":"file fixed_bytes.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::fixed_bytes\n\n\nclass\neosio::fixed_bytes\n\n\nstruct\neosio::fixed_bytes::bool_pack\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixed\\_bytes.hpp\n"},"fixed__key_8hpp.html":{"url":"fixed__key_8hpp.html","title":"fixed_key.hpp","keywords":"fixed_key.hpp eosio::fixed_key eosio::fixed_key eosio::fixed_key::bool_pack","body":"file fixed_key.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::fixed_key\n\n\nclass\neosio::fixed_key\n\n\nstruct\neosio::fixed_key::bool_pack\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixed\\_key.hpp\n"},"fixedpoint_8hpp.html":{"url":"fixedpoint_8hpp.html","title":"fixedpoint.hpp","keywords":"fixedpoint.hpp eosio::fixed_point32 eosio::fixed_point64 eosio::fixed_point128 eosio::fixed_point128 eosio::fixed_point64 eosio::fixed_point32","body":"file fixedpoint.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::fixed_point32\n\n\nstruct\neosio::fixed_point64\n\n\nstruct\neosio::fixed_point128\n\n\nstruct\neosio::fixed_point128\n\n\nstruct\neosio::fixed_point64\n\n\nstruct\neosio::fixed_point32\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/fixedpoint.hpp\n"},"ignore_8hpp.html":{"url":"ignore_8hpp.html","title":"ignore.hpp","keywords":"ignore.hpp eosio::ignore eosio::ignore_wrapper","body":"file ignore.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::ignore\n\n\nstruct\neosio::ignore_wrapper\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/ignore.hpp\n"},"memory_8h.html":{"url":"memory_8h.html","title":"memory.h","keywords":"memory.h","body":"file memory.h\nGo to the source code of this file.\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/memory.h\n"},"memory_8hpp.html":{"url":"memory_8hpp.html","title":"memory.hpp","keywords":"memory.hpp sbrk malloc calloc realloc free","body":"file memory.hpp\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void *|sbrk (size_t num_bytes) |\n|void *|malloc (size_t size) Allocate additional memory. |\n|void *|calloc (size_t count, size_t size) Allocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0. |\n|void *|realloc (void * ptr, size_t size) Reallocate the given area of memory. |\n|void|free (void * ptr) Deallocates the given area of memory. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction sbrk\nvoid * memory.hpp::sbrk (\n    size_t num_bytes\n)\n\nfunction malloc\nvoid * memory.hpp::malloc (\n    size_t size\n)\n\nAllocate additional memory. \nnamespace eosio\nAllocate additional memory\nParameters:\n\nsize - Number of additional bytes to be allocated \n\nReturns:\nvoid* - Pointer to start of the new allocated memory\nAllocate additional memory. \nfunction calloc\nvoid * memory.hpp::calloc (\n    size_t count,\n    size_t size\n)\n\nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0. \nAllocate a block of memory for an array of count elements, each of them size bytes long, and initializes all bits with 0\nParameters:\n\ncount - Number of elements to allocate \nsize - Size of each element \n\nReturns:\nvoid* - Pointer to start of the new allocated memory \nfunction realloc\nvoid * memory.hpp::realloc (\n    void * ptr,\n    size_t size\n)\n\nReallocate the given area of memory. \nReallocate the given area of memory, which is allocated by malloc(), calloc(), or realloc() previously\nParameters:\n\nptr - Pointer to the memory area to be reallocated \nsize - New size of the memory \n\nReturns:\nvoid* - Pointer to the new reallocated memory \nfunction free\nvoid memory.hpp::free (\n    void * ptr\n)\n\nDeallocates the given area of memory. \nDeallocates the given area of memory which is previously allocated by malloc(), calloc(), or realloc() \nParameters:\n\nptr - Pointer to the memory to be deallocated \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/memory.hpp\n"},"multi__index_8hpp.html":{"url":"multi__index_8hpp.html","title":"multi_index.hpp","keywords":"multi_index.hpp eosio::const_mem_fun eosio::_multi_index_detail::secondary_index_db_functions eosio::_multi_index_detail::secondary_key_traits eosio::_multi_index_detail::secondary_key_traits< eosio::key256 > eosio::_multi_index_detail::secondary_key_traits< eosio::fixed_bytes< 32 > > eosio::indexed_by eosio::multi_index eosio::multi_index::item eosio::multi_index::item_ptr eosio::multi_index::index eosio::multi_index::index::const_iterator eosio::multi_index::intc eosio::multi_index::const_iterator WRAP_SECONDARY_SIMPLE_TYPE WRAP_SECONDARY_ARRAY_TYPE MAKE_TRAITS_FOR_ARITHMETIC_SECONDARY_KEY","body":"file multi_index.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::const_mem_fun\n\n\nstruct\neosio::_multi_index_detail::secondary_index_db_functions\n\n\nstruct\neosio::_multi_index_detail::secondary_key_traits\n\n\nstruct\neosio::_multi_index_detail::secondary_key_traits\n\n\nstruct\neosio::_multi_index_detail::secondary_key_traits >\n\n\nstruct\neosio::indexed_by\n\n\nclass\neosio::multi_index\n\n\nstruct\neosio::multi_index::item\n\n\nstruct\neosio::multi_index::item_ptr\n\n\nstruct\neosio::multi_index::index\n\n\nstruct\neosio::multi_index::index::const_iterator\n\n\nstruct\neosio::multi_index::intc\n\n\nstruct\neosio::multi_index::const_iterator\n\n\n\nDefines\n\n\n\nType\nName\n\n\n\n\n\nWRAP_SECONDARY_SIMPLE_TYPE\n\n\n\nWRAP_SECONDARY_ARRAY_TYPE\n\n\n\nMAKE_TRAITS_FOR_ARITHMETIC_SECONDARY_KEY\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \ndefine WRAP_SECONDARY_SIMPLE_TYPE\ndefine WRAP_SECONDARY_SIMPLE_TYPE;\n\ndefine WRAP_SECONDARY_ARRAY_TYPE\ndefine WRAP_SECONDARY_ARRAY_TYPE;\n\ndefine MAKE_TRAITS_FOR_ARITHMETIC_SECONDARY_KEY\ndefine MAKE_TRAITS_FOR_ARITHMETIC_SECONDARY_KEY;\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/multi\\_index.hpp\n"},"name_8hpp.html":{"url":"name_8hpp.html","title":"name.hpp","keywords":"name.hpp eosio::name eosio::detail::to_const_char_arr operator\"\"_n","body":"file name.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::name\n\n\nstruct\neosio::detail::to_const_char_arr\n\n\n\n\n\n\nType\nName\n\n\n\n\nconstexpr eosio::name\noperator\"\"_n () namespace eosio\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction operator\"\"_n\nconstexpr eosio::name name.hpp::operator\"\"_n ()\n\nnamespace eosio \nname literal operator\n\"foo\"_n is a shortcut for name{\"foo\"} \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/name.hpp\n"},"permission_8h.html":{"url":"permission_8h.html","title":"permission.h","keywords":"permission.h check_transaction_authorization check_permission_authorization get_permission_last_used get_account_creation_time","body":"file permission.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|int32_t|check_transaction_authorization (const char * trx_data, uint32_t trx_size, const char * pubkeys_data, uint32_t pubkeys_size, const char * perms_data, uint32_t perms_size) Checks if a transaction is authorized by a provided set of keys and permissions. |\n|int32_t|check_permission_authorization (capi_name account, capi_name permission, const char * pubkeys_data, uint32_t pubkeys_size, const char * perms_data, uint32_t perms_size, uint64_t delay_us) Checks if a permission is authorized by a provided delay and a provided set of keys and permissions. |\n|int64_t|get_permission_last_used (capi_name account, capi_name permission) Returns the last used time of a permission. |\n|int64_t|get_account_creation_time (capi_name account) Returns the creation time of an account. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction check_transaction_authorization\nint32_t permission.h::check_transaction_authorization (\n    const char * trx_data,\n    uint32_t trx_size,\n    const char * pubkeys_data,\n    uint32_t pubkeys_size,\n    const char * perms_data,\n    uint32_t perms_size\n)\n\nChecks if a transaction is authorized by a provided set of keys and permissions. \nParameters:\n\ntrx_data - pointer to the start of the serialized transaction \ntrx_size - size (in bytes) of the serialized transaction \npubkeys_data - pointer to the start of the serialized vector of provided public keys \npubkeys_size - size (in bytes) of serialized vector of provided public keys (can be 0 if no public keys are to be provided) \nperms_data - pointer to the start of the serialized vector of provided permissions (empty permission name acts as wildcard) \nperms_size - size (in bytes) of the serialized vector of provided permissions\n\nReturns:\n1 if the transaction is authorized, 0 otherwise \nfunction check_permission_authorization\nint32_t permission.h::check_permission_authorization (\n    capi_name account,\n    capi_name permission,\n    const char * pubkeys_data,\n    uint32_t pubkeys_size,\n    const char * perms_data,\n    uint32_t perms_size,\n    uint64_t delay_us\n)\n\nChecks if a permission is authorized by a provided delay and a provided set of keys and permissions. \nParameters:\n\naccount - the account owner of the permission \npermission - the name of the permission to check for authorization \npubkeys_data - pointer to the start of the serialized vector of provided public keys \npubkeys_size - size (in bytes) of serialized vector of provided public keys (can be 0 if no public keys are to be provided) \nperms_data - pointer to the start of the serialized vector of provided permissions (empty permission name acts as wildcard) \nperms_size - size (in bytes) of the serialized vector of provided permissions \ndelay_us - the provided delay in microseconds (cannot exceed INT64_MAX)\n\nReturns:\n1 if the permission is authorized, 0 otherwise \nfunction get_permission_last_used\nint64_t permission.h::get_permission_last_used (\n    capi_name account,\n    capi_name permission\n)\n\nReturns the last used time of a permission. \nParameters:\n\naccount - the account owner of the permission \npermission - the name of the permission\n\nReturns:\nthe last used time (in microseconds since Unix epoch) of the permission \nfunction get_account_creation_time\nint64_t permission.h::get_account_creation_time (\n    capi_name account\n)\n\nReturns the creation time of an account. \nParameters:\n\naccount - the account\n\nReturns:\nthe creation time (in microseconds since Unix epoch) of the account \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/permission.h\n"},"permission_8hpp.html":{"url":"permission_8hpp.html","title":"permission.hpp","keywords":"permission.hpp","body":"file permission.hpp\nGo to the source code of this file.\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/permission.hpp\n"},"print_8h.html":{"url":"print_8h.html","title":"print.h","keywords":"print.h prints prints_l printi printui printi128 printui128 printsf printdf printqf printn printhex","body":"file print.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void|prints (const char * cstr) Prints string. |\n|void|prints_l (const char * cstr, uint32_t len) Prints string. |\n|void|printi (int64_t value) Prints value as a 64 bit signed integer. |\n|void|printui (uint64_t value) Prints value as a 64 bit unsigned integer. |\n|void|printi128 (const int128_t * value) Prints value as a 128 bit signed integer. |\n|void|printui128 (const uint128_t * value) Prints value as a 128 bit unsigned integer. |\n|void|printsf (float value) Prints value as single-precision floating point number (i.e. float) |\n|void|printdf (double value) Prints value as double-precision floating point number (i.e. double) |\n|void|printqf (const long double * value) Prints value as quadruple-precision floating point number (i.e. long double) |\n|void|printn (uint64_t name) Prints a 64 bit names as base32 encoded string. |\n|void|printhex (const void * data, uint32_t datalen) |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction prints\nvoid print.h::prints (\n    const char * cstr\n)\n\nPrints string. \nPrints string \nParameters:\n\ncstr - a null terminated string\n\nExample:\nprints(\"Hello World!\"); // Output: Hello World!\n\nfunction prints_l\nvoid print.h::prints_l (\n    const char * cstr,\n    uint32_t len\n)\n\nPrints string. \nPrints string up to given length \nParameters:\n\ncstr - pointer to string \nlen - len of string to be printed\n\nExample:\nprints_l(\"Hello World!\", 5); // Output: Hello\n\nfunction printi\nvoid print.h::printi (\n    int64_t value\n)\n\nPrints value as a 64 bit signed integer. \nPrints value as a 64 bit signed integer \nParameters:\n\nvalue of 64 bit signed integer to be printed\n\nExample:\nprinti(-1e+18); // Output: -1000000000000000000\n\nfunction printui\nvoid print.h::printui (\n    uint64_t value\n)\n\nPrints value as a 64 bit unsigned integer. \nPrints value as a 64 bit unsigned integer \nParameters:\n\nvalue of 64 bit unsigned integer to be printed\n\nExample:\nprintui(1e+18); // Output: 1000000000000000000\n\nfunction printi128\nvoid print.h::printi128 (\n    const int128_t * value\n)\n\nPrints value as a 128 bit signed integer. \nPrints value as a 128 bit signed integer \nParameters:\n\nvalue is a pointer to the 128 bit signed integer to be printed\n\nExample:\nint128_t large_int(-87654323456);\nprinti128(&large_int); // Output: -87654323456\n\nfunction printui128\nvoid print.h::printui128 (\n    const uint128_t * value\n)\n\nPrints value as a 128 bit unsigned integer. \nPrints value as a 128 bit unsigned integer \nParameters:\n\nvalue is a pointer to the 128 bit unsigned integer to be printed\n\nExample:\nuint128_t large_int(87654323456);\nprintui128(&large_int); // Output: 87654323456\n\nfunction printsf\nvoid print.h::printsf (\n    float value\n)\n\nPrints value as single-precision floating point number (i.e. float) \nPrints value as single-precision floating point number \nParameters:\n\nvalue of float to be printed\n\nExample:\nfloat value = 5.0 / 10.0;\nprintsf(value); // Output: 0.5\n\nfunction printdf\nvoid print.h::printdf (\n    double value\n)\n\nPrints value as double-precision floating point number (i.e. double) \nPrints value as double-precision floating point number \nParameters:\n\nvalue of double to be printed\n\nExample:\ndouble value = 5.0 / 10.0;\nprintdf(value); // Output: 0.5\n\nfunction printqf\nvoid print.h::printqf (\n    const long double * value\n)\n\nPrints value as quadruple-precision floating point number (i.e. long double) \nPrints value as quadruple-precision floating point number \nParameters:\n\nvalue is a pointer to the long double to be printed\n\nExample:\nlong double value = 5.0 / 10.0;\nprintqf(value); // Output: 0.5\n\nfunction printn\nvoid print.h::printn (\n    uint64_t name\n)\n\nPrints a 64 bit names as base32 encoded string. \nPrints a 64 bit names as base32 encoded string \nParameters:\n\nname - 64 bit name to be printed\n\nExample: \nprintn(\"abcde\"_n); // Output: abcde\n\nfunction printhex\nvoid print.h::printhex (\n    const void * data,\n    uint32_t datalen\n)\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/print.h\n"},"print_8hpp.html":{"url":"print_8hpp.html","title":"print.hpp","keywords":"print.hpp eosio::iostream","body":"file print.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::iostream\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/print.hpp\n"},"privileged_8h.html":{"url":"privileged_8h.html","title":"privileged.h","keywords":"privileged.h get_resource_limits set_resource_limits set_proposed_producers set_active_producers is_privileged set_privileged set_blockchain_parameters_packed get_blockchain_parameters_packed activate_feature","body":"file privileged.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void|get_resource_limits (capi_name account, int64_t * ram_bytes, int64_t * net_weight, int64_t * cpu_weight) Get the resource limits of an account Get the resource limits of an account. |\n|void|set_resource_limits (capi_name account, int64_t ram_bytes, int64_t net_weight, int64_t cpu_weight) Set the resource limits of an account Set the resource limits of an account. |\n|int64_t|set_proposed_producers (char * producer_data, uint32_t producer_data_size) |\n|void|set_active_producers (char * producer_data, uint32_t producer_data_size) Set new active producers Set new active producers. Producers will only be activated once the block which starts the next round is irrreversible. |\n|bool|is_privileged (capi_name account) Check if an account is privileged Check if an account is privileged. |\n|void|set_privileged (capi_name account, bool is_priv) Set the privileged status of an account Set the privileged status of an account. |\n|void|set_blockchain_parameters_packed (char * data, uint32_t datalen) Set the blockchain parameters Set the blockchain parameters. |\n|uint32_t|get_blockchain_parameters_packed (char * data, uint32_t datalen) Retrieve the blolckchain parameters Retrieve the blolckchain parameters. |\n|void|activate_feature (int64_t f) Activate new feature Activate new feature. |\nfunction get_resource_limits\nvoid privileged.h::get_resource_limits (\n    capi_name account,\n    int64_t * ram_bytes,\n    int64_t * net_weight,\n    int64_t * cpu_weight\n)\n\nGet the resource limits of an account Get the resource limits of an account. \nParameters:\n\naccount - name of the account whose resource limit to get \nram_bytes - pointer to int64\\_t to hold retrieved ram limit in absolute bytes \nnet_weight - pointer to int64\\_t to hold net limit \ncpu_weight - pointer to int64\\_t to hold cpu limit \n\nfunction set_resource_limits\nvoid privileged.h::set_resource_limits (\n    capi_name account,\n    int64_t ram_bytes,\n    int64_t net_weight,\n    int64_t cpu_weight\n)\n\nSet the resource limits of an account Set the resource limits of an account. \nParameters:\n\naccount - name of the account whose resource limit to be set \nram_bytes - ram limit in absolute bytes \nnet_weight - fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts) \ncpu_weight - fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts) \n\nfunction set_proposed_producers\nint64_t privileged.h::set_proposed_producers (\n    char * producer_data,\n    uint32_t producer_data_size\n)\n\nProposes a schedule change, once the block that contains the proposal becomes irreversible, the schedule is promoted to \"pending\" automatically. Once the block that promotes the schedule is irreversible, the schedule will become \"active\" \nParameters:\n\nproducer_data - packed data of produce_keys in the appropriate producer schedule order \nproducer_data_size - size of the data buffer\n\nReturns:\n-1 if proposing a new producer schedule was unsuccessful, otherwise returns the version of the new proposed schedule \nfunction set_active_producers\nvoid privileged.h::set_active_producers (\n    char * producer_data,\n    uint32_t producer_data_size\n)\n\nSet new active producers Set new active producers. Producers will only be activated once the block which starts the next round is irrreversible. \nParameters:\n\nproducer_data - pointer to producer schedule packed as bytes \nproducer_data_size - size of the packed producer schedule \n\nPrecondition:\nproducer\\_data is a valid pointer to a range of memory at least producer\\_data\\_size bytes long that contains serialized produced schedule data \nfunction is_privileged\nbool privileged.h::is_privileged (\n    capi_name account\n)\n\nCheck if an account is privileged Check if an account is privileged. \nParameters:\n\naccount - name of the account to be checked \n\nReturns:\ntrue if the account is privileged \nReturns:\nfalse if the account is not privileged \nfunction set_privileged\nvoid privileged.h::set_privileged (\n    capi_name account,\n    bool is_priv\n)\n\nSet the privileged status of an account Set the privileged status of an account. \nParameters:\n\naccount - name of the account whose privileged account to be set \nis_priv - privileged status \n\nfunction set_blockchain_parameters_packed\nvoid privileged.h::set_blockchain_parameters_packed (\n    char * data,\n    uint32_t datalen\n)\n\nSet the blockchain parameters Set the blockchain parameters. \nParameters:\n\ndata - pointer to blockchain parameters packed as bytes \ndatalen - size of the packed blockchain parameters \n\nPrecondition:\ndata is a valid pointer to a range of memory at least datalen bytes long that contains packed blockchain params data \nfunction get_blockchain_parameters_packed\nuint32_t privileged.h::get_blockchain_parameters_packed (\n    char * data,\n    uint32_t datalen\n)\n\nRetrieve the blolckchain parameters Retrieve the blolckchain parameters. \nParameters:\n\ndata - output buffer of the blockchain parameters, only retrieved if sufficent size to hold packed data. \ndatalen - size of the data buffer, 0 to report required size. \n\nReturns:\nsize of the blockchain parameters \nPrecondition:\ndata is a valid pointer to a range of memory at least datalen bytes long \nPost\ndata is filled with packed blockchain parameters \nfunction activate_feature\nvoid privileged.h::activate_feature (\n    int64_t f\n)\n\nActivate new feature Activate new feature. \nParameters:\n\nf - name (identifier) of the feature to be activated \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/privileged.h\n"},"privileged_8hpp.html":{"url":"privileged_8hpp.html","title":"privileged.hpp","keywords":"privileged.hpp eosio::blockchain_parameters eosio::producer_key","body":"file privileged.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::blockchain_parameters\n\n\nstruct\neosio::producer_key\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/privileged.hpp\n"},"producer__schedule_8hpp.html":{"url":"producer__schedule_8hpp.html","title":"producer_schedule.hpp","keywords":"producer_schedule.hpp eosio::producer_schedule","body":"file producer_schedule.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::producer_schedule\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/producer\\_schedule.hpp\n"},"public__key_8hpp.html":{"url":"public__key_8hpp.html","title":"public_key.hpp","keywords":"public_key.hpp","body":"file public_key.hpp\nGo to the source code of this file.\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/public\\_key.hpp\n"},"reflect_8hpp.html":{"url":"reflect_8hpp.html","title":"reflect.hpp","keywords":"reflect.hpp eosio::reflector EOSLIB_REFLECT_VISIT_BASE EOSLIB_REFLECT_VISIT2_BASE EOSLIB_REFLECT_VISIT_MEMBER EOSLIB_REFLECT_VISIT2_MEMBER EOSLIB_REFLECT_BASE_MEMBER_COUNT EOSLIB_REFLECT_MEMBER_COUNT EOSLIB_REFLECT_DERIVED_IMPL_INLINE EOSLIB_REFLECT_DERIVED_IMPL_EXT EOSLIB_REFLECT EOSLIB_REFLECT_TEMPLATE EOSLIB_REFLECT_EMPTY EOSLIB_REFLECT_FWD EOSLIB_REFLECT_DERIVED_IMPL EOSLIB_REFLECT_IMPL EOSLIB_REFLECT_DERIVED EOSLIB_REFLECT_DERIVED_TEMPLATE","body":"file reflect.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\neosio::reflector\n\n\n\nDefines\n\n\n\nType\nName\n\n\n\n\n\nEOSLIB_REFLECT_VISIT_BASEeosio\n\n\n\nEOSLIB_REFLECT_VISIT2_BASE\n\n\n\nEOSLIB_REFLECT_VISIT_MEMBER\n\n\n\nEOSLIB_REFLECT_VISIT2_MEMBER\n\n\n\nEOSLIB_REFLECT_BASE_MEMBER_COUNT\n\n\n\nEOSLIB_REFLECT_MEMBER_COUNT\n\n\n\nEOSLIB_REFLECT_DERIVED_IMPL_INLINE\n\n\n\nEOSLIB_REFLECT_DERIVED_IMPL_EXT\n\n\n\nEOSLIB_REFLECTSpecializes eosio::reflector for TYPE.\n\n\n\nEOSLIB_REFLECT_TEMPLATEPerform class template reflection.\n\n\n\nEOSLIB_REFLECT_EMPTYPerform class reflection on empty class.\n\n\n\nEOSLIB_REFLECT_FWDPerform forward declaration of class reflection.\n\n\n\nEOSLIB_REFLECT_DERIVED_IMPL\n\n\n\nEOSLIB_REFLECT_IMPL\n\n\n\nEOSLIB_REFLECT_DERIVEDSpecializes eosio::reflector for TYPE where type inherits other reflected classes.\n\n\n\nEOSLIB_REFLECT_DERIVED_TEMPLATEPerform class template reflection where TYPE inherits other reflected classes.\n\n\n\ndefine EOSLIB_REFLECT_VISIT_BASE\ndefine EOSLIB_REFLECT_VISIT_BASE;\n\neosio \ndefine EOSLIB_REFLECT_VISIT2_BASE\ndefine EOSLIB_REFLECT_VISIT2_BASE;\n\ndefine EOSLIB_REFLECT_VISIT_MEMBER\ndefine EOSLIB_REFLECT_VISIT_MEMBER;\n\ndefine EOSLIB_REFLECT_VISIT2_MEMBER\ndefine EOSLIB_REFLECT_VISIT2_MEMBER;\n\ndefine EOSLIB_REFLECT_BASE_MEMBER_COUNT\ndefine EOSLIB_REFLECT_BASE_MEMBER_COUNT;\n\ndefine EOSLIB_REFLECT_MEMBER_COUNT\ndefine EOSLIB_REFLECT_MEMBER_COUNT;\n\ndefine EOSLIB_REFLECT_DERIVED_IMPL_INLINE\ndefine EOSLIB_REFLECT_DERIVED_IMPL_INLINE;\n\ndefine EOSLIB_REFLECT_DERIVED_IMPL_EXT\ndefine EOSLIB_REFLECT_DERIVED_IMPL_EXT;\n\ndefine EOSLIB_REFLECT\ndefine EOSLIB_REFLECT;\n\nSpecializes eosio::reflector for TYPE. \nPerform class reflection\nParameters:\n\nTYPE - the class template to be reflected \nMEMBERS - a sequence of member names. (field1)(field2)(field3)\n\nSee also: EOSLIB_REFLECT_DERIVED \ndefine EOSLIB_REFLECT_TEMPLATE\ndefine EOSLIB_REFLECT_TEMPLATE;\n\nPerform class template reflection. \nPerform class template reflection\nParameters:\n\nTEMPLATE_ARGS - a sequence of template args. (args1)(args2)(args3) \nTYPE - the class template to be reflected \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_REFLECT_EMPTY\ndefine EOSLIB_REFLECT_EMPTY;\n\nPerform class reflection on empty class. \nPerform class reflection on empty class\nParameters:\n\nTYPE - the class to be reflected \n\ndefine EOSLIB_REFLECT_FWD\ndefine EOSLIB_REFLECT_FWD;\n\nPerform forward declaration of class reflection. \nPerform forward declaration of class reflection\nParameters:\n\nTYPE - the class to be reflected \n\ndefine EOSLIB_REFLECT_DERIVED_IMPL\ndefine EOSLIB_REFLECT_DERIVED_IMPL;\n\ndefine EOSLIB_REFLECT_IMPL\ndefine EOSLIB_REFLECT_IMPL;\n\ndefine EOSLIB_REFLECT_DERIVED\ndefine EOSLIB_REFLECT_DERIVED;\n\nSpecializes eosio::reflector for TYPE where type inherits other reflected classes. \nPerform class reflection where TYPE inherits other reflected classes\nParameters:\n\nTYPE - the class to be reflected \nINHERITS - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_REFLECT_DERIVED_TEMPLATE\ndefine EOSLIB_REFLECT_DERIVED_TEMPLATE;\n\nPerform class template reflection where TYPE inherits other reflected classes. \nPerform class template reflection where TYPE inherits other reflected classes\nParameters:\n\nTEMPLATE_ARGS - a sequence of template args. (args1)(args2)(args3) \nTYPE - the class to be reflected \nINHERITS - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/reflect.hpp\n"},"serialize_8hpp.html":{"url":"serialize_8hpp.html","title":"serialize.hpp","keywords":"serialize.hpp EOSLIB_REFLECT_MEMBER_OP EOSLIB_SERIALIZE EOSLIB_SERIALIZE_DERIVED","body":"file serialize.hpp\nGo to the source code of this file.\nDefines\n\n\n\nType\nName\n\n\n\n\n\nEOSLIB_REFLECT_MEMBER_OP\n\n\n\nEOSLIB_SERIALIZEDefines serialization and deserialization for a class.\n\n\n\nEOSLIB_SERIALIZE_DERIVEDDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined.\n\n\n\ndefine EOSLIB_REFLECT_MEMBER_OP\ndefine EOSLIB_REFLECT_MEMBER_OP;\n\ndefine EOSLIB_SERIALIZE\ndefine EOSLIB_SERIALIZE;\n\nDefines serialization and deserialization for a class. \nDefines serialization and deserialization for a class\nParameters:\n\nTYPE - the class to have its serialization and deserialization defined \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\ndefine EOSLIB_SERIALIZE_DERIVED\ndefine EOSLIB_SERIALIZE_DERIVED;\n\nDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined. \nDefines serialization and deserialization for a class which inherits from other classes that have their serialization and deserialization defined\nParameters:\n\nTYPE - the class to have its serialization and deserialization defined \nBASE - a sequence of base class names (basea)(baseb)(basec) \nMEMBERS - a sequence of member names. (field1)(field2)(field3) \n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/serialize.hpp\n"},"singleton_8hpp.html":{"url":"singleton_8hpp.html","title":"singleton.hpp","keywords":"singleton.hpp eosio::singleton eosio::singleton::row","body":"file singleton.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::singleton\n\n\nstruct\neosio::singleton::row\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/singleton.hpp\n"},"stdlib_8hpp.html":{"url":"stdlib_8hpp.html","title":"stdlib.hpp","keywords":"stdlib.hpp","body":"file stdlib.hpp\nGo to the source code of this file.\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/stdlib.hpp\n"},"symbol_8hpp.html":{"url":"symbol_8hpp.html","title":"symbol.hpp","keywords":"symbol.hpp eosio::symbol_code eosio::symbol eosio::extended_symbol","body":"file symbol.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::symbol_code\n\n\nclass\neosio::symbol\n\n\nclass\neosio::extended_symbol\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/symbol.hpp\n"},"system_8h.html":{"url":"system_8h.html","title":"system.h","keywords":"system.h eosio_assert eosio_assert_message eosio_assert_code eosio_exit current_time now","body":"file system.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void|eosio_assert (uint32_t test, const char * msg) Aborts processing of this action and unwinds all pending changes. |\n|void|eosio_assert_message (uint32_t test, const char * msg, uint32_t msg_len) Aborts processing of this action and unwinds all pending changes. |\n|void|eosio_assert_code (uint32_t test, uint64_t code) Aborts processing of this action and unwinds all pending changes. |\n|void|eosio_exit (int32_t code) Aborts execution of wasm without failing the contract. |\n|uint64_t|current_time () Get time of the current block (i.e. the block including this action) |\n|uint32_t|now () Get time (rounded down to the nearest second) of the current block (i.e. the block including this action) |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction eosio_assert\nvoid system.h::eosio_assert (\n    uint32_t test,\n    const char * msg\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore\n\nExample:\neosio_assert(1 == 2, \"One is not equal to two.\");\neosio_assert(1 == 1, \"One is not equal to one.\");\n\nParameters:\n\nmsg - a null terminated string explaining the reason for failure \n\nfunction eosio_assert_message\nvoid system.h::eosio_assert_message (\n    uint32_t test,\n    const char * msg,\n    uint32_t msg_len\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore \nmsg - a pointer to the start of string explaining the reason for failure \nmsg_len - length of the string \n\nfunction eosio_assert_code\nvoid system.h::eosio_assert_code (\n    uint32_t test,\n    uint64_t code\n)\n\nAborts processing of this action and unwinds all pending changes. \nAborts processing of this action and unwinds all pending changes if the test condition is true \nParameters:\n\ntest - 0 to abort, 1 to ignore \ncode - the error code \n\nfunction eosio_exit\nvoid system.h::eosio_exit (\n    int32_t code\n)\n\nAborts execution of wasm without failing the contract. \nThis method will abort execution of wasm without failing the contract. This is used to bypass all cleanup / destructors that would normally be called. \nParameters:\n\ncode - the exit code Example:\n\neosio_exit(0);\neosio_exit(1);\neosio_exit(2);\neosio_exit(3);\n\nfunction current_time\nuint64_t system.h::current_time ()\n\nGet time of the current block (i.e. the block including this action) \nReturns the time in microseconds from 1970 of the current block \nReturns:\ntime in microseconds from 1970 of the current block \nfunction now\nuint32_t system.h::now ()\n\nGet time (rounded down to the nearest second) of the current block (i.e. the block including this action) \nReturns the time in seconds from 1970 of the block including this action \nReturns:\ntime in seconds from 1970 of the current block \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/system.h\n"},"time_8hpp.html":{"url":"time_8hpp.html","title":"time.hpp","keywords":"time.hpp eosio::microseconds eosio::time_point eosio::time_point_sec eosio::block_timestamp","body":"file time.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::microseconds\n\n\nclass\neosio::time_point\n\n\nclass\neosio::time_point_sec\n\n\nclass\neosio::block_timestamp\n\n\n\n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/time.hpp\n"},"transaction_8h.html":{"url":"transaction_8h.html","title":"transaction.h","keywords":"transaction.h send_deferred cancel_deferred read_transaction transaction_size tapos_block_num tapos_block_prefix expiration get_action get_context_free_data","body":"file transaction.h\nGo to the source code of this file.\n|Type|Name|\n|-----|-----|\n|void|send_deferred (const uint128_t & sender_id, capi_name payer, const char * serialized_transaction, size_t size, uint32_t replace_existing = 0) Sends a deferred transaction. |\n|int|cancel_deferred (const uint128_t & sender_id) Cancels a deferred transaction. |\n|size_t|read_transaction (char * buffer, size_t size) Access a copy of the currently executing transaction. |\n|size_t|transaction_size () Gets the size of the currently executing transaction. |\n|int|tapos_block_num () Gets the block number used for TAPOS on the currently executing transaction. |\n|int|tapos_block_prefix () Gets the block prefix used for TAPOS on the currently executing transaction. |\n|uint32_t|expiration () Gets the expiration of the currently executing transaction. |\n|int|get_action (uint32_t type, uint32_t index, char * buff, size_t size) Retrieves the indicated action from the active transaction. |\n|int|get_context_free_data (uint32_t index, char * buff, size_t size) Retrieve the signed_transaction.context_free_data[index]. |\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \nfunction send_deferred\nvoid transaction.h::send_deferred (\n    const uint128_t & sender_id,\n    capi_name payer,\n    const char * serialized_transaction,\n    size_t size,\n    uint32_t replace_existing = 0\n)\n\nSends a deferred transaction. \nSends a deferred transaction.\nParameters:\n\nsender_id - ID of sender \npayer - Account paying for RAM \nserialized_transaction - Pointer of serialized transaction to be deferred \nsize - Size to reserve \nreplace_existing - f this is 0 then if the provided sender_id is already in use by an in-flight transaction from this contract, which will be a failing assert. If 1 then transaction will atomically cancel/replace the inflight transaction \n\nfunction cancel_deferred\nint transaction.h::cancel_deferred (\n    const uint128_t & sender_id\n)\n\nCancels a deferred transaction. \nCancels a deferred transaction.\nParameters:\n\nsender_id - The id of the sender\n\nPrecondition:\nThe deferred transaction ID exists. \nPrecondition:\nThe deferred transaction ID has not yet been published. \nPost\nDeferred transaction canceled.\nReturns:\n1 if transaction was canceled, 0 if transaction was not found\nExample:\nid = 0xffffffffffffffff\ncancel_deferred( id );\n\nfunction read_transaction\nsize_t transaction.h::read_transaction (\n    char * buffer,\n    size_t size\n)\n\nAccess a copy of the currently executing transaction. \nAccess a copy of the currently executing transaction.\nParameters:\n\nbuffer - a buffer to write the current transaction to \nsize - the size of the buffer, 0 to return required size \n\nReturns:\nthe size of the transaction written to the buffer, or number of bytes that can be copied if size==0 passed \nfunction transaction_size\nsize_t transaction.h::transaction_size ()\n\nGets the size of the currently executing transaction. \nGets the size of the currently executing transaction.\nReturns:\nsize of the currently executing transaction \nfunction tapos_block_num\nint transaction.h::tapos_block_num ()\n\nGets the block number used for TAPOS on the currently executing transaction. \nGets the block number used for TAPOS on the currently executing transaction.\nReturns:\nblock number used for TAPOS on the currently executing transaction Example: \nint tbn = tapos_block_num();\n\nfunction tapos_block_prefix\nint transaction.h::tapos_block_prefix ()\n\nGets the block prefix used for TAPOS on the currently executing transaction. \nGets the block prefix used for TAPOS on the currently executing transaction.\nReturns:\nblock prefix used for TAPOS on the currently executing transaction Example: \nint tbp = tapos_block_prefix();\n\nfunction expiration\nuint32_t transaction.h::expiration ()\n\nGets the expiration of the currently executing transaction. \nGets the expiration of the currently executing transaction.\nReturns:\nexpiration of the currently executing transaction in seconds since Unix epoch Example: \nuint32_t tm = expiration();\neosio_print(tm);\n\nfunction get_action\nint transaction.h::get_action (\n    uint32_t type,\n    uint32_t index,\n    char * buff,\n    size_t size\n)\n\nRetrieves the indicated action from the active transaction. \nRetrieves the indicated action from the active transaction.\nParameters:\n\ntype - 0 for context free action, 1 for action \nindex - the index of the requested action \nbuff - output packed buff of the action \nsize - amount of buff read, pass 0 to have size returned \n\nReturns:\nthe size of the action, -1 on failure \nfunction get_context_free_data\nint transaction.h::get_context_free_data (\n    uint32_t index,\n    char * buff,\n    size_t size\n)\n\nRetrieve the signed_transaction.context_free_data[index]. \nRetrieve the signed_transaction.context_free_data[index].\nParameters:\n\nindex - the index of the context_free_data entry to retrieve \nbuff - output buff of the context_free_data entry \nsize - amount of context_free_data[index] to retrieve into buff, 0 to report required size \n\nReturns:\nsize copied, or context_free_data[index].size() if 0 passed for size, or -1 if index not valid \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/transaction.h\n"},"transaction_8hpp.html":{"url":"transaction_8hpp.html","title":"transaction.hpp","keywords":"transaction.hpp eosio::transaction_header eosio::transaction eosio::onerror","body":"file transaction.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nclass\neosio::transaction_header\n\n\nclass\neosio::transaction\n\n\nstruct\neosio::onerror\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/transaction.hpp\n"},"types_8h.html":{"url":"types_8h.html","title":"types.h","keywords":"types.h capi_public_key capi_signature ALIGNED capi_name ALIGNED ALIGNED ALIGNED","body":"file types.h\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\ncapi_public_key\n\n\nstruct\ncapi_signature\n\n\n\nDefines\n\n\n\nType\nName\n\n\n\n\n\nALIGNEDMacro to align/overalign a type to ensure calls to intrinsics with pointers/references are properly aligned.\n\n\n\n\n\n\nType\nName\n\n\n\n\ntypedef uint64_t\ncapi_name\n\n\n\n\n\n\nType\nName\n\n\n\n\nstruct\nALIGNED (capi_checksum256) 256-bit hash\n\n\nstruct\nALIGNED (capi_checksum160) 160-bit hash\n\n\nstruct\nALIGNED (capi_checksum512) 512-bit hash\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \ndefine ALIGNED\ndefine ALIGNED;\n\nMacro to align/overalign a type to ensure calls to intrinsics with pointers/references are properly aligned. \nMacro to align/overalign a type to ensure calls to intrinsics with pointers/references are properly aligned \ntypedef capi_name\ntypedef uint64_t capi_name;\n\nfunction ALIGNED\nstruct types.h::ALIGNED (\n    capi_checksum256 \n)\n\n256-bit hash \n256-bit hash \nfunction ALIGNED\nstruct types.h::ALIGNED (\n    capi_checksum160 \n)\n\n160-bit hash \n160-bit hash \nfunction ALIGNED\nstruct types.h::ALIGNED (\n    capi_checksum512 \n)\n\n512-bit hash \n512-bit hash \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/types.h\n"},"varint_8hpp.html":{"url":"varint_8hpp.html","title":"varint.hpp","keywords":"varint.hpp unsigned_int signed_int","body":"file varint.hpp\nGo to the source code of this file.\nClasses\n\n\n\nType\nName\n\n\n\n\nstruct\nunsigned_int\n\n\nstruct\nsigned_int\n\n\n\nDetailed Description\nCopyright\ndefined in eos/LICENSE.txt \n\nThe documentation for this class was generated from the following file: in/eosio.cdt/libraries/eosiolib/varint.hpp\n"}}}