# Summary

* [Introduction](README.md)
* [guides](/guides/index.md)
    * [cmake](/guides/cmake.md)
    * [first smart contract](/guides/first-smart-contract.md)
    * [generator attributes](/guides/generator-attributes.md)
    * [native tester](/guides/native-tester.md)
* [tools](/tools/index.md)
    * [eosio abidiff](/tools/eosio-abidiff.md)
    * [eosio abigen](/tools/eosio-abigen.md)
    * [eosio cpp](/tools/eosio-cpp.md)
    * [eosio init](/tools/eosio-init.md)
    * [eosio ld](/tools/eosio-ld.md)
* [upgrading](/upgrading/index.md)
    * [1.2 to 1.3](/upgrading/1.2-to-1.3.md)
* [Smart Contract API](/modules.md)
    * [Contracts](/group__contracts.md)
      * [Action](/group__action.md)
      * [Contract](/group__contract.md)
      * [Dispatcher](/group__dispatcher.md)
      * [Multiindex](/group__multiindex.md)
      * [Permission](/group__permission.md)
      * [Privileged](/group__privileged.md)
      * [Producer key](/group__producer__key.md)
      * [Producer schedule](/group__producer__schedule.md)
      * [Singleton](/group__singleton.md)
      * [System](/group__system.md)
      * [Transaction](/group__transaction.md)
    * [Core](/group__core.md)
      * [Asset](/group__asset.md)
      * [Binary extension](/group__binary__extension.md)
      * [Console](/group__console.md)
      * [Crypto](/group__crypto.md)
      * [Datastream](/group__datastream.md)
      * [Fixed bytes](/group__fixed__bytes.md)
      * [Ignore](/group__ignore.md)
      * [Name](/group__name.md)
      * [Public key](/group__public__key.md)
      * [Serialize](/group__serialize.md)
      * [Signature](/group__signature.md)
      * [Symbol](/group__symbol.md)
      * [System](/group__system.md)
      * [Time](/group__time.md)
      * [Varint](/group__varint.md)
    * [Types](/group__types.md)
      * [Binary extension](/group__binary__extension.md)
      * [Contract](/group__contract.md)
      * [Fixed bytes](/group__fixed__bytes.md)
      * [Name](/group__name.md)
      * [Permission](/group__permission.md)
      * [Producer key](/group__producer__key.md)
      * [Producer schedule](/group__producer__schedule.md)
      * [Public key](/group__public__key.md)
      * [Signature](/group__signature.md)
      * [Varint](/group__varint.md)
* [Browse](/classes.md)
  * [Class Index](/classes.md)
  * [Function Index](/functions.md)
  * [Variable Index](/variables.md)
  * [Enumeration Index](/enumerations.md)
  * [Class List](/annotated.md)
    * [namespace eosio](/namespaceeosio.md)
      * [namespace _datastream_detail](/namespaceeosio_1_1__datastream__detail.md)
      * [namespace _multi_index_detail](/namespaceeosio_1_1__multi__index__detail.md)
        * [struct secondary_index_db_functions](/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.md)
        * [struct secondary_key_traits](/structeosio_1_1__multi__index__detail_1_1secondary__key__traits.md)
        * [struct secondary_key_traits< double >](/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_01_4.md)
        * [struct secondary_key_traits< eosio::fixed_bytes< 32 > >](/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4.md)
        * [struct secondary_key_traits< long double >](/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_01_4.md)
      * [struct action](/structeosio_1_1action.md)
      * [struct action_wrapper](/structeosio_1_1action__wrapper.md)
      * [struct asset](/structeosio_1_1asset.md)
      * [class binary_extension](/classeosio_1_1binary__extension.md)
      * [class block_timestamp](/classeosio_1_1block__timestamp.md)
      * [struct blockchain_parameters](/structeosio_1_1blockchain__parameters.md)
      * [struct const_mem_fun](/structeosio_1_1const__mem__fun.md)
      * [class contract](/classeosio_1_1contract.md)
      * [class datastream](/classeosio_1_1datastream.md)
      * [class datastream< size_t >](/classeosio_1_1datastream_3_01size__t_01_4.md)
      * [namespace detail](/namespaceeosio_1_1detail.md)
        * [struct to_const_char_arr](/structeosio_1_1detail_1_1to__const__char__arr.md)
      * [struct extended_asset](/structeosio_1_1extended__asset.md)
      * [class extended_symbol](/classeosio_1_1extended__symbol.md)
      * [class fixed_bytes](/classeosio_1_1fixed__bytes.md)
        * [struct bool_pack](/structeosio_1_1fixed__bytes_1_1bool__pack.md)
      * [struct ignore](/structeosio_1_1ignore.md)
      * [struct ignore_wrapper](/structeosio_1_1ignore__wrapper.md)
      * [namespace impl](/namespaceeosio_1_1impl.md)
        * [struct concat_t](/structeosio_1_1impl_1_1concat__t.md)
        * [struct str_t](/structeosio_1_1impl_1_1str__t.md)
      * [struct indexed_by](/structeosio_1_1indexed__by.md)
      * [struct inline_dispatcher](/structeosio_1_1inline__dispatcher.md)
      * [struct inline_dispatcher< void(T::*)(Args...), Name >](/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4.md)
      * [namespace internal_use_do_not_use](/namespaceeosio_1_1internal__use__do__not__use.md)
      * [class iostream](/classeosio_1_1iostream.md)
      * [class microseconds](/classeosio_1_1microseconds.md)
      * [class multi_index](/classeosio_1_1multi__index.md)
        * [struct const_iterator](/structeosio_1_1multi__index_1_1const__iterator.md)
        * [struct index](/structeosio_1_1multi__index_1_1index.md)
          * [struct const_iterator](/structeosio_1_1multi__index_1_1index_1_1const__iterator.md)
        * [struct intc](/structeosio_1_1multi__index_1_1intc.md)
        * [struct item](/structeosio_1_1multi__index_1_1item.md)
        * [struct item_ptr](/structeosio_1_1multi__index_1_1item__ptr.md)
      * [struct name](/structeosio_1_1name.md)
      * [struct onerror](/structeosio_1_1onerror.md)
      * [struct overloaded](/structeosio_1_1overloaded.md)
      * [struct permission_level](/structeosio_1_1permission__level.md)
      * [struct producer_key](/structeosio_1_1producer__key.md)
      * [struct producer_schedule](/structeosio_1_1producer__schedule.md)
      * [struct public_key](/structeosio_1_1public__key.md)
      * [class rope](/classeosio_1_1rope.md)
      * [struct signature](/structeosio_1_1signature.md)
      * [struct signed_int](/structeosio_1_1signed__int.md)
      * [class singleton](/classeosio_1_1singleton.md)
        * [struct row](/structeosio_1_1singleton_1_1row.md)
      * [class symbol](/classeosio_1_1symbol.md)
      * [class symbol_code](/classeosio_1_1symbol__code.md)
      * [class time_point](/classeosio_1_1time__point.md)
      * [class time_point_sec](/classeosio_1_1time__point__sec.md)
      * [class transaction](/classeosio_1_1transaction.md)
      * [class transaction_header](/classeosio_1_1transaction__header.md)
      * [struct unsigned_int](/structeosio_1_1unsigned__int.md)
      * [struct variant_action_wrapper](/structeosio_1_1variant__action__wrapper.md)
  * [Files](/files.md)
    * [in/](/dir_f4c96640472432942b3fc30ed441ca04.md)
      * [eosio.cdt/](/dir_45e00aafcb063b38cae24fc05c5e0d54.md)
        * [libraries/](/dir_aec5bb64676d64f4f6eae682e441225e.md)
          * [eosiolib/](/dir_1134efb280eb12b0569be244927e10ce.md)
            * [contracts/](/dir_0d1e622be48073e21a7070008a45b723.md)
              * [eosio/](/dir_66860d93c0d2b2facd5d1426156e7b9a.md)
                * [action.hpp](/action_8hpp.md)
                * [action.hpp - source](/action_8hpp_source.md)
                * [contract.hpp](/contract_8hpp.md)
                * [contract.hpp - source](/contract_8hpp_source.md)
                * [dispatcher.hpp](/dispatcher_8hpp.md)
                * [dispatcher.hpp - source](/dispatcher_8hpp_source.md)
                * [eosio.hpp](/eosio_8hpp.md)
                * [eosio.hpp - source](/eosio_8hpp_source.md)
                * [multi_index.hpp](/multi__index_8hpp.md)
                * [multi_index.hpp - source](/multi__index_8hpp_source.md)
                * [permission.hpp](/permission_8hpp.md)
                * [permission.hpp - source](/permission_8hpp_source.md)
                * [privileged.hpp](/privileged_8hpp.md)
                * [privileged.hpp - source](/privileged_8hpp_source.md)
                * [producer_schedule.hpp](/producer__schedule_8hpp.md)
                * [producer_schedule.hpp - source](/producer__schedule_8hpp_source.md)
                * [singleton.hpp](/singleton_8hpp.md)
                * [singleton.hpp - source](/singleton_8hpp_source.md)
                * [system.hpp](/system_8hpp.md)
                * [system.hpp - source](/system_8hpp_source.md)
                * [transaction.hpp](/transaction_8hpp.md)
                * [transaction.hpp - source](/transaction_8hpp_source.md)
            * [core/](/dir_b93afaa19b5c97fc921462d6bf68fc94.md)
              * [eosio/](/dir_d085534ff39cd6e81e1a93b1df82a865.md)
                * [asset.hpp](/asset_8hpp.md)
                * [asset.hpp - source](/asset_8hpp_source.md)
                * [binary_extension.hpp](/binary__extension_8hpp.md)
                * [binary_extension.hpp - source](/binary__extension_8hpp_source.md)
                * [check.hpp](/check_8hpp.md)
                * [check.hpp - source](/check_8hpp_source.md)
                * [crypto.hpp](/crypto_8hpp.md)
                * [crypto.hpp - source](/crypto_8hpp_source.md)
                * [datastream.hpp](/datastream_8hpp.md)
                * [datastream.hpp - source](/datastream_8hpp_source.md)
                * [fixed_bytes.hpp](/fixed__bytes_8hpp.md)
                * [fixed_bytes.hpp - source](/fixed__bytes_8hpp_source.md)
                * [ignore.hpp](/ignore_8hpp.md)
                * [ignore.hpp - source](/ignore_8hpp_source.md)
                * [name.hpp](/name_8hpp.md)
                * [name.hpp - source](/name_8hpp_source.md)
                * [print.hpp](/print_8hpp.md)
                * [print.hpp - source](/print_8hpp_source.md)
                * [rope.hpp](/rope_8hpp.md)
                * [rope.hpp - source](/rope_8hpp_source.md)
                * [serialize.hpp](/serialize_8hpp.md)
                * [serialize.hpp - source](/serialize_8hpp_source.md)
                * [symbol.hpp](/symbol_8hpp.md)
                * [symbol.hpp - source](/symbol_8hpp_source.md)
                * [time.hpp](/time_8hpp.md)
                * [time.hpp - source](/time_8hpp_source.md)
                * [varint.hpp](/varint_8hpp.md)
                * [varint.hpp - source](/varint_8hpp_source.md)
